[feedback] You should use oppose rate in place of poll source in step 2 . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the number of rows of each value of poll source of the results of step 1 . Step 3 : find the poll source of the results of step 1 with largest value in the results of step 2 . [question] which poll source does the highest oppose rate come from ? [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] You need to search for the venue . [system description] find the date , name , name in event table ordered descending by event attendance . [question] Show the dates , places , and names of events in descending order of the attendance . [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
[feedback] In step 2 , name should be Tokohu University and in step 1 , find number of rows of authorship count table . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose name equals " INRIA " . [question] Find the number of papers published by authors from the institution " Tokohu University " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 2 , you should use attendance of home game in place of appearances 's year . [system description] Step 1 : for each row in appearances table , find the corresponding rows in team table and in home game table and in park table . Step 2 : only keep the results of step 1 whose appearances 's year equals 1876 . Step 3 : find the number of rows of each value of park name the results of step 2 . Step 4 : find the park name the results of step 2 with largest value in the results of step 3 . [question] Which park did the most people attend in 2008 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first ( Park ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , you need to use actor id . [system description] Step 1 : for each row in film actor table , find the corresponding rows in actor table . Step 2 : find the number of rows of each value of film actor 's actor id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Which film actors ( actresses ) played a role in more than 30 films ? List his or her first name and last name . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to search for the largest value of age . [system description] find the age in student table with largest value of age . [question] What is the oldest age among the students ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] In step 1 , you should use authorship count instead of paper id . [system description] Step 1 : find the number of rows of each value of paper id in papers table . Step 2 : find the title and paper id in papers table with largest value in the results of step 1 . [question] Retrieve the title of the paper that has the largest number of authors . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Replace city name with state name , should be smallest value of population . [system description] find the city name in city table with smallest value of population . [question] where is the smallest city [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use the song id from files table . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the song 's song id of the results of step 1 with largest value of duration . [question] Find the id of the song that lasts the longest . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use highest elevation in place of country name which is dummy value . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose country name equals " dummy value " . [question] what is the highest point of the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search similar name of track 's . [system description] find the name , date , date in race table . [question] Show the name and date for each race and its track name . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
[feedback] You should use author , author table instead of organization , name and dummy value instead of name and organization table respectively . [system description] find the number of oid in organization table whose name equals " dummy value " . [question] return me the number of researchers in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use inventory instead of store . [system description] Step 1 : find the number of rows of each value of store id in store table . Step 2 : find the store id in store table with largest value in the results of step 1 . [question] Which store owns most items ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to ensure that state name should be texas in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [question] what are the capital cities of the states which border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use amenity name in place of it . [system description] find the number of amenity name in dorm amenity table . [question] Find the number of distinct amenities . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You should use title and name should be H. V. Jagadish . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [question] return me the number of papers by " H. V. Jagadish " after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use bname of bank table and credit score less than 100 instead of customer name of customer table and credit score less than 210 respectively . [system description] find the customer name in customer table whose credit score less than 210 . [question] What are the names of banks that have loaned money to customers with credit scores below 100 ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 1 , teachers table should be used instead of list table . Also , in step 3 , list 's last name should be MOYER and teachers 's first name should be OTHA . [system description] Step 1 : find the list 's first name and list 's last name in list table . Step 2 : for each row in teachers table , find the corresponding rows in list table . Step 3 : find the list 's first name and teachers 's last name of the results of step 2 whose teachers 's first name equals " KIRK " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the first and last names of the first-grade students who are NOT taught by teacher OTHA MOYER ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
[feedback] You should use fda approved and medicine id of medicine enzyme interaction table instead of fda approved and medicine id of medicine table respectively . [system description] find the id , name , fda approved in medicine table ordered ascending by fda approved and fda approved . [question] What are the ids , names , and FDA approval status for medicines ordered by descending number of possible enzyme interactions ? [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] Replace sex with Has Allergy 's allergy to Milk or eggs . [system description] find the number of rows in student table whose sex equals " M " and sex equals " F " . [question] How many students who are female are allergic to milk or eggs ? [schema] [T] allergy type [C] allergy ( Eggs , Milk ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Eggs ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Replace number of enrollment with number of rows whose player position equals goalie . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the number of enrollment of the results of step 1 whose player position equals " mid " . [question] How many students whose are playing the role of goalie ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
[feedback] You need to search for highest elevation in place of lowest elevation . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain 's state name of the results of step 1 with largest value of highest point . [question] what is the state that contains the highest point [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should count the number of different traverses of river . [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [question] which river goes through the most states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use traverse in place of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] what are the rivers of illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure area is equals to minimum area . [system description] find the state name in state table with smallest value of density . [question] which state is the smallest [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure state has lowest population density . [system description] find the state name in state table with smallest value of density . [question] what state has the lowest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the lowest temperature . [system description] find the maximum wind speed mph and maximum wind speed mph in weekly weather table . [question] show the lowest low temperature and highest wind speed in miles per hour . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
[feedback] In step 2 , you should use max temperature f in place of max humidity and also delete max dew point f . [system description] Step 1 : find the mean humidity of each value of mean dew point f in weather table . Step 2 : find the date , average mean humidity , average mean humidity in weather table with largest value in the results of step 1 . [question] What is the date , average temperature and mean humidity for the days with the 3 largest maximum gust speeds ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , you should use different college name instead of using same college name . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 ordered ascending by tryout 's college name . [question] Find the name of different colleges involved in the tryout in alphabetical order . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 2 and 3 , use canoeing as the name of activity . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Accordion Ensemble " . Step 3 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 4 : find the first name of the results of step 3 whose activity name equals " Kayaking " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the first names of the faculty members playing both Canoeing and Kayaking ? [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You need to search for capital city . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with largest value of highest elevation . [question] what is the capital of the state with the highest elevation [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] first name equals GELL and first name TAMI must be from list table . [system description] find the last name in teachers table whose first name equals " OTHA " . [question] What are the last names of the teachers who teach the student called GELL TAMI ? [schema] [T] list [C] last name ( GELL ) [C] first name (  TAMI ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You should use bank table and bname in place of customer table and customer name respectively . [system description] find the customer name in customer table . [question] What are the names of the different banks that have provided loans ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 2 , name should be equivalent to VLDB and in step 3 , find number of rows of each value of year in publication table . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of the corresponding rows to each value . [question] return me the number of papers published in the VLDB conference in each year . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use total horses in place of farm id . [system description] Step 1 : find the number of rows of each value of farm id in farm table . Step 2 : find the summation of total horses and farm id in farm table ordered ascending by the results of step 1 . [question] What is the total horses record for each farm , sorted ascending ? [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] You should use name of characteristic instead of name of cool characteristic . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " cool " . [question] How many products have the characteristic named " hot " ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( hot ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to use enroll grade and confirm that ACCT 211 is the code of course . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name of the results of step 1 whose student class hours took equals 66 and course 's department code equals " CIS " . [question] What are the first names of all students who took ACCT-211 and received a C ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you need to use staff 's first name and last name instead of customers 's first name and last name . [system description] Step 1 : for each row in customers table , find the corresponding rows in lessons table and in staff table and in addresses table . Step 2 : find the zip postcode of the results of step 1 whose customers 's first name equals " Amya " and staff 's last name equals " Weissnat " . [question] What is the zip code of the hosue of the employee named Janessa Sawayn ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 and 2 , use membership register branch table . In step 3 , use hometown in place of purchase table . [system description] Step 1 : for each row in branch table , find the corresponding rows in purchase table and in member table . Step 2 : find the branch 's name of the results of step 1 whose city equals " Oxford " and hometown equals " Simpsonville , South Carolina " . Step 3 : for each row in branch table , find the corresponding rows in purchase table and in member table . Step 4 : find the branch 's name of the results of step 3 whose hometown equals " Louisville , Kentucky " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the names of the branches that have some members with a hometown in Louisville , Kentucky and also those from Hiram , Goergia ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] Find number of rows of distinct course code in class table . [system description] find the number of rows in course table . [question] How many courses are offered ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the latest channel code of customer contact channels table and use the name of customer rather than MD . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the active to date of the results of step 1 whose customer name equals " Dr. Julia Wuckert MD " with largest value of active to date . [question] Return the the " active to date " of the latest contact channel used by the customer named " Tillman Ernser " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You should use elevation of highlow table in place of altitude of mountain table . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose mountain 's state name equals " dummy value " with largest value of highest elevation . [question] what is the height of the highest mountain in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , I want the total number of rows of student table . [system description] Step 1 : find the student id in student table with largest value of major . Step 2 : find the first name and last name in student table whose major not equals the results of step 1 . [question] Find the first and last name of students who are not in the largest major . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Replace largest with smallest . [system description] find the enrollment and primary conference in university table with largest value of founded . [question] Show the enrollment and primary_conference of the oldest college . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] You need to search for the name of product as well as manufacturer in step 2 . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the manufacturers 's name and price of the results of step 1 with largest value of price . [question] For each manufacturer name , what are the names and prices of their most expensive product ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You need to search for the river 's length which is more than 750 and its traverse is equivalent to illinois . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] what major rivers run through illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the unique value of founder . [system description] find the summation of revenue in manufacturers table . [question] What is the total revenue of companies started by founder ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You need to use revenue in-place of revenue . [system description] find the name , headquarter , revenue in manufacturers table with largest value of headquarter . [question] What are the names and revenues of the companies with the highest revenues in each headquarter city ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You need to use greater than in place of greater than 351 . [system description] Step 1 : for each row in farm competition table , find the corresponding rows in city table . Step 2 : find the theme of the results of step 1 whose population greater than 351 . [question] What are the themes of competitions that have corresponding host cities with more than 1000 residents ? [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] You should use code of region instead of name of region . [system description] find the region code and region name in region table ordered ascending by region name . [question] What are the codes and names for all regions , sorted by codes ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You need to calculate the number of activity Id of faculty who are participating in it . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [question] How many faculty members participate in each activity ? Return the activity names and the number of faculty members . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 4 , you should not identify the languages . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : only keep the results of step 1 whose resolution greater than 320 . Step 3 : find the number of rows of each value of languages the results of step 2 . Step 4 : find the artist 's artist name and languages the results of step 2 with largest value in the results of step 3 . [question] What is the name of the artist , for each language , that has the most songs with a higher resolution than 500 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , you should use name of river and drop population . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the maximum population in state table . Step 3 : find the number of rows of the results of step 1 whose population equals the results of step 2 . [question] how many rivers are in the state with the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 and 3 files table is to be used instead of genre table . Also , genre is to be used in place genre . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the genre 's rating of each value of genre name of the results of step 1 . Step 3 : find the maximum song 's rating , minimum song 's rating , genre name of the results of step 1 ordered ascending by the results of step 2 . [question] What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , make sure customer id is present in accounts table . [system description] Step 1 : find the customer id in customers table . Step 2 : find the customer id in customers table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the customer ids for customers who do not have an account ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 1 , sports info table should be used instead of plays games table . [system description] Step 1 : find the student id in plays games table . Step 2 : find the student id in plays games table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the ids of all students who played video games and sports ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Find number of rows of different major and city code in step 2 . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table . Step 2 : find each value of major of the results of step 1 along with the number of the corresponding rows to each value . [question] Find the numbers of different majors and cities . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 1 , you should count the number of different traverses of river . [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [question] which river runs through the most states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use the first name of department and department name of department whose department name is biology . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the department code and employee last name of the results of step 1 whose professor office equals " DRE 156 " . [question] What are the first and last name of all biology professors ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Make sure card type code equals debit . [system description] find the number of rows in customers cards table . [question] How many debit cards do we have ? [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code ( Debit ) [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] Make sure to count number of customers whose active equals 1 . [system description] find the number of rows in customer table . [question] Count the number of customers who are active . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 1 , you should use zip code 94002 . [system description] Step 1 : find rows in trip table whose zip code equals 94158 . Step 2 : find the number of rows of each value of bike id the results of step 1 . Step 3 : find the bike id the results of step 1 with largest value in the results of step 2 . [question] Which bike traveled the most often in zip code 94002 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] I want the order items table . [system description] find the number of product id in products table . [question] How many different products correspond to each order id ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to use city code as NYC , election cycle as spring and drop class senator vote as 1018 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the number of rows of the results of step 1 whose city code equals " BOS " and class senator vote equals 1018 . [question] Which students live in the city with code " NYC " and have class senator votes in the spring election cycle ? Count the numbers . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( NYC ) [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] In step 2 , you should use membership register branch instead of branch table . [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : find the average membership amount in branch table . Step 3 : find the number of rows of the results of step 1 whose membership amount greater than the results of step 2 . [question] How many branches where have more than average number of memberships are there ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You should use density and drop country name which is dummy value . [system description] find the population and state name in state table whose country name equals " dummy value " . [question] what are the population densities of each us state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for manufacturer from manufacturer table . [system description] find the name and manufacturer in products table . [question] Select all the data from the products and each product 's manufacturer . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You should use area in place of country name . [system description] find the state name in state table whose country name equals " dummy value " with largest value of density . [question] what is the largest state in usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the number of regions . [system description] find each value of storm id in storm table along with the number of the corresponding rows to each value . [question] How many regions were affected by each storm ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 1 , you should use maximum resolution instead of minimum resolution and also , in step 2 , use less than 8 instead of less than 7 . [system description] Step 1 : find the minimum resolution in song table whose rating less than 7 . Step 2 : find the song id in song table whose resolution greater than the results of step 1 . [question] What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , find when the minister took office and when the minister left office . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the minister and in office of the results of step 1 ordered ascending by took office . [question] Who are the ministers , when did they take office , and when did they leave office , ordered by when they left office ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] In step 2 , you should use traverse and drop area . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] which rivers are in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use salary , name and year instead of team id , 1897 and 1898 respectively . [system description] Step 1 : for each row in salary table , find the corresponding rows in team table . Step 2 : find the summation of salary of the results of step 1 whose salary 's team id equals " OAK " and team 's year equals 1897 . [question] What is the total salary paid by team Boston Red Stockings in 2010 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , replace person friend with person . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name and job of the results of step 1 ordered ascending by person friend 's name . [question] list the name , job title of all people ordered by their names . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Make sure it is a city of state name . [system description] find the state name in city table with largest value of population . [question] what state has the city with the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace department table with class table , and course code with course code . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course code of the results of step 1 whose employee job code equals " CLRK " . [question] What are the first names of all teachers who have taught a course and the corresponding course codes ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use the average value of market value instead of rank . [system description] find each value of rank in company table along with the maximum market value , minimum market value , and average market value of the corresponding rows to each value . [question] What is the minimum , maximum , and average market value for every company ? [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] Make sure they have shared vocals . [system description] find the number of rows in songs table . [question] How many songs have a shared vocal ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You should find other details of location which is equivalent to UK Gallery . [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table and in theme parks table . Step 2 : find the theme park details of the results of step 1 whose location name equals " American Adventure " . [question] Return the detail of the location named " UK Gallery " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name ( UK Gallery ) [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description ( gallery ) [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name ( UK gallery ) [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] title equals dummy value is wrong , it should be title equals Le Pop . [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the number of rows of the results of step 1 whose title equals " dummy value " . [question] Find the number of vocal types used in song " Le Pop " [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to search for the stocks in descending order and make sure that number of stock in phone market should be 2000 or more . [system description] Step 1 : for each row in phone market table , find the corresponding rows in phone table . Step 2 : find the name of the results of step 1 whose num of stock greater than 874 ordered descending by summation of num of stock . [question] Show the names of phones that have total number of stocks bigger than 2000 , in descending order of the total number of stocks . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
[feedback] Make sure to find distinct first name and last name . [system description] find the first name and last name in list table . [question] Show each student 's first name and last name . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to search for the college name having minimum enrollment for each state . [system description] find the college name in college table with smallest value of enrollment . [question] What is the name of the school with smallest enrollment size per state ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to determine the number of rows that are equivalent to each value of directed by in cinema table . [system description] Step 1 : for each row in film table , find the corresponding rows in schedule table and in cinema table . Step 2 : find each value of directed by of the results of step 1 along with the number of the corresponding rows to each value . [question] List all directors along with the number of films directed by each director . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
[feedback] country equals Canada is right , not city equals Pembroke . [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table . Step 2 : find the number of rows of the results of step 1 whose city equals " Pembroke " . [question] How many routes end in a Canadian airport ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Ende , Enid ) [C] country [C] x [C] y [C] elevation [C] iata ( END ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( END ) [C] call sign ( Canadian , CANADIAN ) [C] country [C] active
[feedback] In step 2 , budget type description should be Government . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the documents 's document id of the results of step 1 whose budget type description equals " Organisation " . [question] Show ids for all documents with budget types described as 'Government ' . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description ( Government ) [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details ( government ) [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 2 , you should use end station id instead of duration . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find each value of end station id of the results of step 1 along with the duration , latitude , name , and minimum duration of the corresponding rows to each value . [question] For each end station id , what is its name , latitude , and minimum duration for trips ended there ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] lesson status code equals Cancelled should be use in place of state province county equals Georgia . [system description] Step 1 : for each row in addresses table , find the corresponding rows in customers table and in lessons table . Step 2 : find the number of rows of the results of step 1 whose state province county equals " Georgia " . [question] How many lessons were in cancelled state ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code ( Cancelled ) [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to search for the distinct gender . [system description] find each value of gender in dorm table along with the number of gender of the corresponding rows to each value . [question] Find the number of distinct gender for dorms . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Make sure that population should be more than 150000 and state name equals kansas . [system description] find the city name in city table whose state name equals " dummy value " . [question] what is the major cities in kansas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use customer details instead of customer id . [system description] find the customer id in customers table whose customer id like 520 . [question] Find the names of customers whose name contains " Diana " . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You need to use country 's name . [system description] Step 1 : for each row in country table , find the corresponding rows in roller coaster table . Step 2 : find each value of country 's country id of the results of step 1 along with the country 's name and average speed of the corresponding rows to each value . [question] Show the names of countries and the average speed of roller coasters from each country . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
[feedback] Replace vocals table with performance table , title with title , also add last name equals Heilo . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table and in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " and last name equals " dummy value " . [question] What instruments did the musician with the last name " Heilo " play in the song " Le Pop " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] Replace jid with citation num , name with VLDB in step 2 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the summation of jid of the results of step 1 whose name equals " dummy value " and year equals " dummy value " . [question] return me the total citations of papers in the VLDB conference in 2005 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use the smallest value in place of the largest value . [system description] find the name in aircraft table with largest value of distance . [question] Show the name of aircrafts with top three lowest distances . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You should use market rate in place of num of component in step 1 . [system description] Step 1 : find the number of rows of each value of num of component in furniture table . Step 2 : find the name and num of component in furniture table with smallest value in the results of step 1 . [question] Find the name and component amount of the least popular furniture . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] You need to search for role explanation of roles . [system description] find the role code in employees table whose employee name equals " Koby " . [question] What is the role of the employee named Koby ? [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name ( Koby ) [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] You should use lowest temperature in place of precipitation . [system description] Step 1 : for each row in station table , find the corresponding rows in weekly weather table . Step 2 : find the maximum precipitation and average precipitation of the results of step 1 whose network name equals " Chesham " . [question] Give me the maximum low temperature and average precipitation at the Amersham station . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name ( Amersham ) [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
[feedback] Replace 1994 with 2001 . [system description] Step 1 : find the salary in salary table whose year equals 1994 . Step 2 : find the salary in salary table whose year equals 1988 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] List all the salary values players received in 2010 and 2001 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you should use actor , cast and title , also make sure that role should be Alan Turing . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " . [question] Who acted " Alan Turing " in the movie " The Imitation Game " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace player id with bats , birth country equals USA with birth country equals Bahamas . [system description] find the number of player id in player table whose birth country equals " Bahamas " . [question] How many players born in USA are right-handed batters ? That is , have the batter value ' R ' . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country ( USA ) [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country ( USA ) [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country ( USA ) [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Replace professor office with employee first name , professor office with class room , professor office with employee first name . [system description] find the professor office and professor office in professor table whose professor office equals " KLR 229D " . [question] What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , use department code in place of department name . [system description] Step 1 : for each row in department table , find the corresponding rows in student table . Step 2 : find the average student gpa of each value of department name of the results of step 1 . Step 3 : find the department name and average student gpa of the results of step 1 with largest value in the results of step 2 . [question] What is the name and the average gpa of department whose students have the highest average gpa ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use bandmate , and also include the band table . [system description] Step 1 : for each row in performance table , find the corresponding rows in songs table . Step 2 : find the bandmate of the results of step 1 whose title equals " dummy value " . [question] Who performed the song named " Le Pop " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You should use name of genre as Latin or pop in place of name of track as Drama . [system description] Step 1 : for each row in genre table , find the corresponding rows in track table . Step 2 : find the average milliseconds of the results of step 1 whose genre 's name equals " Drama " and track 's name equals " Stone Crazy " . [question] Find the average millisecond length of Latin and Pop tracks . [schema] [T] album [C] album id [C] title ( Pop ) [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name ( Pop , Latin ) [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] Remove whose mountain 's state name equals dummy value part . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest elevation of the results of step 1 whose mountain 's state name equals " dummy value " and mountain 's state name equals " dummy value " . [question] what is the highest elevation in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use state table and in step 3 , city name should be used in place of highest elevation . Also , in step 3 , you should verify that city 's population should be more than 150000 . [system description] Step 1 : for each row in city table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest elevation in highlow table . Step 3 : find the city name of the results of step 1 whose highest elevation equals the results of step 2 . [question] what are the major cities in the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , substitute teachers table with list table , in step 2 , substitute teachers 's first name and last name with list table . [system description] Step 1 : find the number of rows of each value of last name in teachers table . Step 2 : find the first name in teachers table with largest value in the results of step 1 . [question] Find the name of the teacher who teaches the largest number of students . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to use airlines table , country and name of airlines 's . [system description] find the number of rows in routes table whose destination airport equals " GQ " and airline equals " 3P " . [question] Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines ' . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country ( Italy ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country ( Italy ) [C] active
[feedback] Replace bikes available greater than 7 with bikes available average of 14 , installation date equals December . [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the name and id of the results of step 1 whose bikes available greater than 7 . Step 3 : for each row in station table , find the corresponding rows in status table . Step 4 : find the name and id of the results of step 3 whose bikes available less than 5 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] What are the names and ids of stations that had more than 14 bikes available on average or were installed in December ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , use university table in place of basketball match table and all neutral should be omitted . [system description] Step 1 : find the school id in basketball match table . Step 2 : find the number of rows in basketball match table whose all neutral not one of the results of step 1 . [question] How many schools do not participate in the basketball match ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] You should use title and organization from publication table and drop author table . [system description] find the name in author table whose name equals " dummy value " . [question] return me all the papers in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use river name of river table instead of state name of state table and also use traverse in place of dummy value of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [question] give me the number of rivers in idaho [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use the player 's name only . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name and birthday of the results of step 1 with largest value of potential . [question] List the names and birthdays of the top five players in terms of potential . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
[feedback] First name equals GELL and first name TAMI whose both are from list table . [system description] find the last name in teachers table whose first name equals " ALFREDA " . [question] Find the last names of all the teachers that teach GELL TAMI . [schema] [T] list [C] last name ( GELL ) [C] first name (  TAMI ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 2 , you should use name in place of airline . [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of rows of each value of airline of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [question] Find the name of airline which runs the most number of routes . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
[feedback] In step 2 , search for the name of river which is equivalent to ohio and use traverse . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [question] what states have rivers named ohio [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use highest elevation and delaware as value of state name respectively . [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [question] how high is the highest point of delaware [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , languages equals English should be used in place of languages equals bangla . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the song id , genre name , genre 's rating of the results of step 1 whose languages equals " bangla " ordered ascending by song 's rating . [question] List the id , genre and artist name of English songs ordered by rating . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] In step 1 , you should use rating table and in step 2 , ensure that rating stars should be greater than 3 . [system description] Step 1 : find the number of rows of each value of name in reviewer table . Step 2 : find the name in reviewer table whose corresponding value in step 1 is greater than 1 . [question] Find the names of reviewers who had given higher than 3 star ratings . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , you should use sex equals F and club name equals Bootup Baltimore . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Pen and Paper Gaming " and club name equals " Tennis Club " . [question] Find all the female members of club " Bootup Baltimore " . Show the first name and last name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to search for highest elevation whose highest elevation should be equivalent to highest elevation highlow . [system description] find the maximum highest point in highlow table . [question] what is the highest point in the country [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] student last name equals Robertson is wrong , it should be Graztevski of employee table . [system description] find the number of rows in student table whose student last name equals " Robertson " . [question] How many classes does the professor whose last name is Graztevski teach ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Graztevski ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use postseason 's year and name in place of wins and team 's year respectively . [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table and in team franchise table . Step 2 : find the wins of the results of step 1 whose franchise name equals " Boston Red Sox " and team 's year equals 2015 . [question] What is the number of wins the team Boston Red Stockings got in the postseasons each year in history ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , use name from papers table in place of institution id . [system description] Step 1 : find the number of rows of each value of institution id in institution table . Step 2 : find the name and name in institution table with largest value in the results of step 1 . [question] Find the name of the organization that has published the largest number of papers . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to calculate the total number of customers . [system description] find the number of rows in bank table whose city equals " New York City " . [question] Find the number of customers in the banks at New York City . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city ( New York City ) [C] state ( New York ) [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state ( New York ) [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 1 , you should use the employee 's table and name in place of professor 's department code and name . [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the professor 's department code and professor office of the results of step 1 whose department name equals " Psychology " . [question] What is the last name and office of the professor from the history department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , genre is should be blues . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the maximum song 's rating of the results of step 1 whose genre 's rating equals 9 . Step 3 : find the song name in song table whose song 's rating less than the results of step 2 . [question] What are the names of the songs that have a lower rating than at least one blues song ? [schema] [T] genre [C] genre name ( blues ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( blues ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( blues ) [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Make sure state has minimum population density . [system description] find the state name in state table with smallest value of density . [question] what state has the least population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , make sure mississippi runs through the state whose state name is traverse river . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [question] what states border states that the mississippi runs through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace cite table with author table , and conference 's name with writes 's name , find number of different title . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in cite table . Step 2 : find the number of homepage of the results of step 1 whose name equals " dummy value " and cited equals " dummy value " . [question] return me the number of papers by " H. V. Jagadish " on VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you need to use decor and bed Type in place of bed Type . [system description] Step 1 : find rows in rooms table whose beds equals 2 . Step 2 : find each value of bed type the results of step 1 along with the number of the corresponding rows to each value . [question] How many rooms have king beds ? Report the number for each decor type . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , you should not use documents mailed . [system description] Step 1 : for each row in documents table , find the corresponding rows in documents mailed table . Step 2 : find the receipt date of the results of step 1 whose documents mailed 's document id equals 14 . [question] What is the receipt date of the document with id 3 ? [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] Make sure that state has minimum population . [system description] find the state name in state table with smallest value of population . [question] what is the state with the lowest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use customer last name and card number instead of card number and card number equals respectively . [system description] Step 1 : for each row in customers table , find the corresponding rows in customers cards table . Step 2 : find the customer first name , customer phone , card number of the results of step 1 whose card number equals 5122249720639438 . [question] Return the full name and phone of the customer who has card number 4560596484842 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] You need to determine the unit price of tracks whose equivalent album id is equivalent to 1 . [system description] Step 1 : for each row in album table , find the corresponding rows in track table . Step 2 : find the title and album 's album id of the results of step 1 whose unit price greater than 0.99 . [question] Show the album names and ids for albums that contain tracks with unit price bigger than 1 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You should use highest elevation and delaware as values of state name . [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [question] how tall is the highest point in delaware [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use name of state in place of name of border info 's . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose border info 's state name equals " dummy value " . [question] what is the area of new mexico [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 3 , you should delete last name equals Hamalainen . [system description] Step 1 : find the artist 's name in artist table . Step 2 : for each row in artist table , find the corresponding rows in album table and in track table and in invoice line table and in invoice table and in customer table . Step 3 : find the artist 's name of the results of step 2 whose last name equals " Hämäläinen " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the names of artists who have not released any albums ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Release ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 1 , you should use domain name and author name in place of organization name and oid . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the organization 's oid of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [question] return me all the researchers in Databases area in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use river 's length instead of state name of border info table . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with largest value of length . [question] which states does the longest river cross [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , name should be Divesh Srivastava and name should be H. V. Jagadish . [system description] Step 1 : for each row in writes table , find the corresponding rows in author table and in publication table and in cite table . Step 2 : find the number of writes 's pid of the results of step 1 whose cited equals " dummy value " and name equals " dummy value " . [question] return me the number of papers written by " H. V. Jagadish " and " Divesh Srivastava " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use table of party . [system description] find the delegate and party in election table . [question] Show the delegates and the names of the party they belong to . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] In step 2 , you should use keyword Relational Database in place of keyword Dummy value . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of name the results of step 2 . Step 4 : find the number of rows and name the results of step 2 with largest value in the results of step 3 . [question] return me the author who has the most number of papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use publisher in place of author or editor . [system description] Step 1 : find the number of rows of each value of author or editor in book club table . Step 2 : find the publisher in book club table with largest value in the results of step 1 . [question] Return the publisher that has published the most books . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] In step 4 , use country equals China . [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table . Step 2 : only keep the results of step 1 whose country equals " Guatemala " . Step 3 : find the number of rows of each value of destination airport the results of step 2 . Step 4 : find the destination airport the results of step 2 with largest value in the results of step 3 . [question] Find the busiest destination airport that runs most number of routes in China . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
[feedback] You should find the lowest elevation in place of the country name . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose country name equals " dummy value " with smallest value of lowest point . [question] where is the lowest point in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace addresses table with department stores table , department store chain name equals south . [system description] Step 1 : for each row in department store chain table , find the corresponding rows in addresses table . Step 2 : find the number of rows of the results of step 1 whose department store chain name equals " West " . [question] Count the number of stores the chain South has . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name ( South ) [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 1 , count the number of rows of each value of address id in addresses table . [system description] Step 1 : find the number of rows of each value of country in addresses table . Step 2 : find the country in addresses table whose corresponding value in step 1 is greater than 1 . [question] List the countries having more than 4 addresses listed . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Make sure that first name should be ROY and last name should be SWEAZY . [system description] find the number of rows in reservations table whose first name equals " CAPRICE " and last name equals " TUPPEN " . [question] Find the number of times ROY SWEAZY has reserved a room . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
[feedback] In step 2 , use 94107 in place of 94301 . Show first 3 results . [system description] Step 1 : find rows in weather table whose zip code equals 94301 . Step 2 : find the number of rows of each value of cloud cover the results of step 1 . Step 3 : find the cloud cover the results of step 1 with largest value in the results of step 2 . [question] What are the 3 most common cloud covers in the zip code of 94107 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] student last name equals Smith is not correct , use employee in step 1 . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in professor table . Step 2 : find the department name and professor office of the results of step 1 whose student last name equals " Smith " . [question] What is the name of the department and office location for the professor with the last name of Heffington ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Heffington ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you should use year instead of award . [system description] Step 1 : for each row in musical table , find the corresponding rows in actor table . Step 2 : find the actor 's name and year of the results of step 1 ordered descending by award . [question] What are the names of actors ordered descending by the year in which their musical was awarded ? [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
[feedback] In step 1 , you should use cast 's name and release year in place of actor 's name and dummy value respectively . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " with largest value of birth year . [question] Find the latest movie which " Gabriele Ferzetti " acted in [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should use length of river 's instead of country name of state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [question] what is the longest river in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use addition of savings and checking balance in place of summation of balance and also make sure that total balance should be in ascendant order . [system description] find the summation of balance and summation of balance in checking table ordered ascending by balance . [question] What is the sum of checking and savings balances for all customers , ordered by the total balance ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] In step 2 , you should use distinct college name from tryout table . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the tryout 's college name of the results of step 1 ordered ascending by college 's college name . [question] What are the different names of the colleges involved in the tryout in alphabetical order ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to use origin as Chennai and destination as Guruvayur . [system description] find the train number and time in train table whose destination equals " Chennai " . [question] Find the number and time of the train that goes from Chennai to Guruvayur . [schema] [T] train [C] id [C] train number [C] name [C] origin ( Chennai , Guruvayur ) [C] destination ( Chennai , Guruvayur ) [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
[feedback] Make sure it is wyoming state . [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [question] what wyoming city has the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use artist name and also remove the condition greater than 512 . [system description] Step 1 : find rows in song table whose resolution greater than 512 . Step 2 : find the number of rows of each value of languages the results of step 1 . Step 3 : find the languages the results of step 1 with largest value in the results of step 2 . [question] What is the language that was used most often in songs with resolution above 500 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Make sure area should be equals to minimum . [system description] find the state name in state table with smallest value of density . [question] which is the smallest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , Spices should be the name of product category and price of typical buying is higher than 1000 . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " slow " and typical selling price greater than " 0.1859512 " . [question] How many products are in the 'Spices ' category and have a typical price of over 1000 ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Spices ) [C] product category description ( Spices ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Spices ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 2 , you should use first name Michael and last name Goodrich of faculty who is advisor of those students . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find the student 's first name and student 's last name of the results of step 1 whose advisor equals 8772 and faculty 's last name equals " Iglesias " . [question] Show first name and last name for all the students advised by Michael Goodrich . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Michael ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Goodrich ) [C] first name ( Michael ) [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You should use state name instead of state name . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose state 's state name equals " dummy value " . [question] what is the lowest point in the state of iowa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace player 's player and capital equals Tehran with player 's position and capital equals Dublin respectively . [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose capital equals " Tehran " . [question] What are the distinct positions of the players from a country whose capital is Dublin ? [schema] [T] country [C] country id [C] country name [C] capital ( Dublin ) [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You should use competition instead of date and also delete 4 April 1993 . [system description] find the match id in match table whose date equals " 4 April 1993 " and date equals " 4 April 1993 " . [question] What is the match id of the competition called " 1994 FIFA World Cup qualification " ? [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] You need to use airport table in place of flight table and make sure that pilot should not be Thompson . [system description] find the number of rows in flight table whose pilot not equals " Peterson " . [question] How many airports have n't the pilot 'Thompson ' driven an aircraft ? [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot ( Thompson ) [C] velocity [C] altitude [C] airport id [C] company id
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [question] through which states does the ohio run [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find summation of hours played and number of games played by students less than 20 . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : only keep the results of step 1 whose age less than 18 . Step 3 : find each value of hours per week the results of step 2 along with the summation of hours played of the corresponding rows to each value . [question] What is the total number of hours per week and number of games played by students under 20 ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to search for manufacturers by making sure that code of manufacturer is present in product table . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find each value of products 's code of the results of step 1 along with the average price and manufacturers 's code of the corresponding rows to each value . [question] What are the average prices of products , grouped by manufacturer code ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 2 , you should use product category code of reference product categories instead of product name . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the unit of measure of the results of step 1 whose product name equals " laurel " . [question] Return the unit of measure for 'Herb ' products . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to search for the station having precipitation as high as 50 . [system description] Step 1 : for each row in station table , find the corresponding rows in weekly weather table . Step 2 : find the id and local authority of the results of step 1 whose precipitation greater than 90 with largest value of local authority . [question] Find the id and local authority of the station whose maximum precipitation is higher than 50 . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
[feedback] In step 2 , use state in place of state . [system description] Step 1 : find the number of rows of each value of state in customers table . Step 2 : find the state in customers table with largest value in the results of step 1 . [question] Give the state that has the most customers . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] You should use river name of river table instead of name of border info 's state name as dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [question] what is the longest river in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace media type 's with track 's . [system description] find the number of rows in media type table whose name equals " Protected AAC audio file " . [question] Count the number of tracks that are of the media type " AAC audio file " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name ( AAC audio file ) [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You need to calculate the city code rows . [system description] find each value of city code in student table along with the average age of the corresponding rows to each value . [question] How many students live in each city and what are their average ages ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , use aircraft table instead of flight table and in step 3 , use aircraft . [system description] Step 1 : for each row in flight table , find the corresponding rows in aircraft table . Step 2 : find the average flight 's distance in flight table . Step 3 : find the name of the results of step 1 whose flight 's distance greater than the results of step 2 . [question] What are the names of all aircrafts that can cover more distances than average ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 1 , you should use product characteristics and products table in place of characteristics table and characteristic id respectively . [system description] Step 1 : find the number of rows of each value of characteristic id in characteristics table . Step 2 : find the characteristic name in characteristics table with largest value in the results of step 1 . [question] Return the name of the characteristic that is most common across all products . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You should use flight number and drop the rest . [system description] find the number of rows in flight table with smallest value of distance . [question] What are the numbers of the shortest flights ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 1 , you should use actor 's name and release year in place of name and dummy value respectively . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of birth year the results of step 2 along with the number of the corresponding rows to each value . [question] What is the number of movies that " Brad Pitt " acts in per year ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , I want summation of damage millions usd . [system description] Step 1 : find the average max speed in storm table . Step 2 : find the summation of number deaths and summation of number deaths in storm table whose max speed greater than the results of step 1 . [question] What is the total number of deaths and damage for all storms with a max speed greater than the average ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You need to search for the maximum age . [system description] find each value of sex in student table along with the average age of the corresponding rows to each value . [question] Find the average and oldest age for students with different sex . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Replace pid with title , publication with journal , year with citation num , name equals PVLDB , dummy value with 200 . [system description] find the pid in publication table whose year greater than " dummy value " and year greater than " dummy value " . [question] return me the paper after 2000 in PVLDB with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace jid with citation num , and replace dummy value with Natural Language . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the jid of the results of step 1 whose keyword equals " dummy value " . [question] return me the total citations of the papers containing keyword " Natural Language " [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use member of club 's last name and name in place of club name . [system description] find the number of rows in club table whose club name equals " Bootup Baltimore " . [question] Find the number of clubs where " Tracy Kim " is a member . [schema] [T] student [C] student id [C] last name ( Kim ) [C] first name ( Tracy ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to determine the number of rows corresponding to how to get there of tourist attractions table . [system description] find each value of how to get there in tourist attractions table along with the number of the corresponding rows to each value . [question] List all the possible ways to get to attractions , together with the number of attractions accessible by these methods . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Replace vocals table with performance table , title with title , and make sure artist performed back stage . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the first name and last name of the results of step 1 whose title equals " dummy value " . [question] What is the first and last name of the artist who performed back stage for the song " Der Kapitan " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , you should use description of color . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the number of rows of each value of products 's color code of the results of step 1 . Step 3 : find the color description of the results of step 1 with largest value in the results of step 2 . [question] What is the description of the color for most products ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You should use length greater than 3300 or height greater than 100 , not height greater than 136 or height greater than 120 . [system description] find the status in roller coaster table whose height greater than 120 or height greater than 136 . [question] Show the statuses of roller coasters longer than 3300 or higher than 100 . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
[feedback] In step 1 , I want the room Id that is not available in the reservation table . [system description] Step 1 : find the room in reservations table . Step 2 : find the number of rows in rooms table whose room id not one of the results of step 1 . [question] Find the number of rooms that do not have any reservation . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 2 , use product category code instead of second characteristic name . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the product name of the results of step 1 whose characteristic name equals " warm " . [question] What are the names of products with category " Spices " ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Spices ) [C] product category description ( Spices ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Spices ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to search for the date as well . [system description] Step 1 : for each row in schedule table , find the corresponding rows in film table and in cinema table . Step 2 : find the name , title , price , price of the results of step 1 . [question] Show cinema name , film title , date , and price for each record in schedule . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
[feedback] Also find book title , and replace company name with incorporated in . [system description] Step 1 : for each row in culture company table , find the corresponding rows in movie table . Step 2 : find the title and title of the results of step 1 whose company name equals " Culture China " . [question] Show the movie titles and book titles for all companies in China . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in ( China ) [C] group equity shareholding [C] book club id [C] movie id
[feedback] In table of reservation , I want the total number of room Id . [system description] Step 1 : find the number of rows of each value of room id in rooms table . Step 2 : find the room name in rooms table whose corresponding value in step 1 is greater than 1 . [question] Find the names of rooms that have been reserved for more than 60 times . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Replace school year with founded . [system description] Step 1 : for each row in school performance table , find the corresponding rows in school table . Step 2 : find the location of the results of step 1 ordered descending by school year . [question] What is the list of school locations sorted in descending order of school foundation year ? [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
[feedback] Replace cite table with author table , jid with title , conference 's name equals VLDB , cited greater than dummy value with citation num equals 200 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in cite table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " and cited greater than " dummy value " . [question] return me the papers by " H. V. Jagadish " on VLDB conference with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , use title , journal table and year greater than 2000 . [system description] Step 1 : find rows in publication table whose year greater than " dummy value " and year less than " dummy value " . Step 2 : find the number of jid of each value of title the results of step 1 . Step 3 : find the number of jid and jid the results of step 1 ordered descending by the results of step 2 . [question] return me the paper after 2000 in PVLDB with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use number of students . [system description] find the advisor in student table whose advisor equals 1148 . [question] Advisor 1121 has how many students ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
[feedback] Make sure population is maximum . [system description] find the city name in city table with largest value of population . [question] what city has the most people [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace 2nd supplier name with address details . [system description] find the supplier name and supplier phone in suppliers table ordered ascending by supplier name . [question] What are the names and phone numbers for all suppliers , sorted in alphabetical order of their addressed ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Replace 2nd supplier name with address details . [system description] find the supplier name and supplier phone in suppliers table ordered ascending by supplier name . [question] List the name and phone number of all suppliers in the alphabetical order of their addresses . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Replace cite with writes , cited with author , 2nd year with year greater than 2000 , name with PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the title of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [question] return me the papers by " H. V. Jagadish " on PVLDB after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the city name whose state name is wyoming . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose city 's state name equals " dummy value " with largest value of state 's population . [question] what cities in wyoming have the highest populations [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure students are on scholarship . [system description] find the last name in student table . [question] Show last names for all student who are on scholarship . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You should use without . [system description] find the name and age in person table whose gender equals " male " ordered ascending by age . [question] Find the name and age of all males in order of their age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
[feedback] You should use job title code as Department Manager . [system description] find the staff id and staff gender in staff table whose staff name like " Vanessa " . [question] Return the staff ids and genders for any staff with the title Department Manager . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code ( Department Manager ) [C] date assigned to
[feedback] You need to search for the lowest age . [system description] find each value of job in person table along with the maximum age of the corresponding rows to each value . [question] How old is the youngest person for each job ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] which states does the ohio run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use company id of office locations instead of name of buildings table . [system description] Step 1 : find the number of rows of each value of name in buildings table . Step 2 : find the name in buildings table with largest value in the results of step 1 . [question] Show the name of the building that has the most company offices . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] I want the order items table . [system description] find each value of product id in products table along with the number of product id of the corresponding rows to each value . [question] Show the product ids and the number of unique orders containing each product . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace first name with date complaint raised . [system description] find the last name in staff table with smallest value of first name . [question] What is the last name of the staff who has handled the first ever complaint ? [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] In step 2 , nickname should have the letter s and first name should be Janessa Sawayn . [system description] Step 1 : for each row in staff table , find the corresponding rows in lessons table . Step 2 : find the lesson id of the results of step 1 whose nickname like " gabe21 " and nickname equals " ynader " . [question] What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 2 , you need to determine the country whose cities are listed in country table . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Which countries have at least 3 cities ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 1 , use amenity id of has amenity in place of amenity name of dorm amenity table . [system description] Step 1 : find the number of rows of each value of amenity name in dorm amenity table . Step 2 : find the amenity name in dorm amenity table with largest value in the results of step 1 . [question] What is the most common amenity in the dorms ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to ensure that the departure airport for both country should be equivalent to United States and Canada . [system description] find the number of rows in routes table whose destination airport equals " YXC " and destination airport equals " KSQ " . [question] Find the number of routes from the United States to Canada . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States , Canada ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( UNITED , STATES ) [C] country ( United States , Canada ) [C] active
[feedback] You need to search for the cities having population more than 150000 and state name equals nebraska . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [question] how many major cities are in states bordering nebraska [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the latest movie . [system description] find the title in movie table with largest value of year . [question] What is the title of the newest movie ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Replace height with weight . [system description] find the maximum height and minimum height in player table . [question] What is the maximum and minimum height of all players ? [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
[feedback] In step 2 , add checking 's balance and savings 's balance . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name , savings 's balance , savings 's balance of the results of step 1 ordered descending by checking 's balance . [question] What are the names , checking balances , and savings balances of customers , ordered by the total of checking and savings balances descending ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] Replace destination with origin , name with destination , replace destination with Honolulu . [system description] Step 1 : for each row in aircraft table , find the corresponding rows in flight table . Step 2 : find the average price of the results of step 1 whose destination equals " Tokyo " and name equals " British Aerospace Jetstream 41 " . [question] What is the average price for flights from LA to Honolulu ? [schema] [T] flight [C] flight number [C] origin [C] destination ( Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Make sure that state has minimum population . [system description] find the state name in state table with smallest value of population . [question] what state has the smallest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use highest elevation in place of country name which is dummy value . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose country name equals " dummy value " . [question] what is the highest point in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to ensure that seating should be between 4000 and 5000 . [system description] find the year opened in track table whose seating greater than or equals 81687 and seating greater than or equals 81687 . [question] Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
[feedback] In step 1 , you should use settlements table and date claim made in place of claims table and claim id respectively . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the claim id , date claim settled , number of rows in claims table with largest value in the results of step 1 . [question] Which claim incurred the most number of settlements ? List the claim id , the date the claim was made , and the number . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You need to search for total number of states . [system description] find the number of rows in state table whose country name equals " dummy value " . [question] how many states are in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the distinct branch name of the bank and their total loan amounts . [system description] Step 1 : find rows in loan table whose loan type equals " Mortgages " . Step 2 : find each value of branch id the results of step 1 along with the summation of amount of the corresponding rows to each value . [question] What are the names of the different bank branches , and what are their total loan amounts ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] Make sure to find for the lowest age value . [system description] find the last name in student table with smallest value of age . [question] Provide the last name of the youngest student . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 1 , you need to use greater than or . [system description] Step 1 : find the number of rows of each value of party in party table . Step 2 : find the party in party table whose corresponding value in step 1 is greater than or equals 1 . [question] Show the name of the party that has at least two records . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] In step 2 , you should find architect 's name for each bridge 's name . [system description] Step 1 : for each row in architect table , find the corresponding rows in bridge table . Step 2 : find the architect 's name of each value of bridge 's name of the results of step 1 . Step 3 : find the maximum length meters and bridge 's name of the results of step 1 ordered ascending by the results of step 2 . [question] What is the maximum length in meters for the bridges and what are the architects ' names ? [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
[feedback] You need to use type from vocals table . [system description] find the number of rows in songs table whose song id equals " dummy value " . [question] How many songs have a lead vocal ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to search for the area . [system description] find the area in state table with largest value of density . [question] what is the area of the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use director and title in place of name and director respectively . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the name of the results of step 1 whose director equals " George Lucas " . [question] Who directed Avatar ? [schema] [T] movie [C] movie id [C] title ( Avatar ) [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , use last name equals Blume and first name equals Matthias instead of Katsuhiro . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the name of the results of step 1 whose first name equals " Katsuhiro " . [question] What is the name of the institution that " Matthias Blume " belongs to ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Blume ) [C] first name ( Matthias ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 2 , you should use from date of active in place of to date of active . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the customer name and active to date of the results of step 1 whose channel code equals " Fax " . [question] What are the name and active date of the customers whose contact channel code is email ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code ( Email ) [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 1 , you should use city table and make sure that population of city is greater than 150000 . [system description] Step 1 : find rows in state table whose state name equals " dummy value " . Step 2 : find the number of rows of each value of capital the results of step 1 . Step 3 : find the population the results of step 1 with largest value in the results of step 2 . [question] what is the population of the major cities in wisconsin [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace made by table , copyright table , made by name with movie table , directed by table , release year and director 's name equals Quentin Tarantino . [system description] Step 1 : for each row in producer table , find the corresponding rows in made by table and in copyright table and in directed by table and in director table . Step 2 : find the number of rows of the results of step 1 whose director 's name equals " dummy value " and producer 's birth year greater than " dummy value " . [question] How many movies did " Quentin Tarantino " direct after 2010 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use Atsushi Ohori as the last name and also ensure that his first name is also there in authorship count table . [system description] find the number of rows in authors table whose first name equals " Brent " . [question] How many papers are " Atsushi Ohori " the author of ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ohori ) [C] first name ( Atsushi ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 2 , you should use the draft copies table . [system description] Step 1 : for each row in documents table , find the corresponding rows in document drafts table and in draft copies table . Step 2 : find the number of rows of each value of draft copies 's document id of the results of step 1 . Step 3 : find the documents 's document id and number of rows of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Which documents have more than 1 draft copies ? List document id and number of draft copies . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] Make sure area should be equals to minimum . [system description] find the population in state table with smallest value of density . [question] what is the population of the smallest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use city code as NYC , election cycle as Spring and omit secretary vote as 1030 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the average age of the results of step 1 whose city code equals " ATL " and secretary vote equals 1030 . [question] What is the average age of students who have city code " NYC " and have secretary votes for the spring election cycle ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( NYC ) [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to search for the number of rows having value between 2 and 4 . [system description] Step 1 : find the number of rows of each value of city in park table . Step 2 : find the city in park table whose corresponding value in step 1 is greater than or equals 1 . [question] Find all the cities that have 2 to 4 parks . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to use kids , verify that check in date is 2010 09 21 and first name is DAMIEN TRACHSEL . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of the results of step 1 whose room name equals " Immutable before decorum " and last name equals " PORTO " and last name equals " TOAN " . [question] How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21 , 2010 ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( TRACHSEL ) [C] first name ( DAMIEN ) [C] adults [C] kids
[feedback] In step 2 , you should use source airport id and destination airport id in place of name of airlines and name of airports respectively . [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table and in airlines table . Step 2 : find the number of rows of each value of airports 's name of the results of step 1 . Step 3 : find the airlines 's name and city of the results of step 1 with largest value in the results of step 2 . [question] What is the name and city of the airport from most of the routes start ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( CITY ) [C] country [C] active
[feedback] You should use name equals PVLDB , not the number of rows . [system description] find the keyword in keyword table whose number of rows equals 1 . [question] return me the keyword , which have been contained by the most number of papers in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use least age and largest age . [system description] find the age and age in student table whose major equals 100 with largest value of age . [question] Tell me the ages of the oldest and youngest students studying major 600 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to search for name of city which is similar to springfield . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [question] what states have towns named springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace oid with name , and make sure it is in Databases area . [system description] find the name in organization table whose oid equals " dummy value " . [question] return me all the organizations in Databases area . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use actor , cast and role . Also , include title and role as Alan Turing in step 2 . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " . [question] Find the actor who played " Alan Turing " in the movie " The Imitation Game " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should include journal table , author table and oid of organization . Also , in step 2 , include title of journal and of publication table . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the organization 's oid of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [question] return me all the papers in PVLDB in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use made by , movie , release year and director 's name equals Quentin Tarantino . [system description] Step 1 : for each row in director table , find the corresponding rows in directed by table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and directed by 's did less than " dummy value " . [question] How many movies did " Quentin Tarantino " direct before 2002 and after 2010 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace competition with city 's city , and make sure hosting city equals Nanjing ( Jiangsu ) . [system description] find the venue in match table whose competition equals " 1994 FIFA World Cup qualification " and competition equals " Friendly match " . [question] Find the venue of the competition " 1994 FIFA World Cup qualification " which was hosted by " Nanjing ( Jiangsu ) " . [schema] [T] city [C] city id [C] city ( Nanjing ( Jiangsu ) ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] In both steps , you need to use address content . [system description] Step 1 : find the rows in addresses table whose city equals " Reingertown " and state province county equals " NewMexico " . Step 2 : find the rows in addresses table whose city equals " Stantonville " and state province county equals " Texas " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] What are all the addresses in East Julianaside , Texas or in Gleasonmouth , Arizona . [schema] [T] addresses [C] address id [C] address content [C] city ( East Julianaside , Gleasonmouth ) [C] zip postcode [C] state province county ( Arizona , Texas ) [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 1 , replace enrollment with player position , in step 2 replace enrollment with player position , in step 3 replace both . [system description] Step 1 : find the state in college table whose enrollment equals 19000 . Step 2 : find the state in college table whose enrollment equals 18000 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of all the states with college students playing in the mid position but no goalies ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( no ) [C] training hours [T] tryout [C] player id [C] college name [C] player position ( mid , goalie ) [C] decision ( no )
[feedback] In step 2 , use last name equals Blume and first name equals Matthias instead of first name equals Aaron . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the name of the results of step 1 whose first name equals " Aaron " . [question] Which institution is the author " Matthias Blume " belong to ? Give me the name of the institution . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Blume ) [C] first name ( Matthias ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Replace founder with headquarter . [system description] find the founder in manufacturers table . [question] Give the distinct headquarters of manufacturers . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 1 , you should use the documents table instead of reference document types table . [system description] Step 1 : find the number of rows of each value of document type code in reference document types table . Step 2 : find the document type code in reference document types table with largest value in the results of step 1 . [question] Return the code of the document type that is most common . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 1 , you should use actor , cast , title and role . Also , include The Imitation Game in step 2 . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " and title equals " dummy value " . [question] Who acts as " Alan Turing " in the movie " The Imitation Game " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use highest elevation . [system description] find the mountain name in mountain table whose state name equals " dummy value " with largest value of mountain altitude . [question] what is the tallest mountain in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace 1766 with 1850 , and should be founded or affiliated with public . [system description] find the school in university table whose founded greater than 1766 or founded equals 1766 . [question] Find the schools that were either founded after 1850 or public . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
[feedback] You should use amount claimed in place of amount settled in step 2 . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the claims 's amount settled and settlements 's amount claimed of the results of step 1 with largest value of settlements 's amount settled . [question] Find the settlement amount of the claim with the largest claim amount . Show both the settlement amount and claim amount . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You should use max temperature f in place of mean humidity . [system description] Step 1 : find rows in weather table whose date like " 2/24/2015 " . Step 2 : find each value of zip code the results of step 1 along with the average mean humidity of the corresponding rows to each value . [question] For each zip code , what is the average mean temperature for all dates that start with ' 8 ' ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search for the governor . [system description] Step 1 : for each row in election table , find the corresponding rows in party table . Step 2 : find the party 's party of the results of step 1 whose district equals 1 . [question] Find the parties associated with the delegates from district 1. Who served as governors of the parties ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] Replace class code with professor employee number . [system description] find the number of class code in class table whose course code equals " ACCT-212 " . [question] How many professors teach a class with the code ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] credit score less than 210 is wrong , it should be credit score less than 50 . [system description] Step 1 : find rows in customer table whose credit score less than 210 . Step 2 : find each value of account type the results of step 1 along with the average account balance of the corresponding rows to each value . [question] What is the average account balance of customers with credit score below 50 for the different account types ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to search for the similar rows number of all party id from party events table . [system description] find each value of party name in party table along with the number of the corresponding rows to each value . [question] Show party names and the number of events for each party . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] In step 2 , you need to use name of state . Also , in step 3 , you need to search for name of state . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum area in state table . Step 3 : find the minimum lowest point of the results of step 1 whose area equals the results of step 2 . [question] what is the lowest point of the state with the largest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use authors table , last name equals Turon , country equals USA and author count equals 2 . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose country equals " France " and title equals " Functional Pearl : Modular Rollback through Control Logging " . [question] Which paper is published in an institution in " USA " and have " Turon " as its second author ? [schema] [T] institution [C] institution id [C] name [C] country ( USA ) [T] authors [C] author id [C] last name ( Turon ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to use age as 24 or 25 . [system description] find the name in editor table whose age equals 35 . [question] Show the names of editors of age either 24 or 25 . [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
[feedback] You need to ensure that the rows count of student table should be more than or equivalent to 2 . [system description] find the advisor in student table . [question] What are the advisors [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to search for population from the city table of wisconsin and its state name . Also , you need to make sure that population should be more than 150000 . [system description] find the population in state table whose state name equals " dummy value " . [question] what are the populations of the major cities of wisconsin [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use budget type code and drop document type code . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find each value of document type code of the results of step 1 along with the number of the corresponding rows to each value . [question] Show budget type codes and the number of documents in each budget type . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to use election cycle which is equivalent to spring and they have secretary vote . [system description] find the average age in student table whose sex equals " F " and age equals 16 . [question] Find the average age of female ( sex is F ) students who have secretary votes in the spring election cycle . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You should use state name instead of city name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what is the capital of the state texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , I want the table of movie and title . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table . Step 2 : find the name of the results of step 1 whose rating stars equals 4 . [question] Find the names of all reviewers who rated Gone with the Wind . [schema] [T] movie [C] movie id [C] title ( Gone with the Wind ) [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should delete and email address equals lavonne.frami @ example.com . [system description] find the address line 1 and address line 2 in customers table whose email address equals " lavonne.frami @ example.com " and email address equals " vbogisich @ example.org " . [question] What are lines 1 and 2 of the addressed of the customer with the email " vbogisich @ example.org " ? [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] In step 2 , supplant and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " striker " . [question] What college has a student who successfully made the team in the role of a goalie ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
[feedback] You need to make sure that customer 's address is present in invoice table . [system description] find the address in customer table whose country equals " Belgium " . [question] What are the addresses of customers living in Germany who have had an invoice ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country ( Germany ) [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country ( Germany ) [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] Replace stage position equals dummy value with title equals Badlands , also add songs table . [system description] Step 1 : for each row in band table , find the corresponding rows in performance table . Step 2 : find the first name and last name of the results of step 1 whose stage position equals " dummy value " . [question] What are the first and last names of the performer who was in the back stage position for the song " Badlands " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You should use years played in place of summation of years played . [system description] find each value of player in player table along with the summation of years played of the corresponding rows to each value . [question] Who are the different players and how many years has each played ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 1 , you should use keyword from publication keyword table and name from organization table respectively . Also , use University of Michigan instead of dummy value . [system description] Step 1 : for each row in organization table , find the corresponding rows in keyword table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [question] return me the number of keywords in the papers of " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure state has highest density . [system description] find the state name in state table with largest value of density . [question] what is the state with the largest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] salary greater than 100000 should be use in place of salary greater than or equals 23980 . [system description] find the employee id in employee table whose salary greater than or equals 23980 . [question] Show ids for all employees with at least 100000 salary . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Make sure to find for unique product id . [system description] find the product details in products table . [question] Return the the details of all products . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Replace grade equals 2 with grade equals 5 . [system description] find the class room in list table whose grade equals 2 . [question] Show me the classrooms grade 5 is using . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to calculate the area of all states . [system description] find the area in state table . [question] what is the area of all the states combined [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace bikes available less than 9 with bikes available greater than 7 . [system description] Step 1 : find the id in station table whose latitude greater than 37.335885 . Step 2 : for each row in station table , find the corresponding rows in status table . Step 3 : find the id of the results of step 2 whose bikes available less than 9 . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to use allergy type table and make sure allergy type is equivalent to food . [system description] find the number of stuid in has allergy table . [question] How many students have a food allergy ? [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You need to determine the amount claimed . [system description] find the amount settled and amount settled in claims table with largest value of amount claimed . [question] Among all the claims , what is the settlement amount of the claim with the largest claim amount ? List both the settlement amount and claim amount . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] In step 2 , you need to use first name and last name of list . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " LEIA " and teachers 's last name equals " MOYER " . [question] Find all students taught by OTHA MOYER . Output the first and last names of the students . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
[feedback] Find population of city table whose city name equals boulder . [system description] find the number of rows in state table whose area equals " dummy value " . [question] number of people in boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should include organization table and in step 2 , use conference 's name and VLDB 's title in place of conference 's name and author 's name respectively . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the number of conference 's homepage of the results of step 1 whose conference 's name equals " dummy value " and author 's name equals " dummy value " . [question] return me the number of papers in VLDB conference in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to calculate the unique number of level . [system description] find the level in member table . [question] What are the different membership levels ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 2 , you should use state of bank table . [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the summation of no of customers of each value of customer 's state of the results of step 1 . Step 3 : find the customer 's state of the results of step 1 with largest value in the results of step 2 . [question] Which state has the greatest total number of bank customers ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to determine the number of tracks for each album . [system description] find each value of album id in album table along with the number of the corresponding rows to each value . [question] What are the names and ids of the different albums , and how many tracks are on each ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] Replace name with eliminated by . [system description] Step 1 : for each row in elimination table , find the corresponding rows in wrestler table . Step 2 : find the time of the results of step 1 whose name equals " Fishman " or eliminated by equals " Punk " . [question] What are the times of elimination for any instances in which the elimination was done by Punk or Orton ? [schema] [T] wrestler [C] wrestler id [C] name [C] reign [C] days held [C] location [C] event [T] elimination [C] elimination id [C] wrestler id [C] team [C] eliminated by ( Orton , Punk ) [C] elimination move [C] time
[feedback] You need to search for name of state which is equivalent to texas in step 2 . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose state 's state name equals " dummy value " . [question] could you tell me what is the highest point in the state of texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use last name equals Heilo and also do n't calculate the number of instrument . [system description] Step 1 : for each row in band table , find the corresponding rows in instruments table . Step 2 : find the instrument and number of rows of the results of step 1 whose last name equals " dummy value " . [question] How many instrument does the musician with last name " Heilo " use ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , loan type should be Business and bname should be used instead of customer name . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name and city of the results of step 1 whose loan type equals " Auto " . [question] What are the names and cities of bank branches that offer loans for business ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type ( Business ) [C] customer id [C] branch id [C] amount
[feedback] In step 2 , ensure enroll 's grade equals A and class code equals 10018 . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table . Step 2 : find the student last name of the results of step 1 whose class 's class code equals 10017 . [question] What is the last name of the student who received an A in the class with the code 10018 ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 3 , use greater than instead of equals . [system description] Step 1 : for each row in invoices table , find the corresponding rows in orders table . Step 2 : find the number of rows of each value of invoices 's order id of the results of step 1 . Step 3 : find the invoices 's order id and order details of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Return the order ids and details for orderes with two or more invoices . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 2 and 3 , use medicine 's name and interaction type in place of enzyme 's name and enzyme interaction type respectively . [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table and in medicine table . Step 2 : find the medicine 's name and trade name of the results of step 1 whose enzyme 's name equals " Uroporphyrinogen III decarboxylase " . Step 3 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table and in medicine table . Step 4 : find the medicine 's name and trade name of the results of step 3 whose enzyme 's name equals " Coproporphyrinogen III oxidase " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] List the medicine name and trade name which can both interact as 'inhibitor ' and 'activitor ' with enzymes . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( inhibitor , activitor )
[feedback] In step 2 , you should use zip code , date and max temperature f which is higher than or equals 80 . [system description] Step 1 : for each row in trip table , find the corresponding rows in weather table and in status table . Step 2 : find the time and trip 's zip code of the results of step 1 whose max temperature f like 97 . [question] When and in what zip code did max temperature reach 80 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , I want director along with reviewer . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the name , title , rating stars of the results of step 1 . [question] What are the different reviewer names , movie titles , and stars for every rating where the reviewer had the same name as the director ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Make sure that the decor should be modern and base price should be less than $ 160 . Also , use two beds and modern decor instead of two beds and bed type . [system description] find the room name in rooms table whose base price less than 250 and bed type less than " Double " . [question] What are the names of modern rooms that have a base price lower than $ 160 and two beds . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Also find document date , replace document type description with document type name , and make sure it is present in documents table . [system description] find the document type name and document type description in reference document types table . [question] What is the document type name and the document type description and creation date for all the documents ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 1 , film text table is to be replaced by film table . [system description] Step 1 : for each row in inventory table , find the corresponding rows in film text table and in rental table . Step 2 : find the number of rows of each value of rental 's inventory id of the results of step 1 . Step 3 : find the title and inventory 's inventory id of the results of step 1 with largest value in the results of step 2 . [question] Return the title and inventory id of the film that is rented most often . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to determine the minimum age and the major . [system description] find each value of major in student table along with the average age and maximum age of the corresponding rows to each value . [question] What are the average , minimum , and max ages for each of the different majors ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You should use name of state as wyoming and drop the area . [system description] find the density in state table whose area equals " dummy value " . [question] what is the density of the wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use reservation number in step 3 . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of each value of decor of the results of step 1 . Step 3 : find the decor of the results of step 1 with smallest value in the results of step 2 . [question] What kind of decor has the least number of reservations ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Make sure that state has minimum population density . [system description] find the state name in state table with smallest value of density . [question] which state has the sparsest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace player 's name with player id . [system description] Step 1 : for each row in club table , find the corresponding rows in player table . Step 2 : find the club 's name and player 's name of the results of step 1 . [question] What are the names and players of all the clubs ? [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] In step 1 , you should use company id of office locations instead of name of buildings table . [system description] Step 1 : find the number of rows of each value of name in buildings table . Step 2 : find the name in buildings table whose corresponding value in step 1 is greater than 1 . [question] Which buildings have more than one company offices ? Give me the building names . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] Replace acc regular season with acc home and replace school with founded . [system description] Step 1 : for each row in university table , find the corresponding rows in basketball match table . Step 2 : find the team name and school of the results of step 1 with smallest value of acc regular season . [question] Return the name of the team and the acc during the regular season for the school that was founded the earliest . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] Replace team table with country table . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table . Step 2 : find the name , season , country of the results of step 1 . [question] For each player , what are their name , season , and country that they belong to ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 1 , use department code in place of department name . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name , department address , number of rows in department table with largest value in the results of step 1 . [question] What is the name , address , and number of students in the departments that have the 3 most students ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 3 , you need to use city name and area instead of state population and city name respectively . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital in state table with largest value of density . Step 3 : find the state 's population of the results of step 1 whose city 's state name equals the results of step 2 . [question] what is the population of the capital of the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use title of author table , organization of university of michigan , year greater than 2000 . [system description] find the number of pid in publication table whose year greater than " dummy value " and year equals " dummy value " . [question] return me the number of papers after 2000 in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use Id of product from order items table whose product is Rodrick Heaney . [system description] find the number of rows in customers table whose customer name equals " Tillman Ernser " . [question] How many types of products have Rodrick Heaney bought in total ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Rodrick Heaney ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to search for the total number of students residing in dorm whose age is more than 20 . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : only keep the results of step 1 whose age greater than 22 . Step 3 : find each value of dorm name the results of step 2 along with the number of the corresponding rows to each value . [question] How many students are older than 20 in each dorm ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Replace flight table with aircraft table , and find minimum distance , maximum distance and average distance . [system description] find the minimum distance , maximum distance , maximum distance in flight table . [question] Return the minimum , average and maximum distances traveled across all aircrafts . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Replace flight 's distance with aircraft 's distance , and maximum flight 's distance with average flight 's distance . [system description] Step 1 : for each row in flight table , find the corresponding rows in aircraft table . Step 2 : find the minimum aircraft 's distance , average flight 's distance , maximum flight 's distance of the results of step 1 . [question] What is the minimum , average , and maximum distance of all aircrafts . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 1 , you should use artist 's country and in step 2 , use smallest value in place of largest value . [system description] Step 1 : find the number of rows of each value of country in song table . Step 2 : find the country in song table with largest value in the results of step 1 . [question] Find the country of origin for the artist who made the least number of songs ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Replace type greater than Tribal with type equals Private , and founded greater than 1990 with founded equals 1990 . [system description] find the institution and location in institution table whose type greater than " Tribal " . [question] Show the names and locations of institutions that are founded after 1990 and have the type " Private " . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type ( Private ) [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] vault points is wrong , Take total points in place of it . [system description] find the total points in gymnast table ordered descending by vault points . [question] List the total points of gymnasts in descending order . [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
[feedback] You need to search for the friend whose job is equivalent to doctor . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose job equals " student " and job equals " student " . [question] Find the male friend of Alice whose job is a doctor ? [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( male ) [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] Also need to find average num of staff . [system description] find the average score and average score in shop table . [question] What are the average score and average staff number of all shops ? [schema] [T] shop [C] shop id [C] address [C] num of staff [C] score [C] open year [T] member [C] member id [C] name [C] membership card [C] age [C] time of purchase [C] level of membership [C] address [T] happy hour [C] hh id [C] shop id [C] month [C] num of shaff in charge [T] happy hour member [C] hh id [C] member id [C] total amount
[feedback] You need to use acc percent in place of maximum acc percent . [system description] find the maximum acc percent in basketball match table . [question] Return the highest acc percent across all basketball matches . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] Make sure state equals LA and enrollment greater than 10000 . [system description] find the college name and enrollment in college table whose state greater than " FL " and state equals " AZ " . [question] Find the name , enrollment of the colleges whose size is bigger than 10000 and location is in state LA . [schema] [T] college [C] college name [C] state ( LA ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You should use resolution in place of resolution . [system description] find the average rating and resolution in song table whose languages equals " bangla " . [question] What are the average rating and resolution of songs that are in Bangla ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
[feedback] You need to use the city table to search for the largest city . [system description] find the state name in state table with largest value of density . [question] which state has the largest city [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , Austin should be used in place of John and also in step 1 , you should use minimum revenue in place of founder . [system description] Step 1 : find the revenue in manufacturers table whose founder equals " John " . Step 2 : find the summation of revenue in manufacturers table whose founder equals the results of step 1 . [question] Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You should use training hours greater than 1000 instead of player name greater than 1600 . [system description] find the number of player name in player table whose training hours greater than 1600 . [question] How many different players trained for more than 1000 hours ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Find highest point of the state with smallest population density . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : for each row in state table , find the corresponding rows in highlow table . Step 3 : find the minimum density of the results of step 2 . Step 4 : find the maximum highest point of the results of step 1 whose population equals the results of step 3 with smallest value of highest point . [question] what is the highest point of the state with the smallest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , city code should be HOU and not BAL . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose city code equals " BAL " . [question] Find the names of the clubs that have at least a member from the city with city code " HOU " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HOU ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] Replace competition with city 's city , remove and competition equals 2002 FIFA World Cup qualification . [system description] find the venue in match table whose competition equals " 1994 FIFA World Cup qualification " and competition equals " 2002 FIFA World Cup qualification " . [question] What is the venue of the competition " 1994 FIFA World Cup qualification " hosted by " Nanjing ( Jiangsu ) " ? [schema] [T] city [C] city id [C] city ( Nanjing ( Jiangsu ) ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] In step 1 , you should use policies table in place of customers table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer details in customers table with largest value in the results of step 1 . [question] Which customer have the most policies ? Give me the customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You need to search for the name of river which runs through mississippi state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of the states through which the mississippi run [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use keyword and release year should be more than 1990 . [system description] find the number of rows in movie table whose release year greater than " dummy value " and release year greater than " dummy value " . [question] How many movies about Persians were released after 1990 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , you should use the name of the author as H. V. Jagadish . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the number of rows of the results of step 1 whose author 's name equals " dummy value " . [question] return me the number of conferences which have papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use greater than or . [system description] Step 1 : for each row in architect table , find the corresponding rows in bridge table . Step 2 : find the number of rows of each value of architect id of the results of step 1 . Step 3 : find the architect id and architect 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the ids and names of the architects who built at least 3 bridges ? [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
[feedback] Replace department name with course 's department code , find number of rows of each value of department name . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of department name of the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of classes in each department . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to find total points in descending order and not the summation of total points . [system description] find the summation of total points in gymnast table ordered descending by total points . [question] What are the total points for all gymnasts , ordered by total points descending ? [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
[feedback] You need to use instruments instead of songs and also remove the phrase title equals dummy value . [system description] find the number of rows in songs table whose title equals " dummy value " . [question] How many instruments does the song " Badlands " use ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , you should use the activity name equivalent to Canoeing or Kayaking . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Spelunking " or activity name equals " Baseball " . [question] Which faculty members are playing either Canoeing or Kayaking ? Tell me their first names . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You need to determine the department 's code for each rows . [system description] find each value of student gpa in student table along with the average student gpa , minimum student gpa , and maximum student gpa of the corresponding rows to each value . [question] What is the highest , lowest , and average student GPA for every department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should find the highest point in texas . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose highlow 's state name equals " dummy value " with largest value of highest point . [question] where is the highest point in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace domain journal 's jid with name , step 3 : Replace domain journal 's jid with publication keyword 's title , step 4 : Replace domain journal 's jid with name . [system description] Step 1 : for each row in domain journal table , find the corresponding rows in journal table and in publication table and in publication keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of keyword of each value of domain journal 's jid the results of step 2 . Step 4 : find the domain journal 's jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the journals , which have more than 60 papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure it is a single value of area . [system description] find the state name in state table with largest value of area . [question] what state has the largest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the value of oppose rate for each person and it should be the lowest one . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the name and sex of the results of step 1 with smallest value of support rate . [question] Find the name of the candidates whose oppose percentage is the lowest for each sex . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] You need to search for the headquarters along with name . [system description] find the name , founder , founder in manufacturers table with largest value of revenue . [question] What are the names , headquarters and founders of the company with the highest revenue ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You should use order items table instead of orders table and also search for different product id . [system description] find each value of order id in orders table along with the number of the corresponding rows to each value . [question] Show order ids and the number of products in each order . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to search for the friend 's name whose age is smaller than the age of person . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the average age in person table . Step 3 : find the person friend 's name of the results of step 1 whose age less than the results of step 2 . [question] Who has friends that are younger than the average age ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] You need to use the director 's name who is Asghar Farhadi from the table of movie directed by . [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in classification table and in genre table . Step 2 : find the genre of the results of step 1 whose name equals " dummy value " . [question] what are the genres of movies directed by " Asghar Farhadi " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace jid , year with title , year greater than 2000 . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : only keep the results of step 1 whose year greater than " dummy value " . Step 3 : find the number of year of each value of name the results of step 2 . Step 4 : find the number of jid and year the results of step 2 ordered descending by the results of step 3 . [question] return me the paper after 2000 with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] you need to use student class hours taken in place of student num . [system description] find each value of department code in student table along with the summation of student num of the corresponding rows to each value . [question] Find the total number of hours have done for all students in each department . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the total amount lent by the bank branch in the previous step . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table . Step 2 : find the bname of the results of step 1 with largest value of amount . [question] What is the name of the bank branch that has lent the greatest amount ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You should look for the rows of albums whose year is 2010 . [system description] find the title in albums table whose year equals " dummy value " . [question] What are the albums produced in year 2010 ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You should use river 's length in place of country name of state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state 's country name equals " dummy value " with smallest value of length . [question] how long is the shortest river in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , use home game 's team id and drop div id . [system description] Step 1 : find rows in team table whose year equals 1885 . Step 2 : find the average attendance of each value of div id the results of step 1 . Step 3 : find the div id and rank the results of step 1 with largest value in the results of step 2 . [question] In 2014 , what are the id and rank of the team that has the largest average number of attendance ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You should use first name Marina and second last name Kohler . [system description] find the customer status code , cell mobile phone number , email address in customers table whose last name equals " Goodwin " or first name equals " Genevieve " . [question] What is the status code , mobile phone number and email address of customer with last name as Kohler or first name as Marina ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Marina ) [C] last name ( Kohler ) [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should find the average order quantity of order items . [system description] Step 1 : for each row in customer orders table , find the corresponding rows in order items table . Step 2 : find each value of customer orders 's order id of the results of step 1 along with the average order quantity of the corresponding rows to each value . [question] What is the average amount of items ordered in each order ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You should use sports info table and search summation of games played by students . [system description] find the number of rows in plays games table . [question] How many games are played for all students ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Make sure state has highest density . [system description] find the state name in state table with largest value of density . [question] which state has the largest density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use first name and last name in place of actor id . [system description] Step 1 : find the number of rows of each value of actor id in actor table . Step 2 : find the first name and last name in actor table with largest value in the results of step 1 . [question] Return the most common full name among all actors . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Replace publication 's jid with journal 's citation num , author 's name with journal 's name , both with PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [question] return me the citations of each paper in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use governor in place of lieutenant governor . [system description] find the number of lieutenant governor in party table . [question] Count the number of distinct governors . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] Also find account name ahead of date account opened , other account details . [system description] find the account id , date account opened , date account opened , other account details in accounts table . [question] Show the id , the date of account opened , the account name , and other account detail for all accounts . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You should use date assigned from , not the date assigned from equals 2017 05 10 02 : 32 : 17 . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff name and staff gender of the results of step 1 whose date assigned from equals " 2017-05-10 02:32:17 " . [question] Return the name and gender of the staff who was assigned in 2016 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , you should use tourist details and visit details in place of visit details and visit details respectively . [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table . Step 2 : find the visit date and tourist details of the results of step 1 whose visit details equals " " . [question] What are the visit date and details of the visitor whose detail is 'Vincent ' ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 1 , I want certificate table and drop salary table . [system description] Step 1 : find the number of rows of each value of employee id in employee table . Step 2 : find the salary and name in employee table with largest value in the results of step 1 . [question] what is the salary and name of the employee who has the most number of aircraft certificates ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Replace team franchise table with team table , league id winner with name equals Boston Red Stockings . [system description] Step 1 : for each row in postseason table , find the corresponding rows in team franchise table . Step 2 : find the maximum wins of the results of step 1 whose franchise name equals " Indianapolis Hoosiers " and league id winner equals " NL " . [question] What are the maximum scores the team Boston Red Stockings got when the team won in postseason ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] I want the song id and formats in place of file size and formats respectively . [system description] find the file size in files table whose formats equals " mp4 " . [question] What are the id of all the files in mp3 format ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats ( mp3 ) [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to ensure that average points are more than 20 . [system description] Step 1 : find the average points of each value of position in player table . Step 2 : find the position in player table whose corresponding value in step 1 is greater than 1 . [question] List the position of players with average number of points scored by players of that position bigger than 20 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] You should use springfield as a replacement for dummy value of city name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [question] which states have cities named springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace organization table with journal table . [system description] find the homepage in organization table whose name equals " dummy value " . [question] return me the homepage of PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace state name with mountain name , and make sure mountain altitude should be highest . [system description] find the mountain name in mountain table whose state name equals " dummy value " with largest value of mountain altitude . [question] where is the highest mountain of the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , use authorship count table in place of authors table . [system description] Step 1 : find the number of rows of each value of author id in authors table . Step 2 : find the last name in authors table with largest value in the results of step 1 . [question] Which author has written the most papers ? Find his or her last name . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to use highest elevation . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain name of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest elevation . [question] what is the tallest mountain in america [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use Football or Lacrosse as a substitute of Sport Name in step 2 . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find the first name and last name of the results of step 1 whose sport name equals " Cricket " or sport name equals " Soccer " . [question] What is the first and last name of all students who play Football or Lacrosse ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Lacrosse , Football ) [C] hours per week [C] games played [C] on scholarship
[feedback] credit score greater than 100 is correct , not credit score greater than 30 . [system description] Step 1 : find rows in customer table whose credit score greater than 30 . Step 2 : find each value of state the results of step 1 along with the summation of account balance of the corresponding rows to each value . [question] For each state , find the total account balance of customers whose credit score is above 100 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 2 , you should calculate course credit and description of course with respect to the course code CIS 220 . [system description] Step 1 : find rows in course table whose department code equals " ACCT " . Step 2 : find each value of course description the results of step 1 along with the summation of course credit of the corresponding rows to each value . [question] What is the description for the CIS-220 and how many credits does it have ? [schema] [T] class [C] class code [C] course code ( CIS-220 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for highest elevation in place of lowest elevation . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest point . [question] which state has the highest point [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the city name in city table . [system description] find the state name in state table with largest value of population . [question] what state has the largest urban population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for name of state in place of population . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose border equals " dummy value " with largest value of population . [question] what is the most populated state bordering oklahoma [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , use farm competition 's host city id in place of official name in city table . [system description] Step 1 : find the number of rows of each value of official name in city table . Step 2 : find the official name in city table whose corresponding value in step 1 is greater than 1 . [question] Show the official names of the cities that have hosted more than one competition . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] Make sure to find distinct value of each class . [system description] find the grade , class room , class room in list table . [question] What are the grade number and classroom number of each class in the list ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to calculate unique number of city code and their major . [system description] find each value of major in student table along with the number of city code of the corresponding rows to each value . [question] How many different majors are there and how many different city codes are there for each student ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You should use highest elevation in place of highest point and delete country name equals dummy value . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose country name equals " dummy value " . [question] how high is the highest point in america [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure to find only for the largest value of age . [system description] find the name in person table with largest value of age . [question] What is the name of the person who is the oldest ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] You need to use Mountain View instead of Redwood City . [system description] find the number of rows in station table whose city equals " Redwood City " . [question] How many stations are in Mountain View ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to determine the number of rows that correspond to each value of customer id from customers table . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find each value of customers 's customer id of the results of step 1 along with the number of the corresponding rows to each value . [question] How many accounts does each customer have ? List the number and customer id . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You should use birth year greater than 1980 and also ensure that nationality equals Italy . [system description] find the name in actor table whose nationality equals " dummy value " and birth year greater than " dummy value " . [question] Find all actors from Italy born after 1980 [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search for the artist having english languages as a condition . [system description] find the artist name and number of rows in song table whose country equals " UK " . [question] Find the names and number of works of all artists who have at least one English songs . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] You need to search for the unique genre is of song having rating higher than 9 . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the song 's artist name and artist 's country of the results of step 1 whose rating greater than 6 . [question] What are the different names and countries of origins for all artists whose song ratings are above 9 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Find highest elevation of highlow table whose highest point equals guadalupe peak . [system description] find the maximum mountain altitude in mountain table whose mountain name equals " dummy value " . [question] what is the maximum elevation of guadalupe peak [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should not use documents mailed . [system description] Step 1 : for each row in documents table , find the corresponding rows in documents mailed table . Step 2 : find the documents mailed 's document id and receipt date of the results of step 1 . [question] List all document ids and receipt dates of documents . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] In step 2 , you need to use Atlanta as the city . [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of rows of the results of step 1 whose city equals " Detroit " and year equals 1967 . [question] Find the number of games taken place in city Atlanta in 2000 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Atlanta ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Atlanta ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Atlanta ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Atlanta ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You should use duration in place of duration . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the number of rows of the results of step 1 whose duration like " 4:34 " . [question] How many songs have 4 minute duration ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , you should use the visits table and drop tourist attractions table . [system description] Step 1 : find the number of rows of each value of tourist attraction id in tourist attractions table . Step 2 : find the name and tourist attraction id in tourist attractions table whose corresponding value in step 1 is greater than or equals 1 . [question] Which tourist attractions are visited at least twice ? Give me their names and ids . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You should use product category code and drop product category description . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description of the results of step 1 whose product name equals " flax " . [question] Which category does the product named " flax " belong to ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( flax ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Make sure to find distinct vice president vote and vice president vote not combined . [system description] find the vice president vote and vice president vote in voting record table . [question] Report the distinct president vote and the vice president vote . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] Replace player table with match season table , player , name with player , season and team respectively . [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : find the player , name , team of the results of step 1 . [question] Who are the different players , what season do they play in , and what is the name of the team they are on ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] Remove whose river name equals dummy value phrase from step 2 . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose river name equals " dummy value " . [question] name all the lakes of us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use length of river instead of country name of state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with smallest value of length . [question] what is the shortest river in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure major does not equals 600 and age greater than 18 . [system description] find the first name and last name in student table whose sex equals " M " and age greater than 22 . [question] List all female students age is older than 18 who is not majoring in 600 . List students ' first name and last name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
[feedback] You need to use games played greater than or equals 1000 . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the game name of the results of step 1 whose hours played greater than or equals 10 . [question] What are the names of all the games that have been played for at least 1000 hours ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] In step 2 , I want summation of damage millions usd . [system description] Step 1 : find the average max speed in storm table . Step 2 : find the summation of number deaths and summation of number deaths in storm table whose max speed greater than the results of step 1 . [question] Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You should use state province county and start with 4 . [system description] find the city and country in addresses table whose zip postcode like 720 . [question] Find the state and country of all cities with post code starting with 4 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Replace jid with title , domain author table with publication keyword table , title with conference 's name , make sure conference 's name equals VLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the jid of the results of step 1 whose keyword equals " dummy value " and title equals " dummy value " . [question] return me the papers in VLDB conference containing keyword " Information Retrieval " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure friends of Alice 's friend . [system description] find the name in person friend table whose friend equals " Alice " . [question] What are the names of all of Alice 's friends of friends ? [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] You should use highest point in place of highest point in dummy value . [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [question] what is the highest point in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use area in place of density and drop the country name which is equivalent to dummy value . [system description] find the summation of density in state table whose country name equals " dummy value " . [question] how many square kilometers in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use languages equals english . [system description] Step 1 : find the minimum rating in song table whose rating equals 6 . Step 2 : find the song name in song table whose rating less than the results of step 1 . [question] What are the names of the songs whose rating is below the rating of all songs in English ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] You need to search for the number of rows counted for each city . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table whose corresponding value in step 1 is greater than 1 . [question] List the cities which have more than 2 airports sorted by the number of airports . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
[feedback] You need to search for the bank name whose branch id is available in loan table and also make sure that credit score should not be less than 100 . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the loan 's branch id of the results of step 1 whose credit score less than 20 . [question] Find the names of bank branches that have provided a loan to any customer whose credit score is below 100 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to determine the unique value of player position . [system description] find the player position in tryout table . [question] What are the unique types of player positions in the tryout ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In steps 2 and 3 , interchange department name with department name and in step 4 , interchange purchasing with managing . [system description] Step 1 : for each row in departments table , find the corresponding rows in department stores table . Step 2 : find the departments 's department store id and store name of the results of step 1 whose department name equals " purchasing " . Step 3 : for each row in departments table , find the corresponding rows in department stores table . Step 4 : find the departments 's department store id and store name of the results of step 3 whose department name equals " purchasing " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the ids and names of department stores with both marketing and managing departments ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name ( managing , marketing ) [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use rating and gender in place of song name and gender respectively . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the average song name of the results of step 1 whose gender equals " Male " . [question] How many songs , on average , are sung by a female artist ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , you should use bname and loan type in place of customer name and loan type respectively . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the city and customer name of the results of step 1 whose loan type equals " Auto " . [question] Find the city and name of bank branches that provide business loans . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type ( Business ) [C] customer id [C] branch id [C] amount
[feedback] Replace grade equals 2 with grade equals 4 . [system description] find the class room in list table whose grade equals 2 . [question] Which classrooms are used by grade 4 ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 4 , you should use amount of loan and bname in place of credit score and 210 respectively . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : only keep the results of step 1 whose credit score less than 210 . Step 3 : find the summation of credit score of each value of loan 's branch id the results of step 2 . Step 4 : find the customer name the results of step 2 with largest value in the results of step 3 . [question] Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to calculate total rows for each manufacturer . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find each value of manufacturer of the results of step 1 along with the number of the corresponding rows to each value . [question] How many products are there for each manufacturer ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You need to search for the name of river which runs through mississippi state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of states through which the mississippi river run [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use the summation of market value . [system description] Step 1 : find the number of rows of each value of main industry in company table . Step 2 : find the main industry and number of rows in company table with largest value in the results of step 1 . [question] For each main industry , what is the total number of companies for the industry with the highest total market value ? [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] In step 1 , you should use actor , cast table and title instead of title and dummy value respectively . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose title equals " dummy value " . [question] What is the number of actors in the movie " Saving Private Ryan " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use name of reviewer who is Sarah Martinez . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the director of the results of step 1 whose name equals " Brittany Harris " . [question] What are the names of all directors whose movies have been reviewed by Sarah Martinez ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( Sarah Martinez ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Replace course table with class table . [system description] find the number of course code in course table . [question] What are the number of different course codes ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , claim status name in claims processing stages table should be used instead of claim stage id . [system description] Step 1 : find the number of rows of each value of claim stage id in claims processing stages table . Step 2 : find the claim status name in claims processing stages table with largest value in the results of step 1 . [question] What is the name of the claim processing stage that most of the claims are on ? [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] Make sure that open year equals 2001 and membership amount greater than 100 . [system description] find the city in branch table whose open year equals 2009 and open year greater than 2012 . [question] Show all city with a branch opened in 2001 and a branch with more than 100 membership . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 2 , you should count the number of transaction id and invoice number . [system description] Step 1 : for each row in invoices table , find the corresponding rows in financial transactions table . Step 2 : find each value of financial transactions 's invoice number of the results of step 1 along with the number of the corresponding rows to each value . [question] How many transactions correspond to each invoice number ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 2 , you should use the order quantity from order items table . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of customers 's customer id of the results of step 1 . Step 3 : find the customer name of the results of step 1 with largest value in the results of step 2 . [question] Find the name of the customer who made the order of the largest amount of goods . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Replace oid with title , organization with publication , name with University of Michigan , name with Writes 's dummy value . [system description] find the number of oid in organization table whose name equals " dummy value " . [question] return me the number of papers in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , use school code in place of class code . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the number of department address of the results of step 1 whose class 's class code equals 10016 . [question] How many different locations does the school with code BUS has ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code ( BUS ) [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to ensure that state name should be texas in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [question] which capitals are in the states that border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to ensure that num of audience should be in ascendant order . [system description] find the venue in debate table ordered descending by num of audience . [question] List the venues of debates in ascending order of the number of audience . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
[feedback] You need to use unsure rate instead of unsure rate . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the sex of the results of step 1 with largest value of unsure rate . [question] What is the sex of the candidate who had the highest unsure rate ? [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] In step 1 , you should use draft copies table and in step 2 , find draft number of each value of document id . [system description] Step 1 : find the number of rows of each value of document id in documents table . Step 2 : find the document id and number of rows in documents table with largest value in the results of step 1 . [question] Which document has the most draft copies ? List its document id and number of draft copies . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] In step 2 , player position should be mid and in step 3 , goalie should be used instead of striker . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " goalie " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " striker " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [question] What are the names of the schools with some players in the mid position but no goalies ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( no ) [C] training hours [T] tryout [C] player id [C] college name [C] player position ( mid , goalie ) [C] decision ( no )
[feedback] You should use area instead of density and delete the condition whose country name equals dummy value . [system description] find the density in state table whose country name equals " dummy value " with largest value of density . [question] what is the size of the largest state in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace organization table with cite table , name with title , year less than 2010 with year equals or less than 2010 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [question] return me the number of citations of " Making database systems usable " before 2010 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , replace domain author table with publication keyword table , in step 2 replace step 3 word with step 4 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name and conference 's name the results of step 2 with largest value in the results of step 3 . [question] return me the conference that has the most number of papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to ensure that state name should be texas in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [question] what are the capitals of states that border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use area in place of lowest point and also drop not equals . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the border of the results of step 1 whose lowest point not equals " dummy value " with largest value of lowest point . [question] what is the largest state that borders the state with the lowest point in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find number of rivers in state with highest elevation . [system description] find the number of rows in highlow table with largest value of highest point . [question] how many rivers are in the state with the highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use rating table and make sure rating stars should be 4 in step 2 . [system description] Step 1 : find the reviewer 's reviewer id in reviewer table . Step 2 : find the rating 's reviewer id in rating table whose rating stars equals 2 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] find the ids of reviewers who did not give 4 star . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Make sure area should be equals to maximum . [system description] find the state name in state table with largest value of density . [question] give me the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use D instead of Charles in step 2 . [system description] Step 1 : for each row in player table , find the corresponding rows in tryout table and in college table . Step 2 : find the college 's college name of the results of step 1 whose player name like " Charles " . [question] Which colleges does each player with a name that starts with the letter D who tried out go to ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to find the highest rating from the table of rating stars and its director . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : only keep the results of step 1 whose rating stars equals 5 . Step 3 : find the number of rows of each value of director the results of step 2 . Step 4 : find the director , title , summation of rating stars the results of step 2 with largest value in the results of step 3 . [question] For each director , return the director 's name together with the title of the movie they directed that received the highest rating among all of their movies , and the value of that rating . Ignore movies whose director is NULL . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] which states does the ohio river run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that students have president vote . [system description] find the first name and last name in student table whose sex equals " F " . [question] Find the first and last names of all the female ( sex is F ) students who have president votes . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to search for the people name and age whose marriage is not legal for them . [system description] Step 1 : for each row in people table , find the corresponding rows in wedding table . Step 2 : find the male id of the results of step 1 whose is male equals " F " . Step 3 : find the name and age in people table whose people id not one of the results of step 2 . [question] Show the name and age for all male people who do n't have a wedding . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] You need to ensure that grade point should be 3.8 or more in the course . [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table and in grade conversion table . Step 2 : find the first name of the results of step 1 whose grade point equals 2.7 . [question] Find the distinct student first names of all students that have grade point at least 3.8 in one course . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Also need to find phone number along with email address . [system description] find the email address and phone number in customers table ordered ascending by email address . [question] What are the emails and phone numbers of all customers , sorted by email address and phone number ? [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] In step 1 , you should use reviewer id of rating table . [system description] Step 1 : find the number of rows of each value of name in reviewer table . Step 2 : find the name in reviewer table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the names of all reviewers that have rated 3 or more movies ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to search for the unique name of reviewer table . [system description] find the average rating stars and average rating stars in rating table . [question] What is the average rating star for each reviewer ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should use status equals on hold instead of status equals proposed . [system description] find the name in buildings table whose status equals " proposed " ordered ascending by stories . [question] Find the names of the buildings in " on-hold " status , and sort them in ascending order of building stories . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status ( on-hold ) [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] You should use city name and population in place of capital and country name respectively . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's country name equals " dummy value " . [question] what are the major cities in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace domain keyword table , domain author table , domain pid with publication keyword table , author 's name , author 's name whose keyword equals User Study . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the number of publication 's pid of the results of step 1 whose keyword equals " dummy value " . [question] return me the number of the papers of " H. V. Jagadish " containing keyword " User Study " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure that population should be more than 150000 and state name equals kansas . [system description] find the city name in city table whose state name equals " dummy value " . [question] what major cities are located in kansas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use price in dollar and furniture manufacte table instead of market rate and furniture table respectively . [system description] Step 1 : find the maximum market rate in furniture table . Step 2 : find the name in furniture table whose market rate less than the results of step 1 . [question] Find the names of furnitures whose prices are lower than the highest price . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] You need to determine the number of equivalent rows for each customer Id in the accounts table . [system description] find each value of customer id in customers table along with the number of the corresponding rows to each value . [question] What are the the full names and ids for all customers , and how many accounts does each have ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Verify that the value of vice president 's vote is not equivalent to null in voting record table . [system description] find the first name and last name in student table whose age equals 22 . [question] Find the first and last name of all the students of age 18 who have vice president votes . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to use the amount claimed from policies table . [system description] find the customer details in customers table with smallest value of customer details . [question] Which customer made the smallest amount of claim in one claim ? Return the customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] Also find visit date , and make sure tourist details equals Vincent or Vivian . [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table and in tourist attractions table . Step 2 : find the name and name of the results of step 1 whose visitors 's tourist id equals 439 or visit date equals " 2010-10-04 01:34:12 " . [question] For each tourist attraction , return its name and the date when the tourists named Vincent or Vivian visited there . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent , Vivian ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 2 , name should be equivalent to VLDB and in step 3 , find summation of citation num . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of the corresponding rows to each value . [question] return me the total citations of papers in the VLDB conference in each year . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should remove division and in step 2 , use division and building in place of division and AS respectively . [system description] Step 1 : find the department name in department table whose division equals " AS " and building equals " NEB " . Step 2 : find the department name in department table whose division equals " EN " and division equals " AS " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] What are the names of departments either in division AS , or in division EN and in building NEB ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building ( NEB ) [T] department [C] department number [C] division [C] department name [C] room [C] building ( NEB ) [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] In step 1 , you should use count of city id . [system description] Step 1 : find the number of rows of each value of status in city table . Step 2 : find the status and number of rows in city table ordered descending by the results of step 1 . [question] Please show the different statuses , ordered by the number of cities that have each . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] Replace club location with city code . [system description] find the club name in club table whose club location equals " AKW " . [question] Which clubs have one or more members from the city with code " BAL " ? Give me the names of the clubs . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( BAL ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to search for name of city which is springfield . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [question] what state has the city springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use customer orders table instead of customers table . [system description] Step 1 : find rows in customers table whose payment method code equals " Credit Card " . Step 2 : find the number of rows of each value of customer name the results of step 1 . Step 3 : find the customer name the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Show the names of customers who use Credit Card payment method and have more than 2 orders . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] products [C] product id [C] product type code [C] product name [C] product price [T] customers [C] customer id [C] payment method code ( Credit Card ) [C] customer number [C] customer name [C] customer address [C] customer phone [C] customer email [T] contacts [C] contact id [C] customer id [C] gender [C] first name [C] last name [C] contact phone [T] customer address history [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order date [C] order status code [T] order items [C] order item id [C] order id [C] product id [C] order quantity
[feedback] You need to check that the genre is equivalent to modern . [system description] find the song name in song table whose languages equals " english " or languages equals " english " . [question] What are the names of the songs that are modern or sung in English ? [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] You should use amount of loan and not the amount of balance . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name and account balance of the results of step 1 whose amount greater than 5000 . [question] Find the name and account balance of the customers who have loans with a total amount of more than 5000 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 2 , you should use card number instead of card type code . [system description] Step 1 : for each row in customers table , find the corresponding rows in customers cards table . Step 2 : find the customer first name , customer last name , customer phone of the results of step 1 whose card type code equals " Debit " . [question] What is the first name , last name , and phone of the customer with card 4560596484842 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] You should use country of artist , song 's name and rating in place of country of song , song name and rating respectively . [system description] find the artist name and country in song table whose rating greater than 10 . [question] List the name and country of origin for all singers who have produced songs with rating above 9 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Find number of rows in river table whose length greater than 750 , make sure they are adjacent to major rivers . [system description] find the number of rows in state table whose area greater than " dummy value " . [question] how many states are next to major rivers [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that job equivalent to engineer and age greater than 30 . [system description] find the number of rows in person table whose age greater than 26 . [question] HOw many engineers are older than 30 ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
[feedback] You should use duration which is approximately 4 minutes . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the number of rows of the results of step 1 whose duration greater than " 2:56 " . [question] What is the count of the songs that last approximately 4 minutes ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to delete the largest value of amount claimed . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table and in claim headers table . Step 2 : find the customer details of the results of step 1 with largest value of amount claimed . [question] What is the name of the customer who has made the largest amount of claim in a single claim ? [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] In step 2 , you need to use the full name Janessa Sawayn . [system description] Step 1 : for each row in staff table , find the corresponding rows in lessons table . Step 2 : find the summation of lesson time of the results of step 1 whose first name equals " Kaitlin " . [question] What is the total time for all lessons taught by Janessa Sawayn ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 2 , You should use customer name equals Tillman Ernser . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the channel code of the results of step 1 whose customer name equals " Dr. Julia Wuckert MD " . [question] Find the contact channel code that was used by the customer named " Tillman Ernser " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to search for the total amount of loans offered by each bank branch . [system description] find each value of branch id in loan table along with the summation of amount of the corresponding rows to each value . [question] Find the total amount of loans offered by each bank branch . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You should use code of region instead of name of region . [system description] find the region code and region name in region table ordered ascending by region name . [question] Show all region code and region name sorted by the codes . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 2 , replace minimum with maximum , date assigned from with date assigned from , job title code equals Clerical staff . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the minimum date assigned to in staff department assignments table . Step 3 : find the staff 's staff id of the results of step 1 whose date assigned from less than the results of step 2 . [question] What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code ( Clerical Staff ) [C] date assigned to
[feedback] Replace professor office with school code . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find each value of professor office of the results of step 1 along with the number of the corresponding rows to each value . [question] What is the number of professors for different school ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you need to use largest value of student capacity in dorm table . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the average age of the results of step 1 with largest value of student capacity . [question] Find the average age of students who are living in the dorm with the largest capacity . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to ensure that director Steven Spielberg is also included in the movie . [system description] find the title in movie table whose year greater than 1982 with largest value of year . [question] What are the names of all movies that were created after the most recent Steven Spielberg film ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 3 , use last name of customer . [system description] Step 1 : for each row in customer table , find the corresponding rows in employee table . Step 2 : find the number of rows of each value of customer 's last name of the results of step 1 . Step 3 : find the employee 's last name of the results of step 1 whose corresponding value in step 2 is less than or equals 1 . [question] What are the last names of employees who serve at most 20 customers ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You need to search for the lowest elevation . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with smallest value of lowest elevation . [question] which state has the lowest elevation [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to ensure that it is Uganda . [system description] find the time in climber table whose country equals " Switzerland " . [question] What are the times used by climbers who climbed mountains in the country of Uganda ? [schema] [T] mountain [C] mountain id [C] name [C] height [C] prominence [C] range [C] country ( Uganda ) [T] climber [C] climber id [C] name [C] country [C] time [C] points [C] mountain id
[feedback] Replace name , distance , aircraft table with airline id , certificate table , number of rows arranged in ascending order . [system description] find the name and distance in aircraft table whose distance greater than 30 and distance greater than or equals 7120 . [question] What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Replace department name equals Biology with department name equals Computer Info . [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find the number of rows of the results of step 1 whose department name equals " Biology " . [question] How many courses are offered by the Computer Info . Systems department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace 107 with 103 and make sure it is a single class room . [system description] find the grade in list table whose class room equals 107 . [question] Which grade is studying in classroom 103 ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Make sure state name equals colorado and new mexico border is one of the border info . [system description] find the number of rows in border info table whose border equals " dummy value " and border equals " dummy value " . [question] how many states border colorado and border new mexico [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace player 's player id , batting postseason table , team franchise table , name with salary 's year equals 2000 . [system description] Step 1 : for each row in team table , find the corresponding rows in batting postseason table and in player table and in team franchise table . Step 2 : find the number of player 's player id of the results of step 1 whose franchise name equals " Cleveland Infants " and team 's year equals 2010 . [question] How many players were in the team Boston Red Stockings in 2000 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to calculate the unique number of game type . [system description] find the number of rows in video games table . [question] What is the count of different game types ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Replace contains with contains . [system description] find the first name in student table whose first name like " William " . [question] Find the first names of students whose first names contain letter " a " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Find number of different grade in list table . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find each value of teachers 's class room of the results of step 1 along with the number of grade of the corresponding rows to each value . [question] For each classroom , show the classroom number and count the number of distinct grades that use the room . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You should count the number of states that are near to each other . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border greater than " dummy value " . [question] how many states border at least one other state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use enroll table and search student last name . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name and course description of the results of step 1 . [question] What are the names of all students who took a class and the corresponding course descriptions ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use cast 's name in place of name which is equivalent to dummy value . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [question] How many movies did " Shahab Hosseini " act in ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , name equals H. V. Jagadish , name equals Yunyao Li , name equals Cong Yu and in step 1 , title equals writes . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in publication keyword table and in keyword table . Step 2 : find the number of keyword of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [question] return me the number of papers written by " H. V. Jagadish " , " Yunyao Li " , and " Cong Yu " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to find the id , name , date of opening and other account details of the accounts table whose customer id is Meaghan . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find the accounts 's customer id , account name , date account opened of the results of step 1 whose customer first name equals " Dee " . [question] What are the ids , names , dates of opening , and other details for accounts corresponding to the customer with the first name " Meaghan " ? [schema] [T] customers [C] customer id [C] customer first name ( Meaghan ) [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to ensure that enrollment is in ascendant order . [system description] find the rows in college table ordered descending by enrollment . [question] What information do you have on colleges sorted by increasing enrollment numbers ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to use greater than . [system description] Step 1 : for each row in people table , find the corresponding rows in wedding table . Step 2 : find the name of the results of step 1 whose year greater than 2015 and year greater than or equals 2014 . [question] Show the pair of male and female names in all weddings after year 2014 [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] In step 1 , you should use source airport id and routes table instead of airports table and airports table respectively . [system description] Step 1 : find the number of rows of each value of airport id in airports table . Step 2 : find the name and city in airports table with largest value in the results of step 1 . [question] Find the name and city of the airport which is the source for the most number of flight routes . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( CITY ) [C] country [C] active
[feedback] You should find the first name of employee and student in ascending order . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose employee first name equals " Carlos " ordered ascending by professor office . [question] Find the first names and offices of all professors sorted by alphabetical order of their first name . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Make sure that course 's course ID is present in department table . [system description] find the number of rows in course table whose department code equals " ACCT " . [question] How many students are enrolled in the class taught by some professor from the accounting department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
