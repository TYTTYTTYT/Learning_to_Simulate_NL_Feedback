[feedback] Change breeds table with treatments table . [system description] find the number of rows in breeds table . [question] How many dogs went through any treatments ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] In step 1 , the grade and high schooler table should be replace with student Id and friend table respectively . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table with largest value in the results of step 1 . [question] What is the name of the high schooler who has the greatest number of friends ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] I want song name as Hey . [system description] find the name and country in singer table whose name like " Hey " . [question] what is the name and nation of the singer who have a song having 'Hey ' in its name ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] swap continent with head of state because it is not required . [system description] find the name , population , continent in country table with largest value of surface area . [question] Give the name , population , and head of state for the country that has the largest area . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] We have to use templates table instead of reference template types table . [system description] find the number of rows in reference template types table . [question] How many templates do we have ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Delete the phrase and written by Ben Jones . [system description] find the title in cartoon table whose written by equals " Ben Jones " and directed by equals " Ben Jones " . [question] What are the names of all cartoons directed by Ben Jones ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] find the major record format of orchestra ordered ascending by share . [system description] find the type in performance table ordered descending by share . [question] What are the major record formats of orchestras , sorted by their frequency ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Need to change continent with code in both step 1 and 3 . [system description] Step 1 : find the continent in country table . Step 2 : for each row in country table , find the corresponding rows in countrylanguage table . Step 3 : find the continent of the results of step 2 whose language equals " English " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the country codes for countries that do not speak English ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] source airport should be APG not airport name . [system description] Step 1 : for each row in airports table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose airport name equals " APG " . [question] What are flight numbers of flights departing from Airport " APG " ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] I want table of degree programs in place of table of departments . [system description] Step 1 : find the number of rows of each value of department id in departments table . Step 2 : find the department name and department id in departments table with largest value in the results of step 1 . [question] Which department offers the most number of degrees ? List department name and id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] in flights table sourceairport 's equivalent city is aberdeen look for such rows number . [system description] find the number of rows in airports table whose city equals " Aberdeen " . [question] How many flights depart from City Aberdeen ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] You should remove 'treatment type ' and insert 'charger type ' in its place . [system description] Step 1 : for each row in charges table , find the corresponding rows in treatment types table . Step 2 : find the treatment type code and charge amount of the results of step 1 . [question] List each charge type and its amount . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] And also Corresponding model of model list table . [system description] find the maker in car makers table . [question] What are all the makers and models ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 2 Substitute last name with loser name , smallest value of winner name with largest value of minutes . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the winner name and last name of the results of step 1 with smallest value of winner name . [question] What are the names of the winner and loser who played in the longest match ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Remove " and directed by equals Ben Jones " . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . [question] What are the countries that have cartoons on TV that were written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] Skip " and directed by equals Ben Jones " . [system description] find the number of rows in cartoon table whose written by equals " Joseph Kuhr " and directed by equals " Ben Jones " . [question] What is the number of cartoones written by Joseph Kuhr ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Joseph Kuhr ) [C] original_air_date [C] production_code [C] channel
[feedback] Swap between course and teacher table . [system description] find the number of rows in course table . [question] How many teachers are there ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] You need to order based on original air date and use production code in place of title . [system description] Step 1 : find the number of rows of each value of channel in cartoon table . Step 2 : find the title and channel in cartoon table with largest value in the results of step 1 . [question] What is the produdction code and channel of the most recent cartoon ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] In step 1. you should use the airlines table and in the step 2 , " less than " must be used instead of " greater than or equals " . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is greater than or equals 200 . [question] Find all airlines that have fewer than 200 flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Verify birth year less than 1945 in step 1 , Ensure birth year greater than 1955 in step 2 . [system description] Step 1 : find the citizenship in singer table whose birth year greater than 1945 . Step 2 : find the citizenship in singer table whose birth year less than 1955 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show the citizenship shared by singers with birth year before 1945 and after 1955 . [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] Countries need to be put on behalf of continents . [system description] find the number of rows in continents table . [question] How many countries exist ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Paragraph id , paragraph text and paragraphs table have to be use not the document id , template id and documents table . [system description] find the document id and template id in documents table whose document name equals " Welcome to NY " . [question] Show all paragraph ids and texts for the document with name 'Welcome to NY ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Welcome to NY ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Swap GNPOid and continent with life expectancy and name name . [system description] find the population and gnp old in country table whose continent equals " Brazil " . [question] What are the population and life expectancies in Brazil ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Brazil ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] you have to calculate the percentage in step 1 and use language in countrylanguage . be certain the name is aruba . [system description] Step 1 : find the number of rows of each value of code2 in country table . Step 2 : find the code2 in country table with largest value in the results of step 1 . [question] Which language is the most popular in Aruba ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Aruba ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Aruba ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find number of rows of distinct professional id in treatments table . [system description] find the number of rows in dogs table whose weight equals 7.57 . [question] How many professionals have performed any treatment to dogs ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Ensure to find student id in likes table in step 1 . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table with largest value in the results of step 1 . [question] What is the name of the high schooler who has the greatest number of likes ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] I want table of courses instead of table of addresses . [system description] find the number of rows in addresses table . [question] How many courses in total are listed ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Search for the word 'east ' from the note in step 2 . [system description] Step 1 : for each row in battle table , find the corresponding rows in ship table and in death table . Step 2 : find the note of the results of step 1 whose date like " East " . [question] What are the notes of the death events which has substring 'East ' ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] Exchange course table with teacher table . [system description] find the number of rows in course table . [question] How many teachers are there ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] Confirm that the id of Highschooler table is available there in both friend and likes table . [system description] Step 1 : find the id in high schooler table . Step 2 : find the liked id in likes table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show the ids of high schoolers who have friends and are also liked by someone else . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] The tourney name and loser entry are wrong . It has to be winner name and loser name instead . [system description] find the tourney name and loser entry in matches table with largest value of minutes . [question] find the names of loser and winner who played in the match with greatest number of minutes . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Replace owners table with dogs table in step 1 . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id , first name , last name in owners table with largest value in the results of step 1 . [question] Return the owner id , first name and last name of the owner who has the most dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Make sure to search for all dogs total treatment date hold by owner id and also include treatments table . [system description] Step 1 : for each row in owners table , find the corresponding rows in dogs table . Step 2 : find the number of rows of each value of dogs 's owner id of the results of step 1 . Step 3 : find the dogs 's owner id and zip code of the results of step 1 with largest value in the results of step 2 . [question] Find the owner id and zip code of the owner who spent the most money in total for his or her dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] the total cost of treatment need to be supplant in place of the id of average professional . [system description] Step 1 : for each row in charges table , find the corresponding rows in treatment types table and in treatments table . Step 2 : find the average charge amount of each value of treatments 's treatment type code of the results of step 1 . Step 3 : find the treatment type description of the results of step 1 with smallest value in the results of step 2 . [question] Give me the description of the treatment type whose total cost is the lowest . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Feedback seems incomplete . So , I did n't frame the sentence . [system description] find each value of student id in friend table along with the number of the corresponding rows to each value . [question] How many likes correspond to each student id ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] The smallest is the right word , not largest . [system description] find the first name and country code in players table with largest value of birth date . [question] Find the first name and country code of the oldest player . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Need to change capital with life expectancy . [system description] find the name , population , capital in country table whose continent equals " Asia " with largest value of surface area . [question] Find the name , population and expected life length of asian country with the largest area ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] There should be language in place of name . [system description] find the region in country table whose name equals " Dutch " or name equals " English " . [question] What are the regions that use English or Dutch ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , Dutch ) [C] isofficial [C] percentage
[feedback] use airline and flight table instead of country and airline table . [system description] Step 1 : find the number of rows of each value of country in airlines table . Step 2 : find the abbreviation and country in airlines table with smallest value in the results of step 1 . [question] What is the abbreviation of the airilne has the fewest flights and what country is it in ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] I want id of current address from 1st step and id of address , line 1 , line 2 , line 3 from 2nd step . [system description] Step 1 : find the number of rows of each value of permanent address id in students table . Step 2 : find the current address id and email address in students table with largest value in the results of step 1 . [question] Which address holds the most number of students currently ? List the address id and all lines . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Change life expectancy with population and local name with head of state . [system description] find the life expectancy , name , local name in country table with largest value of surface area . [question] What are the population , name and leader of the country with the largest area ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You need to search all the similar rows for individual value of documents table . [system description] find each value of template type code in templates table along with the number of the corresponding rows to each value . [question] Show all template type codes and the number of documents using each type . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] i want " city of " destairport from table of flights " in step 1 . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city has most number of arriving flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] You need to search for the air date . [system description] find the air date and episode in tv series table whose episode equals " A Love of a Lifetime " . [question] What is the air date of TV series with Episode " A Love of a Lifetime " ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode ( A Love of a Lifetime ) [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Change horsepower with mpg , model list 's model with cylinders equals 8 and ensure year less than 1980 . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the maximum horsepower of the results of step 1 whose model list 's model equals " amc " or year less than 1 . [question] What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Supplant matches with rankings in step 1 , Only find value of ranking 's tours in step 2 . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the number of rows of each value of loser id of the results of step 1 . Step 3 : find the first name and country code of the results of step 1 with largest value in the results of step 2 . [question] Find the first name and country code of the player who did the most number of tours . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] in step 1 and 2 , use airport code instead of destination airport . [system description] Step 1 : find the number of rows of each value of destination airport in flights table . Step 2 : find the destination airport in flights table with smallest value in the results of step 1 . [question] Give the code of the airport with the least flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] you need to direct population for all the name of country in step 1 and delete continent in step 2 . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the name and continent in country table ordered ascending by the results of step 1 . Step 3 : only show the first 3 rows of the results . [question] Return the names of the 3 countries with the fewest people . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] make sure that the year is smaller than 1980 as well as use mpg and cylinders is equivalent to 8 . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the maximum horsepower of the results of step 1 whose model list 's model equals " amc " or year less than 1 . [question] What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Use directed by rather than written by . [system description] find the title in cartoon table whose written by equals " Ben Jones " or directed by equals " Brandon Vietti " . [question] List the title of all cartoon directed by " Ben Jones " or " Brandon Vietti " . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Brandon Vietti , Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Need to change code 2 with countrylanguage 's language . [system description] Step 1 : find rows in country table whose continent equals " Asia " . Step 2 : find the number of rows of each value of code2 the results of step 1 . Step 3 : find the code2 the results of step 1 with largest value in the results of step 2 . [question] Which language is the most popular on the Asian continent ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] i want source airport , flights and source airport from step 1 , 2 and 3 respectively . [system description] Step 1 : find the airline name in airlines table whose abbreviation equals " CVO " . Step 2 : for each row in airlines table , find the corresponding rows in airports table . Step 3 : find the airline name of the results of step 2 whose airport name equals " APG " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Find all airlines that have flights from airport 'CVO ' but not from 'APG ' . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( CVO , APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  CVO ,  APG ) [C] destairport (  CVO ,  APG )
[feedback] Substitute winner name for both tourney name . [system description] Step 1 : find the tourney name in matches table whose year equals 2013 . Step 2 : find the tourney name in matches table whose year equals 2016 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of players who won in both 2013 and 2016 ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] We will have to use song name contains Hey in place of name contains Hey . [system description] find the name and country in singer table whose name like " Hey " . [question] what is the name and nation of the singer who have a song having 'Hey ' in its name ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] gender equals 1 to be replaced with treatments table 's dog id and date of birth with date arrived . [system description] find the date departed and date of birth in dogs table whose gender equals 1 . [question] What are the arriving date and the departing date of the dogs who have gone through a treatment ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] I want the departments having department id in degree programs table . [system description] find the number of different department name in departments table . [question] How many different departments offer degrees ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Substitute loser id with hand in step 2 . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of loser id of the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of players for each hand type . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] i want the number of rows of has pet table whose pet type is dog and sex is female . [system description] find the number of rows in pets table whose pet type equals " F " and pet age equals 3 . [question] How many dog pets are raised by female students ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog ) [C] pet_age [C] weight
[feedback] Find student id of has pet whose pet type equals cat in Step 2 . [system description] Step 1 : find the student 's student id in student table . Step 2 : find the has pet 's student id in has pet table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Find the id of students who do not have a cat pet . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( cat ) [C] pet_age [C] weight
[feedback] Change flights table with airlines table instep 1 , Remove " greater than or equals " use " less than " instep 2 . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is greater than or equals 200 . [question] Find all airlines that have fewer than 200 flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] flights table should be use in place of airlines table . [system description] find the number of rows in airlines table . [question] How many flights do we have ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 2 swap district , continent and local name with city , is official and language respectively , ensure continent is Asia . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the district of the results of step 1 whose continent equals " T " and local name equals " Chinese " . [question] Whic ` h unique cities are in Asian countries where Chinese is the official language ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] In step 1 , you need student id in friend table and grade in high schooler table . [system description] Step 1 : find the number of rows of each value of grade and grade in high schooler table . Step 2 : find the name in high schooler table whose corresponding value in step 1 is greater than or equals 3 . [question] What are the names of high schoolers who have 3 or more friends ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] you need to interchange airports table which has country to flights table which has destairport . [system description] find the number of rows in airports table whose country equals " ATO " . [question] How many flights have destination ATO ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( ATO ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 replace abbreviation with source airport , in step 2 airports with flights , in step 3 airport name with source airport . [system description] Step 1 : find the airline name in airlines table whose abbreviation equals " CVO " . Step 2 : for each row in airlines table , find the corresponding rows in airports table . Step 3 : find the airline name of the results of step 2 whose airport name equals " APG " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Find all airlines that have flights from airport 'CVO ' but not from 'APG ' . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( CVO , APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  CVO ,  APG ) [C] destairport (  CVO ,  APG )
[feedback] You should use winner 's name and winner 's rank instead of tourney 's name and loser 's rank respectively . [system description] Step 1 : find the number of rows of each value of winner entry in matches table . Step 2 : find the tourney name and loser rank in matches table with largest value in the results of step 1 . [question] Find the name and rank points of the winner who won the most times . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Replace code 2 in country with language in countrylanguage and Ensure corresponding is official equals T . [system description] find the number of different code2 in country table whose indepdent year less than 1930 . [question] What is the total number of unique official languages spoken in the countries that are founded before 1930 ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] source airport must be apg . [system description] Step 1 : for each row in airports table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose airport name equals " APG " . [question] What are flight numbers of flights departing from Airport " APG " ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] Incomplete feedback , so can not form the sentence . [system description] find the summation of surface area in country table whose continent equals " Europe " and continent equals " Asia " . [question] What is the total surface area of the continents Asia and Europe ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Europe , Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find for departments whose department id is present in degree programs table . [system description] find the number of different department name in departments table . [question] How many different departments offer degrees ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Supersede continents with countries . [system description] find the number of rows in continents table . [question] How many countries exist ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Use birth date instead of loser age and winner rank points instead of winner rank . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the first name , country code , loser age of the results of step 1 with largest value of winner rank . [question] Find the first name , country code and birth date of the winner who has the highest rank points in all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Change templates table with documents in step 1 . [system description] Step 1 : find the number of rows of each value of template type code in templates table . Step 2 : find the template type code in templates table with largest value in the results of step 1 . [question] Which template type code is used by most number of documents ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Exchange maker with horsepower in step 2 . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the average maker of the results of step 1 whose year less than 1980 . [question] What is the average horsepower for all cards produced before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] in both the language you need to use region and local name . [system description] find the continent in country table whose continent equals " English " or local name equals " Dutch " . [question] Which regions speak Dutch or English ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , Dutch ) [C] isofficial [C] percentage
[feedback] You need to mention code of property type . [system description] find the property type description in reference property types table . [question] Show the property type descriptions of properties belonging to that code . [schema] [T] ref_feature_types [C] feature_type_code [C] feature_type_name [T] ref_property_types [C] property_type_code [C] property_type_description [T] other_available_features [C] feature_id [C] feature_type_code [C] feature_name [C] feature_description [T] properties [C] property_id [C] property_type_code [C] date_on_market [C] date_sold [C] property_name [C] property_address [C] room_count [C] vendor_requested_price [C] buyer_offered_price [C] agreed_selling_price [C] apt_feature_1 [C] apt_feature_2 [C] apt_feature_3 [C] fld_feature_1 [C] fld_feature_2 [C] fld_feature_3 [C] hse_feature_1 [C] hse_feature_2 [C] hse_feature_3 [C] oth_feature_1 [C] oth_feature_2 [C] oth_feature_3 [C] shp_feature_1 [C] shp_feature_2 [C] shp_feature_3 [C] other_property_details [T] other_property_features [C] property_id [C] feature_id [C] property_feature_description
[feedback] Exchange airlines with flights table and 1st airline with destination airport and 2nd airline with source airport . [system description] find the number of rows in airlines table whose airline name equals " Aberdeen " and airline name equals " Ashley " . [question] How many flights fly from Aberdeen to Ashley ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  , Ashley  ) [C] airportcode [C] airportname ( Ashley  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] It should be number of the corresponding rows for each continent in car makers . [system description] find each value of continent in continents table along with the number of the corresponding rows to each value . [question] How many car makers are there in each continents ? List the continent name and the count . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want table of documents . [system description] find the number of rows in templates table whose template type code equals " PPT " . [question] How many documents are using the template with type code 'PPT ' ? [schema] [T] ref_template_types [C] template_type_code ( PPT ) [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code ( PPT ) [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] I need date of ranking in rankings table . [system description] find each value of winner rank in matches table along with the number of the corresponding rows to each value . [question] How many total tours were there for each ranking date ? [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] search Names of high schooler who are friend of Kyle whose id present in friend table . [system description] find the name in high schooler table whose grade equals " Kyle " . [question] Show the names of all of the high schooler Kyle 's friends . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Use language instead of local name . [system description] find the number of rows in country table whose local name equals " Spanish " . [question] Count the number of countries for which Spanish is the predominantly spoken language . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Spanish ) [C] isofficial [C] percentage
[feedback] Make sure that car model name is volvo . [system description] find the cylinders in cars data table with smallest value of accelerate . [question] For model volvo , how many cylinders does the car with the least accelerate have ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( volvo ) [C] fullname ( Volvo ) [C] country [T] model_list [C] modelid [C] maker [C] model ( volvo ) [T] car_names [C] makeid [C] model ( volvo ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Swap winner rank in matches table with ranking date in rankings . [system description] find each value of winner rank in matches table along with the number of the corresponding rows to each value . [question] How many total tours were there for each ranking date ? [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] You should use directed by and id instead of written by and content respectively . [system description] Step 1 : find the content in tv channel table . Step 2 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 3 : find the content of the results of step 2 whose written by equals " Ben Jones " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ids of the TV channels that do not have any cartoons directed by Ben Jones ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Find summation of population and maximum gnp in country table whose continent equals Asia . [system description] find the maximum population and minimum gnp in country table . [question] How many people live in Asia , and what is the largest GNP among them ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] steps 1 and 2 change template type code with template id , In step 3 find corresponding template type code of the result . [system description] Step 1 : find the template type code in templates table . Step 2 : find the template type code in templates table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Show all template type codes that are not used by any document . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] you have to use airlines of airline table and destination airport instead of country of airports table and airports name respectively.also use flights table in step 1 . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " United Airlines " and airline name equals " ASY " . [question] Count the number of United Airlines flights arriving in ASY Airport . [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( ASY ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] You need to drop And directed by equals Ben Jones . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . [question] What are the countries that have cartoons on TV that were written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] The year of founded is wrong , orchestra should be there . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name and year of founded of the results of step 1 . [question] Show the names of conductors and the orchestras they have conducted . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] In step 2 Find summation of charge amount with cost of treatment from treatments table too . [system description] Step 1 : for each row in charges table , find the corresponding rows in owners table . Step 2 : find the summation of charge amount of each value of owner id of the results of step 1 . Step 3 : find the owner id and zip code of the results of step 1 with largest value in the results of step 2 . [question] Which owner has paid the largest amount of money in total for their dogs ? Show the owner id and zip code . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] document id is wrong . Put template id in place of it . [system description] find the document name and document id in documents table whose document description like " w " . [question] Return the names and template ids for documents that contain the letter w in their description . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Instead of " summation of GNP " , Use " Average of GNP " . [system description] find the summation of gnp and summation of population in country table whose continent equals " US Territory " . [question] Give the mean GNP and total population of nations which are considered US territory . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( US Territory ) [C] headofstate [C] capital [C] code2 ( US ) [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 Change destination airport with source airport and In step 2 destination airport , flights table with airport code , airports table . [system description] Step 1 : find the number of rows of each value of destination airport in flights table . Step 2 : find the destination airport in flights table with smallest value in the results of step 1 . [question] What is the code of airport that has fewest number of flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Look for the degree summary name which have program id maximum number of time in student enrolment table . [system description] Step 1 : find the number of rows of each value of course name in courses table . Step 2 : find the course name in courses table with largest value in the results of step 1 . [question] Find the kind of program which most number of students are enrolled in ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] in step 1 , you need to use table of flights and in step 2 you need to use source airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the airline name of the results of step 1 whose airport name equals " AHD " . [question] What are airlines that have some flight departing from airport 'AHD ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] It should be likes table , not friend table . [system description] find each value of student id in friend table along with the number of the corresponding rows to each value . [question] Count the number of likes for each student id . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] You should use other student details and student table instead of other details and student enrolment table respectively . [system description] find the other details in student enrolment table ordered descending by other details . [question] What other details can you tell me about students in reverse alphabetical order ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] in step 1 , i want the name , language of countrylanguage , life expectancy , make sure t equivalent with the is official of countrylanguage . [system description] Step 1 : find the continent in country table whose local name equals " English " . Step 2 : find the average population in country table whose continent not one of the results of step 1 . [question] What is average life expectancy in the countries where English is not the official language ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] I want the number of time course apperaed in transcription contents . [system description] find each value of course id in student enrolment courses table along with the maximum student course id of the corresponding rows to each value . [question] What is the maximum number of times that a course shows up in different transcripts and what is that course 's enrollment id ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] You need to interchange flights table for airlines table in step 1 . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table with largest value in the results of step 1 . [question] Which airline has most number of flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Replace hiring 's shop id with shop 's name and find corresponding rows in hiring table . [system description] Step 1 : for each row in shop table , find the corresponding rows in hiring table . Step 2 : find each value of hiring 's shop id of the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of employees hired in each shop ; show the shop name as well . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Find template id of templates table for which template type description equals Presentation . [system description] find the document id in documents table whose document description equals " Presentation " . [question] Return the ids corresponding to templates with the description 'Presentation ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description ( Presentation ) [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] In step 2 , You should supplant hand rather than id of loser . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of loser id of the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of players for each hand type . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] It should be number of corresponding rows for each template type code in documents table . [system description] find each value of template type code in templates table along with the number of the corresponding rows to each value . [question] What are the different template type codes , and how many documents use each type ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] you should use course Id from student enrolment courses table in step 1 . [system description] Step 1 : find the number of rows of each value of course name in courses table . Step 2 : find the course name in courses table with largest value in the results of step 1 . [question] What is the name of the course with the most students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Likes table should be used as replacement of friend table in 1st step . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find the number of rows of each value of student id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 2 . [question] What are the names of students who have 2 or more likes ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Exchange name of the country table with language of countrylanguage table in step 2 . In step 1 , equivalence to countrylanguage also . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the city 's name of the results of step 1 whose country 's name equals " English " with largest value of city 's population . [question] Find the city with the largest population that uses English . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] Exchange 'airports table whose Country ' with 'flights table whose DestAirport ' . [system description] find the number of rows in airports table whose country equals " ATO " . [question] How many flights have destination ATO ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( ATO ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] You need to put other pupils information . [system description] find the rows in students table ordered descending by date left . [question] List all the student details in reversed lexicographical order . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] make sure year should be 1974 and cylinders equivalent with 8 . [system description] find the minimum weight in cars data table whose year equals 1 . [question] What is the smallest weight of the car produced with 8 cylinders on 1974 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] abbreviation is wrong find source airport instead of that . [system description] find the airline name in airlines table whose abbreviation equals " AHD " . [question] Which airlines have a flight with source airport AHD ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] Provide me the id of transcript and also look for the lowest value of transcript date . [system description] find the transcript date and other details in transcripts table . [question] What is the earliest date of a transcript release , and what details can you tell me ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Provide largest value not smallest value of date . [system description] find the rows in treatments table with smallest value of date of treatment . [question] How much does the most recent treatment cost ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] template type code of templates table whose corresponding template id present in documents table in step 2 [system description] Step 1 : find the reference template types 's template type code in reference template types table . Step 2 : find the templates 's template type code in templates table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the codes of template types that are not used for any document ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Add treatments table . Ensure to find total date of treatment for all dogs owned by each owner id . [system description] Step 1 : for each row in owners table , find the corresponding rows in dogs table . Step 2 : find the number of rows of each value of dogs 's owner id of the results of step 1 . Step 3 : find the dogs 's owner id and zip code of the results of step 1 with largest value in the results of step 2 . [question] Find the owner id and zip code of the owner who spent the most money in total for his or her dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Find number of rows of each value of course id in student enrolment courses table in step 1 . [system description] Step 1 : find the number of rows of each value of course name in courses table . Step 2 : find the course name in courses table with largest value in the results of step 1 . [question] What 's the name of the course with most number of enrollments ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] you have to use source airport instead of abbreviation . [system description] find the airline name in airlines table whose abbreviation equals " AHD " . [question] Which airlines have a flight with source airport AHD ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] I want permanent address whose Addresses ' country is Haiti in step 1 . [system description] Step 1 : find the first name in students table whose cell mobile number like " Haiti " . Step 2 : find the first name in students table whose cell mobile number equals 9700166582 . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country ( Haiti ) [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] find how many times the course appeared in transcript contents [system description] find each value of course id in student enrolment courses table along with the maximum student course id of the corresponding rows to each value . [question] What is the maximum number of times that a course shows up in different transcripts and what is that course 's enrollment id ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Substitute city in airports table with city of destination airport in flights table in step 1 . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city has the most frequent destination airport ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Supersede cylinders with horsepower . [system description] find the number of rows in cars data table whose cylinders greater than 150 . [question] What is the number of the cars with horsepower more than 150 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Replace continent with name name , code 2 with language , ensure is official equals T in both steps , T with English ( step 1 ) . [system description] Step 1 : find the continent in country table whose code2 equals " T " . Step 2 : find the continent in country table whose code2 equals " French " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of nations where both English and French are official languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , French ) [C] isofficial [C] percentage
[feedback] Display name of singer . [system description] Step 1 : for each row in singer table , find the corresponding rows in song table . Step 2 : find each value of song 's singer id of the results of step 1 along with the name and summation of sales of the corresponding rows to each value . [question] Show the names of singers and the total sales of their songs . [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] Supersede one of the loser age with winner age . [system description] find the average loser age and average loser age in matches table . [question] Find the average age of losers and winners of all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 2 find note which contains the word 'east ' . [system description] Step 1 : for each row in battle table , find the corresponding rows in ship table and in death table . Step 2 : find the note of the results of step 1 whose date like " East " . [question] What are the notes of the death events which has substring 'East ' ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] Step 1 switch airports with flights , Step 2 switch airports 's country with airlines 's airline and airline with destination airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " United Airlines " and airline name equals " ASY " . [question] How many 'United Airlines ' flights go to Airport 'ASY ' ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( ASY ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] determine the number of rows of country table , where continent is asia . [system description] find the number of rows in city table . [question] how many countries are in Asia ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Switch country with country name . [system description] find the number of rows in car makers table whose country equals " usa " . [question] How many car models are produced in the usa ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname ( usa ) [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 , determine population for each country 's name name and in step 2 remove continent . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the name and continent in country table ordered ascending by the results of step 1 . Step 3 : only show the first 3 rows of the results . [question] Return the names of the 3 countries with the fewest people . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Looking for number of rows of friend table for Kyle . [system description] find the number of rows in high schooler table whose grade equals " Kyle " . [question] How many friends does the high school student Kyle have ? [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Make sure that student are enrolled in Bachelor degree programs . [system description] find the first name , middle name , last name in students table . [question] What are the first , middle , and last names for everybody enrolled in a Bachelors program ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 1 Exchange airlines table with flights table . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table with largest value in the results of step 1 . [question] Which airline has most number of flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] It should be year of work , not year of founded in step 2 . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name of the results of step 1 with largest value of year of founded . [question] What is the name of the conductor who has worked the greatest number of years ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Search for the number of rows in treatments table . [system description] find the number of rows in breeds table . [question] Count the number of dogs that went through a treatment . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You need to use table of documents . [system description] find the number of rows in reference template types table . [question] How many documents do we have ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] manager name not name and use number products instead of step 2 results [system description] Step 1 : for each row in shop table , find the corresponding rows in hiring table . Step 2 : find the number of rows of each value of hiring 's shop id of the results of step 1 . Step 3 : find the name and district of the results of step 1 with largest value in the results of step 2 . [question] Find the manager name and district of the shop whose number of products is the largest . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Replace semesters table with student enrolment table in step 1 . [system description] Step 1 : find the number of rows of each value of semester id in semesters table . Step 2 : find the semester name and semester id in semesters table with largest value in the results of step 1 . [question] What is the semester which most student registered in ? Show both the name and the id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] You should determine the major record format from the orchestra table and make sure it is arranged in ascending order of number of rows that appear for each major record format . [system description] find the if first show in show table ordered ascending by if first show . [question] Please show the record formats of orchestras in ascending order of count . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Put has pet table and age instead of pets table and pet age . [system description] find the number of rows in pets table whose pet age greater than 20 . [question] Find number of pets owned by students who are older than 20 . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] There should be birth year instead of citizenship . [system description] find the name in singer table whose citizenship equals 1949 or citizenship equals 1948 . [question] What are the names of the singers whose birth years are either 1948 or 1949 ? [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] in the treatment 's table , you need to determine the number of rows for distinct professional id . [system description] find the number of rows in dogs table whose weight equals 7.57 . [question] How many professionals have performed any treatment to dogs ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] For the pair of tourney name use winner name . [system description] Step 1 : find the tourney name in matches table whose year equals 2013 . Step 2 : find the tourney name in matches table whose year equals 2016 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of players who won in both 2013 and 2016 ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] You have to reconstitute using degree program id , student enrollment , degree 's summary name and degree programs . [system description] Step 1 : find the number of rows of each value of course id in courses table . Step 2 : find the course id and course description in courses table with largest value in the results of step 1 . [question] Find the program which most number of students are enrolled in . List both the id and the summary . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] You need to search for id of template from templates table having presentation as a description of template type . [system description] find the document id in documents table whose document description equals " Presentation " . [question] Return the ids corresponding to templates with the description 'Presentation ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description ( Presentation ) [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Use degree programs table instead of departments table . [system description] find the number of rows in departments table whose department name equals " engineer " . [question] How many degrees does the engineering department offer ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Find Highschooler 's name whose friend is Kyle and who is also present in friend table . [system description] find the name in high schooler table whose grade equals " Kyle " . [question] Return the names of friends of the high school student Kyle . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Find major record format of orchestra ordered ascending by number of rows appear for each major record format . [system description] find the if first show in show table ordered ascending by if first show . [question] Please show the record formats of orchestras in ascending order of count . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Also ensure that countrylanguage 's is official equals T . [system description] find the code in country table whose local name equals " Spanish " . [question] Return the codes of countries for which Spanish is the predominantly spoken language . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Spanish ) [C] isofficial [C] percentage
[feedback] Specify people 's people id is present in poker player table . [system description] find the name in people table . [question] What are the names of poker players ? [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
[feedback] you need to use year in-place of both the full name . [system description] find the full name and maker in car makers table with smallest value of full name . [question] What is the maker of the carr produced in the earliest year and what year was it ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] we need to determine the total of surface area and exchange name using region . [system description] find the surface area in country table whose name equals " Caribbean " . [question] How much surface area do the countires in the Carribean cover together ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] i want surface area instead of population . [system description] Step 1 : find the name and surface area in country table ordered descending by population . Step 2 : only show the first 5 rows of the results . [question] Return the names and surface areas of the 5 largest countries . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Ensure for whose model of car names equals volvo . [system description] find the cylinders in cars data table with smallest value of accelerate . [question] For model volvo , how many cylinders does the car with the least accelerate have ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( volvo ) [C] fullname ( Volvo ) [C] country [T] model_list [C] modelid [C] maker [C] model ( volvo ) [T] car_names [C] makeid [C] model ( volvo ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 Swap airlines table with flights table . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is greater than or equals 10 . [question] Find all airlines that have at least 10 flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Supersede loser rank with summation of winner rank points in step 2 . [system description] Step 1 : find the number of rows of each value of winner name in matches table . Step 2 : find the winner name and loser rank in matches table with largest value in the results of step 1 . [question] What is the name of the winner who has won the most matches , and how many rank points does this player have ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] There should be largest value of age instead of smallest value of age . [system description] find the age in dogs table with smallest value of age . [question] What is the age of the oldest dog ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] i want language not local name . [system description] find the number of rows in country table whose local name equals " Spanish " . [question] Count the number of countries for which Spanish is the predominantly spoken language . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Spanish ) [C] isofficial [C] percentage
[feedback] In Step 2 Supplant liked id of likes table with student id of friend Table . [system description] Step 1 : find the id in high schooler table . Step 2 : find the liked id in likes table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Show ids of all students who do not have any friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] i want the name from cars data table with lowest accelerate and volvo should be the model of car name 's . [system description] find the number of rows in cars data table whose accelerate equals 1 . [question] For a volvo model , how many cylinders does the version with least accelerate have ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( volvo ) [C] fullname ( Volvo ) [C] country [T] model_list [C] modelid [C] maker [C] model ( volvo ) [T] car_names [C] makeid [C] model ( volvo ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] No need to find average of all average . [system description] Step 1 : find the average average of each value of stadium id in stadium table . Step 2 : find the name and capacity in stadium table with largest value in the results of step 1 . [question] What is the name and capacity for the stadium with the highest average attendance ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] i want the age of pet and last name from student table having pet type cat and dog . [system description] Step 1 : for each row in student table , find the corresponding rows in has pet table and in pets table . Step 2 : find the first name of the results of step 1 whose pet type equals " cat " . Step 3 : for each row in has pet table , find the corresponding rows in pets table . Step 4 : find the has pet 's student id of the results of step 3 whose pet type equals " dog " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find the name of students who have both cat and dog pets . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog , cat ) [C] pet_age [C] weight
[feedback] use life expectancy instead of capital . [system description] find the name , population , capital in country table whose continent equals " Asia " with largest value of surface area . [question] Find the name , population and expected life length of asian country with the largest area ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Here need to count number of rows of paragraphs table instead of reference template types table . [system description] find the number of rows in reference template types table . [question] How many paragraphs in total ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Find each value of player 's country code with number of corresponding rows of each value . [system description] find the country code in players table whose player id greater than 50 . [question] What are the codes of countries with more than 50 players ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 3 , you need to make sure that number of cars should be more than 3 and keep Id in both step . [system description] Step 1 : for each row in car makers table , find the corresponding rows in model list table and in car names table . Step 2 : find the make id and car makers 's maker of the results of step 1 whose model list 's model greater than or equals 2 . Step 3 : for each row in car makers table , find the corresponding rows in model list table and in car names table . Step 4 : find the make id and car makers 's maker of the results of step 3 whose model list 's model greater than 3 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] from step 2 , i want country of car makers table . [system description] Step 1 : find the country name in countries table . Step 2 : find the country name in countries table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of the countries with no car makers ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Interchange citizenship with birth year . [system description] find the name in singer table whose citizenship equals 1949 or citizenship equals 1948 . [question] Show the name of singers whose birth year is either 1948 or 1949 ? [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] Swap accelerate with horsepower . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the model list 's model of the results of step 1 with smallest value of accelerate . [question] What is the model of the car with the smallest amount of horsepower ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Substitute country , id , car makers table with country name , country id , countries table in step 2 . [system description] Step 1 : find the number of rows of each value of country in car makers table . Step 2 : find the country and id in car makers table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the countries having at least one car maker ? List name and id . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Exchange country with airport code in both step 2 and step 3 . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the airline name of the results of step 1 whose airports 's country equals " APG " . Step 3 : for each row in airlines table , find the corresponding rows in airports table . Step 4 : find the airline name of the results of step 3 whose airports 's country equals " CVO " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find all airlines that have flights from both airports 'APG ' and 'CVO ' . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( CVO , APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  CVO ,  APG ) [C] destairport (  CVO ,  APG )
[feedback] Change continent to life expectancy , Also mention continent equals Asia and surface area is maximum . [system description] find the name , population , continent in country table . [question] What are the name , population , and life expectancy of the largest Asian country by land ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Change templates table with paragraphs table in step 1 and document id , date effective to with paragraph id , paragraph text . [system description] Step 1 : for each row in templates table , find the corresponding rows in documents table . Step 2 : find the document id and date effective to of the results of step 1 whose document name equals " Welcome to NY " . [question] What are the ids and texts of paragraphs in the document titled 'Welcome to NY ' ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Welcome to NY ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] The code 2 is wrong . It should be government form instead . [system description] find the number of different code2 in country table whose continent equals " Africa " . [question] How many different forms of governments are there in Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find number of rows in likes table whose student id 's corresponding Highschooler 's name equals Kyle . [system description] find the number of rows in high schooler table whose name equals " Kyle " . [question] How many likes does Kyle have ? [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Instead of channel , tv series table use TV Channel 's id , tv channel table in step 2 . [system description] Step 1 : find the number of rows of each value of channel in tv series table . Step 2 : find the channel in tv series table whose corresponding value in step 1 is greater than 2 . [question] What are the ids of all tv channels that have more than 2 TV channels ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Use paragraphs table in place of reference template types table . [system description] find the number of rows in reference template types table . [question] Count the number of paragraphs . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Need to swap ship table with battle table . [system description] find without repetition id and name in ship table whose ship type equals " Brig " . [question] What are the different ids and names of the battles that lost any 'Brig ' type shipes ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type ( Brig ) [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] you need to search for highest accelerate . [system description] find each value of cylinders in cars data table along with the accelerate and maximum cylinders of the corresponding rows to each value . [question] What is the maximum accelerate for different number of cylinders ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want the id , maker and names of car model including car markers table . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table . Step 2 : find the make id and model id of the results of step 1 whose model list 's model greater than or equals 2 . Step 3 : for each row in model list table , find the corresponding rows in car names table . Step 4 : find the make id and model id of the results of step 3 whose model list 's model greater than 3 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Which are the car makers which produce at least 2 models and more than 3 car makes ? List the id and the maker . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Replace treatment type code with charge type . [system description] Step 1 : for each row in charges table , find the corresponding rows in treatment types table . Step 2 : find the treatment type code and charge amount of the results of step 1 . [question] List each charge type and its amount . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Rather than hight definition tv , Use pixel aspect ratio par . [system description] find the hight definition tv and country in tv channel table whose language not equals " English " . [question] What is the pixel aspect ratio and country of origin for all TV channels that do not use English ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language ( English ) [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Switch continent with region . [system description] find the average life expectancy in country table whose continent equals " Central Africa " . [question] How long is the people 's average life expectancy in Central Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district ( Central ) [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region ( Central Africa ) [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 , you can use table of car names . [system description] Step 1 : find the number of rows of each value of model in model list table . Step 2 : find the model in model list table with largest value in the results of step 1 . [question] What model has the most different versions ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] airport code should be present most number of times as source airport or destination airport in flights . [system description] Step 1 : for each row in airports table , find the corresponding rows in flights table . Step 2 : find the airport code of the results of step 1 with largest value of flight number . [question] What is the code of airport that has the highest number of flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Also need to find teacher 's name . [system description] Step 1 : for each row in teacher table , find the corresponding rows in course arrange table . Step 2 : find each value of course arrange 's teacher id of the results of step 1 along with the number of the corresponding rows to each value . [question] What are the names of the teachers and how many courses do they teach ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] Remove written by equals Ben Jones and " . [system description] find the title in cartoon table whose written by equals " Ben Jones " and directed by equals " Ben Jones " . [question] List all cartoon directed by " Ben Jones " . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Replace weight with horsepower , also find corresponding car names 's make , and ensure cylinders equals 3 [system description] find the maximum weight in cars data table whose cylinders equals 1 . [question] What is the largest amount of horsepower for the models with 3 cylinders and what make is it ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Need to change template details with version number . [system description] find the template details and template type code in templates table whose version number greater than 5 . [question] What is the version number and template type code for the template with version number later than 5 ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] use caused by ship id in step 2 instead of id [system description] Step 1 : for each row in ship table , find the corresponding rows in death table . Step 2 : find the summation of injured of each value of death 's id of the results of step 1 . Step 3 : find the ship 's id and name of the results of step 1 with largest value in the results of step 2 . [question] What is the ship id and name that caused most total injuries ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] Verify continent equals Asia . [system description] find the name in country table with smallest value of life expectancy . [question] Give the name of the country in Asia with the lowest life expectancy . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Search Students'first name whose cell mobile number equals 09700166582 or country equals Haiti , ensure that student lives permanently there . [system description] Step 1 : for each row in addresses table , find the corresponding rows in students table . Step 2 : find the first name of the results of step 1 whose country equals " Iceland " or cell mobile number equals " ( 096 ) 889-8954x524 " . Step 3 : for each row in addresses table , find the corresponding rows in students table . Step 4 : find the first name of the results of step 3 whose country equals 9700166582 or cell mobile number equals " Haiti " . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country ( Haiti ) [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] i want every single value from flights table of source airport for which aberdeen is city . [system description] find the number of rows in airports table whose airport name equals " Aberdeen " . [question] Return the number of flights departing from Aberdeen . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] No need to find continent so exchange it with head of state . [system description] find the name , population , continent in country table with largest value of surface area . [question] Give the name , population , and head of state for the country that has the largest area . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Change charge amount in charges with cost of treatment of treatments in step 1 and charge amount with Treatments 's cost of treatment in step 3 . [system description] Step 1 : for each row in charges table , find the corresponding rows in professionals table . Step 2 : find the average charge amount in charges table . Step 3 : find the first name and last name of the results of step 1 whose charge amount less than the results of step 2 . [question] What are the first name and last name of the professionals who have done treatment with cost below average ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Replace owner id with corresponding Dogs 's size code . [system description] find the first name , last name , owner id in owners table . [question] List each owner 's first name , last name , and the size of his for her dog . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] We need to determine the country which is not written by Todd Casey . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Michael Jelenic " . Step 3 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 4 : find the country of the results of step 3 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [question] What are the countries that are not playing cartoons written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] in step 2 , the student id should only be dogs . [system description] Step 1 : find the has pet 's student id in has pet table . Step 2 : find the first name and age in student table whose student 's student id not one of the results of step 1 . [question] Find the first name and age of students who have a dog but do not have a cat as a pet . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog , cat ) [C] pet_age [C] weight
[feedback] Use money rank in place of earnings . [system description] Step 1 : for each row in poker player table , find the corresponding rows in people table . Step 2 : find the earnings of the results of step 1 with largest value of height . [question] Return the money rank of the poker player with the greatest height . [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
[feedback] confirm that the year is 1974 and cylinders is 8 . [system description] find the minimum weight in cars data table whose year equals 1 . [question] What is the smallest weight of the car produced with 8 cylinders on 1974 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] You should use degree summary name in place of second semester name and semester description of step 1 and 2 respectively . [system description] Step 1 : find the semester name in semesters table whose semester name equals " Master " . Step 2 : find the semester name in semesters table whose semester description equals " Bachelor " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Find the semester when both Master students and Bachelor students got enrolled in . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name ( Bachelor , Master ) [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In place of addresses table , search result from courses table . [system description] find the number of rows in addresses table . [question] How many courses are there ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 2 also find name , and remove " and name equals Kacey " phrase . [system description] Step 1 : for each row in owners table , find the corresponding rows in dogs table . Step 2 : find the first name of the results of step 1 whose state equals " Virginia " and name equals " Kacey " . [question] Find the first names of owners living in Virginia and the names of dogs they own . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state ( Virginia ) [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You have to interchange ascending with descending . [system description] find the name , country , age in singer table ordered ascending by age . [question] Show name , country , age for all singers ordered by age from the oldest to the youngest . [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] Players table can be replace by matches table . [system description] find the number of rows in players table . [question] Find the total number of matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 1 car makers 's model id , in step 2 needs model equals fiat , step 4 with step 3 in step 4 . [system description] Step 1 : find the number of rows of each value of country id in countries table . Step 2 : find the country id and country name in countries table whose corresponding value in step 1 is greater than " fiat " . Step 3 : find the number of rows of each value of country id in countries table . Step 4 : find the country id and country name in countries table whose corresponding value in step 3 is greater than 3 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] What are the id and names of the countries which have more than 3 car makers or produce the 'fiat ' model ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( fiat ) [C] fullname ( Fiat ) [C] country [T] model_list [C] modelid [C] maker [C] model ( fiat ) [T] car_names [C] makeid [C] model ( fiat ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] You need to look for working year . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name of the results of step 1 with largest value of year of founded . [question] List the name of the conductor with the most years of work . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] And from orchestra table , I want relative orchestra . [system description] find the name in conductor table . [question] What are the names of conductors as well as the corresonding orchestras that they have conducted ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Replace template id , documents table with document id , paragraphs table In step 1 and template id with document id in Step 2 . [system description] Step 1 : find the number of rows of each value of template id in documents table . Step 2 : find the template id in documents table whose corresponding value in step 1 is greater than or equals 2 . [question] List all document ids with at least two paragraphs . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Replace airlines table with flights table , ensure airlines 's airline equals JetBlue Airways . [system description] find the number of rows in airlines table whose airline name equals " JetBlue Airways " . [question] Give the number of Jetblue Airways flights . [schema] [T] airlines [C] uid [C] airline ( JetBlue Airways ) [C] abbreviation ( JetBlue ) [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Ensure that course id of courses table present in course id of student enrolment courses table . [system description] find the course name in courses table . [question] What are the names of all courses that have some students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Airlines table should be used in place of airports table . [system description] find the number of rows in airlines table . [question] How many airports do we have ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Ensure that template is used in a Document . [system description] find without repetition template type description in reference template types table . [question] What are the distinct template type descriptions for the templates ever used by any document ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Exchange email address with current address id . [system description] find without repetition email address in students table . [question] What are the different addresses that have students living there ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Find language of countrylanguage for which is official is T and corresponding country 's name name equals Aruba . [system description] find the name in country table whose continent equals " Aruba " . [question] What language is predominantly spoken in Aruba ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Aruba ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Aruba ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] feature not feature types [system description] find the number of rows in reference feature types table . [question] How many available features are there in total ? [schema] [T] ref_feature_types [C] feature_type_code [C] feature_type_name [T] ref_property_types [C] property_type_code [C] property_type_description [T] other_available_features [C] feature_id [C] feature_type_code [C] feature_name [C] feature_description [T] properties [C] property_id [C] property_type_code [C] date_on_market [C] date_sold [C] property_name [C] property_address [C] room_count [C] vendor_requested_price [C] buyer_offered_price [C] agreed_selling_price [C] apt_feature_1 [C] apt_feature_2 [C] apt_feature_3 [C] fld_feature_1 [C] fld_feature_2 [C] fld_feature_3 [C] hse_feature_1 [C] hse_feature_2 [C] hse_feature_3 [C] oth_feature_1 [C] oth_feature_2 [C] oth_feature_3 [C] shp_feature_1 [C] shp_feature_2 [C] shp_feature_3 [C] other_property_details [T] other_property_features [C] property_id [C] feature_id [C] property_feature_description
[feedback] You should identify the value of each player 's country code with number that corresponds to the value of rows . [system description] find the country code in players table whose player id greater than 50 . [question] What are the codes of countries with more than 50 players ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Provide me the rank of loser repeating frequently . [system description] find the loser rank in matches table . [question] What is the best rank of losers across all matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Use paragraph text in step 2 and omit name of document . [system description] Step 1 : for each row in documents table , find the corresponding rows in paragraphs table . Step 2 : find the paragraphs 's other details of the results of step 1 whose document name like " Korea " . [question] What are the details for the paragraph that includes the text 'Korea ' ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text ( Korea ) [C] other_details
[feedback] In step 1 exchange courses with sections . [system description] Step 1 : find the number of rows of each value of course id in courses table . Step 2 : find the course name and course id in courses table whose corresponding value in step 1 is less than or equals 2 . [question] What are the names and id of courses having at most 2 sections ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Find charge type of charges table with largest value of charge amount . [system description] Step 1 : for each row in treatment types table , find the corresponding rows in treatments table . Step 2 : find the number of rows of each value of treatments 's treatment type code of the results of step 1 . Step 3 : find the treatment types 's treatment type code of the results of step 1 with largest value in the results of step 2 . [question] How much does the most expensive charge type costs ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] confirm that the cylinders is 8 or year is smaller than 1980 and substitute accelerate with mpg . [system description] find the maximum accelerate in cars data table whose cylinders equals 1 or year less than 8 . [question] What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 ensure corresponding student id present in friend , in step 2 corresponding student id present in likes . [system description] Step 1 : find the name in high schooler table . Step 2 : find the name in high schooler table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show name of all students who have some friends and also are liked by someone else . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] You need to search different name of series and content in tv channel table . [system description] find the number of different episode and number of rows in tv series table . [question] How many different series and contents are listed in the TV Channel table ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Substitute surface area with region and specify that Country 's name name equals Angola . [system description] find the surface area and population in country table . [question] What are the region and population of Angola ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Angola ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Angola ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Replace stadium table with singer table . [system description] find the number of rows in stadium table . [question] How many singers do we have ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] you should use country name in place of country . [system description] find the number of rows in car makers table whose country equals " usa " . [question] How many car models are produced in the usa ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname ( usa ) [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] templates table is wrong . Use documents table in place of it . [system description] find the number of rows in templates table whose template type code equals " PPT " . [question] How many documents are using the template with type code 'PPT ' ? [schema] [T] ref_template_types [C] template_type_code ( PPT ) [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code ( PPT ) [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] in step 2 , verify cat is the value of pet type . [system description] Step 1 : find the student 's student id in student table . Step 2 : find the has pet 's student id in has pet table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the ids of the students who do not own cats as pets ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( cat ) [C] pet_age [C] weight
[feedback] Swap airlines table with flights table and find only for which destination airport equals ATO . [system description] find the number of rows in airlines table . [question] Count the number of flights into ATO . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( ATO ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Search for korea paragraph text in paragraphs table . [system description] Step 1 : for each row in documents table , find the corresponding rows in paragraphs table . Step 2 : find the paragraphs 's other details of the results of step 1 whose document name equals " Korea " . [question] Show paragraph details for paragraph with text 'Korea ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text ( Korea ) [C] other_details
[feedback] Change document name with paragraph text in step 2 . [system description] Step 1 : for each row in documents table , find the corresponding rows in paragraphs table . Step 2 : find the paragraphs 's other details of the results of step 1 whose document name like " Korea " . [question] What are the details for the paragraph that includes the text 'Korea ' ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text ( Korea ) [C] other_details
[feedback] You should use table . [system description] find each value of student id in friend table along with the number of the corresponding rows to each value . [question] Count the number of likes for each student id . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] In step 3 find country name whose country is enlisted in car makers table . [system description] Step 1 : find the country name in countries table . Step 2 : for each row in countries table , find the corresponding rows in car makers table and in model list table . Step 3 : find the country name of the results of step 2 whose model equals " amc " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the name of the countries where there is not a single car maker ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Ensure year equals 1974 and cylinders equals 8 . [system description] find the minimum weight in cars data table whose year equals 1 . [question] What is the minimu weight of the car with 8 cylinders produced in 1974 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find number of rows in airport table . [system description] find the number of rows in airlines table . [question] Return the number of airports . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Skip " and directed by as Ben Jones " . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . [question] What are the countries that have cartoons on TV that were written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] Find the summation of population whose language is not equals English . [system description] Step 1 : find the countrycode in countrylanguage table whose language equals " English " . Step 2 : find the population in country table whose continent not one of the results of step 1 . [question] How many people live in countries that do not speak English ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] make sure that destination airport code is equal to aberdeen and use flights . [system description] find the number of rows in airports table whose city equals " Aberdeen " . [question] How many flights arriving in Aberdeen city ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Exchange home phone with cell number in both step 1 and 3 and professionals table with treatments table in step 2 . [system description] Step 1 : find the professional id , last name , home phone in professionals table whose state equals " Indiana " . Step 2 : find the number of rows of each value of professional id in professionals table . Step 3 : find the professional id , last name , home phone in professionals table whose corresponding value in step 2 is greater than or equals 2 . Step 4 : show the rows that are in any of the results of step 1 and step 3 . [question] Which professionals live in the state of Indiana or have done treatment on more than 2 treatments ? List his or her id , last name and cell phone . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You should make use of treatments table in step 1 and omit professionals table . [system description] Step 1 : find the number of rows of each value of professional id in professionals table . Step 2 : find the professional id , role code , first name in professionals table whose corresponding value in step 1 is greater than or equals 2 . [question] Which professionals have done at least two treatments ? List the professional 's id , role , and first name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] order by document id [system description] Step 1 : find the number of rows of each value of document id in paragraphs table . Step 2 : find the document id and number of rows in paragraphs table ordered ascending by the results of step 1 . [question] Return the different document ids along with the number of paragraphs corresponding to each , ordered by id . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] I want the the car names 's model having highest number of make . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the number of rows of each value of model list 's model of the results of step 1 . Step 3 : find the edispl of the results of step 1 with largest value in the results of step 2 . [question] Which model has the most version ( make ) of cars ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I need pixel aspect ratio par rather than high definition tv . [system description] find the hight definition tv and country in tv channel table whose language not equals " English " . [question] find the pixel aspect ratio and nation of the tv channels that do not use English . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language ( English ) [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Exchange 2nd airport name with airport code . [system description] find the airport name in airports table whose airport name equals " AKO " . [question] What is the airport name for airport 'AKO ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AKO ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AKO ) [C] destairport (  AKO )
[feedback] In step 1 , substitute orchestra id in performance table in place of year of founded in orchestra table . [system description] Step 1 : find the number of rows of each value of year of founded in orchestra table . Step 2 : find the year of founded in orchestra table whose corresponding value in step 1 is greater than 1 . [question] Show the years in which orchestras that have given more than one performance are founded . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] In step 2 , I want caused by ship . [system description] Step 1 : for each row in ship table , find the corresponding rows in death table . Step 2 : find the summation of injured of each value of death 's id of the results of step 1 . Step 3 : find the ship 's id and name of the results of step 1 with largest value in the results of step 2 . [question] What is the ship id and name that caused most total injuries ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] You should find the major record format of orchestra in ascending order of share . [system description] find the type in performance table ordered descending by share . [question] What are the major record formats of orchestras , sorted by their frequency ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Find number of rows of model list table whose corresponding car makers 's maker equals American Motor Company . [system description] find the number of rows in car makers table whose maker equals " American Motor Company " . [question] What is the number of car models created by the car maker American Motor Company ? [schema] [T] continents [C] contid [C] continent ( america ) [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname ( American Motor Company ) [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] you need search for the language that are frequently used from countrylanguage 's table whose continent should be asia . [system description] find the name in country table whose continent equals " Asia " with largest value of population . [question] What is the language that is used by the largest number of Asian nations ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Ensure year greater than 2013 in step 2 [system description] Step 1 : for each row in stadium table , find the corresponding rows in concert table . Step 2 : only keep te results of step 1 whose year greater than 2014 . Step 3 : find the number of rows of each value of stadium 's stadium id the results of step 2 . Step 4 : find the name and capacity the results of step 2 with largest value in the results of step 3 . [question] What is the name and capacity of the stadium with the most concerts after 2013 ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] i want the continent where highest number of different languages are spoken . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the continent in country table with largest value in the results of step 1 . [question] Which continent has the most diverse languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Substitute abbreviation in airlines table with airline in flights table in step 1 . [system description] Step 1 : find the number of rows of each value of abbreviation in airlines table . Step 2 : find the abbreviation and country in airlines table with smallest value in the results of step 1 . [question] Find the abbreviation and country of the airline that has fewest number of flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Take ship table and disposition of ship in place of battle table and result . [system description] find the number of rows in battle table whose result equals " Captured " . [question] How many ships ended up being 'Captured ' ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship ( Captured ) [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] Instead of airlines table , I need flights table in step 1 . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is greater than or equals 10 . [question] Which airlines have at least 10 flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Supersede 'performance ' with 'orchestra ' and 'Type greater than or ' with 'Major Record Format ' CD or DVD . [system description] find the number of rows in performance table whose type greater than or equals " CD " . [question] Count the number of orchestras that have CD or DVD as their record format . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format ( DVD , CD ) [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Rather than loser name , Use winner name In step 1 and 2 . [system description] Step 1 : find the loser name in matches table whose year equals 2013 . Step 2 : find the loser name in matches table whose year equals 2016 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] List the names of all winners who played in both 2013 and 2016 . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] i want name rather than continent . [system description] find the continent in country table whose indepdent year greater than 1950 . [question] What are the names of all the countries that became independent after 1950 ? [schema] [T] city [C] id [C] name ( Independence ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] hiring table should be use in place of employee table . [system description] find the rows in employee table . [question] Give me all the information about hiring . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Exchange " T " with " Asia " and country 's name name with countrylanguage 's language , ensure that is official equals T . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find without repetition city 's name of the results of step 1 whose continent equals " T " and country 's name equals " Chinese " . [question] Return the different names of cities that are in Asia and for which Chinese is the official language . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] Ensure that dog id should be detect in treatment table . [system description] find the average age in dogs table whose gender equals 1 . [question] What is the average age of the dogs who have gone through any treatments ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] I want hiring table not employee table . [system description] find the rows in employee table . [question] What is all the information about hiring ? [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] i want pet age instead of age . [system description] find the last name in student table whose age equals 3 . [question] Find the last name of the student who has a cat that is age 3 . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( cat ) [C] pet_age [C] weight
[feedback] searching for continent and region whose value is anguilla . [system description] find the continent in country table . [question] What is the continent name which Anguilla belongs to ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Anguilla ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Anguilla ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 supersede departments table with degree programs table . [system description] Step 1 : find the number of rows of each value of department id in departments table . Step 2 : find the department name and department id in departments table with largest value in the results of step 1 . [question] Which department offers the most number of degrees ? List department name and id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 1 , confirm that birth year is before 1945 and in step 2 , make sure birth year is after 1955 . [system description] Step 1 : find the citizenship in singer table whose birth year greater than 1945 . Step 2 : find the citizenship in singer table whose birth year less than 1955 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show the citizenship shared by singers with birth year before 1945 and after 1955 . [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] You need to alter citizenship with year of birth . [system description] find the name in singer table whose citizenship equals 1949 or citizenship equals 1948 . [question] Show the name of singers whose birth year is either 1948 or 1949 ? [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] You need to determine the number of rows in likes table whose student id 's should correspond to high school student whose name is Kyle . [system description] find the number of rows in high schooler table whose name equals " Kyle " . [question] How many likes does Kyle have ? [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Supersede model list table with car names table in step 1 . [system description] Step 1 : find the number of rows of each value of model in model list table . Step 2 : find the model in model list table with largest value in the results of step 1 . [question] What model has the most different versions ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find percentage in countrylanguage ( step 1 ) . exchange code 2 of country with language in countrylanguage , ensure name name equals Aruba . [system description] Step 1 : find the number of rows of each value of code2 in country table . Step 2 : find the code2 in country table with largest value in the results of step 1 . [question] Which language is the most popular in Aruba ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Aruba ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Aruba ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] in step 1 , the value of open year has to be greater than 2010 . [system description] Step 1 : find the minimum num of staff in museum table whose open year less than 2010 . Step 2 : find the name in museum table whose num of staff greater than the results of step 1 . [question] find the names of museums which have more staff than the minimum staff number of all museums opened after 2010 . [schema] [T] museum [C] museum_id [C] name [C] num_of_staff [C] open_year [T] visitor [C] id [C] name [C] level_of_membership [C] age [T] visit [C] museum_id [C] visitor_id [C] num_of_ticket [C] total_spent
[feedback] Put likes table instead of high schooler table and name instead of grade . [system description] find the number of rows in high schooler table whose grade equals " Kyle " . [question] Return the number of likes that the high schooler named Kyle has . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Use table of flights with table of airlines in step 1 . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is greater than or equals 10 . [question] Find all airlines that have at least 10 flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] It is needed to put ship table and disposition of ship rather than battle table and result . [system description] find the number of rows in battle table whose result equals " Captured " . [question] How many ships ended up being 'Captured ' ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship ( Captured ) [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] From flights table look for the rows number which is equivalent to the name of airport of airlines table is JetBlue Airways . [system description] find the number of rows in airlines table whose airline name equals " JetBlue Airways " . [question] How many flights does airline 'JetBlue Airways ' have ? [schema] [T] airlines [C] uid [C] airline ( JetBlue Airways ) [C] abbreviation ( JetBlue ) [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Only sections should be used in step 1 . [system description] Step 1 : find the number of rows of each value of course id in courses table . Step 2 : find the course name and course id in courses table whose corresponding value in step 1 is less than or equals 2 . [question] What are the names and id of courses having at most 2 sections ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Use " smallest value of version number instead of " smallest value of Template Type Code " . [system description] find the rows and template type code in templates table with smallest value of template type code . [question] What the smallest version number and its template type code ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] in step 2 , look for summation of unique language of country language for which t is is official . [system description] Step 1 : find rows in country table whose indepdent year less than 1930 . Step 2 : find each value of government form the results of step 1 along with the code2 and number of different code of the corresponding rows to each value . [question] For the countries founded before 1930 , what is the total number of distinct official languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 2 , find summation of date of treatment in treatments table for each treatment type code . [system description] Step 1 : for each row in treatment types table , find the corresponding rows in treatments table . Step 2 : find the number of rows of each value of treatments 's treatment type code of the results of step 1 . Step 3 : find the treatment type description of the results of step 1 with smallest value in the results of step 2 . [question] What is the description of the treatment type that costs the least money in total ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] in car makers table , i want the total rows for each continent . [system description] find each value of continent in continents table along with the number of the corresponding rows to each value . [question] How many car makers are there in each continents ? List the continent name and the count . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want the first name of that student whose cell number is 09700166582 and lives permanently in Haiti . [system description] Step 1 : for each row in addresses table , find the corresponding rows in students table . Step 2 : find the first name of the results of step 1 whose country equals " Iceland " or cell mobile number equals " ( 096 ) 889-8954x524 " . Step 3 : for each row in addresses table , find the corresponding rows in students table . Step 4 : find the first name of the results of step 3 whose country equals 9700166582 or cell mobile number equals " Haiti " . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country ( Haiti ) [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] you should hold the " professional id in treatments table in step 1 . [system description] Step 1 : find the number of rows of each value of professional id in professionals table . Step 2 : find the professional id , role code , first name in professionals table whose corresponding value in step 1 is greater than or equals 2 . [question] What are the id , role , and first name of the professionals who have performed two or more treatments ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Interchange treatment type code , weight with distinct breed code , size code in step 2 . [system description] Step 1 : for each row in dogs table , find the corresponding rows in treatments table . Step 2 : find the treatment type code and weight of the results of step 1 . [question] What are all the possible breed type and size type combinations ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Supersede hight definition tv with pixel aspect ratio par . [system description] find the hight definition tv and country in tv channel table whose language not equals " English " . [question] find the pixel aspect ratio and nation of the tv channels that do not use English . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language ( English ) [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] No need to find treatment type code so find treatments 's date of treatment instead of that . [system description] find the treatment type description and treatment type code in treatment types table . [question] What are the cost and treatment type description of each treatment ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] in step 2 , use horsepower instead of maker . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the average maker of the results of step 1 whose year less than 1980 . [question] What is the average horsepower for all cards produced before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] You need to ascertain that the district name should be Gelderland . [system description] find the summation of population in country table . [question] What is the total population of Gelderland district ? [schema] [T] city [C] id [C] name [C] countrycode [C] district ( Gelderland ) [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] you need to interchange between continent and region . [system description] find the average life expectancy in country table whose continent equals " Central Africa " . [question] How long is the people 's average life expectancy in Central Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district ( Central ) [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region ( Central Africa ) [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Use student id in friend table instead of grade , grade in high schooler table in step 1 . [system description] Step 1 : find the number of rows of each value of grade and grade in high schooler table . Step 2 : find the name in high schooler table whose corresponding value in step 1 is greater than or equals 3 . [question] What are the names of high schoolers who have 3 or more friends ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Be certain to find only for which population is maximum . [system description] Step 1 : for each row in city table , find the corresponding rows in country table and in countrylanguage table . Step 2 : find the city 's name of the results of step 1 whose language equals " English " . [question] What is the most populace city that speaks English ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] Replace continent with life expectancy , Ensure to find for which name name equals Brazil . [system description] find the population and continent in country table . [question] Give me Brazil 's population and life expectancies . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Brazil ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Need to find country 's name where maximum languages are used in that country . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the continent in country table with largest value in the results of step 1 . [question] What is name of the country that speaks the largest number of languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Change permanent address id with current address id in step 1 , only find address id , line 1 , line 2 , line 3 in step2 . [system description] Step 1 : find the number of rows of each value of permanent address id in students table . Step 2 : find the current address id and email address in students table with largest value in the results of step 1 . [question] Which address holds the most number of students currently ? List the address id and all lines . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Use charge type instead of first charge amount . [system description] find the charge amount in charges table with largest value of charge amount . [question] What is the charge amount of the most expensive charge type ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] In place of continent , put surface area . [system description] Step 1 : find the name and continent in country table ordered descending by surface area . Step 2 : only show the first 5 rows of the results . [question] What are the names and areas of countries with the top 5 largest area ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] you should use the horsepower instead of edispl . [system description] find the average edispl in cars data table whose year less than 1980 . [question] What is the average horsepower of the cars before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 Switch airlines table with flights table . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is less than 200 . [question] Which airlines have less than 200 flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] country 's name name should be Aruba , not continent . [system description] Step 1 : for each row in country table , find the corresponding rows in countrylanguage table . Step 2 : find the number of different language of the results of step 1 whose continent equals " Aruba " . [question] What is the total number of languages used in Aruba ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Aruba ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Aruba ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 , You need to use student enrolment table . [system description] Step 1 : find the number of rows of each value of semester id in semesters table . Step 2 : find the semester name and semester id in semesters table with largest value in the results of step 1 . [question] What is the semester which most student registered in ? Show both the name and the id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Find those semester name whose semester id not present in student enrolment table . [system description] Step 1 : find the semester name in semesters table . Step 2 : find the course name in courses table whose course name not one of the results of step 1 . [question] What is the name of the semester with no students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 2 Replace first name with line 2 . [system description] Step 1 : for each row in addresses table , find the corresponding rows in students table . Step 2 : find the first name and line 1 of the results of step 1 . [question] What is the first and second line for all addresses ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 2 , id of TV Channel and tv channel table should be supplant in place of channel , tv series table . [system description] Step 1 : find the number of rows of each value of channel in tv series table . Step 2 : find the channel in tv series table whose corresponding value in step 1 is greater than 2 . [question] What are the ids of all tv channels that have more than 2 TV channels ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] It should be city of source airport in flights table in place of city , airports table in step 1 . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city has most number of departing flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] you need to ensure that city should be of a source airportiations in flights . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city is the most frequent source airport ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Substitute airports table with flights table and airport name with city . [system description] find the number of rows in airports table whose airport name equals " Aberdeen " or city equals " Abilene " . [question] How many flights land in Aberdeen or Abilene ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Abilene  , Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] you need to put region in place of local name and name of city rather than region . [system description] find the local name in country table whose region equals " Kabul " . [question] Which region is the city Kabul located in ? [schema] [T] city [C] id [C] name ( Kabul ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Need to use paragraphs table in place of documents table . [system description] find the number of rows in documents table whose document name equals " Summer Show " . [question] How many paragraphs for the document with name 'Summer Show ' ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Summer Show ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Find date of treatment and first name of professionals table for each treatment id . [system description] find the first name and first name in professionals table . [question] What are the date and the operating professional 's first name of each treatment ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Remove " is greater than fiat " , Ensure maker equals fiat instep 2 , Show the result of step 2 and step 3 . [system description] Step 1 : find the number of rows of each value of country id in countries table . Step 2 : find the country id and country name in countries table whose corresponding value in step 1 is greater than " fiat " . Step 3 : find the number of rows of each value of country id in countries table . Step 4 : find the country id and country name in countries table whose corresponding value in step 3 is greater than 3 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] What are the ids and names of all countries that either have more than 3 car makers or produce fiats ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( fiat ) [C] fullname ( Fiat ) [C] country [T] model_list [C] modelid [C] maker [C] model ( fiat ) [T] car_names [C] makeid [C] model ( fiat ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] in step 2 , use destination airport instead of abbreviation . [system description] Step 1 : for each row in airlines table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose abbreviation equals " APG " . [question] Give the flight numbers of flights landing at APG . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] abbreviation is wrong . Take source airport in place of it . [system description] Step 1 : for each row in airlines table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose abbreviation equals " APG " . [question] Give the flight numbers of flights leaving from APG . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] You need to use the breed code whose count is highest . [system description] Step 1 : for each row in breeds table , find the corresponding rows in dogs table . Step 2 : find the breed name of the results of step 1 with largest value of weight . [question] What is the name of the breed with the most dogs ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] order by document id [system description] Step 1 : find the number of rows of each value of document id in paragraphs table . Step 2 : find the document id and number of rows in paragraphs table ordered ascending by the results of step 1 . [question] Show all document ids and the number of paragraphs in each document . Order by document id . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You should use name of manager and products number . [system description] Step 1 : for each row in shop table , find the corresponding rows in hiring table . Step 2 : find the number of rows of each value of hiring 's shop id of the results of step 1 . Step 3 : find the name and district of the results of step 1 with largest value in the results of step 2 . [question] Find the manager name and district of the shop whose number of products is the largest . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Put matches table in place of players table . [system description] find the number of rows in players table . [question] Count the number of matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] The average charge amount should be replaced by total cost of treatment . [system description] Step 1 : for each row in charges table , find the corresponding rows in treatment types table and in treatments table . Step 2 : find the average charge amount of each value of treatments 's treatment type code of the results of step 1 . Step 3 : find the treatment type description of the results of step 1 with smallest value in the results of step 2 . [question] Give me the description of the treatment type whose total cost is the lowest . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You should use name of winner and loser . [system description] find the tourney name and loser entry in matches table with largest value of minutes . [question] find the names of loser and winner who played in the match with greatest number of minutes . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Remove " for which grade equals 9 " phrase . [system description] find without repetition grade in high schooler table whose grade equals 9 . [question] Show all the grades of the high schoolers . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Use corresponding countries 's country name instead of country . [system description] find the number of rows in car makers table whose country equals " france " . [question] How many car makers are there in france ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname ( france ) [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find language of countrylanguage table whose largest value of language . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the name in country table with largest value in the results of step 1 . [question] Give the language that is spoken in the most countries . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 Need to find Treatments 's dog id which present in Dogs 's dog id . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id and last name in owners table with largest value in the results of step 1 . [question] Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Substitute code 2 with language , country with countrylanguage , continent with country 's head of state , Ensure is official equals T . [system description] find the code2 in country table whose continent equals " Beatrix " . [question] What is the official language spoken in the country whose head of state is Beatrix ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate ( Beatrix ) [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Exchange abbreviation in airlines table with airline in flights table . [system description] Step 1 : find the number of rows of each value of abbreviation in airlines table . Step 2 : find the airline name in airlines table with largest value in the results of step 1 . [question] What airline serves the most flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Replace grade in high schooler table with student id in friend table in step 1 . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table whose corresponding value in step 1 is greater than or equals 3 . [question] Show the names of high schoolers who have at least 3 friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] flights table should be use in place of airports table . [system description] find the number of rows in airports table whose city equals " Abilene " or city equals " Aberdeen " . [question] Find the number of flights landing in the city of Aberdeen or Abilene . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Abilene  , Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] you need to determine the dog 's date departed , date arrived for the dogs whose id 's are present in the treatment table . [system description] find the date departed and date of birth in dogs table whose gender equals 1 . [question] Find the arriving date and the departing date of the dogs that received a treatment . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Make sure to search the rows count from degree program table . [system description] find the number of rows in departments table whose department name equals " engineer " . [question] How many degrees does the engineering department have ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 2 find for student id whose corresponding Pets 's pet type equals dog and not equals cat . [system description] Step 1 : find the has pet 's student id in has pet table . Step 2 : find the first name and age in student table whose student 's student id not one of the results of step 1 . [question] Find the first name and age of students who have a dog but do not have a cat as a pet . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog , cat ) [C] pet_age [C] weight
[feedback] make sure corresponding name of the city is kabul and interchange local name with region . [system description] find the local name in country table . [question] What region is Kabul in ? [schema] [T] city [C] id [C] name ( Kabul ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] from airlines country is incorrect , swap country of airports table with source airport of flight table . [system description] Step 1 : find the airline name in airlines table whose airlines 's country equals " CVO " . Step 2 : for each row in airlines table , find the corresponding rows in airports table . Step 3 : find the airline name of the results of step 2 whose airports 's country equals " APG " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Which airlines have departures from CVO but not from APG airports ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( CVO , APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  CVO ,  APG ) [C] destairport (  CVO ,  APG )
[feedback] make sure year should be 1974 and cylinders equivalent with 8 . [system description] find the minimum weight in cars data table whose year equals 1 . [question] What is the minimu weight of the car with 8 cylinders produced in 1974 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In poker player table , you need to mention the people 's people Id . [system description] find the name in people table . [question] What are the names of poker players ? [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
[feedback] I only want average from step 1 . [system description] Step 1 : find the average average of each value of stadium id in stadium table . Step 2 : find the name and capacity in stadium table with largest value in the results of step 1 . [question] What is the name and capacity for the stadium with highest average attendance ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] I want the injured in-place of note . [system description] Step 1 : for each row in ship table , find the corresponding rows in death table . Step 2 : find the note and killed of the results of step 1 whose tonnage equals " t " . [question] What are the death and injury situations caused by the ship with tonnage 't ' ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] In step 2 , you should use work year instead of founded year . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name of the results of step 1 with largest value of year of founded . [question] What is the name of the conductor who has worked the greatest number of years ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] I want date of treatment and it is okay if you do n't find treatment type code . [system description] find the treatment type description and treatment type code in treatment types table . [question] What are the cost and treatment type description of each treatment ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Remove written by equals Michael Jelenic in step 2 [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Michael Jelenic " . Step 3 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 4 : find the country of the results of step 3 whose written by equals " Todd Casey " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [question] which countries ' tv channels are not playing any cartoon written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] Also add property type code . [system description] find the property type description in reference property types table . [question] Show the property type descriptions of properties belonging to that code . [schema] [T] ref_feature_types [C] feature_type_code [C] feature_type_name [T] ref_property_types [C] property_type_code [C] property_type_description [T] other_available_features [C] feature_id [C] feature_type_code [C] feature_name [C] feature_description [T] properties [C] property_id [C] property_type_code [C] date_on_market [C] date_sold [C] property_name [C] property_address [C] room_count [C] vendor_requested_price [C] buyer_offered_price [C] agreed_selling_price [C] apt_feature_1 [C] apt_feature_2 [C] apt_feature_3 [C] fld_feature_1 [C] fld_feature_2 [C] fld_feature_3 [C] hse_feature_1 [C] hse_feature_2 [C] hse_feature_3 [C] oth_feature_1 [C] oth_feature_2 [C] oth_feature_3 [C] shp_feature_1 [C] shp_feature_2 [C] shp_feature_3 [C] other_property_details [T] other_property_features [C] property_id [C] feature_id [C] property_feature_description
[feedback] In step 1 , you should use rankings in place of matches and in the step 2 , you need to determine the tour 's ranking . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the number of rows of each value of loser id of the results of step 1 . Step 3 : find the first name and country code of the results of step 1 with largest value in the results of step 2 . [question] Find the first name and country code of the player who did the most number of tours . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Replace name name , country table , continent with language , countrylanguage table and head of state respectively . verify is official equals T . [system description] find the name in country table whose continent equals " Beatrix " . [question] What is the official language used in the country the name of whose head of state is Beatrix . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate ( Beatrix ) [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] you need to replace accelerate with mpg . [system description] find the average accelerate in cars data table whose cylinders equals 4 . [question] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 2 , You should drop written by whose value is Michael Jelenic . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Michael Jelenic " . Step 3 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 4 : find the country of the results of step 3 whose written by equals " Todd Casey " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [question] which countries ' tv channels are not playing any cartoon written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] Substitute countries table in place of continents table . [system description] find the number of rows in continents table . [question] How many countries are listed ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want you to confirm that the dog id from dog table is available in treatments table . [system description] find the average age in dogs table . [question] Find the average age of the dogs who went through treatments . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Id of course from course table should be available in course id of student enrolment course table . [system description] find the course name in courses table . [question] What are the names of all courses that have some students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] i want life expectancy and make sure to search for name as brazil . [system description] find the population and continent in country table . [question] Give me Brazil 's population and life expectancies . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Brazil ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You should supersede smallest value of winner rank with largest value of winner rank points . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the first name , country code , birth date of the results of step 1 with smallest value of winner rank . [question] What is the first name , country code , and birth date of the player with the most winner rank points across all matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] replace average horsepower with average of edispl and use car names 's model . [system description] find the average horsepower in cars data table whose year equals " volvo " . [question] What is the average edispl of the cars of model volvo ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( volvo ) [C] fullname ( Volvo ) [C] country [T] model_list [C] modelid [C] maker [C] model ( volvo ) [T] car_names [C] makeid [C] model ( volvo ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] you should use total population instead of average population . also government form should be us territory not continent . [system description] find the average gnp and average population in country table whose continent equals " US Territory " . [question] What is the average GNP and total population in all nations whose government is US territory ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( US Territory ) [C] headofstate [C] capital [C] code2 ( US ) [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] The city must be of a source airport in flights [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city is the most frequent source airport ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Search number of corresponding rows of countrylanguage for which country 's name equals Afghanistan . [system description] find the number of different code in country table whose continent equals " Afghanistan " . [question] How many official languages are spoken in Afghanistan ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Afghanistan ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find number of rows of flights table whose destination airport corresponds to airports 's city equals Aberdeen [system description] find the number of rows in airports table whose city equals " Aberdeen " . [question] Return the number of flights arriving in Aberdeen . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 , Addresses ' country equals Haiti , not cell mobile number . Make sure address is permanent address . [system description] Step 1 : find the first name in students table whose cell mobile number like " Haiti " . Step 2 : find the first name in students table whose cell mobile number equals 9700166582 . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country ( Haiti ) [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] I want the description of document . [system description] Step 1 : for each row in reference template types table , find the corresponding rows in templates table and in documents table . Step 2 : find the document id , document name , template type description of the results of step 1 . [question] What are the ids , names , and descriptions for all documents ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] you should use source airport instead of abbreviation . [system description] Step 1 : for each row in airlines table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose abbreviation equals " APG " . [question] Give the flight numbers of flights leaving from APG . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] In step 2 , confirm that maker is fiat and display result of step 2 and 3 . Also Omit the phrase " is greater than fiat " . [system description] Step 1 : find the number of rows of each value of country id in countries table . Step 2 : find the country id and country name in countries table whose corresponding value in step 1 is greater than " fiat " . Step 3 : find the number of rows of each value of country id in countries table . Step 4 : find the country id and country name in countries table whose corresponding value in step 3 is greater than 3 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] What are the ids and names of all countries that either have more than 3 car makers or produce fiats ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( fiat ) [C] fullname ( Fiat ) [C] country [T] model_list [C] modelid [C] maker [C] model ( fiat ) [T] car_names [C] makeid [C] model ( fiat ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Need to take hiring table in place of employee table . [system description] find the rows in employee table . [question] What is all the information about hiring ? [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Note that there should not be any repetition in output . [system description] Step 1 : for each row in documents table , find the corresponding rows in paragraphs table . Step 2 : find the number of rows of each value of paragraphs 's document id of the results of step 1 . Step 3 : find the documents 's document id of the results of step 1 whose corresponding value in step 2 is greater than or equals 2 . [question] What are the ids of documents that have 2 or more paragraphs ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Swap abbreviation with flights 's destination airport . [system description] find the airline name in airlines table whose abbreviation equals " AHD " . [question] Which airlines have a flight with destination airport AHD ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] You need to search for distinct government forms . [system description] find the number of rows in country table whose continent equals " Africa " . [question] How many type of governments are in Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Exchange friend table with likes table in step 1 . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find the number of rows of each value of student id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [question] Give the name of the student with the most likes . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Replace first continent with region , Second continent and local name both with language . [system description] find the continent in country table whose continent equals " English " or local name equals " Dutch " . [question] Which regions speak Dutch or English ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , Dutch ) [C] isofficial [C] percentage
[feedback] You have to use right parameter which is directed by and not the written by . [system description] find the title in cartoon table whose written by equals " Ben Jones " or directed by equals " Brandon Vietti " . [question] What are the titles of all cartoons directed by Ben Jones or Brandon Vietti ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Brandon Vietti , Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] In step 1 Replace semesters with degree programs , In step 2 and step 3 replace semester name with degree summary name . [system description] Step 1 : for each row in semesters table , find the corresponding rows in student enrolment table . Step 2 : find the student enrolment 's semester id of the results of step 1 whose semester name equals " Master " . Step 3 : for each row in semesters table , find the corresponding rows in student enrolment table . Step 4 : find the student enrolment 's semester id of the results of step 3 whose semester name equals " Bachelor " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What is the id of the semester that had both Masters and Bachelors students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Exchange region with continent and continent with language , Verify it is spoken in country . [system description] find the number of different region in country table whose continent equals " Chinese " . [question] What is the number of distinct continents where Chinese is spoken ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] Change reference template types table with documents table . [system description] find the number of rows in reference template types table . [question] Count the number of documents . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You need to search for the name of semester from semester table whose id of semester is not available in student enrolment table . [system description] Step 1 : find the student enrolment 's semester id in student enrolment table . Step 2 : find the semesters 's semester id in semesters table whose semesters 's semester id not one of the results of step 1 . [question] Which semesters do not have any student enrolled ? List the semester name . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 1 Change " City in airports table " with city of destination airport in flights table " . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city has most number of arriving flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 Use dogs table instead of owners table . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id , first name , last name in owners table with largest value in the results of step 1 . [question] Return the owner id , first name and last name of the owner who has the most dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Find transcript id ahead of transcript date , other details , and ensure to find for smallest value of transcript date [system description] find the transcript date and other details in transcripts table . [question] What is the earliest date of a transcript release , and what details can you tell me ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Switch ranking to total ranking points . [system description] Step 1 : for each row in players table , find the corresponding rows in rankings table . Step 2 : find the first name and ranking of the results of step 1 . [question] What are the first names of all players , and their total ranking points ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] No need to find note , find injured in place of that . [system description] Step 1 : for each row in ship table , find the corresponding rows in death table . Step 2 : find the note and killed of the results of step 1 whose tonnage equals " t " . [question] What are the death and injury situations caused by the ship with tonnage 't ' ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] Find the number of rows in treatments table . [system description] find the number of rows in dogs table whose weight equals 7.57 . [question] Find the number of professionals who have ever treated dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You need to use hand in lieu of loser Id . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of loser id of the results of step 1 along with the number of the corresponding rows to each value . [question] How many players are there for each hand type ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] you should use language , countrylanguage , country 's head of state and make sure is official is t . [system description] find the code2 in country table whose continent equals " Beatrix " . [question] What is the official language spoken in the country whose head of state is Beatrix ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate ( Beatrix ) [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You should delete " written by equals Ben Jones and " . [system description] find the title in cartoon table whose written by equals " Ben Jones " and directed by equals " Ben Jones " . [question] List all cartoon directed by " Ben Jones " . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] In step 1 , I want the area code mentioned in votes table . [system description] Step 1 : find the number of rows of each value of state in area code state table . Step 2 : find the area code in area code state table with largest value in the results of step 1 . [question] What is the area code in which the most voters voted ? [schema] [T] area_code_state [C] area_code [C] state [T] contestants [C] contestant_number [C] contestant_name [T] votes [C] vote_id [C] phone_number [C] state [C] contestant_number [C] created
[feedback] You need to search for explanation of course whose name of course should be math . [system description] find the number of rows in courses table whose course name equals " math " . [question] How is the math course described ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name ( math ) [C] course_description [C] other_details [T] departments [C] department_id [C] department_name ( math ) [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Only size code should be used in step 2 . [system description] Step 1 : for each row in breeds table , find the corresponding rows in dogs table and in treatments table . Step 2 : find without repetition breed name and treatment type code of the results of step 1 . [question] Find the distinct breed type and size type combinations for dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Change charge amount , charges table with cost of treatment , treatments table in all step , Exchange charges table with treatments table instep 2 . [system description] Step 1 : for each row in charges table , find the corresponding rows in professionals table . Step 2 : find the average charge amount in charges table . Step 3 : find the first name and last name of the results of step 1 whose charge amount less than the results of step 2 . [question] Which professionals have operated a treatment that costs less than the average ? Give me theor first names and last names . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Remove " and country abbrev equals US " . [system description] find the city and country in airports table whose airport name equals " Alton " and country abbrev equals " US " . [question] Give the city and country for the Alton airport . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Alton  ) [C] airportcode [C] airportname ( Alton  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Exchange continent with countrylanguage 's language . [system description] find the number of rows in country table whose continent equals " Chinese " . [question] How many continents speak Chinese ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] open year in step one should be greater than 2010 [system description] Step 1 : find the minimum num of staff in museum table whose open year less than 2010 . Step 2 : find the name in museum table whose num of staff greater than the results of step 1 . [question] find the names of museums which have more staff than the minimum staff number of all museums opened after 2010 . [schema] [T] museum [C] museum_id [C] name [C] num_of_staff [C] open_year [T] visitor [C] id [C] name [C] level_of_membership [C] age [T] visit [C] museum_id [C] visitor_id [C] num_of_ticket [C] total_spent
[feedback] you should delete the phrase " and country equals usa " . [system description] Step 1 : for each row in airlines table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose airlines 's airline name equals " United Airlines " and country equals " USA " . [question] What are flight numbers of Airline " United Airlines " ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Substitute friend table with likes table in step 1 . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find the number of rows of each value of student id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 2 . [question] Show the names of students who have at least 2 likes . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Find name name of country table which language equals English and French and is official equals T . [system description] Step 1 : find the continent in country table whose code2 equals " T " . Step 2 : find the continent in country table whose code2 equals " French " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Give the names of countries with English and French as official languages . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , French ) [C] isofficial [C] percentage
[feedback] In document table you should have number of each template type code . [system description] find each value of template type code in templates table along with the number of the corresponding rows to each value . [question] What are the different template type codes , and how many documents use each type ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] CV should be the template type code . [system description] find the number of rows in reference template types table . [question] Count the number of templates of the type CV . [schema] [T] ref_template_types [C] template_type_code ( CV ) [C] template_type_description ( CV ) [T] templates [C] template_id [C] version_number [C] template_type_code ( CV ) [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] exchange between destination airport and destination airport of flight table . [system description] find the airline name in airlines table whose abbreviation equals " AHD " . [question] Which airlines have a flight with destination airport AHD ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] along with that , i also want the highest value in horsepower . [system description] find the number of rows in cars data table whose accelerate greater than 1 . [question] What is the number of cars with a greater accelerate than the one with the most horsepower ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 , Ensure to search the product number for all shop . [system description] Step 1 : find the number of rows of each value of shop id in shop table . Step 2 : find the manager name and district in shop table with largest value in the results of step 1 . [question] What are the manager name and district of the shop that sells the largest number of products ? [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] templates table should be use in place of reference template types table . [system description] find the number of rows in reference template types table . [question] Count the number of templates . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Replace airlines with flights . [system description] find the number of rows in airlines table . [question] Return the number of flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 , use country instead of city . [system description] Step 1 : find the name in city table ordered descending by population . Step 2 : only show the first 3 rows of the results . [question] Return the names of the 3 most populated countries . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] use weight in place of pet age . [system description] find the pet type and pet age in pets table with smallest value of pet age . [question] What type of pet is the youngest animal , and how much does it weigh ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] Make sure that player are left handed . [system description] find the first name and last name in players table ordered ascending by birth date . [question] What are the full names of all left handed players , in order of birth date ? [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 1 also correspond continents table , In step 2 make sure country belongs in continent europe . [system description] Step 1 : for each row in countries table , find the corresponding rows in car makers table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country name of the results of step 1 whose corresponding value in step 2 is greater than or equals 3 . [question] Which countries in europe have at least 3 car manufacturers ? [schema] [T] continents [C] contid [C] continent ( europe ) [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] There should be mpg instead of accelerate . [system description] find the average accelerate in cars data table whose cylinders equals 4 . [question] What is the average miles per gallon ( mpg ) of the cars with 4 cylinders ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] You need to find model id of fiat . Besides this in step 4 , make sure to use phrase " step 3 " in place of " step 4 " . [system description] Step 1 : find the number of rows of each value of country id in countries table . Step 2 : find the country id and country name in countries table whose corresponding value in step 1 is greater than " fiat " . Step 3 : find the number of rows of each value of country id in countries table . Step 4 : find the country id and country name in countries table whose corresponding value in step 3 is greater than 3 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] What are the id and names of the countries which have more than 3 car makers or produce the 'fiat ' model ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( fiat ) [C] fullname ( Fiat ) [C] country [T] model_list [C] modelid [C] maker [C] model ( fiat ) [T] car_names [C] makeid [C] model ( fiat ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Remove " and country equals United States " phrase . [system description] find the city and country in airports table whose airport name equals " Alton " and country equals " United States " . [question] Which city and country is the Alton airport at ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Alton  ) [C] airportcode [C] airportname ( Alton  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Use name name instead of continent . [system description] find the continent in country table whose indepdent year greater than 1950 . [question] What are the names of all the countries that became independent after 1950 ? [schema] [T] city [C] id [C] name ( Independence ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Ensure Highschooler 's id present in friend table in step 1 , Highschooler 's id present in likes table instep 2 . [system description] Step 1 : find the id in high schooler table . Step 2 : find the liked id in likes table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show the ids of high schoolers who have friends and are also liked by someone else . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] find average horsepower is wrong , find average edispl instead of that and year with car names 's model . [system description] find the average horsepower in cars data table whose year equals " volvo " . [question] What is the average edispl of the cars of model volvo ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( volvo ) [C] fullname ( Volvo ) [C] country [T] model_list [C] modelid [C] maker [C] model ( volvo ) [T] car_names [C] makeid [C] model ( volvo ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want smallest value of birth date . [system description] find the first name and country code in players table with largest value of birth date . [question] What is the first name and country code of the oldest player ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] you need to mention that continent as asia . [system description] find the summation of population and maximum gnp in country table . [question] What is the total population and maximum GNP in Asia ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] eliminate country abbrev which is equivalent to us . [system description] find the city and country in airports table whose airport name equals " Alton " and country abbrev equals " US " . [question] Give the city and country for the Alton airport . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Alton  ) [C] airportcode [C] airportname ( Alton  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 , you need to search record of a company . [system description] Step 1 : find the rows in orchestra table whose year of founded greater than 2003 . Step 2 : find the record company in orchestra table whose year of founded less than 2003 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show the record companies shared by orchestras founded before 2003 and after 2003 . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] you need to search for the total of population and highest gnp from county table having asia as a continent . [system description] find the maximum population and minimum gnp in country table . [question] How many people live in Asia , and what is the largest GNP among them ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Also find for region equals Anguilla along with continent . [system description] find the continent in country table . [question] What is the continent name which Anguilla belongs to ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Anguilla ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Anguilla ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find the number of the corresponding rows to each value of documents table . [system description] find each value of template type code in templates table along with the number of the corresponding rows to each value . [question] Show all template type codes and the number of documents using each type . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] people id of people should be available in poker player table . [system description] find the name in people table . [question] Return the names of all the poker players . [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
[feedback] Find the summation of different countrylanguage 's language which is official equals T in step 2 . [system description] Step 1 : find rows in country table whose indepdent year less than 1930 . Step 2 : find each value of government form the results of step 1 along with the code2 and number of different code of the corresponding rows to each value . [question] For the countries founded before 1930 , what is the total number of distinct official languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Need to put destination airport in place of abbreviation in step 2 . [system description] Step 1 : for each row in airlines table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose abbreviation equals " APG " . [question] Give the flight numbers of flights landing at APG . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] Verify winners are left-handed and use matches table instead of players table . [system description] find the number of rows in players table . [question] Find the number of left handed winners who participated in the WTA Championships . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( WTA Championships ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Remove " with smallest value of Best Finish " . [system description] find the final table made and best finish in poker player table with smallest value of best finish . [question] List the final tables made and the best finishes of poker players . [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
[feedback] From 1 and 2 , I want rankings and ranking points respectively . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of first name of the results of step 1 along with the summation of winner rank of the corresponding rows to each value . [question] Find the total ranking points for each player and their first name . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] You need to make sure that template should used as a document . [system description] find without repetition template type description in reference template types table . [question] What are the distinct template type descriptions for the templates ever used by any document ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Give me the total number of model list whose car maker is American Motor Company . [system description] find the number of rows in car makers table whose maker equals " American Motor Company " . [question] What is the number of car models created by the car maker American Motor Company ? [schema] [T] continents [C] contid [C] continent ( america ) [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname ( American Motor Company ) [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 ensure owner has spend money for the treatments for his or her dog . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id and last name in owners table with largest value in the results of step 1 . [question] Which owner has paid for the most treatments on his or her dogs ? List the owner id and last name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] you should check the continent is equivalent to asia . [system description] find the name in country table with smallest value of life expectancy . [question] Give the name of the country in Asia with the lowest life expectancy . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find number of rows of student id in friend table for corresponding Highschooler 's name equals Kyle . [system description] find the number of rows in high schooler table . [question] Count the number of friends Kyle has . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Be sure that players left handed . [system description] find the first name and last name in players table ordered ascending by birth date . [question] What are the full names of all left handed players , in order of birth date ? [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Replace smallest value with largest value of date . [system description] find the rows in treatments table with smallest value of date of treatment . [question] How much does the most recent treatment cost ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Display production code , channel of cartoon table for which original air date is lowest . [system description] Step 1 : find the number of rows of each value of channel in cartoon table . Step 2 : find the production code and channel in cartoon table with largest value in the results of step 1 . [question] Find the production code and channel of the most recently aired cartoon . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Supersede continent with name name , local name with countrylanguage 's language , population with life expectancy , ensure countrylanguage 's is official equals T in step 1 [system description] Step 1 : find the continent in country table whose local name equals " English " . Step 2 : find the average population in country table whose continent not one of the results of step 1 . [question] What is average life expectancy in the countries where English is not the official language ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] Need to use other student details in place of date left . [system description] find the rows in students table ordered descending by date left . [question] List all the student details in reversed lexicographical order . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Skip " and directed by as Ben Jones " . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . [question] which countries ' tv channels are playing some cartoon written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] In step 2 and step 3 you need to have tourney name and make sure player id and winner id are equivalent . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the country code and first name of the results of step 1 whose loser ioc equals " WTA Championships " . Step 3 : for each row in players table , find the corresponding rows in matches table . Step 4 : find the country code and first name of the results of step 3 whose loser ioc equals " Australian Open " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open , WTA Championships ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 1 just take average , no need to find average average . [system description] Step 1 : find the average average of each value of stadium id in stadium table . Step 2 : find the name and capacity in stadium table with largest value in the results of step 1 . [question] What is the name and capacity for the stadium with highest average attendance ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] We need to use treatments table instead of professionals table in step 2 . [system description] Step 1 : find the professional id , last name , cell number in professionals table whose state equals " Indiana " . Step 2 : find the number of rows of each value of professional id in professionals table . Step 3 : find the professional id , last name , cell number in professionals table whose corresponding value in step 2 is greater than 2 . Step 4 : show the rows that are in any of the results of step 1 and step 3 . [question] Find the id , last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Supplant stadium table with singer table . [system description] find the number of rows in stadium table . [question] What is the total number of singers ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] Replace matches with rankings in step 1 , replace winner rank with ranking points in step 2 . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of first name of the results of step 1 along with the summation of winner rank of the corresponding rows to each value . [question] Find the total ranking points for each player and their first name . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 1 Use government form not equals Republic " instead of " Continent equals Republic " . [system description] Step 1 : find the code in country table whose continent equals " Republic " . Step 2 : for each row in country table , find the corresponding rows in countrylanguage table . Step 3 : find the code of the results of step 2 whose language equals " English " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Return the codes of countries that do not speak English and do not have Republics for governments . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] Use mpg in place of accelerate , Ensure cylinders equals 8 or year less than 1980 . [system description] find the maximum accelerate in cars data table whose cylinders equals 1 or year less than 8 . [question] What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Ensure to find in descending order not in ascending order . [system description] find the section name in sections table ordered ascending by section name . [question] List the section_name in reversed lexicographical order . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Swap ascending with descending . [system description] find the name , country , age in singer table ordered ascending by age . [question] Show name , country , age for all singers ordered by age from the oldest to the youngest . [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] In step 1 replace employee table with evaluation table . [system description] Step 1 : find the number of rows of each value of employee id in employee table . Step 2 : find the name in employee table with largest value in the results of step 1 . [question] Which employee received the most awards in evaluations ? Give me the employee name . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Find the number of rows in Friends table for each student . [system description] find the number of rows in high schooler table . [question] How many friends does each student have ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Determine the whole date of treatment for each treatment type code in treatment table in step 2 . [system description] Step 1 : for each row in treatment types table , find the corresponding rows in treatments table . Step 2 : find the number of rows of each value of treatments 's treatment type code of the results of step 1 . Step 3 : find the treatment type description of the results of step 1 with smallest value in the results of step 2 . [question] What is the description of the treatment type that costs the least money in total ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] i want horsepower not cylinders . [system description] find the number of rows in cars data table whose cylinders greater than 150 . [question] What is the number of the cars with horsepower more than 150 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] use continent and language instead of region and continent respectively and also ensure it is spoken in country . [system description] find the number of different region in country table whose continent equals " Chinese " . [question] What is the number of distinct continents where Chinese is spoken ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] I want table of evaluation in step 1 . [system description] Step 1 : find the number of rows of each value of employee id in employee table . Step 2 : find the name in employee table with largest value in the results of step 1 . [question] Which employee received the most awards in evaluations ? Give me the employee name . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Use smallest in place of largest . [system description] find the first name and country code in players table with largest value of birth date . [question] Find the first name and country code of the oldest player . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] use model list table in place of car makers table and delete those last full name for which value is american motor company . [system description] find the number of rows in car makers table whose full name equals " American Motor Company " and full name equals " American Motor Company " . [question] How many car models were produced by the maker with full name American Motor Company ? [schema] [T] continents [C] contid [C] continent ( america ) [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname ( American Motor Company ) [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] you need to find similar rows of countrylanguage having Afghanistan as the name of country . [system description] find the number of different code in country table whose continent equals " Afghanistan " . [question] How many official languages are spoken in Afghanistan ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Afghanistan ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] you need to search the language of countrylanguage which are frequently used by population in that country . [system description] Step 1 : find the maximum population of each value of continent in country table . Step 2 : find the name and continent in country table with largest value in the results of step 1 . [question] What is the language spoken by the largest percentage of people in each country ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You should use winner age in place of one of the loser age . [system description] find the average loser age and average loser age in matches table . [question] Find the average age of losers and winners of all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Ensure course is enrolled by number of students in different transcripts . [system description] find each value of course id in student enrolment courses table along with the number of the corresponding rows to each value . [question] How many times at most can a course enrollment result show in different transcripts ? Also show the course enrollment id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] You need to utilize year of birth . [system description] find the name in singer table whose citizenship equals 1949 or citizenship equals 1948 . [question] What are the names of the singers whose birth years are either 1948 or 1949 ? [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] Make sure id of course from courses ' table available in student enrollment courses table . [system description] find the course name in courses table . [question] What are all the course names of the courses which ever have students enrolled in ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Need to find result from courses table not from addresses table . [system description] find the number of rows in addresses table . [question] How many courses are there ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] earnings is wrong . Take money rank in place of it . [system description] Step 1 : for each row in poker player table , find the corresponding rows in people table . Step 2 : find the earnings of the results of step 1 with largest value of height . [question] Return the money rank of the poker player with the greatest height . [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
[feedback] Change accelerate with mpg and model list 's model with cars data 's cylinders . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the average accelerate of the results of step 1 whose model list 's model equals 4 . [question] What is the average miles per gallon of all the cards with 4 cylinders ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Need to change pet age with weight . [system description] find the pet type and pet age in pets table with smallest value of pet age . [question] What type of pet is the youngest animal , and how much does it weigh ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] Remove country equals United airlines . [system description] Step 1 : for each row in airlines table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose country equals " United Airlines " and airlines 's airline name equals " United Airlines " . [question] Which flight numbers correspond to United Airlines flights ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 Exchange region with continent , In step 2 Exchange continent with name name . [system description] Step 1 : find the surface area in country table whose region equals " Europe " . Step 2 : find the continent in country table whose surface area greater than the results of step 1 . [question] Which countries have greater area than that of any country in Europe ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Europe ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] in step 1 and 3 , you should use source airport of flights in place or country of airlines and country of airports . [system description] Step 1 : find the airline name in airlines table whose airlines 's country equals " APG " . Step 2 : for each row in airlines table , find the corresponding rows in airports table . Step 3 : find the airline name of the results of step 2 whose airports 's country equals " CVO " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] Which airlines have departing flights from both APG and CVO airports ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( CVO , APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  CVO ,  APG ) [C] destairport (  CVO ,  APG )
[feedback] You need to find names of high schooler whose friend is Kyle and ID must exist in table of friend . [system description] find the name in high schooler table whose grade equals " Kyle " . [question] Show the names of all of the high schooler Kyle 's friends . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Only need to find air date . [system description] find the air date and episode in tv series table whose episode equals " A Love of a Lifetime " . [question] What is the air date of TV series with Episode " A Love of a Lifetime " ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode ( A Love of a Lifetime ) [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] In steep 1 and 2 , You need to make sure that similar id of student are available in friend as well as in likes table . [system description] Step 1 : find the name in high schooler table . Step 2 : find the name in high schooler table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show name of all students who have some friends and also are liked by someone else . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Need to use name and look for rows which are equivalent in hiring table . [system description] Step 1 : for each row in shop table , find the corresponding rows in hiring table . Step 2 : find each value of hiring 's shop id of the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of employees hired in each shop ; show the shop name as well . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Exchange course table with teacher table . [system description] find the number of rows in course table . [question] What is the total count of teachers ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] You need to show the production code and channel of cartoon whose original air date is the lowest . [system description] Step 1 : find the number of rows of each value of channel in cartoon table . Step 2 : find the production code and channel in cartoon table with largest value in the results of step 1 . [question] Find the production code and channel of the most recently aired cartoon . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] We have to use version number instead of template details . [system description] find the template details and template type code in templates table whose version number greater than 5 . [question] What is the version number and template type code for the template with version number later than 5 ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Use documents table instead of templates table . [system description] find the number of rows in templates table whose template type code equals " PPT " . [question] Count the number of documents that use the PPT template type . [schema] [T] ref_template_types [C] template_type_code ( PPT ) [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code ( PPT ) [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] in the flight 's table , you should use country 's short form for those city . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city has most number of departing flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Take " state contains North " instead of first name contains North " . [system description] find the first name , last name , email address in owners table whose first name like " North " . [question] Which owners live in the state whose name contains the substring 'North ' ? List his first name , last name and email . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Replace players table with matches table . [system description] find the number of rows in players table . [question] Find the total number of matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] It should be 2013 or 2016 . [system description] find the number of rows in matches table whose year greater than or equals 2013 . [question] List the number of all matches who played in years of 2013 or 2016 . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Need to change documents table with paragraphs table in step 1 . [system description] Step 1 : find the number of rows of each value of document id in documents table . Step 2 : find the document id and document name in documents table with largest value in the results of step 1 . [question] What is the document id and name with greatest number of paragraphs ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] you need to use city , is official and language in place of district , local name and local name respectively . also , verify that asia is used as the local name . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the district of the results of step 1 whose continent equals " T " and local name equals " Chinese " . [question] Whic ` h unique cities are in Asian countries where Chinese is the official language ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] You should find the number of rows in treatment table . [system description] find the number of rows in breeds table . [question] Count the number of dogs that went through a treatment . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Find course description whose course name equals math . [system description] find the number of rows in courses table whose course name equals " math " . [question] How is the math course described ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name ( math ) [C] course_description [C] other_details [T] departments [C] department_id [C] department_name ( math ) [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] You need to use likes table and grade . [system description] find the number of rows in high schooler table whose grade equals " Kyle " . [question] Return the number of likes that the high schooler named Kyle has . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] From Documents table name of the document should have Summer show which is equivalent to Document ID 's and look its figure of paragraphs table . [system description] find the number of rows in documents table whose document name like " Summer Show " . [question] Count the number of paragraphs in the document named 'Summer Show ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Summer Show ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Use airports table instead of airlines table . [system description] find the number of rows in airlines table . [question] How many airports do we have ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Additionally , search for name of department in step 3 . [system description] Step 1 : for each row in departments table , find the corresponding rows in degree programs table . Step 2 : find the number of rows of each value of degree programs 's department id of the results of step 1 . Step 3 : find the department name and number of rows of the results of step 1 with largest value in the results of step 2 . [question] For each department id , what is the name of the department with the most number of degrees ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] You need to find orchestra . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name and year of founded of the results of step 1 . [question] Show the names of conductors and the orchestras they have conducted . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Use document description in place of template type description . [system description] Step 1 : for each row in reference template types table , find the corresponding rows in templates table and in documents table . Step 2 : find the document id , document name , template type description of the results of step 1 . [question] What are the ids , names , and descriptions for all documents ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Make sure that district equals Gelderland . [system description] find the summation of population in country table . [question] What is the total population of Gelderland district ? [schema] [T] city [C] id [C] name [C] countrycode [C] district ( Gelderland ) [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] I want model , car names table and mpg . [system description] find the edispl in cars data table with largest value of weight . [question] What is the car wmodel with the highest mpg ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Be certain that those contries have Republic in their government form . [system description] find the average life expectancy in country table whose continent equals " Africa " . [question] What is the average life expectancy in African countries that are republics ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You need to use table of treatments . [system description] find the number of rows in breeds table . [question] How many dogs went through any treatments ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You need to replace name in place of grade and also search correlated row in likes table to id of Highschooler 's . [system description] find each value of grade in high schooler table along with the number of the corresponding rows to each value . [question] What are the names of high schoolers who have likes , and how many likes does each have ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Need to put name on behalf of grade . [system description] find the id in high schooler table whose grade equals " Kyle " . [question] Show the ID of the high schooler named Kyle . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] In step 2 and 3 , replace continent with name name . [system description] Step 1 : for each row in country table , find the corresponding rows in countrylanguage table . Step 2 : find the continent of the results of step 1 whose language equals " English " . Step 3 : for each row in country table , find the corresponding rows in countrylanguage table . Step 4 : find the continent of the results of step 3 whose language equals " French " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the names of nations speak both English and French ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , French ) [C] isofficial [C] percentage
[feedback] Use government form as code 2 is false . [system description] find the number of different code2 in country table whose continent equals " Africa " . [question] How many different forms of governments are there in Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Ensure people 's people id is present in poker player table . [system description] find the name in people table . [question] Return the names of all the poker players . [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
[feedback] first name is wrong . Use state in place of it . [system description] find the first name , last name , email address in owners table whose first name like " North " . [question] Return the first name , last name and email of the owners living in a state whose name contains the substring 'North ' . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Determine the largest value of language in countrylanguage table . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the name in country table with largest value in the results of step 1 . [question] Give the language that is spoken in the most countries . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Change gnp old with life expectancy and ensure that government form equals Republic . [system description] find the average gnp old in country table whose continent equals " Africa " . [question] Give the average life expectancy for countries in Africa which are republics ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Need to find car names 's model for largest count of make . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the number of rows of each value of model list 's model of the results of step 1 . Step 3 : find the edispl of the results of step 1 with largest value in the results of step 2 . [question] Which model has the most version ( make ) of cars ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Replace city with country in step 1 . [system description] Step 1 : find the name in city table ordered descending by population . Step 2 : only show the first 3 rows of the results . [question] Return the names of the 3 most populated countries . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Search each charge type in charges table along with the corresponding summation of charge amount . [system description] Step 1 : for each row in charges table , find the corresponding rows in treatments table . Step 2 : find each value of treatment type code of the results of step 1 along with the summation of charge amount of the corresponding rows to each value . [question] How much does each charge type costs ? List both charge type and amount . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Do not use the reference template type 's table but use paragraph 's table instead . [system description] find the number of rows in reference template types table . [question] Count the number of paragraphs . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] In steps 1 and 2 , you should replace loser 's name with winner 's name . [system description] Step 1 : find the loser name in matches table whose year equals 2013 . Step 2 : find the loser name in matches table whose year equals 2016 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] List the names of all winners who played in both 2013 and 2016 . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 1 , you should use the contestant 's number from the votes table in place of contestant 's name . [system description] Step 1 : find the number of rows of each value of contestant name in contestants table . Step 2 : find the contestant number and contestant name in contestants table whose corresponding value in step 1 is greater than or equals 2 . [question] What are the contestant numbers and names of the contestants who had at least two votes ? [schema] [T] area_code_state [C] area_code [C] state [T] contestants [C] contestant_number [C] contestant_name [T] votes [C] vote_id [C] phone_number [C] state [C] contestant_number [C] created
[feedback] Find number of rows in has pet table whose pet type equals dog and sex equals F . [system description] find the number of rows in pets table whose pet type equals " dog " and pet type equals " F " . [question] Find the number of dog pets that are raised by female students ( with sex F ) . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog ) [C] pet_age [C] weight
[feedback] you have to use name , language and english in place of continent , code 2 and t respectively.t should be the is official in both steps . [system description] Step 1 : find the continent in country table whose code2 equals " T " . Step 2 : find the continent in country table whose code2 equals " French " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of nations where both English and French are official languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , French ) [C] isofficial [C] percentage
[feedback] Use source airport instead of destination airport in step 1 , Exchange destination airport , flights table with airport code , airports table in step 2 . [system description] Step 1 : find the number of rows of each value of destination airport in flights table . Step 2 : find the destination airport in flights table with largest value in the results of step 1 . [question] What is the airport code of the airport with the most flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Find winner name whose tourney name equals Australian Open with largest value of winner rank points . [system description] find the winner name and loser rank in matches table with largest value of winner rank points . [question] Find the name of the winner who has the highest rank points and participated in the Australian Open tourney . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] find continent where people speaks largest number of languages . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the continent in country table with largest value in the results of step 1 . [question] Which continent speaks the most languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 exchange region with continent , In step 2 exchange continent with name name . [system description] Step 1 : find the maximum surface area in country table whose region equals " Europe " . Step 2 : find the continent in country table whose surface area greater than the results of step 1 . [question] What are the countries that have greater surface area than any country in Europe ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Europe ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Ensure that semester are identical and also look for the output of student id . [system description] Step 1 : for each row in students table , find the corresponding rows in student enrolment table . Step 2 : find the number of rows of each value of student enrolment 's student id of the results of step 1 . Step 3 : find the first name , middle name , last name of the results of step 1 whose corresponding value in step 2 is equals 2 . [question] What are the first , middle , and last names , along with the ids , of all students who enrolled in 2 degree programs in one semester ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Exchange destination airport with airport code in step 1 and step 2 [system description] Step 1 : find the number of rows of each value of destination airport in flights table . Step 2 : find the destination airport in flights table with smallest value in the results of step 1 . [question] Give the code of the airport with the least flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 , I want total rows of very value of id of course in student enrolment course table . [system description] Step 1 : find the number of rows of each value of course name in courses table . Step 2 : find the course name in courses table with largest value in the results of step 1 . [question] What 's the name of the course with most number of enrollments ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Make sure to arrange ID of document . [system description] Step 1 : find the number of rows of each value of document id in paragraphs table . Step 2 : find the document id and number of rows in paragraphs table ordered ascending by the results of step 1 . [question] Show all document ids and the number of paragraphs in each document . Order by document id . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You can use Id of template as ID of document is not correct . [system description] find the document name and document id in documents table whose document description like " w " . [question] Return the names and template ids for documents that contain the letter w in their description . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Use pet age of Pet table instead of Age . [system description] find the last name in student table whose age equals 3 . [question] What is the last name of the student who has a cat that is 3 years old ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( cat ) [C] pet_age [C] weight
[feedback] Require dogs table in place of owners table in 1st step . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id , first name , last name in owners table with largest value in the results of step 1 . [question] Which owner owns the most dogs ? List the owner id , first name and last name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] In step 1 , you should only use the section 's table . [system description] Step 1 : find the number of rows of each value of course id in courses table . Step 2 : find the course name and course id in courses table whose corresponding value in step 1 is less than 2 . [question] What are the names and ids of every course with less than 2 sections ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] should be or not and [system description] find the summation of surface area in country table whose continent equals " Europe " and continent equals " Asia " . [question] What is the total surface area of the continents Asia and Europe ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Europe , Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Remove written by equals Ben Jones and " phrase . [system description] find the title in cartoon table whose written by equals " Ben Jones " and directed by equals " Ben Jones " . [question] What are the names of all cartoons directed by Ben Jones ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Ensure to find largest value of created . [system description] find the created in votes table whose state equals " CA " . [question] What is last date created of votes from the state 'CA ' ? [schema] [T] area_code_state [C] area_code [C] state ( CA ) [T] contestants [C] contestant_number [C] contestant_name [T] votes [C] vote_id [C] phone_number [C] state ( CA ) [C] contestant_number [C] created
[feedback] You need to utilize table of flights . [system description] find the number of rows in airlines table . [question] How many flights do we have ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Verify that students are enrolled in course having distinct transcripts . [system description] find each value of course id in student enrolment courses table along with the number of the corresponding rows to each value . [question] How many times at most can a course enrollment result show in different transcripts ? Also show the course enrollment id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] swap between region and continent as well as between continent and name . [system description] Step 1 : find the surface area in country table whose region equals " Europe " . Step 2 : find the continent in country table whose surface area greater than the results of step 1 . [question] Which countries have greater area than that of any country in Europe ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Europe ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 , owners table should be replaced by dogs table . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id , first name , last name in owners table with largest value in the results of step 1 . [question] Which owner owns the most dogs ? List the owner id , first name and last name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Add car makers table , replace make id , cont id and model list 's model with id , maker and car names ' model respectively . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table . Step 2 : find the make id and model id of the results of step 1 whose model list 's model greater than or equals 2 . Step 3 : for each row in model list table , find the corresponding rows in car names table . Step 4 : find the make id and model id of the results of step 3 whose model list 's model greater than 3 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Which are the car makers which produce at least 2 models and more than 3 car makes ? List the id and the maker . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] also show singer 's name [system description] Step 1 : for each row in singer table , find the corresponding rows in song table . Step 2 : find each value of song 's singer id of the results of step 1 along with the name and summation of sales of the corresponding rows to each value . [question] Show the names of singers and the total sales of their songs . [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] Substitute reference template types table with templates table . [system description] find the number of rows in reference template types table . [question] Count the number of templates . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] I want the name of teacher . [system description] Step 1 : for each row in teacher table , find the corresponding rows in course arrange table . Step 2 : find each value of course arrange 's teacher id of the results of step 1 along with the number of the corresponding rows to each value . [question] What are the names of the teachers and how many courses do they teach ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] Interchange battle table for ship table . [system description] find without repetition id and name in ship table whose ship type equals " Brig " . [question] What are the different ids and names of the battles that lost any 'Brig ' type shipes ? [schema] [T] battle [C] id [C] name [C] date [C] bulgarian_commander [C] latin_commander [C] result [T] ship [C] lost_in_battle [C] id [C] name [C] tonnage [C] ship_type ( Brig ) [C] location [C] disposition_of_ship [T] death [C] caused_by_ship_id [C] id [C] note [C] killed [C] injured
[feedback] in car makers table use all the number of rows which is corresponds to continent . [system description] find each value of continent in continents table along with the number of the corresponding rows to each value . [question] What is the name of each continent and how many car makers are there in each one ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find number of paragraphs table whose Document ID 's corresponding Documents 's document name contains Summer Show . [system description] find the number of rows in documents table whose document name like " Summer Show " . [question] Count the number of paragraphs in the document named 'Summer Show ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Summer Show ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] In step 1 correspond with countrylanguage too . In step 2 Switch country 's name with countrylanguage 's language . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the city 's name of the results of step 1 whose country 's name equals " English " with largest value of city 's population . [question] Find the city with the largest population that uses English . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] I want the id of student from friend table in step 2 . [system description] Step 1 : find the id in high schooler table . Step 2 : find the liked id in likes table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Show ids of all students who do not have any friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Exchange local name with region and region with city 's name name . [system description] find the local name in country table whose region equals " Kabul " . [question] Which region is the city Kabul located in ? [schema] [T] city [C] id [C] name ( Kabul ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Replace area code state table with votes table in step 1 . [system description] Step 1 : find the number of rows of each value of state in area code state table . Step 2 : find the area code in area code state table with largest value in the results of step 1 . [question] What is the area code in which the most voters voted ? [schema] [T] area_code_state [C] area_code [C] state [T] contestants [C] contestant_number [C] contestant_name [T] votes [C] vote_id [C] phone_number [C] state [C] contestant_number [C] created
[feedback] population should be greater than population of countries of continent equals Africa instead of 103000 . [system description] find the name in country table whose continent equals " Asia " and population greater than 103000 . [question] Which Asian countries have a population that is larger than any country in Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa , Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Use line 2 in place of first name in step 2 . [system description] Step 1 : for each row in addresses table , find the corresponding rows in students table . Step 2 : find the first name and line 1 of the results of step 1 . [question] What is the first and second line for all addresses ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Put transcripts table in place of addresses table . [system description] find the number of rows in addresses table . [question] How many transcripts are released ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] No need to find grade in step 2 . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find each value of student id of the results of step 1 along with the number of the corresponding rows to each value . [question] Show the names of high school students and their corresponding number of friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Replace document id , template id and documents table with paragraph id , paragraph text and paragraphs table . [system description] find the document id and template id in documents table whose document name equals " Welcome to NY " . [question] Show all paragraph ids and texts for the document with name 'Welcome to NY ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Welcome to NY ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You should use the phrase " state contains North " . [system description] find the first name , last name , email address in owners table whose first name like " North " . [question] Which owners live in the state whose name contains the substring 'North ' ? List his first name , last name and email . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You have to arrange in descending order . [system description] find the section name in sections table ordered ascending by section name . [question] List the section_name in reversed lexicographical order . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] From step 1 , I want student id of friend table . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table whose corresponding value in step 1 is greater than or equals 3 . [question] Show the names of high schoolers who have at least 3 friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Ensure Courses ' course id is present in student enrolment courses table . [system description] find the course name in courses table . [question] What are all the course names of the courses which ever have students enrolled in ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Look for the rank of greatest loser . [system description] find the loser rank in matches table . [question] Find the highest rank of losers in all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Take name name in place of continent in step 2 and 3 . [system description] Step 1 : for each row in country table , find the corresponding rows in countrylanguage table . Step 2 : find the continent of the results of step 1 whose language equals " English " . Step 3 : for each row in country table , find the corresponding rows in countrylanguage table . Step 4 : find the continent of the results of step 3 whose language equals " French " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Give the names of nations that speak both English and French . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , French ) [C] isofficial [C] percentage
[feedback] Find countrylanguage 's language which are used most number of times for continent equals Asia . [system description] find the name in country table whose continent equals " Asia " with largest value of population . [question] What is the language that is used by the largest number of Asian nations ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find date departed , date arrived of dogs table which Dogs 's dog id present in Treatments 's dog id . [system description] find the date departed and date of birth in dogs table whose gender equals 1 . [question] Find the arriving date and the departing date of the dogs that received a treatment . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Supersede date adopted with date of treatment in step 2 . [system description] Step 1 : for each row in dogs table , find the corresponding rows in professionals table and in treatments table . Step 2 : find the date adopted and first name of the results of step 1 . [question] List the date of each treatment , together with the first name of the professional who operated it . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] In step 2 , you have to use sum of winner rank points . [system description] Step 1 : find the number of rows of each value of winner name in matches table . Step 2 : find the winner name and loser rank in matches table with largest value in the results of step 1 . [question] What is the name of the winner who has won the most matches , and how many rank points does this player have ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] exchange airports table with flights and ensure that destination airport code corresponds to city equals Aberdeen . [system description] find the number of rows in airports table whose city equals " Aberdeen " . [question] How many flights arriving in Aberdeen city ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 Substitute matches with rankings , In step 2 substitute winner rank with ranking . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of first name of the results of step 1 along with the average winner rank of the corresponding rows to each value . [question] Find the average ranking for each player and their first name . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] use name instead of continent in step 2 and 3 . [system description] Step 1 : for each row in country table , find the corresponding rows in countrylanguage table . Step 2 : find the continent of the results of step 1 whose language equals " English " . Step 3 : for each row in country table , find the corresponding rows in countrylanguage table . Step 4 : find the continent of the results of step 3 whose language equals " French " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the names of nations speak both English and French ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , French ) [C] isofficial [C] percentage
[feedback] You need to utilize table of flights rather than table of airports . [system description] find the number of rows in airports table whose city equals " Abilene " or city equals " Aberdeen " . [question] Find the number of flights landing in the city of Aberdeen or Abilene . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Abilene  , Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] i want the number of rows of model list along with full name for each model corresponding to each id of car makers . [system description] Step 1 : for each row in car makers table , find the corresponding rows in model list table . Step 2 : find each value of id of the results of step 1 along with the number of the corresponding rows to each value . [question] What is the number of car models that are produced by each maker and what is the id and full name of each maker ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] You need to use language of country language . [system description] Step 1 : find rows in country table whose continent equals " Asia " . Step 2 : find the number of rows of each value of code2 the results of step 1 . Step 3 : find the code2 the results of step 1 with largest value in the results of step 2 . [question] Which language is the most popular on the Asian continent ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find the number of rows in country table whose continent equals Asia . [system description] find the number of rows in city table . [question] Count the number of countries in Asia . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Replace horsepower with edispl . [system description] find the average horsepower in cars data table . [question] What is the average edispl for all volvos ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( volvo ) [C] fullname ( Volvo ) [C] country [T] model_list [C] modelid [C] maker [C] model ( volvo ) [T] car_names [C] makeid [C] model ( volvo ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find tours of ranking table for each value of ranking date . [system description] find each value of winner rank in matches table along with the number of the corresponding rows to each value . [question] Find the total number of tours for each ranking date . [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Find different template type code of reference template types table which used for documents . [system description] find the number of rows in reference template types table . [question] Count the number of different templates used for documents . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] I want original air date . [system description] find the title and directed by in cartoon table ordered ascending by title . [question] list all cartoon titles and their directors ordered by their air date [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] In step 1 , you should provide the id of student from likes table . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table with largest value in the results of step 1 . [question] What is the name of the high schooler who has the greatest number of likes ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] You need to drop And directed by equals Ben Jones . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . [question] which countries ' tv channels are playing some cartoon written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] Use government form in place of continent . [system description] find the number of rows in country table whose continent equals " Republic " . [question] How many countries have a republic as their form of government ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Make sure we determine the largest value of created . [system description] find the created in votes table whose state equals " CA " . [question] What is last date created of votes from the state 'CA ' ? [schema] [T] area_code_state [C] area_code [C] state ( CA ) [T] contestants [C] contestant_number [C] contestant_name [T] votes [C] vote_id [C] phone_number [C] state ( CA ) [C] contestant_number [C] created
[feedback] Find the number of rows of country table whose government form equals republics . [system description] find the number of different continent in country table . [question] How many countries have governments that are republics ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Change make id with id in both step , ensure count of car is greater than 3 in step3 . [system description] Step 1 : for each row in car makers table , find the corresponding rows in model list table and in car names table . Step 2 : find the make id and car makers 's maker of the results of step 1 whose model list 's model greater than or equals 2 . Step 3 : for each row in car makers table , find the corresponding rows in model list table and in car names table . Step 4 : find the make id and car makers 's maker of the results of step 3 whose model list 's model greater than 3 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] There should be student id , friend table , not grade , high schooler table in step 1 . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table with largest value in the results of step 1 . [question] What is the name of the high schooler who has the greatest number of friends ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] It should find maximum accelerate instead of maximum cylinders . [system description] find each value of cylinders in cars data table along with the accelerate and maximum cylinders of the corresponding rows to each value . [question] What is the maximum accelerate for different number of cylinders ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] High definition tv should be replace by Pixel aspect ratio par . [system description] find the hight definition tv and country in tv channel table whose language not equals " English " . [question] What is the pixel aspect ratio and country of origin for all TV channels that do not use English ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language ( English ) [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Change continent with surface area and Also Add continent equals North America . [system description] find the summation of population and average continent in country table whose surface area greater than 3000 . [question] Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000 . [schema] [T] city [C] id [C] name ( Americana ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 2 Replace country name of countries table with country of car makers table . [system description] Step 1 : find the country name in countries table . Step 2 : find the country name in countries table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of the countries with no car makers ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] i want the name in-place of local name . [system description] find the continent in country table whose local name equals " Anguilla " . [question] Which continent is Anguilla in ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Anguilla ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Anguilla ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You have to use the age of winner . [system description] find the average loser age and average loser age in matches table . [question] What are the average ages of losers and winners across matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] i want the total of charge amount and total cost of treatment from treatments table . [system description] Step 1 : for each row in charges table , find the corresponding rows in owners table . Step 2 : find the summation of charge amount of each value of owner id of the results of step 1 . Step 3 : find the owner id and zip code of the results of step 1 with largest value in the results of step 2 . [question] Which owner has paid the largest amount of money in total for their dogs ? Show the owner id and zip code . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] sections table must be used in place of courses table in step 1 . [system description] Step 1 : find the number of rows of each value of course id in courses table . Step 2 : find the course name and course id in courses table whose corresponding value in step 1 is less than 2 . [question] What are the names and ids of every course with less than 2 sections ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Ensure year equals 1974 and cylinders equals 8 . [system description] find the minimum weight in cars data table whose year equals 1 . [question] What is the smallest weight of the car produced with 8 cylinders on 1974 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] You need to find rows count of flights for United airlines having Aberdeen as a destination airline . [system description] find the number of rows in airports table whose country equals " Aberdeen " and city equals " United Airlines " . [question] How many United Airlines flights go to City 'Aberdeen ' ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Replace first " transcript id " with Transcripts 's transcript date in step 2 . [system description] Step 1 : find the number of rows of each value of transcript id in transcript contents table . Step 2 : find the transcript id and transcript id in transcript contents table with smallest value in the results of step 1 . [question] Show the date of the transcript which shows the least number of results , also list the id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] I want the orchestra 's record company in step 2 . [system description] Step 1 : for each row in orchestra table , find the corresponding rows in performance table . Step 2 : find each value of performance 's orchestra id of the results of step 1 along with the number of the corresponding rows to each value . [question] How many orchestras does each record company manage ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Change continent with code In step 1 and 3 . [system description] Step 1 : find the continent in country table . Step 2 : for each row in country table , find the corresponding rows in countrylanguage table . Step 3 : find the continent of the results of step 2 whose language equals " English " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Return the country codes for countries that do not speak English . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] have to find for whose corresponding feature name equals to AirCon . [system description] find the feature type name in reference feature types table . [question] What is the feature type name of feature AirCon ? [schema] [T] ref_feature_types [C] feature_type_code [C] feature_type_name [T] ref_property_types [C] property_type_code [C] property_type_description [T] other_available_features [C] feature_id [C] feature_type_code [C] feature_name ( AirCon ) [C] feature_description [T] properties [C] property_id [C] property_type_code [C] date_on_market [C] date_sold [C] property_name [C] property_address [C] room_count [C] vendor_requested_price [C] buyer_offered_price [C] agreed_selling_price [C] apt_feature_1 [C] apt_feature_2 [C] apt_feature_3 [C] fld_feature_1 [C] fld_feature_2 [C] fld_feature_3 [C] hse_feature_1 [C] hse_feature_2 [C] hse_feature_3 [C] oth_feature_1 [C] oth_feature_2 [C] oth_feature_3 [C] shp_feature_1 [C] shp_feature_2 [C] shp_feature_3 [C] other_property_details [T] other_property_features [C] property_id [C] feature_id [C] property_feature_description
[feedback] You need to utilize table of documents . [system description] find the number of rows in templates table whose template type code equals " PPT " . [question] Count the number of documents that use the PPT template type . [schema] [T] ref_template_types [C] template_type_code ( PPT ) [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code ( PPT ) [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] It should be largest value of mpg not accelerate . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the model list 's model of the results of step 1 with largest value of accelerate . [question] Which model saves the most gasoline ? That is to say , have the maximum miles per gallon . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Make sure to find loser rank which repeats most number of times . [system description] find the loser rank in matches table . [question] What is the best rank of losers across all matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] supersede stadium table with singer table . [system description] find the number of rows in stadium table . [question] How many singers do we have ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] You need to use teacher table . [system description] find the number of rows in course table . [question] How many teachers are there ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] attach flights table . confirm that the city is aberdeen and airline is united citys as well as airport code is destination airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " Aberdeen " and airlines 's country equals " United Airlines " . [question] Count the number of United Airlines flights that arrive in Aberdeen . [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Supersede documents table with paragraphs table . [system description] find the number of rows in documents table whose document name equals " Summer Show " . [question] How many paragraphs for the document with name 'Summer Show ' ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Summer Show ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Interchange population with surface area . [system description] Step 1 : find the name and surface area in country table ordered descending by population . Step 2 : only show the first 5 rows of the results . [question] Return the names and surface areas of the 5 largest countries . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Remove " and directed by equals Ben Jones " . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . [question] which countries ' tv channels are playing some cartoon written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] Need to find model with highest value of horsepower whose cylinders equals 4 . [system description] Step 1 : find the number of rows of each value of model in model list table . Step 2 : find the model in model list table with largest value in the results of step 1 . [question] For all of the 4 cylinder cars , which model has the most horsepower ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Supersede continent with countrycode and country table with countrylanguage table in step 1 . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the name in country table with largest value in the results of step 1 . [question] Give the name of the nation that uses the greatest amount of languages . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Need to find year of work in place of year of founded . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name of the results of step 1 with largest value of year of founded . [question] List the name of the conductor with the most years of work . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] edispl is wrong . Take horsepower in place of it . [system description] find the average edispl in cars data table whose year less than 1980 . [question] What is the average horsepower of the cars before 1980 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Here only need to find country whose written by should not be equals to Todd Casey [system description] Step 1 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 2 : find the country of the results of step 1 whose written by equals " Michael Jelenic " . Step 3 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 4 : find the country of the results of step 3 whose written by equals " Todd Casey " and directed by equals " Ben Jones " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [question] What are the countries that are not playing cartoons written by Todd Casey ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Todd Casey ) [C] original_air_date [C] production_code [C] channel
[feedback] find corresponding rows to each value of teacher id in course arrange . [system description] find each value of name in teacher table along with the number of the corresponding rows to each value . [question] Show names of teachers and the number of courses they teach . [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] You have to assure the presence of student id in friend and likes table in step 1 and 2 respectively . [system description] Step 1 : find the name in high schooler table whose grade equals 9 . Step 2 : find the name in high schooler table whose grade equals 9 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of high schoolers who both have friends and are liked ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] You need to use teacher table . [system description] find the number of rows in course table . [question] What is the total count of teachers ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] In both step 2 and in step 3 exchange loser ioc with tourney name . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the first name and country code of the results of step 1 whose loser ioc equals " WTA Championships " . Step 3 : for each row in players table , find the corresponding rows in matches table . Step 4 : find the first name and country code of the results of step 3 whose loser ioc equals " Australian Open " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the first names and country codes for players who won both the WTA Championships and the Australian Open ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open , WTA Championships ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Make sure to find number products for each shop in step 1 . [system description] Step 1 : find the number of rows of each value of shop id in shop table . Step 2 : find the manager name and district in shop table with largest value in the results of step 1 . [question] What are the manager name and district of the shop that sells the largest number of products ? [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Display number of rows of countrylanguage table whose country equals Afghanistan , mention is official equals T . [system description] find the number of different code2 in country table . [question] How many official languages does Afghanistan have ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Afghanistan ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] use language of countrylanguage in place of continent . [system description] find the number of rows in country table whose continent equals " Chinese " . [question] How many continents speak Chinese ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] You need to find car makers table , Search for weight above 3500 and cylinders equivalent with General motors . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find without repetition model list 's model of the results of step 1 whose horsepower greater than 3500 or horsepower equals " General Motors " . [question] What are the different models created by either the car maker General Motors or weighed more than 3500 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname ( General Motors ) [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 2 Supersede treatment type code with size code . [system description] Step 1 : for each row in breeds table , find the corresponding rows in dogs table and in treatments table . Step 2 : find without repetition breed name and treatment type code of the results of step 1 . [question] Find the distinct breed type and size type combinations for dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Find number of rows of language in countrylanguage table . [system description] find the code2 in country table with largest value of continent . [question] Which language is spoken by the largest number of countries ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Semester id which does not exist in the student enrolment table look for such name of semester . [system description] Step 1 : find the semester name in semesters table . Step 2 : find the course name in courses table whose course name not one of the results of step 1 . [question] What is the name of the semester with no students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 1 , you should use student id of friend table instead of grade of high schooler table . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table with largest value in the results of step 1 . [question] Return the name of the high school student with the most friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Make sure to arrange Id of documents . [system description] Step 1 : find the number of rows of each value of document id in paragraphs table . Step 2 : find the document id and number of rows in paragraphs table ordered ascending by the results of step 1 . [question] Return the different document ids along with the number of paragraphs corresponding to each , ordered by id . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You need to look for correlated rows in course arrange to all value of teacher id . [system description] find each value of name in teacher table along with the number of the corresponding rows to each value . [question] Show names of teachers and the number of courses they teach . [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] You have to replace " smallest value of Template Type Code " with " smallest value of version number instead of " . [system description] find the rows and template type code in templates table with smallest value of template type code . [question] What the smallest version number and its template type code ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You need to replace address with transcripts . [system description] find the number of rows in addresses table . [question] How many transcripts are listed ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Highest age is required , not the lowest . [system description] find the age in dogs table with smallest value of age . [question] What is the age of the oldest dog ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] In step 2 , Supplant performance 's orchestra id with orchestra 's record company . [system description] Step 1 : for each row in orchestra table , find the corresponding rows in performance table . Step 2 : find each value of performance 's orchestra id of the results of step 1 along with the number of the corresponding rows to each value . [question] How many orchestras does each record company manage ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] You need look for student having lowest date for first registration . [system description] find the first name , middle name , last name in students table . [question] Who is the first student to register ? List the first name , middle name and last name . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 1 find minimum population and swap Africa with Asia , in step 2 government form with name name . [system description] Step 1 : find the population in country table whose continent equals " Africa " . Step 2 : find the government form in country table whose population less than the results of step 1 . [question] What are the African countries that have a population less than any country in Asia ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia , Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Make sure first registered date is small . [system description] find the first name , middle name , last name in students table . [question] What is the first , middle , and last name of the first student to register ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] i want the language mentioned in countrylanguage table . make certain that t is the corresponding is official . [system description] find the number of different code2 in country table whose indepdent year less than 1930 . [question] What is the total number of unique official languages spoken in the countries that are founded before 1930 ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You need to calculate number of rows of paragraphs table . [system description] find the number of rows in reference template types table . [question] How many paragraphs in total ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Find for student whose date first registered value is smallest . [system description] find the first name , middle name , last name in students table . [question] Who is the first student to register ? List the first name , middle name and last name . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Find first name , last name of student table whose pet type equals cat and pet type equals dog . [system description] Step 1 : for each row in student table , find the corresponding rows in has pet table and in pets table . Step 2 : find the first name of the results of step 1 whose pet type equals " cat " . Step 3 : for each row in has pet table , find the corresponding rows in pets table . Step 4 : find the has pet 's student id of the results of step 3 whose pet type equals " dog " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find the name of students who have both cat and dog pets . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog , cat ) [C] pet_age [C] weight
[feedback] You need to search name of a country where highest amount of languages are used . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the continent in country table with largest value in the results of step 1 . [question] What is name of the country that speaks the largest number of languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Need to ensure " Pet 's pet age " in place of " Age " . [system description] find the last name in student table whose age equals 3 . [question] What is the last name of the student who has a cat that is 3 years old ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( cat ) [C] pet_age [C] weight
[feedback] Ensure to swap " greater than " and " less than " with each other . [system description] Step 1 : find the citizenship in singer table whose birth year greater than 1945 . Step 2 : find the citizenship in singer table whose birth year less than 1955 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the citizenships that are shared by singers with a birth year before 1945 and after 1955 ? [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] in step 1 use cost of treatment of treatments and in step 3 use treatments 's cost of treatment of treatment . [system description] Step 1 : for each row in charges table , find the corresponding rows in professionals table . Step 2 : find the average charge amount in charges table . Step 3 : find the first name and last name of the results of step 1 whose charge amount less than the results of step 2 . [question] What are the first name and last name of the professionals who have done treatment with cost below average ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Need to replace last name , lowest winner name value with name of loser and minutes highest value . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the winner name and last name of the results of step 1 with smallest value of winner name . [question] What are the names of the winner and loser who played in the longest match ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] in step 1 , use student enrolment instead [system description] Step 1 : find the number of rows of each value of semester id in semesters table . Step 2 : find the semester name and semester id in semesters table with largest value in the results of step 1 . [question] For each semester , what is the name and id of the one with the most students registered ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] in step 2 make sure it is the same semester . also output student id [system description] Step 1 : for each row in students table , find the corresponding rows in student enrolment table . Step 2 : find the number of rows of each value of student enrolment 's student id of the results of step 1 . Step 3 : find the first name , middle name , last name of the results of step 1 whose corresponding value in step 2 is equals 2 . [question] What are the first , middle , and last names , along with the ids , of all students who enrolled in 2 degree programs in one semester ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Exchange departments table with degree programs table . [system description] find the number of rows in departments table whose department name equals " engineer " . [question] How many degrees does the engineering department offer ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] in step 2 , i want the name of country , country id , country id table . [system description] Step 1 : find the number of rows of each value of country in car makers table . Step 2 : find the country and id in car makers table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the countries having at least one car maker ? List name and id . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want the rows count from airport table . [system description] find the number of rows in airlines table . [question] Return the number of airports . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Add flights table . Ensure city equals Aberdeen , airline equals United airlines , Make sure airport code equals destination airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " Aberdeen " and airlines 's country equals " United Airlines " . [question] Count the number of United Airlines flights that arrive in Aberdeen . [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Need to replace loser id with hand . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of loser id of the results of step 1 along with the number of the corresponding rows to each value . [question] How many players are there for each hand type ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 1 change friend table with likes table . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find the number of rows of each value of student id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 2 . [question] What are the names of students who have 2 or more likes ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] in step 2 , i want date of treatment . [system description] Step 1 : for each row in dogs table , find the corresponding rows in professionals table and in treatments table . Step 2 : find the date adopted and first name of the results of step 1 . [question] List the date of each treatment , together with the first name of the professional who operated it . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You should use directed by instead of written by . [system description] find the title in cartoon table whose written by equals " Ben Jones " or directed by equals " Brandon Vietti " . [question] List the title of all cartoon directed by " Ben Jones " or " Brandon Vietti " . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Brandon Vietti , Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Need to ensure Country 's corresponding country name equals france instead of " Country equals france " . [system description] find the number of rows in car makers table whose country equals " france " . [question] What is the number of makers of care in France ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname ( france ) [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 , I want the likes table . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find the number of rows of each value of student id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 2 . [question] Show the names of students who have at least 2 likes . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] you need to swap between charges and treatments table in step 2 and in each and every step use cost of treatment , treatments tabl . [system description] Step 1 : for each row in charges table , find the corresponding rows in professionals table . Step 2 : find the average charge amount in charges table . Step 3 : find the first name and last name of the results of step 1 whose charge amount less than the results of step 2 . [question] Which professionals have operated a treatment that costs less than the average ? Give me theor first names and last names . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] use flights and for ashley and aberdeen search for source airportiation . [system description] find the number of rows in airports table whose airport name equals " Ashley " and city equals " Aberdeen " . [question] How many flights depart from City 'Aberdeen ' and have destination City 'Ashley ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  , Ashley  ) [C] airportcode [C] airportname ( Ashley  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] in step 1 , you should use source airport instead of destination airport and also from step 2 , i want airport code and airports table . [system description] Step 1 : find the number of rows of each value of destination airport in flights table . Step 2 : find the destination airport in flights table with largest value in the results of step 1 . [question] What is the airport code of the airport with the most flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Make sure to find number of similar rows for all singer in concert 's singer id . [system description] find each value of name in singer table along with the number of the corresponding rows to each value . [question] What are the names of the singers and number of concerts for each person ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] airports is to changed with flights and find source airport for Ashley and destination airport for Aberdeen . [system description] find the number of rows in airports table whose airport name equals " Ashley " and city equals " Aberdeen " . [question] How many flights depart from City 'Aberdeen ' and have destination City 'Ashley ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  , Ashley  ) [C] airportcode [C] airportname ( Ashley  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Additionally , equivalent model of model list table . [system description] find the maker in car makers table . [question] What are all the makers and models ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want id of student . [system description] Step 1 : for each row in students table , find the corresponding rows in student enrolment table . Step 2 : find the number of rows of each value of student enrolment 's student id of the results of step 1 . Step 3 : find the first name , middle name , last name of the results of step 1 whose corresponding value in step 2 is equals 2 . [question] Who are enrolled in 2 degree programs in one semester ? List the first name , middle name and last name and the id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 2 also find name . [system description] Step 1 : for each row in shop table , find the corresponding rows in hiring table . Step 2 : find each value of hiring 's shop id of the results of step 1 along with the number of the corresponding rows to each value . [question] For each shop , return the number of employees working there and the name of the shop . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Swap continent with name name . [system description] find the continent in country table whose indepdent year greater than 1950 . [question] Give the names of the nations that were founded after 1950 . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 , you need to find Id of orchestra from table of performance . [system description] Step 1 : find the number of rows of each value of year of founded in orchestra table . Step 2 : find the year of founded in orchestra table whose corresponding value in step 1 is greater than 1 . [question] What are years of founding for orchestras that have had more than a single performance ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] You need to use feature types in place of feature . [system description] find the number of rows in reference feature types table . [question] How many available features are there in total ? [schema] [T] ref_feature_types [C] feature_type_code [C] feature_type_name [T] ref_property_types [C] property_type_code [C] property_type_description [T] other_available_features [C] feature_id [C] feature_type_code [C] feature_name [C] feature_description [T] properties [C] property_id [C] property_type_code [C] date_on_market [C] date_sold [C] property_name [C] property_address [C] room_count [C] vendor_requested_price [C] buyer_offered_price [C] agreed_selling_price [C] apt_feature_1 [C] apt_feature_2 [C] apt_feature_3 [C] fld_feature_1 [C] fld_feature_2 [C] fld_feature_3 [C] hse_feature_1 [C] hse_feature_2 [C] hse_feature_3 [C] oth_feature_1 [C] oth_feature_2 [C] oth_feature_3 [C] shp_feature_1 [C] shp_feature_2 [C] shp_feature_3 [C] other_property_details [T] other_property_features [C] property_id [C] feature_id [C] property_feature_description
[feedback] Change content with id In step 1 and content , written by with Cartoon 's id , directed by In step 3 . [system description] Step 1 : find the content in tv channel table . Step 2 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 3 : find the content of the results of step 2 whose written by equals " Ben Jones " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] find the id of tv channels that do not play any cartoon directed by Ben Jones . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] In step 1 , you should use the degree program and in step 2 and 3 you should use the degree 's summary name . [system description] Step 1 : for each row in semesters table , find the corresponding rows in student enrolment table . Step 2 : find the student enrolment 's semester id of the results of step 1 whose semester name equals " Master " . Step 3 : for each row in semesters table , find the corresponding rows in student enrolment table . Step 4 : find the student enrolment 's semester id of the results of step 3 whose semester name equals " Bachelor " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What is the id of the semester that had both Masters and Bachelors students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Ensure to find number of the corresponding rows to each value of singer in concert 's singer id . [system description] find each value of name in singer table along with the number of the corresponding rows to each value . [question] What are the names of the singers and number of concerts for each person ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] give me the total of population having language other than english . [system description] Step 1 : find the countrycode in countrylanguage table whose language equals " English " . Step 2 : find the population in country table whose continent not one of the results of step 1 . [question] How many people live in countries that do not speak English ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] Replace age with pet age . [system description] find the last name in student table whose age equals 3 . [question] Find the last name of the student who has a cat that is age 3 . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( cat ) [C] pet_age [C] weight
[feedback] You should delete the phrase " for which grade equals 9 " . [system description] find without repetition grade in high schooler table whose grade equals 9 . [question] Show all the grades of the high schoolers . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] model id is wrong in step 3 , find car makers 's id in place of that . [system description] Step 1 : for each row in car makers table , find the corresponding rows in model list table . Step 2 : find the number of rows of each value of model id of the results of step 1 . Step 3 : find the full name and model id of the results of step 1 whose corresponding value in step 2 is greater than 3 . [question] What are the names and ids of all makers with more than 3 models ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] I want similar dogs size code . [system description] find the first name , last name , owner id in owners table . [question] List each owner 's first name , last name , and the size of his for her dog . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You need to utilize documents table . [system description] find the number of rows in reference template types table . [question] Count the number of documents . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Do n't search for the mean of all mean . [system description] Step 1 : find the average average of each value of stadium id in stadium table . Step 2 : find the name and capacity in stadium table with largest value in the results of step 1 . [question] What is the name and capacity for the stadium with the highest average attendance ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] You should use flights rather than airlines . [system description] find the number of rows in airlines table . [question] Return the number of flights . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 2 Substitute channel with country , In step 3 Substitute content with id . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in tv series table . Step 2 : find the number of rows of each value of channel of the results of step 1 . Step 3 : find the content of the results of step 1 whose corresponding value in step 2 is greater than 2 . [question] find id of the tv channels that from the countries where have more than two tv channels . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] In step 1 replace car names table car makers , Step 2 find whose weight beyond 3500 and cylinders equals General Motors . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find without repetition model list 's model of the results of step 1 whose horsepower greater than 3500 or horsepower equals " General Motors " . [question] What are the different models created by either the car maker General Motors or weighed more than 3500 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname ( General Motors ) [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] You have to search in countrylanguage table for total number of rows of language . [system description] find the code2 in country table with largest value of continent . [question] Which language is spoken by the largest number of countries ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] episode and title can be replaced by air date and episode respectively . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in tv series table and in cartoon table . Step 2 : find the episode of the results of step 1 whose title equals " A Love of a Lifetime " . [question] When did the episode " A Love of a Lifetime " air ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode ( A Love of a Lifetime ) [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Exchange grade in high schooler table with student id in friend table in step 1 . [system description] Step 1 : find the number of rows of each value of grade in high schooler table . Step 2 : find the name in high schooler table with largest value in the results of step 1 . [question] Return the name of the high school student with the most friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] You need to just search for the version number in step 2 . [system description] Step 1 : for each row in templates table , find the corresponding rows in documents table . Step 2 : find the number of rows of each value of documents 's template id of the results of step 1 . Step 3 : find the version number and template type code of the results of step 1 whose corresponding value in step 2 is greater than 5 . [question] Return the version numbers and template type codes of templates with a version number greater than 5 . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You have search for the rows count of country table whose government form equivalent to republics . [system description] find the number of different continent in country table . [question] How many countries have governments that are republics ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Use original air date in place of second title . [system description] find the title and directed by in cartoon table ordered ascending by title . [question] list all cartoon titles and their directors ordered by their air date [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] I want date of birth and rank of winner points . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the first name , country code , loser age of the results of step 1 with largest value of winner rank . [question] Find the first name , country code and birth date of the winner who has the highest rank points in all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Make sure to find distinct series name and distinct content in tv channel table . [system description] find the number of different episode and number of rows in tv series table . [question] How many different series and contents are listed in the TV Channel table ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Change car makers table with model list table and remove last full name equals American Motor Company . [system description] find the number of rows in car makers table whose full name equals " American Motor Company " and full name equals " American Motor Company " . [question] How many car models were produced by the maker with full name American Motor Company ? [schema] [T] continents [C] contid [C] continent ( america ) [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname ( American Motor Company ) [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find semester name of semesters table whose semester id is n't present in student enrolment table . [system description] Step 1 : find the student enrolment 's semester id in student enrolment table . Step 2 : find the semesters 's semester id in semesters table whose semesters 's semester id not one of the results of step 1 . [question] Which semesters do not have any student enrolled ? List the semester name . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Add flights table in step 1 , change airports 's country with airlines 's airline and airline with source airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " United Airlines " and airline name equals " AHD " . [question] Return the number of United Airlines flights leaving from AHD Airport . [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] Need to find largest loser rank . [system description] find the loser rank in matches table . [question] Find the highest rank of losers in all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Need to find continent with largest number of distinct languages spoken in it . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the continent in country table with largest value in the results of step 1 . [question] Which continent has the most diverse languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Need to use id of document in step 1 and 2 and paragraphs table in place of documents table in step 1 . [system description] Step 1 : find the number of rows of each value of template id in documents table . Step 2 : find the template id in documents table whose corresponding value in step 1 is greater than or equals 2 . [question] List all document ids with at least two paragraphs . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Use model , car names table , mpg instead of edispl , cars data table , weight respectively . [system description] find the edispl in cars data table with largest value of weight . [question] What is the car wmodel with the highest mpg ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] In step 1 , there should be flights table , not airlines table . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is greater than or equals 10 . [question] Which airlines have at least 10 flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] I want " hand as L " . [system description] find the first name and last name in players table whose first name like " L " ordered ascending by birth date . [question] List the first and last name of all players who are left / L hand in the order of birth date . [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date , Last ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Mention total population rather than average population . government form equals US Territory , not continent . [system description] find the average gnp and average population in country table whose continent equals " US Territory " . [question] What is the average GNP and total population in all nations whose government is US territory ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( US Territory ) [C] headofstate [C] capital [C] code2 ( US ) [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 , be certain to use the paragraph 's table in place of document 's table . [system description] Step 1 : find the number of rows of each value of document id in documents table . Step 2 : find the document id and document name in documents table with largest value in the results of step 1 . [question] What is the document id and name with greatest number of paragraphs ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] weight should be substituted in place of pet age . [system description] find the number of rows in pets table whose pet age greater than 10 . [question] Find the number of pets whose weight is heavier than 10 . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] find the number of different government forms not the number of rows [system description] find the number of rows in country table whose continent equals " Africa " . [question] How many type of governments are in Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Search number of rows of flights for United airlines whose destination airline equals Aberdeen . [system description] find the number of rows in airports table whose country equals " Aberdeen " and city equals " United Airlines " . [question] How many United Airlines flights go to City 'Aberdeen ' ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] The country 's name name should be Aruba , continent is wrong . [system description] Step 1 : for each row in country table , find the corresponding rows in countrylanguage table . Step 2 : find the number of different language of the results of step 1 whose continent equals " Aruba " . [question] How many languages are spoken in Aruba ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Aruba ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Aruba ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 , you should replace " Continent equals Republic " with " government form not equals Republic " . [system description] Step 1 : find the code in country table whose continent equals " Republic " . Step 2 : for each row in country table , find the corresponding rows in countrylanguage table . Step 3 : find the code of the results of step 2 whose language equals " English " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Return the codes of countries that do not speak English and do not have Republics for governments . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] Change airlines table and airline to flights table and source airport respectively . [system description] find the number of rows in airlines table whose airline name equals " APG " . [question] How many flights depart from 'APG ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] For which name equals Angola . [system description] find the region and population in country table . [question] What region does Angola belong to and what is its population ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Angola ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Angola ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] no repetition in output [system description] Step 1 : for each row in documents table , find the corresponding rows in paragraphs table . Step 2 : find the number of rows of each value of paragraphs 's document id of the results of step 1 . Step 3 : find the documents 's document id of the results of step 1 whose corresponding value in step 2 is greater than or equals 2 . [question] What are the ids of documents that have 2 or more paragraphs ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] search for name of Highschooler 's having kyle as a friend and also available in friend table . [system description] find the name in high schooler table whose grade equals " Kyle " . [question] Return the names of friends of the high school student Kyle . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Use singer table instead of stadium table . [system description] find the number of rows in stadium table . [question] What is the total number of singers ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] Instead of grade use name . [system description] find the id in high schooler table whose grade equals " Kyle " . [question] Show the ID of the high schooler named Kyle . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Take id in place of content and directed by in place of written by . [system description] Step 1 : find the content in tv channel table . Step 2 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 3 : find the content of the results of step 2 whose written by equals " Ben Jones " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ids of the TV channels that do not have any cartoons directed by Ben Jones ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Change airports table with flights table and airport name with destination airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the airline name of the results of step 1 whose airport name equals " AHD " . [question] What are airlines that have flights arriving at airport 'AHD ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] order by original air date and replace title with production code . [system description] Step 1 : find the number of rows of each value of channel in cartoon table . Step 2 : find the title and channel in cartoon table with largest value in the results of step 1 . [question] What is the produdction code and channel of the most recent cartoon ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] i want continents table from step 1 and verify that country is continent europe in step 2 . [system description] Step 1 : for each row in countries table , find the corresponding rows in car makers table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country name of the results of step 1 whose corresponding value in step 2 is greater than or equals 3 . [question] Which countries in europe have at least 3 car manufacturers ? [schema] [T] continents [C] contid [C] continent ( europe ) [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] likes not Friends [system description] find each value of student id in friend table along with the number of the corresponding rows to each value . [question] How many likes correspond to each student id ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Change government form with name name , Ensure population greater than country whose Continent 's name name equals Africa . [system description] find the government form in country table whose continent equals " Asia " and population greater than 103000 . [question] What are the Asian countries which have a population larger than that of any country in Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa , Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Sequentially , air date and episode required in place of episode and title . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in tv series table and in cartoon table . Step 2 : find the episode of the results of step 1 whose title equals " A Love of a Lifetime " . [question] When did the episode " A Love of a Lifetime " air ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode ( A Love of a Lifetime ) [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Need to look for the equivqlent code type of the result and in step 1 and 2 use template id . [system description] Step 1 : find the template type code in templates table . Step 2 : find the template type code in templates table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Show all template type codes that are not used by any document . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Search for the non duplicate description of template type from reference template types table having similar template id available in documents table . [system description] find without repetition document description in documents table . [question] Return the different descriptions for templates that have been used in a document . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] And also find corresponding orchestra from orchestra table . [system description] find the name in conductor table . [question] What are the names of conductors as well as the corresonding orchestras that they have conducted ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Look for grade in which number of name of all grade is higher or equivalent to 4 . [system description] find the grade in high schooler table whose grade equals 9 or grade equals 4 . [question] Which grades have 4 or more high schoolers ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Find number of flights whose airline 's airline equals United airlines and source airport equals AHD [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " United Airlines " and airline name equals " AHD " . [question] How many 'United Airlines ' flights depart from Airport 'AHD ' ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] make sure that t should be the is official of countrylanguage . [system description] find the code in country table whose local name equals " Spanish " . [question] Return the codes of countries for which Spanish is the predominantly spoken language . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Spanish ) [C] isofficial [C] percentage
[feedback] Use contestant number , votes table rather than contestant name , contestants table in step 1 . [system description] Step 1 : find the number of rows of each value of contestant name in contestants table . Step 2 : find the contestant number and contestant name in contestants table whose corresponding value in step 1 is greater than or equals 2 . [question] What are the contestant numbers and names of the contestants who had at least two votes ? [schema] [T] area_code_state [C] area_code [C] state [T] contestants [C] contestant_number [C] contestant_name [T] votes [C] vote_id [C] phone_number [C] state [C] contestant_number [C] created
[feedback] Exchange players table with matches table . Ensure that winner hand equals to Left . [system description] find the number of rows in players table . [question] Find the number of left handed winners who participated in the WTA Championships . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( WTA Championships ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Exchange both full name with year . [system description] find the full name and maker in car makers table with smallest value of full name . [question] What is the maker of the carr produced in the earliest year and what year was it ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find record company in place of rows in step 1 . [system description] Step 1 : find the rows in orchestra table whose year of founded greater than 2003 . Step 2 : find the record company in orchestra table whose year of founded less than 2003 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show the record companies shared by orchestras founded before 2003 and after 2003 . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] It should be name name in place of local name . [system description] find the continent in country table whose local name equals " Anguilla " . [question] Which continent is Anguilla in ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Anguilla ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Anguilla ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Put flights table instead of airports table In step 1 and source airport instead of airport name In step 2 . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the airline name of the results of step 1 whose airport name equals " AHD " . [question] What are airlines that have some flight departing from airport 'AHD ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] Rather than date of birth , Use date arrived in place of it . [system description] find the date departed and date of birth in dogs table . [question] What are the arriving date and the departing date of all the dogs ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Exchange pet age with weight . [system description] find the number of rows in pets table whose pet age greater than 10 . [question] Find the number of pets whose weight is heavier than 10 . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] You have to use country in step 2 and id in step 3 in place of channel and content respectively . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in tv series table . Step 2 : find the number of rows of each value of channel of the results of step 1 . Step 3 : find the content of the results of step 1 whose corresponding value in step 2 is greater than 2 . [question] find id of the tv channels that from the countries where have more than two tv channels . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] You have to use tourney name and " largest value of winner rank points " instead of loser ioc and " smallest value of winner rank " respectively . [system description] find the winner name in matches table whose loser ioc equals " Australian Open " with smallest value of winner rank . [question] What is the name of the winner with the most rank points who participated in the Australian Open tournament ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] I want current address id . [system description] find without repetition email address in students table . [question] What are the different addresses that have students living there ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Substitute airlines with flights and airline with source airport . [system description] find the number of rows in airlines table whose airline name equals " APG " . [question] Count the number of flights departing from 'APG ' . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] I want orchestra and use phrase 'Major Record Format CD or DVD ' instead of 'Type greater than or ' . [system description] find the number of rows in performance table whose type greater than or equals " CD " . [question] Count the number of orchestras that have CD or DVD as their record format . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format ( DVD , CD ) [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] You have to interchange less than and greater than with each other . [system description] Step 1 : find the citizenship in singer table whose birth year greater than 1945 . Step 2 : find the citizenship in singer table whose birth year less than 1955 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the citizenships that are shared by singers with a birth year before 1945 and after 1955 ? [schema] [T] singer [C] singer_id [C] name [C] birth_year [C] net_worth_millions [C] citizenship [T] song [C] song_id [C] title [C] singer_id [C] sales [C] highest_position
[feedback] In step 1 , I want the documents table . [system description] Step 1 : find the number of rows of each value of template type code in templates table . Step 2 : find the template type code in templates table with largest value in the results of step 1 . [question] Which template type code is used by most number of documents ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Need to ensure that those dog 's dog id present in treatments table . [system description] find the average age in dogs table . [question] Find the average age of the dogs who went through treatments . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] You need to search for the rows count for all student from Friends table . [system description] find the number of rows in high schooler table . [question] How many friends does each student have ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Find number of rows in has pet table whose pet type equals dog and sex equals F . [system description] find the number of rows in pets table whose pet type equals " F " and pet age equals 3 . [question] How many dog pets are raised by female students ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog ) [C] pet_age [C] weight
[feedback] make sure is official equivalent with t . you need to use language , table of countrylanguage and code of country . [system description] find the name in country table whose continent equals " Beatrix " . [question] What is the official language used in the country the name of whose head of state is Beatrix . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate ( Beatrix ) [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Find different cylinders whose have maximum accelerate . [system description] find each value of cylinders in cars data table along with the accelerate and maximum cylinders of the corresponding rows to each value . [question] What is the maximum accelerate for all the different cylinders ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Ensure that date first registered is smallest . [system description] find the first name , middle name , last name in students table . [question] What is the first , middle , and last name of the first student to register ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] i want the number of rows of has pet table whose pet type is dog and sex is female . [system description] find the number of rows in pets table whose pet type equals " dog " and pet type equals " F " . [question] Find the number of dog pets that are raised by female students ( with sex F ) . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( dog ) [C] pet_age [C] weight
[feedback] Use Asia and name in place of Africa and government form in step 1 and 2 respectively . [system description] Step 1 : find the population in country table whose continent equals " Africa " . Step 2 : find the government form in country table whose population less than the results of step 1 . [question] Which African countries have a smaller population than that of any country in Asia ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia , Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Use episode instead of title . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in tv series table and in cartoon table . Step 2 : find the weekly rank of the results of step 1 whose title equals " A Love of a Lifetime " . [question] What is the weekly rank for the episode " A Love of a Lifetime " ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode ( A Love of a Lifetime ) [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Need to find Student 's age in place of pet age . [system description] find the number of rows in pets table whose pet age greater than 20 . [question] How many pets are owned by students that have an age greater than 20 ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] In step 1 , Swap friend table with likes table . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find the number of rows of each value of student id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [question] Give the name of the student with the most likes . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] I want enrollment of student in step 1 . [system description] Step 1 : find the number of rows of each value of semester id in semesters table . Step 2 : find the semester name and semester id in semesters table with largest value in the results of step 1 . [question] For each semester , what is the name and id of the one with the most students registered ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Find number of rows of flights table whose corresponding airlines 's airport name equals JetBlue Airways . [system description] find the number of rows in airlines table whose airline name equals " JetBlue Airways " . [question] How many flights does airline 'JetBlue Airways ' have ? [schema] [T] airlines [C] uid [C] airline ( JetBlue Airways ) [C] abbreviation ( JetBlue ) [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 3 , also find department name . [system description] Step 1 : for each row in departments table , find the corresponding rows in degree programs table . Step 2 : find the number of rows of each value of degree programs 's department id of the results of step 1 . Step 3 : find the department name and number of rows of the results of step 1 with largest value in the results of step 2 . [question] For each department id , what is the name of the department with the most number of degrees ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] It should be documents table , not reference template types table . [system description] find the number of rows in reference template types table . [question] How many documents do we have ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] In step 2 , I want the date of transcript from Transcripts table . [system description] Step 1 : find the number of rows of each value of transcript id in transcript contents table . Step 2 : find the transcript id and transcript id in transcript contents table with smallest value in the results of step 1 . [question] Show the date of the transcript which shows the least number of results , also list the id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Change country , airlines table with airline , flights table . [system description] Step 1 : find the number of rows of each value of country in airlines table . Step 2 : find the abbreviation and country in airlines table with smallest value in the results of step 1 . [question] What is the abbreviation of the airilne has the fewest flights and what country is it in ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 , use id written with cartoon 's id and directed by in step 3 . [system description] Step 1 : find the content in tv channel table . Step 2 : for each row in tv channel table , find the corresponding rows in cartoon table . Step 3 : find the content of the results of step 2 whose written by equals " Ben Jones " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] find the id of tv channels that do not play any cartoon directed by Ben Jones . [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Interchange loser ioc with tourney name in step 2 and 3 . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the first name and country code of the results of step 1 whose loser ioc equals " WTA Championships " . Step 3 : for each row in players table , find the corresponding rows in matches table . Step 4 : find the first name and country code of the results of step 3 whose loser ioc equals " Australian Open " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the first names and country codes for players who won both the WTA Championships and the Australian Open ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open , WTA Championships ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Not largest value of weight but Whose breed code count is highest . [system description] Step 1 : for each row in breeds table , find the corresponding rows in dogs table . Step 2 : find the breed name of the results of step 1 with largest value of weight . [question] What is the name of the breed with the most dogs ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] you need to use surface area and along with that continent should equivalent with north america . [system description] find the summation of population and average continent in country table whose surface area greater than 3000 . [question] Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000 . [schema] [T] city [C] id [C] name ( Americana ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Name should be Angola . [system description] find the region and population in country table . [question] What region does Angola belong to and what is its population ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Angola ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Angola ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 3 , delete the condition for descending order for the year founded , alter 200 3 with 2008 . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name of the results of step 1 whose year of founded greater than 2003 ordered descending by year of founded . Step 3 : only show the first 2008 rows of the results . [question] Please show the name of the conductor that has conducted orchestras founded after 2008 . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Replace year of founded in orchestra table with orchestra id in performance table in step 1 . [system description] Step 1 : find the number of rows of each value of year of founded in orchestra table . Step 2 : find the year of founded in orchestra table whose corresponding value in step 1 is greater than 1 . [question] What are years of founding for orchestras that have had more than a single performance ? [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] give me the continent where maximum number of language are spoken . [system description] Step 1 : find the number of rows of each value of continent in country table . Step 2 : find the continent in country table with largest value in the results of step 1 . [question] Which continent speaks the most languages ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] No need to find airport name , need to find destination airport instead of that . [system description] Step 1 : for each row in airports table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose airport name equals " APG " . [question] What are flight numbers of flights arriving at Airport " APG " ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] you have to look for highest value of mpg instead of accelerate . [system description] Step 1 : for each row in model list table , find the corresponding rows in car names table and in cars data table . Step 2 : find the model list 's model of the results of step 1 with largest value of accelerate . [question] Which model saves the most gasoline ? That is to say , have the maximum miles per gallon . [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Use state in place of first name . [system description] find the first name , last name , email address in owners table whose first name like " North " . [question] Return the first name , last name and email of the owners living in a state whose name contains the substring 'North ' . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] The written by is wrong , directed by is the right parameter . [system description] find the title in cartoon table whose written by equals " Ben Jones " or directed by equals " Brandon Vietti " . [question] What are the titles of all cartoons directed by Ben Jones or Brandon Vietti ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by ( Brandon Vietti , Ben Jones ) [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] i want region and also make sure that name of country should be angola . [system description] find the surface area and population in country table . [question] What are the region and population of Angola ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Angola ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname ( Angola ) [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] delete the phrase " " and country equals united states " " . [system description] find the city and country in airports table whose airport name equals " Alton " and country equals " United States " . [question] Which city and country is the Alton airport at ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Alton  ) [C] airportcode [C] airportname ( Alton  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Verify that the money which was used by the owner was for his or her dogs treament in step 1 . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id and last name in owners table with largest value in the results of step 1 . [question] Which owner has paid for the most treatments on his or her dogs ? List the owner id and last name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] you need to put city and flights table in place of airport name and airports table respectively . [system description] find the number of rows in airports table whose airport name equals " Aberdeen " or city equals " Abilene " . [question] How many flights land in Aberdeen or Abilene ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Abilene  , Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Verify that france is the country name of Country table . [system description] find the number of rows in car makers table whose country equals " france " . [question] What is the number of makers of care in France ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname ( france ) [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] We need to use transcripts table instead of addresses [system description] find the number of rows in addresses table . [question] How many transcripts are released ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] i want unique cylinders with highest accelerate . [system description] find each value of cylinders in cars data table along with the accelerate and maximum cylinders of the corresponding rows to each value . [question] What is the maximum accelerate for all the different cylinders ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Find without repetition template type description of reference template types whose corresponding template id in present in documents table . [system description] find without repetition document description in documents table . [question] Return the different descriptions for templates that have been used in a document . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Only ensure that corresponding student id present in friend in step 1 , and present in likes in step 2 . [system description] Step 1 : find the name in high schooler table whose grade equals 9 . Step 2 : find the name in high schooler table whose grade equals 9 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of high schoolers who both have friends and are liked ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] In step 3 Supplant num of staff with level of membership . [system description] Step 1 : for each row in museum table , find the corresponding rows in customer table and in visit table . Step 2 : find the summation of total spent of each value of visit 's museum id of the results of step 1 . Step 3 : find the customer id , customer 's name , num of staff of the results of step 1 with largest value in the results of step 2 . [question] What are the id , name and membership level of visitors who have spent the largest amount of money in total in all museum tickets ? [schema] [T] museum [C] museum_id [C] name [C] num_of_staff [C] open_year [T] visitor [C] id [C] name [C] level_of_membership [C] age [T] visit [C] museum_id [C] visitor_id [C] num_of_ticket [C] total_spent
[feedback] Take other student details in place of other details and students table in place of student enrolment table . [system description] find the other details in student enrolment table ordered descending by other details . [question] What other details can you tell me about students in reverse alphabetical order ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Search tours of ranking table for all the value of ranking date . [system description] find each value of winner rank in matches table along with the number of the corresponding rows to each value . [question] Find the total number of tours for each ranking date . [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Find summation of surface area and exchange name name with region . [system description] find the surface area in country table whose name equals " Caribbean " . [question] How much surface area do the countires in the Carribean cover together ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Replace course id ( both ) with degree program id , first courses with student enrolment , course description with degree summary name , second courses with degree programs . [system description] Step 1 : find the number of rows of each value of course id in courses table . Step 2 : find the course id and course description in courses table with largest value in the results of step 1 . [question] Find the program which most number of students are enrolled in . List both the id and the summary . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] For performance table you should use orchestra Id . [system description] Step 1 : find the number of rows of each value of year of founded in orchestra table . Step 2 : find the year of founded in orchestra table whose corresponding value in step 1 is greater than 1 . [question] Show the years in which orchestras that have given more than one performance are founded . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] Swap population greater than English " with " countrylanguage 's language not equals English " . [system description] find the code in country table whose population greater than " English " . [question] What are the country codes of countries where people use languages other than English ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English ) [C] isofficial [C] percentage
[feedback] You have to look for the distinct code of template type from the reference template type table used for documents . [system description] find the number of rows in reference template types table . [question] Count the number of different templates used for documents . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Put winner name and winner age in place of tourney name and loser age . [system description] Step 1 : find the tourney name and winner rank in matches table ordered ascending by loser age . Step 2 : only show the first 3 rows of the results . [question] What are the names and ranks of the three youngest winners across all matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] from has pet table look for student id whose rows number are corresponding to all the value . [system description] find the number of rows in student table . [question] Find the number of pets for each student who has any pet and student id . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] Find cylinders of cars data table with least value of accelerate and car names 's model equals volvo . [system description] find the number of rows in cars data table whose accelerate equals 1 . [question] For a volvo model , how many cylinders does the version with least accelerate have ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker ( volvo ) [C] fullname ( Volvo ) [C] country [T] model_list [C] modelid [C] maker [C] model ( volvo ) [T] car_names [C] makeid [C] model ( volvo ) [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Need to search dog id from Treatments table who exist in the dog id of dogs table . [system description] Step 1 : find the number of rows of each value of owner id in owners table . Step 2 : find the owner id and last name in owners table with largest value in the results of step 1 . [question] Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Find number of rows in flights table whose SourceAirport 's corresponding city equals Aberdeen . [system description] find the number of rows in airports table whose city equals " Aberdeen " . [question] How many flights depart from City Aberdeen ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] You have to swap the code of distinct breed and size with the code of treatment type and weight respectively in step 2 . [system description] Step 1 : for each row in dogs table , find the corresponding rows in treatments table . Step 2 : find the treatment type code and weight of the results of step 1 . [question] What are all the possible breed type and size type combinations ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Need to use has pet table and not the student table . [system description] find each value of student id in student table along with the number of the corresponding rows to each value . [question] For students who have pets , how many pets does each student have ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] Ensure to find number of rows in degree programs table , not in departments table . [system description] find the number of rows in departments table whose department name equals " engineer " . [question] How many degrees does the engineering department have ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Make sure to search for the name in step 2 , and delete " and name equals Kacey " phrase . [system description] Step 1 : for each row in owners table , find the corresponding rows in dogs table . Step 2 : find the first name of the results of step 1 whose state equals " Virginia " and name equals " Kacey " . [question] Find the first names of owners living in Virginia and the names of dogs they own . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state ( Virginia ) [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] It should be the number of the corresponding rows for each continent in car makers table . [system description] find each value of continent in continents table along with the number of the corresponding rows to each value . [question] What is the name of each continent and how many car makers are there in each one ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Change tourney name , loser rank and loser age with winner name , winner rank and winner age . [system description] Step 1 : find the tourney name and loser rank in matches table ordered ascending by loser age . Step 2 : only show the first 3 rows of the results . [question] Find the name and rank of the 3 youngest winners across all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] also output student id [system description] Step 1 : for each row in students table , find the corresponding rows in student enrolment table . Step 2 : find the number of rows of each value of student enrolment 's student id of the results of step 1 . Step 3 : find the first name , middle name , last name of the results of step 1 whose corresponding value in step 2 is equals 2 . [question] Who are enrolled in 2 degree programs in one semester ? List the first name , middle name and last name and the id . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] winner age should be used instead one of the loser age . [system description] find the average loser age and average loser age in matches table . [question] What are the average ages of losers and winners across matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 2 Find only for whose corresponding professional id is in treatments table . [system description] Step 1 : find the professional id , role code , email address in professionals table . Step 2 : find the professional id , role code , email address in professionals table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Which professional did not operate any treatment on dogs ? List the professional 's id , role and email . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] i want the table of flights and destination airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the airline name of the results of step 1 whose airport name equals " AHD " . [question] What are airlines that have flights arriving at airport 'AHD ' ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( AHD ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  AHD ) [C] destairport (  AHD )
[feedback] Need to change car makers table with model list country to country name [system description] find the number of rows in car makers table whose country equals " usa " . [question] What is the count of the car models produced in the United States ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] For each id of car makers , find corresponding number of rows in model list , also display full name . [system description] Step 1 : for each row in car makers table , find the corresponding rows in model list table . Step 2 : find each value of id of the results of step 1 along with the number of the corresponding rows to each value . [question] What is the number of car models that are produced by each maker and what is the id and full name of each maker ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Instead of second semester name of step 1 , semester description of step 2 use degree summary name . [system description] Step 1 : find the semester name in semesters table whose semester name equals " Master " . Step 2 : find the semester name in semesters table whose semester description equals " Bachelor " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Find the semester when both Master students and Bachelor students got enrolled in . [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name ( Bachelor , Master ) [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] You need to search for the winner name which is equivalent to Australian Open along with highest value of winner rank points . [system description] find the winner name and loser rank in matches table with largest value of winner rank points . [question] Find the name of the winner who has the highest rank points and participated in the Australian Open tourney . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] You need to consider matches table . [system description] find the number of rows in players table . [question] Count the number of matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] You need to search for the rows count in treatment table . [system description] find the number of rows in dogs table whose weight equals 7.57 . [question] Find the number of professionals who have ever treated dogs . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] i want the name of country table having english and french language and t is official . [system description] Step 1 : find the continent in country table whose code2 equals " T " . Step 2 : find the continent in country table whose code2 equals " French " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Give the names of countries with English and French as official languages . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , French ) [C] isofficial [C] percentage
[feedback] Use level of membership in step 3 in place of num of staff . [system description] Step 1 : for each row in museum table , find the corresponding rows in customer table and in visit table . Step 2 : find the summation of total spent of each value of visit 's museum id of the results of step 1 . Step 3 : find the customer id , customer 's name , num of staff of the results of step 1 with largest value in the results of step 2 . [question] What are the id , name and membership level of visitors who have spent the largest amount of money in total in all museum tickets ? [schema] [T] museum [C] museum_id [C] name [C] num_of_staff [C] open_year [T] visitor [C] id [C] name [C] level_of_membership [C] age [T] visit [C] museum_id [C] visitor_id [C] num_of_ticket [C] total_spent
[feedback] swap airports with flights in step 1 and use airline and destination airport . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " United Airlines " and airline name equals " ASY " . [question] How many 'United Airlines ' flights go to Airport 'ASY ' ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( ASY ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Count the number of student id present in friend table having Highschooler name as Kyle . [system description] find the number of rows in high schooler table . [question] Count the number of friends Kyle has . [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] airlines 's country is wrong , exchange it with flights 's source airport and airports 's country with flights 's source airport . [system description] Step 1 : find the airline name in airlines table whose airlines 's country equals " CVO " . Step 2 : for each row in airlines table , find the corresponding rows in airports table . Step 3 : find the airline name of the results of step 2 whose airports 's country equals " APG " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Which airlines have departures from CVO but not from APG airports ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( CVO , APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  CVO ,  APG ) [C] destairport (  CVO ,  APG )
[feedback] Search degree summary name whose degree program id is present most number of times in student enrolment table . [system description] Step 1 : find the number of rows of each value of course name in courses table . Step 2 : find the course name in courses table with largest value in the results of step 1 . [question] Find the kind of program which most number of students are enrolled in ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Use treatments cost of treatment in place of treatment type code . [system description] find the treatment type description and treatment type code in treatment types table . [question] List the cost of each treatment and the corresponding treatment type description . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Add flights table in step 1 , replace airports 's country and airline with airlines'Airline and destination airport respectively . [system description] Step 1 : for each row in airlines table , find the corresponding rows in airports table . Step 2 : find the number of rows of the results of step 1 whose airports 's country equals " United Airlines " and airline name equals " ASY " . [question] Count the number of United Airlines flights arriving in ASY Airport . [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( ASY ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] i want population . [system description] find the life expectancy , name , local name in country table with largest value of surface area . [question] What are the population , name and leader of the country with the largest area ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] We need to use rankings and ranking in step 1 and 2 respectively . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find each value of first name of the results of step 1 along with the average winner rank of the corresponding rows to each value . [question] Find the average ranking for each player and their first name . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] you have to use language of country and asia in place of name of country and t respectively.also make sure that is official should be t . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find without repetition city 's name of the results of step 1 whose continent equals " T " and country 's name equals " Chinese " . [question] Return the different names of cities that are in Asia and for which Chinese is the official language . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( Chinese ) [C] isofficial [C] percentage
[feedback] Swap local name with region and Verify corresponding city 's name name equals Kabul . [system description] find the local name in country table . [question] What region is Kabul in ? [schema] [T] city [C] id [C] name ( Kabul ) [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You need to use language instead of name . [system description] find the region in country table whose name equals " Dutch " or name equals " English " . [question] What are the regions that use English or Dutch ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language ( English , Dutch ) [C] isofficial [C] percentage
[feedback] In step 2 just find version number . [system description] Step 1 : for each row in templates table , find the corresponding rows in documents table . Step 2 : find the number of rows of each value of documents 's template id of the results of step 1 . Step 3 : find the version number and template type code of the results of step 1 whose corresponding value in step 2 is greater than 5 . [question] Return the version numbers and template type codes of templates with a version number greater than 5 . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Change tourney name , loser rank to winner name and winner rank points respectively . [system description] Step 1 : find the number of rows of each value of winner entry in matches table . Step 2 : find the tourney name and loser rank in matches table with largest value in the results of step 1 . [question] Find the name and rank points of the winner who won the most times . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Swap first name contains L " with " hand equals L " . [system description] find the first name and last name in players table whose first name like " L " ordered ascending by birth date . [question] List the first and last name of all players who are left / L hand in the order of birth date . [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date , Last ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] For each country find countrylanguage 's language used by most of population in that country . [system description] Step 1 : find the maximum population of each value of continent in country table . Step 2 : find the name and continent in country table with largest value in the results of step 1 . [question] What is the language spoken by the largest percentage of people in each country ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 supplant professionals table with treatments table . [system description] Step 1 : find the number of rows of each value of professional id in professionals table . Step 2 : find the professional id , role code , first name in professionals table whose corresponding value in step 1 is greater than or equals 2 . [question] Which professionals have done at least two treatments ? List the professional 's id , role , and first name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] In step 1 Take professional id in treatments table in place of professional id in professionals table " . [system description] Step 1 : find the number of rows of each value of professional id in professionals table . Step 2 : find the professional id , role code , first name in professionals table whose corresponding value in step 1 is greater than or equals 2 . [question] What are the id , role , and first name of the professionals who have performed two or more treatments ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Use tourney name instead of loser ioc in both step 2 , step 3 . Ensure player id equals winner id in both step 2 , step 3 . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the country code and first name of the results of step 1 whose loser ioc equals " WTA Championships " . Step 3 : for each row in players table , find the corresponding rows in matches table . Step 4 : find the country code and first name of the results of step 3 whose loser ioc equals " Australian Open " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open , WTA Championships ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Not greater than or equals 2013 but equals 2013 or 2016 . [system description] find the number of rows in matches table whose year greater than or equals 2013 . [question] List the number of all matches who played in years of 2013 or 2016 . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] Make sure to search for whose similar name of feature equivalent to AirCon . [system description] find the feature type name in reference feature types table . [question] What is the feature type name of feature AirCon ? [schema] [T] ref_feature_types [C] feature_type_code [C] feature_type_name [T] ref_property_types [C] property_type_code [C] property_type_description [T] other_available_features [C] feature_id [C] feature_type_code [C] feature_name ( AirCon ) [C] feature_description [T] properties [C] property_id [C] property_type_code [C] date_on_market [C] date_sold [C] property_name [C] property_address [C] room_count [C] vendor_requested_price [C] buyer_offered_price [C] agreed_selling_price [C] apt_feature_1 [C] apt_feature_2 [C] apt_feature_3 [C] fld_feature_1 [C] fld_feature_2 [C] fld_feature_3 [C] hse_feature_1 [C] hse_feature_2 [C] hse_feature_3 [C] oth_feature_1 [C] oth_feature_2 [C] oth_feature_3 [C] shp_feature_1 [C] shp_feature_2 [C] shp_feature_3 [C] other_property_details [T] other_property_features [C] property_id [C] feature_id [C] property_feature_description
[feedback] Substitute addresses table with courses table . [system description] find the number of rows in addresses table . [question] How many courses in total are listed ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] In step 1 , I want code of breed and table of dogs . [system description] Step 1 : find the number of rows of each value of breed name in breeds table . Step 2 : find the breed name in breeds table with largest value in the results of step 1 . [question] Which breed do the most dogs have ? Give me the breed name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Need to specify continent equals Asia . [system description] find the summation of population and maximum gnp in country table . [question] What is the total population and maximum GNP in Asia ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Ensure that template type code used in documents . [system description] Step 1 : find the number of rows of each value of template type code in templates table . Step 2 : find the template type code in templates table with largest value in the results of step 1 . [question] Return the code of the template type that is most commonly used in documents . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] You need to utilize hiring table . [system description] find the rows in employee table . [question] Give me all the information about hiring . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Omit " and country equals USA " . [system description] Step 1 : for each row in airlines table , find the corresponding rows in flights table . Step 2 : find the flight number of the results of step 1 whose airlines 's airline name equals " United Airlines " and country equals " USA " . [question] What are flight numbers of Airline " United Airlines " ? [schema] [T] airlines [C] uid [C] airline ( United Airlines ) [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] make sure only to find for which continents continent equals europe . [system description] Step 1 : for each row in countries table , find the corresponding rows in car makers table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country name of the results of step 1 whose corresponding value in step 2 is greater than or equals 3 . [question] What are the names of all European countries with at least 3 manufacturers ? [schema] [T] continents [C] contid [C] continent ( europe ) [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] The template id of each template type code are there in document table in step 2 . [system description] Step 1 : find the reference template types 's template type code in reference template types table . Step 2 : find the templates 's template type code in templates table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the codes of template types that are not used for any document ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Title should be replaced with episode . [system description] Step 1 : for each row in tv channel table , find the corresponding rows in tv series table and in cartoon table . Step 2 : find the weekly rank of the results of step 1 whose title equals " A Love of a Lifetime " . [question] What is the weekly rank for the episode " A Love of a Lifetime " ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode ( A Love of a Lifetime ) [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by [C] original_air_date [C] production_code [C] channel
[feedback] Have to substitute owner id with corresponding size code of dogs table . [system description] find the first name , last name , owner id in owners table . [question] What are each owner 's first name , last name , and the size of their dog ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Find grade whose name count for each grade is greater than or equals to 4 . [system description] find the grade in high schooler table whose grade equals 9 or grade equals 4 . [question] Which grades have 4 or more high schoolers ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Change grade with name , Find number of the corresponding rows to Highschooler 's id in likes table . [system description] find each value of grade in high schooler table along with the number of the corresponding rows to each value . [question] What are the names of high schoolers who have likes , and how many likes does each have ? [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] In step 1 , You need use rankings table , In step 2 , Use tours . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the number of rows of each value of loser id of the results of step 1 . Step 3 : find the first name and country code of the results of step 1 with largest value in the results of step 2 . [question] What is the first name and country code of the player with the most tours ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] swap between airlines and flights table and 1st and 2nd airline with source airport . [system description] find the number of rows in airlines table whose airline name equals " Aberdeen " and airline name equals " Ashley " . [question] How many flights fly from Aberdeen to Ashley ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  , Ashley  ) [C] airportcode [C] airportname ( Ashley  ) [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Make sure to arrange ID of document . [system description] Step 1 : find the number of rows of each value of document id in paragraphs table . Step 2 : find the document id and number of rows in paragraphs table ordered ascending by the results of step 1 . [question] Return the different document ids along with the number of paragraphs corresponding to each , ordered by id . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Find student id in has pet table with corresponding number of rows of each value . [system description] find the number of rows in student table . [question] Find the number of pets for each student who has any pet and student id . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] Change matches table with rankings table in step 1 , loser id with tours in step 2 . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the number of rows of each value of loser id of the results of step 1 . Step 3 : find the first name and country code of the results of step 1 with largest value in the results of step 2 . [question] What is the first name and country code of the player with the most tours ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] you should substitute life expectancy in place of gnp old and verify that only republic government is being used . [system description] find the average gnp old in country table whose continent equals " Africa " . [question] Give the average life expectancy for countries in Africa which are republics ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] we should add winner name and winner age . [system description] Step 1 : find the tourney name and winner rank in matches table ordered ascending by loser age . Step 2 : only show the first 3 rows of the results . [question] What are the names and ranks of the three youngest winners across all matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] population should be more than africa 's population of 103000 . [system description] find the name in country table whose continent equals " Asia " and population greater than 103000 . [question] Which Asian countries have a population that is larger than any country in Africa ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa , Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] I want name of winner , winner rank and age of winner . [system description] Step 1 : find the tourney name and loser rank in matches table ordered ascending by loser age . Step 2 : only show the first 3 rows of the results . [question] Find the name and rank of the 3 youngest winners across all matches . [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 1 Switch Africa with Asia , In step 2 Switch government form with name . [system description] Step 1 : find the population in country table whose continent equals " Africa " . Step 2 : find the government form in country table whose population less than the results of step 1 . [question] Which African countries have a smaller population than that of any country in Asia ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia , Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Accept that in their government form those countries are stated as republic . [system description] find the average life expectancy in country table whose continent equals " Africa " . [question] What is the average life expectancy in African countries that are republics ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Africa ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( Republic ) [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] I want to find name in step 2 . [system description] Step 1 : for each row in shop table , find the corresponding rows in hiring table . Step 2 : find each value of hiring 's shop id of the results of step 1 along with the number of the corresponding rows to each value . [question] For each shop , return the number of employees working there and the name of the shop . [schema] [T] employee [C] employee_id [C] name [C] age [C] city [T] shop [C] shop_id [C] name [C] location [C] district [C] number_products [C] manager_name [T] hiring [C] shop_id [C] employee_id [C] start_from [C] is_full_time [T] evaluation [C] employee_id [C] year_awarded [C] bonus
[feedback] Swap between course and teacher table . [system description] find the number of rows in course table . [question] What is the total count of teachers ? [schema] [T] course [C] course_id [C] staring_date [C] course [T] teacher [C] teacher_id [C] name [C] age [C] hometown [T] course_arrange [C] course_id [C] teacher_id [C] grade
[feedback] In step 1 , there should be course id of student enrolment courses table , not course name in courses table . [system description] Step 1 : find the number of rows of each value of course name in courses table . Step 2 : find the course name in courses table with largest value in the results of step 1 . [question] What is the name of the course with the most students enrolled ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Ensure that open year less than 2009 in step 2 , Make sure open year greater than 2011 in step 3 . [system description] Step 1 : for each row in museum table , find the corresponding rows in customer table and in visit table . Step 2 : find the customer 's name of the results of step 1 whose open year greater than 2009 . Step 3 : for each row in museum table , find the corresponding rows in customer table and in visit table . Step 4 : find the customer 's name of the results of step 3 whose open year less than 2011 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011 ? [schema] [T] museum [C] museum_id [C] name [C] num_of_staff [C] open_year [T] visitor [C] id [C] name [C] level_of_membership [C] age [T] visit [C] museum_id [C] visitor_id [C] num_of_ticket [C] total_spent
[feedback] Make sure we use template type code in documents . [system description] Step 1 : find the number of rows of each value of template type code in templates table . Step 2 : find the template type code in templates table with largest value in the results of step 1 . [question] Return the code of the template type that is most commonly used in documents . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Replace professionals table with treatments table in step 2 . [system description] Step 1 : find the professional id , last name , cell number in professionals table whose state equals " Indiana " . Step 2 : find the number of rows of each value of professional id in professionals table . Step 3 : find the professional id , last name , cell number in professionals table whose corresponding value in step 2 is greater than 2 . Step 4 : show the rows that are in any of the results of step 1 and step 3 . [question] Find the id , last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Make sure to arrange Id of documents . [system description] Step 1 : find the number of rows of each value of document id in paragraphs table . Step 2 : find the document id and number of rows in paragraphs table ordered ascending by the results of step 1 . [question] Show all document ids and the number of paragraphs in each document . Order by document id . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Exchange accelerate with horsepower . [system description] find the number of rows in cars data table whose accelerate greater than 150 . [question] What is the number of cars with a horsepower greater than 150 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Also add template type code equals CV . [system description] find the number of rows in reference template types table . [question] Count the number of templates of the type CV . [schema] [T] ref_template_types [C] template_type_code ( CV ) [C] template_type_description ( CV ) [T] templates [C] template_id [C] version_number [C] template_type_code ( CV ) [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Exchange breed name with breed code and breeds table with dogs table in step 1 . [system description] Step 1 : find the number of rows of each value of breed name in breeds table . Step 2 : find the breed name in breeds table with largest value in the results of step 1 . [question] Which breed do the most dogs have ? Give me the breed name . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] In step 1 replace airlines 's country with flights 's source airport , in step 3 airports 's country with flights 's source airport . [system description] Step 1 : find the airline name in airlines table whose airlines 's country equals " APG " . Step 2 : for each row in airlines table , find the corresponding rows in airports table . Step 3 : find the airline name of the results of step 2 whose airports 's country equals " CVO " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] Which airlines have departing flights from both APG and CVO airports ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( CVO , APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  CVO ,  APG ) [C] destairport (  CVO ,  APG )
[feedback] Find each value of source airport of flights table whose city equals Aberdeen . [system description] find the number of rows in airports table whose airport name equals " Aberdeen " . [question] Return the number of flights departing from Aberdeen . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city ( Aberdeen  ) [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Find each value of paragraphs table whose paragraph text equals Korea . [system description] Step 1 : for each row in documents table , find the corresponding rows in paragraphs table . Step 2 : find the paragraphs 's other details of the results of step 1 whose document name equals " Korea " . [question] Show paragraph details for paragraph with text 'Korea ' . [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text ( Korea ) [C] other_details
[feedback] use continent instead of region for step 1 , and put name in place of continent for step 2 . [system description] Step 1 : find the maximum surface area in country table whose region equals " Europe " . Step 2 : find the continent in country table whose surface area greater than the results of step 1 . [question] What are the countries that have greater surface area than any country in Europe ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Europe ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] you need to replace pets table and pet age for pet table and age . [system description] find the number of rows in pets table whose pet age greater than 20 . [question] Find number of pets owned by students who are older than 20 . [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] Verify that student has enrolled in degree programs degree summary name equals Bachelor . [system description] find the first name , middle name , last name in students table . [question] What are the first , middle , and last names for everybody enrolled in a Bachelors program ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Find maximum value in horsepower along with that . [system description] find the number of rows in cars data table whose accelerate greater than 1 . [question] What is the number of cars with a greater accelerate than the one with the most horsepower ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] There should be " dog id should be located in treatments table " instead of " gender equals 1 " . [system description] find the average age in dogs table whose gender equals 1 . [question] What is the average age of the dogs who have gone through any treatments ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Change loser ioc with tourney name and " smallest value of winner rank with " largest value of winner rank points " . [system description] find the winner name in matches table whose loser ioc equals " Australian Open " with smallest value of winner rank . [question] What is the name of the winner with the most rank points who participated in the Australian Open tournament ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name ( Australian Open ) [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] I want table of flights instead of table of airlines in step 1 . [system description] Step 1 : find the number of rows of each value of airline name in airlines table . Step 2 : find the airline name in airlines table whose corresponding value in step 1 is less than 200 . [question] Which airlines have less than 200 flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] In step 1 use paragraphs table and switch document id , date effective to with paragraph id , paragraph text . [system description] Step 1 : for each row in templates table , find the corresponding rows in documents table . Step 2 : find the document id and date effective to of the results of step 1 whose document name equals " Welcome to NY " . [question] What are the ids and texts of paragraphs in the document titled 'Welcome to NY ' ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name ( Welcome to NY ) [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] Remove " ordered descending by year of founded and step 3 , Exchange 200 3 with 2008 . [system description] Step 1 : for each row in conductor table , find the corresponding rows in orchestra table . Step 2 : find the name of the results of step 1 whose year of founded greater than 2003 ordered descending by year of founded . Step 3 : only show the first 2008 rows of the results . [question] Please show the name of the conductor that has conducted orchestras founded after 2008 . [schema] [T] conductor [C] conductor_id [C] name [C] age [C] nationality [C] year_of_work [T] orchestra [C] orchestra_id [C] orchestra [C] conductor_id [C] record_company [C] year_of_founded [C] major_record_format [T] performance [C] performance_id [C] orchestra_id [C] type [C] date [C] official_ratings_(millions) [C] weekly_rank [C] share [T] show [C] show_id [C] performance_id [C] if_first_show [C] result [C] attendance
[feedback] In step 2 ignore grade . [system description] Step 1 : for each row in high schooler table , find the corresponding rows in friend table . Step 2 : find each value of student id of the results of step 1 along with the number of the corresponding rows to each value . [question] Show the names of high school students and their corresponding number of friends . [schema] [T] highschooler [C] id [C] name [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] in step 1 use destination airport of city from flights table . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table with largest value in the results of step 1 . [question] Which city has the most frequent destination airport ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] " largest value of birth date is Wrong . Need " smallest value of birth date " . [system description] find the first name and country code in players table with largest value of birth date . [question] What is the first name and country code of the oldest player ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] I want the average of GNP [system description] find the summation of gnp and summation of population in country table whose continent equals " US Territory " . [question] Give the mean GNP and total population of nations which are considered US territory . [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform ( US Territory ) [C] headofstate [C] capital [C] code2 ( US ) [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] Take " largest value of winner rank points instead of " smallest value of winner rank " . [system description] Step 1 : for each row in players table , find the corresponding rows in matches table . Step 2 : find the first name , country code , birth date of the results of step 1 with smallest value of winner rank . [question] What is the first name , country code , and birth date of the player with the most winner rank points across all matches ? [schema] [T] players [C] player_id [C] first_name [C] last_name ( Date ) [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In the dog 's table , you need to use the owner 's Id in place of size code . [system description] find the first name , last name , owner id in owners table . [question] What are each owner 's first name , last name , and the size of their dog ? [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] Change ranking to total ranking points . [system description] Step 1 : for each row in players table , find the corresponding rows in rankings table . Step 2 : find the first name and ranking of the results of step 1 . [question] What are the first names of all players , and their total ranking points ? [schema] [T] players [C] player_id [C] first_name [C] last_name [C] hand [C] birth_date [C] country_code [T] matches [C] best_of [C] draw_size [C] loser_age [C] loser_entry [C] loser_hand [C] loser_ht [C] loser_id [C] loser_ioc [C] loser_name [C] loser_rank [C] loser_rank_points [C] loser_seed [C] match_num [C] minutes [C] round [C] score [C] surface [C] tourney_date [C] tourney_id [C] tourney_level [C] tourney_name [C] winner_age [C] winner_entry [C] winner_hand [C] winner_ht [C] winner_id [C] winner_ioc [C] winner_name [C] winner_rank [C] winner_rank_points [C] winner_seed [C] year [T] rankings [C] ranking_date [C] ranking [C] player_id [C] ranking_points [C] tours
[feedback] In step 2 , you need to make sure year should be more than 2013 . [system description] Step 1 : for each row in stadium table , find the corresponding rows in concert table . Step 2 : only keep te results of step 1 whose year greater than 2014 . Step 3 : find the number of rows of each value of stadium 's stadium id the results of step 2 . Step 4 : find the name and capacity the results of step 2 with largest value in the results of step 3 . [question] What is the name and capacity of the stadium with the most concerts after 2013 ? [schema] [T] stadium [C] stadium_id [C] location [C] name [C] capacity [C] highest [C] lowest [C] average [T] singer [C] singer_id [C] name [C] country [C] song_name [C] song_release_year [C] age [C] is_male [T] concert [C] concert_id [C] concert_name [C] theme [C] stadium_id [C] year [T] singer_in_concert [C] concert_id [C] singer_id
[feedback] you have to provide total rows of countrylanguage table having country name afghanistan and t should be the is official . [system description] find the number of different code2 in country table . [question] How many official languages does Afghanistan have ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name ( Afghanistan ) [C] continent [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] You need to supplant continents table with countries table . [system description] find the number of rows in continents table . [question] How many countries are listed ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Determine number of rows of friend table whose Highschooler 's name equals Kyle . [system description] find the number of rows in high schooler table whose grade equals " Kyle " . [question] How many friends does the high school student Kyle have ? [schema] [T] highschooler [C] id [C] name ( Kyle ) [C] grade [T] friend [C] student_id [C] friend_id [T] likes [C] student_id [C] liked_id
[feedback] Search number of rows of country table for which continent equals Asia . [system description] find the number of rows in city table . [question] how many countries are in Asia ? [schema] [T] city [C] id [C] name [C] countrycode [C] district [C] population [T] sqlite_sequence [C] name [C] seq [T] country [C] code [C] name [C] continent ( Asia ) [C] region [C] surfacearea [C] indepyear [C] population [C] lifeexpectancy [C] gnp [C] gnpold [C] localname [C] governmentform [C] headofstate [C] capital [C] code2 [T] countrylanguage [C] countrycode [C] language [C] isofficial [C] percentage
[feedback] In step 1 and 3 , You need to alter home phone with cell number and use treatments table in step 2 . [system description] Step 1 : find the professional id , last name , home phone in professionals table whose state equals " Indiana " . Step 2 : find the number of rows of each value of professional id in professionals table . Step 3 : find the professional id , last name , home phone in professionals table whose corresponding value in step 2 is greater than or equals 2 . Step 4 : show the rows that are in any of the results of step 1 and step 3 . [question] Which professionals live in the state of Indiana or have done treatment on more than 2 treatments ? List his or her id , last name and cell phone . [schema] [T] breeds [C] breed_code [C] breed_name [T] charges [C] charge_id [C] charge_type [C] charge_amount [T] sizes [C] size_code [C] size_description [T] treatment_types [C] treatment_type_code [C] treatment_type_description [T] owners [C] owner_id [C] first_name [C] last_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] email_address [C] home_phone [C] cell_number [T] dogs [C] dog_id [C] owner_id [C] abandoned_yn [C] breed_code [C] size_code [C] name [C] age [C] date_of_birth [C] gender [C] weight [C] date_arrived [C] date_adopted [C] date_departed [T] professionals [C] professional_id [C] role_code [C] first_name [C] street [C] city [C] state ( Indiana ) [C] zip_code [C] last_name [C] email_address [C] home_phone [C] cell_number [T] treatments [C] treatment_id [C] dog_id [C] professional_id [C] treatment_type_code [C] date_of_treatment [C] cost_of_treatment
[feedback] i want source airport and flights in place of airline and airlines respectively . [system description] find the number of rows in airlines table whose airline name equals " APG " . [question] Count the number of flights departing from 'APG ' . [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode ( APG ) [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport (  APG ) [C] destairport (  APG )
[feedback] Replace student table with has pet table . [system description] find each value of student id in student table along with the number of the corresponding rows to each value . [question] For students who have pets , how many pets does each student have ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype [C] pet_age [C] weight
[feedback] confirm that the year is 1974 and cylinders is 8 . [system description] find the minimum weight in cars data table whose year equals 1 . [question] What is the minimu weight of the car with 8 cylinders produced in 1974 ? [schema] [T] continents [C] contid [C] continent [T] countries [C] countryid [C] countryname [C] continent [T] car_makers [C] id [C] maker [C] fullname [C] country [T] model_list [C] modelid [C] maker [C] model [T] car_names [C] makeid [C] model [C] make [T] cars_data [C] id [C] mpg [C] cylinders [C] edispl [C] horsepower [C] weight [C] accelerate [C] year
[feedback] Omit " and directed by equals Ben Jones " condition . [system description] find the number of rows in cartoon table whose written by equals " Joseph Kuhr " and directed by equals " Ben Jones " . [question] What is the number of cartoones written by Joseph Kuhr ? [schema] [T] tv_channel [C] id [C] series_name [C] country [C] language [C] content [C] pixel_aspect_ratio_par [C] hight_definition_tv [C] pay_per_view_ppv [C] package_option [T] tv_series [C] id [C] episode [C] air_date [C] rating [C] share [C] 18_49_rating_share [C] viewers_m [C] weekly_rank [C] channel [T] cartoon [C] id [C] title [C] directed_by [C] written_by ( Joseph Kuhr ) [C] original_air_date [C] production_code [C] channel
[feedback] Substitute addresses with transcripts . [system description] find the number of rows in addresses table . [question] How many transcripts are listed ? [schema] [T] addresses [C] address_id [C] line_1 [C] line_2 [C] line_3 [C] city [C] zip_postcode [C] state_province_county [C] country [C] other_address_details [T] courses [C] course_id [C] course_name [C] course_description [C] other_details [T] departments [C] department_id [C] department_name [C] department_description [C] other_details [T] degree_programs [C] degree_program_id [C] department_id [C] degree_summary_name [C] degree_summary_description [C] other_details [T] sections [C] section_id [C] course_id [C] section_name [C] section_description [C] other_details [T] semesters [C] semester_id [C] semester_name [C] semester_description [C] other_details [T] students [C] student_id [C] current_address_id [C] permanent_address_id [C] first_name [C] middle_name [C] last_name [C] cell_mobile_number [C] email_address [C] ssn [C] date_first_registered [C] date_left [C] other_student_details [T] student_enrolment [C] student_enrolment_id [C] degree_program_id [C] semester_id [C] student_id [C] other_details [T] student_enrolment_courses [C] student_course_id [C] course_id [C] student_enrolment_id [T] transcripts [C] transcript_id [C] transcript_date [C] other_details [T] transcript_contents [C] student_course_id [C] transcript_id
[feedback] Confirm to find pet type equals cat in step 2 . [system description] Step 1 : find the student 's student id in student table . Step 2 : find the has pet 's student id in has pet table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the ids of the students who do not own cats as pets ? [schema] [T] student [C] stuid [C] lname [C] fname [C] age [C] sex [C] major [C] advisor [C] city_code [T] has_pet [C] stuid [C] petid [T] pets [C] petid [C] pettype ( cat ) [C] pet_age [C] weight
[feedback] Need to swap reference template types table with templates table . [system description] find the number of rows in reference template types table . [question] How many templates do we have ? [schema] [T] ref_template_types [C] template_type_code [C] template_type_description [T] templates [C] template_id [C] version_number [C] template_type_code [C] date_effective_from [C] date_effective_to [C] template_details [T] documents [C] document_id [C] template_id [C] document_name [C] document_description [C] other_details [T] paragraphs [C] paragraph_id [C] document_id [C] paragraph_text [C] other_details
[feedback] you have to check flight in flights table which is most number of times part as source airport or destination airport . [system description] Step 1 : for each row in airports table , find the corresponding rows in flights table . Step 2 : find the airport code of the results of step 1 with largest value of flight number . [question] What is the code of airport that has the highest number of flights ? [schema] [T] airlines [C] uid [C] airline [C] abbreviation [C] country [T] airports [C] city [C] airportcode [C] airportname [C] country [C] countryabbrev [T] flights [C] airline [C] flightno [C] sourceairport [C] destairport
[feedback] Skip " with smallest value of Best Finish " . [system description] find the final table made and best finish in poker player table with smallest value of best finish . [question] List the final tables made and the best finishes of poker players . [schema] [T] poker_player [C] poker_player_id [C] people_id [C] final_table_made [C] best_finish [C] money_rank [C] earnings [T] people [C] people_id [C] nationality [C] name [C] birth_date [C] height
