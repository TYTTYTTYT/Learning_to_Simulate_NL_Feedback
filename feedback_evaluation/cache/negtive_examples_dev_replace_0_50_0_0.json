[
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find director . find rating stars in place of summation of rating stars . find minimum rating stars in place of summation of rating stars .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                8,
                10
            ],
            [
                19,
                22
            ]
        ],
        "secondary_span": [
            [
                11,
                18
            ],
            [
                23,
                30
            ]
        ],
        "positive_example": "From step 2, I want title and stars rating of director having minimum stars rating.",
        "negative_examples": [
            "from step 2 , i want title and stars rating of movie id having minimum stars rating .",
            "from step 2 , i want title and stars rating of title having minimum stars rating .",
            "from step 2 , i want title and stars rating of year having minimum stars rating .",
            "from step 2 , i want title and stars rating of reviewer id having minimum stars rating .",
            "from step 2 , i want title and stars rating of name having minimum stars rating .",
            "from step 2 , i want title and stars rating of rating stars having minimum stars rating .",
            "from step 2 , i want title and stars rating of rating date having minimum stars rating ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , find average room count in place of average bathroom count .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ]
        ],
        "positive_example": "you should use room count instead of bathroom count.",
        "negative_examples": [
            "you should use room count instead of building id .",
            "you should use room count instead of building short name .",
            "you should use room count instead of building full name .",
            "you should use room count instead of building description .",
            "you should use room count instead of building address .",
            "you should use room count instead of building manager .",
            "you should use room count instead of building phone .",
            "you should use room count instead of apartment id .",
            "you should use room count instead of apartment type code .",
            "you should use room count instead of apartment number .",
            "you should use room count instead of bedroom count .",
            "you should use room count instead of facility code .",
            "you should use room count instead of guest id .",
            "you should use room count instead of gender code .",
            "you should use room count instead of guest first name .",
            "you should use room count instead of guest last name .",
            "you should use room count instead of date of birth .",
            "you should use room count instead of apartment booking id .",
            "you should use room count instead of booking status code .",
            "you should use room count instead of booking start date .",
            "you should use room count instead of booking end date .",
            "you should use room count instead of status date .",
            "you should use room count instead of available yes or no .",
            "you should use building id instead of bathroom count .",
            "you should use building short name instead of bathroom count .",
            "you should use building full name instead of bathroom count .",
            "you should use building description instead of bathroom count .",
            "you should use building address instead of bathroom count .",
            "you should use building manager instead of bathroom count .",
            "you should use building phone instead of bathroom count .",
            "you should use apartment id instead of bathroom count .",
            "you should use apartment type code instead of bathroom count .",
            "you should use apartment number instead of bathroom count .",
            "you should use bedroom count instead of bathroom count .",
            "you should use facility code instead of bathroom count .",
            "you should use guest id instead of bathroom count .",
            "you should use gender code instead of bathroom count .",
            "you should use guest first name instead of bathroom count .",
            "you should use guest last name instead of bathroom count .",
            "you should use date of birth instead of bathroom count .",
            "you should use apartment booking id instead of bathroom count .",
            "you should use booking status code instead of bathroom count .",
            "you should use booking start date instead of bathroom count .",
            "you should use booking end date instead of bathroom count .",
            "you should use status date instead of bathroom count .",
            "you should use available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "No need to find faculty 's year equals 1996 find campuses equals CSU instead of that .",
        "negative_examples": [
            "no need to find discipline enrollments 's county equals 1996 find campuses equals csu instead of that .",
            "no need to find campus 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find graduate 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline enrollments 's location equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's discipline equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's campus equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's campus fee equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's undergraduate equals 1996 find campuses equals csu instead of that .",
            "no need to find id 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find enrollments 's totalenrollment ay equals 1996 find campuses equals csu instead of that .",
            "no need to find enrollments 's county equals 1996 find campuses equals csu instead of that .",
            "no need to find fte ay 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's undergraduate equals 1996 find campuses equals csu instead of that .",
            "no need to find enrollments 's fte ay equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's location equals 1996 find campuses equals csu instead of that .",
            "no need to find enrollments 's location equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's fte ay equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's campus fee equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's totalenrollment ay equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline enrollments 's totalenrollment ay equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline enrollments 's fte ay equals 1996 find campuses equals csu instead of that .",
            "no need to find degrees 's discipline equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's location equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's campus equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's graduate equals 1996 find campuses equals csu instead of that .",
            "no need to find degrees 's location equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline enrollments 's campus fee equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's id equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's id equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's location equals 1996 find campuses equals csu instead of that .",
            "no need to find degrees 's undergraduate equals 1996 find campuses equals csu instead of that .",
            "no need to find campus fee 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline enrollments 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's county equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's campus fee equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline enrollments 's id equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline enrollments 's discipline equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's campus equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's county equals 1996 find campuses equals csu instead of that .",
            "no need to find enrollments 's campus equals 1996 find campuses equals csu instead of that .",
            "no need to find enrollments 's undergraduate equals 1996 find campuses equals csu instead of that .",
            "no need to find degrees 's campus fee equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's totalenrollment ay equals 1996 find campuses equals csu instead of that .",
            "no need to find degrees 's graduate equals 1996 find campuses equals csu instead of that .",
            "no need to find discipline 's year equals 1996 find campuses equals csu instead of that .",
            "no need to find enrollments 's degrees equals 1996 find campuses equals csu instead of that .",
            "no need to find faculty 's county equals 1996 find campuses equals csu instead of that .",
            "no need to find csu fees 's discipline equals 1996 find campuses equals csu instead of that .",
            "no need to find campuses 's id equals 1996 find campuses equals csu instead of that ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table besides the products table . find summation of product quantity in place of summation of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "Calculate the total of rows that correspond to each value of product quantity.",
        "negative_examples": [
            "calculate the total of rows that correspond to each value of customer id .",
            "calculate the total of rows that correspond to each value of customer first name .",
            "calculate the total of rows that correspond to each value of customer middle initial .",
            "calculate the total of rows that correspond to each value of customer last name .",
            "calculate the total of rows that correspond to each value of gender .",
            "calculate the total of rows that correspond to each value of email address .",
            "calculate the total of rows that correspond to each value of login name .",
            "calculate the total of rows that correspond to each value of login password .",
            "calculate the total of rows that correspond to each value of phone number .",
            "calculate the total of rows that correspond to each value of town city .",
            "calculate the total of rows that correspond to each value of state county province .",
            "calculate the total of rows that correspond to each value of country .",
            "calculate the total of rows that correspond to each value of order id .",
            "calculate the total of rows that correspond to each value of date order placed .",
            "calculate the total of rows that correspond to each value of order details .",
            "calculate the total of rows that correspond to each value of invoice number .",
            "calculate the total of rows that correspond to each value of invoice date .",
            "calculate the total of rows that correspond to each value of account id .",
            "calculate the total of rows that correspond to each value of date account opened .",
            "calculate the total of rows that correspond to each value of account name .",
            "calculate the total of rows that correspond to each value of other account details .",
            "calculate the total of rows that correspond to each value of production type code .",
            "calculate the total of rows that correspond to each value of product type description .",
            "calculate the total of rows that correspond to each value of vat rating .",
            "calculate the total of rows that correspond to each value of product id .",
            "calculate the total of rows that correspond to each value of parent product id .",
            "calculate the total of rows that correspond to each value of unit price .",
            "calculate the total of rows that correspond to each value of product name .",
            "calculate the total of rows that correspond to each value of product color .",
            "calculate the total of rows that correspond to each value of product size .",
            "calculate the total of rows that correspond to each value of transaction id .",
            "calculate the total of rows that correspond to each value of transaction type .",
            "calculate the total of rows that correspond to each value of transaction date .",
            "calculate the total of rows that correspond to each value of transaction amount .",
            "calculate the total of rows that correspond to each value of transaction comment .",
            "calculate the total of rows that correspond to each value of other transaction details .",
            "calculate the total of rows that correspond to each value of order item id .",
            "calculate the total of rows that correspond to each value of other order item details .",
            "calculate the total of rows that correspond to each value of product title .",
            "calculate the total of rows that correspond to each value of product price .",
            "calculate the total of rows that correspond to each value of derived product cost .",
            "calculate the total of rows that correspond to each value of derived vat payable .",
            "calculate the total of rows that correspond to each value of derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 2 , find for each value of student addresses 's address id in place of student id . in step 3 , find student addresses 's address id in place of student id .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                24,
                29
            ]
        ],
        "secondary_span": [
            [
                14,
                19
            ],
            [
                30,
                35
            ]
        ],
        "positive_example": "Just find average monthly rental , no need to find for each value of student id .",
        "negative_examples": [
            "just find average monthly rental , no need to find for each value of address type code .",
            "just find average monthly rental , no need to find for each value of address type description .",
            "just find average monthly rental , no need to find for each value of detention type code .",
            "just find average monthly rental , no need to find for each value of detention type description .",
            "just find average monthly rental , no need to find for each value of incident type code .",
            "just find average monthly rental , no need to find for each value of incident type description .",
            "just find average monthly rental , no need to find for each value of address id .",
            "just find average monthly rental , no need to find for each value of line 1 .",
            "just find average monthly rental , no need to find for each value of line 2 .",
            "just find average monthly rental , no need to find for each value of line 3 .",
            "just find average monthly rental , no need to find for each value of city .",
            "just find average monthly rental , no need to find for each value of zip postcode .",
            "just find average monthly rental , no need to find for each value of state province county .",
            "just find average monthly rental , no need to find for each value of country .",
            "just find average monthly rental , no need to find for each value of other address details .",
            "just find average monthly rental , no need to find for each value of first name .",
            "just find average monthly rental , no need to find for each value of middle name .",
            "just find average monthly rental , no need to find for each value of last name .",
            "just find average monthly rental , no need to find for each value of cell mobile number .",
            "just find average monthly rental , no need to find for each value of email address .",
            "just find average monthly rental , no need to find for each value of date first rental .",
            "just find average monthly rental , no need to find for each value of date left university .",
            "just find average monthly rental , no need to find for each value of other student details .",
            "just find average monthly rental , no need to find for each value of teacher id .",
            "just find average monthly rental , no need to find for each value of gender .",
            "just find average monthly rental , no need to find for each value of other details .",
            "just find average monthly rental , no need to find for each value of notes id .",
            "just find average monthly rental , no need to find for each value of date of notes .",
            "just find average monthly rental , no need to find for each value of text of notes .",
            "just find average monthly rental , no need to find for each value of incident id .",
            "just find average monthly rental , no need to find for each value of date incident start .",
            "just find average monthly rental , no need to find for each value of date incident end .",
            "just find average monthly rental , no need to find for each value of incident summary .",
            "just find average monthly rental , no need to find for each value of recommendations .",
            "just find average monthly rental , no need to find for each value of detention id .",
            "just find average monthly rental , no need to find for each value of datetime detention start .",
            "just find average monthly rental , no need to find for each value of datetime detention end .",
            "just find average monthly rental , no need to find for each value of detention summary .",
            "just find average monthly rental , no need to find for each value of date address from .",
            "just find average monthly rental , no need to find for each value of date address to .",
            "just find average monthly rental , no need to find for each value of monthly rental ."
        ],
        "neg_len": 41
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and apartment number equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "Find room count instead of bathroom count and find building short name equals Columbus Square instead of apartment number .",
        "negative_examples": [
            "find status date instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of guest first name and find building short name equals columbus square instead of apartment number .",
            "find bedroom count instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of gender code and find building short name equals columbus square instead of apartment number .",
            "find booking end date instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find apartment type code instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find building description instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find facility code equals columbus square instead of apartment number .",
            "find building manager instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find building description equals columbus square instead of apartment number .",
            "find guest id instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find gender code equals columbus square instead of apartment number .",
            "find room count instead of booking status code and find building short name equals columbus square instead of apartment number .",
            "find room count instead of apartment id and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find booking end date equals columbus square instead of apartment number .",
            "find room count instead of bedroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find building manager equals columbus square instead of apartment number .",
            "find room count instead of apartment booking id and find building short name equals columbus square instead of apartment number .",
            "find gender code instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of building id and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find available yes or no equals columbus square instead of apartment number .",
            "find guest first name instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of building description and find building short name equals columbus square instead of apartment number .",
            "find apartment booking id instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find booking start date equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find status date equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find date of birth equals columbus square instead of apartment number .",
            "find room count instead of booking end date and find building short name equals columbus square instead of apartment number .",
            "find apartment number instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find building address instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find guest last name instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find building phone instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find apartment type code equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find building full name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find guest id equals columbus square instead of apartment number .",
            "find booking status code instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find apartment number equals columbus square instead of apartment number .",
            "find facility code instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find guest last name equals columbus square instead of apartment number .",
            "find room count instead of facility code and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find bedroom count equals columbus square instead of apartment number .",
            "find room count instead of building full name and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find building phone equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find apartment booking id equals columbus square instead of apartment number .",
            "find room count instead of building manager and find building short name equals columbus square instead of apartment number .",
            "find apartment id instead of bathroom count and find building short name equals columbus square instead of apartment number .",
            "find room count instead of status date and find building short name equals columbus square instead of apartment number .",
            "find room count instead of bathroom count and find building address equals columbus square instead of apartment number .",
            "find room count instead of building phone and find building short name equals columbus square instead of apartment number .",
            "find room count instead of booking start date and find building short name equals columbus square instead of apartment number ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment facilities table . do not find for each value of facility code . in step 2 , additionally make sure that bedroom count greater than 4 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "You should find the bedroom counts of all apartments in step 1.",
        "negative_examples": [
            "you should find the bedroom counts of all apartment buildings in step 1 .",
            "you should find the bedroom counts of all apartment facilities in step 1 .",
            "you should find the bedroom counts of all guests in step 1 .",
            "you should find the bedroom counts of all apartment bookings in step 1 .",
            "you should find the bedroom counts of all view unit status in step 1 .",
            "you should find the building id of all apartments in step 1 .",
            "you should find the building short name of all apartments in step 1 .",
            "you should find the building full name of all apartments in step 1 .",
            "you should find the building description of all apartments in step 1 .",
            "you should find the building address of all apartments in step 1 .",
            "you should find the building manager of all apartments in step 1 .",
            "you should find the building phone of all apartments in step 1 .",
            "you should find the apartment id of all apartments in step 1 .",
            "you should find the apartment type code of all apartments in step 1 .",
            "you should find the apartment number of all apartments in step 1 .",
            "you should find the bathroom count of all apartments in step 1 .",
            "you should find the room count of all apartments in step 1 .",
            "you should find the facility code of all apartments in step 1 .",
            "you should find the guest id of all apartments in step 1 .",
            "you should find the gender code of all apartments in step 1 .",
            "you should find the guest first name of all apartments in step 1 .",
            "you should find the guest last name of all apartments in step 1 .",
            "you should find the date of birth of all apartments in step 1 .",
            "you should find the apartment booking id of all apartments in step 1 .",
            "you should find the booking status code of all apartments in step 1 .",
            "you should find the booking start date of all apartments in step 1 .",
            "you should find the booking end date of all apartments in step 1 .",
            "you should find the status date of all apartments in step 1 .",
            "you should find the available yes or no of all apartments in step 1 ."
        ],
        "neg_len": 29
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , find faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                12
            ]
        ],
        "positive_example": "Ensure that you search for faculty's faculty rather than rows count of faculty table.",
        "negative_examples": [
            "ensure that you search for campuses 's faculty rather than rows count of faculty table .",
            "ensure that you search for csu fees 's faculty rather than rows count of faculty table .",
            "ensure that you search for degrees 's faculty rather than rows count of faculty table .",
            "ensure that you search for discipline enrollments 's faculty rather than rows count of faculty table .",
            "ensure that you search for enrollments 's faculty rather than rows count of faculty table .",
            "ensure that you search for id 's faculty rather than rows count of faculty table .",
            "ensure that you search for campus 's faculty rather than rows count of faculty table .",
            "ensure that you search for location 's faculty rather than rows count of faculty table .",
            "ensure that you search for county 's faculty rather than rows count of faculty table .",
            "ensure that you search for year 's faculty rather than rows count of faculty table .",
            "ensure that you search for campus fee 's faculty rather than rows count of faculty table .",
            "ensure that you search for discipline 's faculty rather than rows count of faculty table .",
            "ensure that you search for undergraduate 's faculty rather than rows count of faculty table .",
            "ensure that you search for graduate 's faculty rather than rows count of faculty table .",
            "ensure that you search for totalenrollment ay 's faculty rather than rows count of faculty table .",
            "ensure that you search for fte ay 's faculty rather than rows count of faculty table ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the addresses table besides the customers table . consider the city equals Lockmanfurt conditions in place of the email address equals Lockmanfurt conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                18
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                19,
                28
            ]
        ],
        "positive_example": "You should use City's address instead of email address.",
        "negative_examples": [
            "you should use date of birth 's customer payments instead of email address .",
            "you should use city 's address instead of line 1 number building .",
            "you should use city 's vehicles instead of zip postcode .",
            "you should use date became customer 's lessons instead of email address .",
            "you should use datetime payment 's customer payments instead of email address .",
            "you should use phone number 's staff instead of email address .",
            "you should use city 's lessons instead of date left staff .",
            "you should use city 's customers instead of date joined staff .",
            "you should use amount outstanding 's customers instead of email address .",
            "you should use city 's staff instead of date became customer .",
            "you should use address id 's customer payments instead of email address .",
            "you should use city 's customers instead of date became customer .",
            "you should use date of birth 's lessons instead of email address .",
            "you should use city 's address instead of cell mobile phone number .",
            "you should use first name 's lessons instead of email address .",
            "you should use city 's customers instead of customer status code .",
            "you should use vehicle details 's lessons instead of email address .",
            "you should use last name 's staff instead of email address .",
            "you should use city 's address instead of staff address id .",
            "you should use state province county 's customer payments instead of email address .",
            "you should use city 's staff instead of amount payment .",
            "you should use datetime payment 's lessons instead of email address .",
            "you should use country 's customer payments instead of email address .",
            "you should use last name 's customer payments instead of email address .",
            "you should use city 's address instead of datetime payment .",
            "you should use city 's customers instead of staff id .",
            "you should use payment method code 's staff instead of email address .",
            "you should use address id 's lessons instead of email address .",
            "you should use staff id 's customer payments instead of email address .",
            "you should use city 's vehicles instead of price .",
            "you should use city 's customer payments instead of first name .",
            "you should use city 's customer payments instead of phone number .",
            "you should use vehicle id 's customer payments instead of email address .",
            "you should use amount outstanding 's vehicles instead of email address .",
            "you should use last name 's vehicles instead of email address .",
            "you should use city 's customer payments instead of vehicle id .",
            "you should use country 's address instead of email address .",
            "you should use date joined staff 's staff instead of email address .",
            "you should use city 's customer payments instead of date became customer .",
            "you should use city 's lessons instead of date became customer .",
            "you should use nickname 's address instead of email address .",
            "you should use vehicle details 's customers instead of email address .",
            "you should use first name 's address instead of email address .",
            "you should use city 's vehicles instead of staff address id .",
            "you should use cell mobile phone number 's customer payments instead of email address .",
            "you should use city 's customers instead of lesson date .",
            "you should use lesson status code 's address instead of email address .",
            "you should use lesson date 's vehicles instead of email address .",
            "you should use city 's lessons instead of vehicle details .",
            "you should use state province county 's customers instead of email address ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and discipline enrollments 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                55
            ]
        ],
        "positive_example": "Find campus fee whose csu fees year equals 1996 and campuses equals San Jose State University .",
        "negative_examples": [
            "find campus fee whose csu fees id equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees campus equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees location equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees county equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees campus fee equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees degrees equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees discipline equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees undergraduate equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees graduate equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees totalenrollment ay equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees fte ay equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees faculty equals 1996 and campuses equals san jose state university ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customers table besides the addresses table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 1, You have to use customers.",
        "negative_examples": [
            "in step 1 , you have to use addresses .",
            "in step 1 , you have to use staff .",
            "in step 1 , you have to use vehicles .",
            "in step 1 , you have to use customer payments .",
            "in step 1 , you have to use lessons ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally use the information from the movie table besides the rating table . additionally make sure that director equals James Cameron .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                25
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "i want the date of rating for director james cameron's film from rating table.",
        "negative_examples": [
            "i want the date of rating for movie id james cameron 's film from rating table .",
            "i want the date of rating for title james cameron 's film from rating table .",
            "i want the date of rating for year james cameron 's film from rating table .",
            "i want the date of rating for reviewer id james cameron 's film from rating table .",
            "i want the date of rating for name james cameron 's film from rating table .",
            "i want the date of rating for rating stars james cameron 's film from rating table .",
            "i want the date of rating for rating date james cameron 's film from rating table ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find order details and invoice date in place of date order placed .",
        "primary_span": [
            [
                4,
                9
            ]
        ],
        "secondary_span": [
            [
                10,
                16
            ]
        ],
        "positive_example": "Replace date order placed with invoice date , also need to find order details .",
        "negative_examples": [
            "replace phone number with invoice date , also need to find order details .",
            "replace date order placed with town city , also need to find order details .",
            "replace date order placed with vat rating , also need to find order details .",
            "replace date order placed with customer id , also need to find order details .",
            "replace date order placed with invoice date , also need to find customer first name .",
            "replace derived total cost with invoice date , also need to find order details .",
            "replace date order placed with invoice date , also need to find country .",
            "replace transaction id with invoice date , also need to find order details .",
            "replace date order placed with other order item details , also need to find order details .",
            "replace date order placed with invoice date , also need to find transaction comment .",
            "replace date order placed with transaction type , also need to find order details .",
            "replace date account opened with invoice date , also need to find order details .",
            "replace date order placed with customer first name , also need to find order details .",
            "replace date order placed with transaction date , also need to find order details .",
            "replace date order placed with login password , also need to find order details .",
            "replace date order placed with email address , also need to find order details .",
            "replace product name with invoice date , also need to find order details .",
            "replace customer first name with invoice date , also need to find order details .",
            "replace date order placed with transaction id , also need to find order details .",
            "replace date order placed with unit price , also need to find order details .",
            "replace date order placed with invoice date , also need to find derived vat payable .",
            "replace account id with invoice date , also need to find order details .",
            "replace product color with invoice date , also need to find order details .",
            "replace date order placed with invoice date , also need to find product type description .",
            "replace date order placed with invoice date , also need to find phone number .",
            "replace date order placed with invoice date , also need to find product color .",
            "replace derived product cost with invoice date , also need to find order details .",
            "replace email address with invoice date , also need to find order details .",
            "replace date order placed with invoice number , also need to find order details .",
            "replace date order placed with invoice date , also need to find email address .",
            "replace date order placed with invoice date , also need to find parent product id .",
            "replace date order placed with invoice date , also need to find order id .",
            "replace other order item details with invoice date , also need to find order details .",
            "replace date order placed with invoice date , also need to find login password .",
            "replace date order placed with derived product cost , also need to find order details .",
            "replace date order placed with transaction amount , also need to find order details .",
            "replace date order placed with product name , also need to find order details .",
            "replace date order placed with account name , also need to find order details .",
            "replace date order placed with invoice date , also need to find product id .",
            "replace date order placed with login name , also need to find order details .",
            "replace date order placed with invoice date , also need to find gender .",
            "replace customer id with invoice date , also need to find order details .",
            "replace date order placed with order id , also need to find order details .",
            "replace transaction date with invoice date , also need to find order details .",
            "replace transaction comment with invoice date , also need to find order details .",
            "replace vat rating with invoice date , also need to find order details .",
            "replace transaction type with invoice date , also need to find order details .",
            "replace other account details with invoice date , also need to find order details .",
            "replace date order placed with order item id , also need to find order details .",
            "replace gender with invoice date , also need to find order details ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , additionally use the information from the campuses table besides the faculty table . in step 2 , do not find for each value of faculty 's campus . in step 3 , find campuses 's campus in place of faculty . order the results by faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                31
            ],
            [
                36,
                39
            ],
            [
                45,
                49
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                40,
                44
            ],
            [
                50,
                56
            ]
        ],
        "positive_example": "For step 2, you need to determine campus, you should use the results of step 1 ordered in descending order of faculty's campus.",
        "negative_examples": [
            "for step 2 , you need to determine totalenrollment ay , you should use the results of step 1 ordered in descending order of enrollments 's totalenrollment ay .",
            "for step 2 , you need to determine id , you should use the results of step 1 ordered in descending order of enrollments 's id .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of totalenrollment ay 's campus .",
            "for step 2 , you need to determine undergraduate , you should use the results of step 1 ordered in descending order of discipline enrollments 's undergraduate .",
            "for step 2 , you need to determine totalenrollment ay , you should use the results of step 1 ordered in descending order of discipline enrollments 's totalenrollment ay .",
            "for step 2 , you need to determine location , you should use the results of step 1 ordered in descending order of degrees 's location .",
            "for step 2 , you need to determine degrees , you should use the results of step 1 ordered in descending order of discipline enrollments 's degrees .",
            "for step 2 , you need to determine discipline , you should use the results of step 1 ordered in descending order of csu fees 's discipline .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of location 's campus .",
            "for step 2 , you need to determine year , you should use the results of step 1 ordered in descending order of faculty 's campus .",
            "for step 2 , you need to determine county , you should use the results of step 1 ordered in descending order of campuses 's county .",
            "for step 2 , you need to determine discipline , you should use the results of step 1 ordered in descending order of campuses 's discipline .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of csu fees 's campus .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of id 's campus .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of county 's campus .",
            "for step 2 , you need to determine campus fee , you should use the results of step 1 ordered in descending order of discipline enrollments 's campus fee .",
            "for step 2 , you need to determine totalenrollment ay , you should use the results of step 1 ordered in descending order of csu fees 's totalenrollment ay .",
            "for step 2 , you need to determine degrees , you should use the results of step 1 ordered in descending order of enrollments 's degrees .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of undergraduate 's campus .",
            "for step 2 , you need to determine id , you should use the results of step 1 ordered in descending order of csu fees 's id .",
            "for step 2 , you need to determine county , you should use the results of step 1 ordered in descending order of discipline enrollments 's county .",
            "for step 2 , you need to determine id , you should use the results of step 1 ordered in descending order of discipline enrollments 's id .",
            "for step 2 , you need to determine discipline , you should use the results of step 1 ordered in descending order of degrees 's discipline .",
            "for step 2 , you need to determine undergraduate , you should use the results of step 1 ordered in descending order of degrees 's undergraduate .",
            "for step 2 , you need to determine fte ay , you should use the results of step 1 ordered in descending order of csu fees 's fte ay .",
            "for step 2 , you need to determine fte ay , you should use the results of step 1 ordered in descending order of campuses 's fte ay .",
            "for step 2 , you need to determine id , you should use the results of step 1 ordered in descending order of faculty 's campus .",
            "for step 2 , you need to determine location , you should use the results of step 1 ordered in descending order of faculty 's campus .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of discipline enrollments 's campus .",
            "for step 2 , you need to determine location , you should use the results of step 1 ordered in descending order of campuses 's location .",
            "for step 2 , you need to determine fte ay , you should use the results of step 1 ordered in descending order of discipline enrollments 's fte ay .",
            "for step 2 , you need to determine id , you should use the results of step 1 ordered in descending order of degrees 's id .",
            "for step 2 , you need to determine graduate , you should use the results of step 1 ordered in descending order of discipline enrollments 's graduate .",
            "for step 2 , you need to determine undergraduate , you should use the results of step 1 ordered in descending order of campuses 's undergraduate .",
            "for step 2 , you need to determine campus fee , you should use the results of step 1 ordered in descending order of degrees 's campus fee .",
            "for step 2 , you need to determine graduate , you should use the results of step 1 ordered in descending order of csu fees 's graduate .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of degrees 's campus .",
            "for step 2 , you need to determine year , you should use the results of step 1 ordered in descending order of campuses 's year .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of year 's campus .",
            "for step 2 , you need to determine degrees , you should use the results of step 1 ordered in descending order of degrees 's degrees .",
            "for step 2 , you need to determine campus , you should use the results of step 1 ordered in descending order of fte ay 's campus .",
            "for step 2 , you need to determine year , you should use the results of step 1 ordered in descending order of enrollments 's year .",
            "for step 2 , you need to determine fte ay , you should use the results of step 1 ordered in descending order of faculty 's campus .",
            "for step 2 , you need to determine year , you should use the results of step 1 ordered in descending order of csu fees 's year .",
            "for step 2 , you need to determine year , you should use the results of step 1 ordered in descending order of discipline enrollments 's year .",
            "for step 2 , you need to determine graduate , you should use the results of step 1 ordered in descending order of degrees 's graduate .",
            "for step 2 , you need to determine campus fee , you should use the results of step 1 ordered in descending order of faculty 's campus .",
            "for step 2 , you need to determine fte ay , you should use the results of step 1 ordered in descending order of degrees 's fte ay .",
            "for step 2 , you need to determine year , you should use the results of step 1 ordered in descending order of degrees 's year .",
            "for step 2 , you need to determine campus fee , you should use the results of step 1 ordered in descending order of csu fees 's campus fee ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find director . find rating stars in place of average rating stars . find minimum rating stars in place of average rating stars .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                8,
                10
            ],
            [
                18,
                21
            ]
        ],
        "secondary_span": [
            [
                11,
                17
            ],
            [
                22,
                28
            ]
        ],
        "positive_example": "Use average ratings stars instead of lowest value of rating stars and also determine the title of movie table.",
        "negative_examples": [
            "use average ratings stars instead of lowest value of movie id and also determine the title of movie table .",
            "use average ratings stars instead of lowest value of title and also determine the title of movie table .",
            "use average ratings stars instead of lowest value of year and also determine the title of movie table .",
            "use average ratings stars instead of lowest value of director and also determine the title of movie table .",
            "use average ratings stars instead of lowest value of reviewer id and also determine the title of movie table .",
            "use average ratings stars instead of lowest value of name and also determine the title of movie table .",
            "use average ratings stars instead of lowest value of rating date and also determine the title of movie table ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the faculty table . consider the campuses 's campus equals Long Beach State University conditions in place of the faculty 's year equals Long Beach State University conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                23
            ],
            [
                38,
                39
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                24,
                37
            ],
            [
                40,
                46
            ]
        ],
        "positive_example": "You should use faculty of faculty and campus of campuses instead of number of rows of faculty and year respectively.",
        "negative_examples": [
            "you should use discipline enrollments of faculty and graduate of campuses instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and campus of location instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and campus of discipline enrollments instead of number of rows of faculty and discipline respectively .",
            "you should use discipline of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use campus fee of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use fte ay of fte ay and campus of csu fees instead of number of rows of fte ay and year respectively .",
            "you should use discipline enrollments of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and fte ay of csu fees instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and campus of id instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and discipline of discipline enrollments instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and campus of discipline enrollments instead of number of rows of faculty and id respectively .",
            "you should use faculty of faculty and campus of degrees instead of number of rows of faculty and county respectively .",
            "you should use faculty of faculty and fte ay of enrollments instead of number of rows of faculty and year respectively .",
            "you should use enrollments of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and campus of csu fees instead of number of rows of faculty and graduate respectively .",
            "you should use faculty of faculty and campus of undergraduate instead of number of rows of faculty and year respectively .",
            "you should use csu fees of faculty and campus of campuses instead of number of rows of faculty and discipline respectively .",
            "you should use faculty of faculty and undergraduate of campuses instead of number of rows of faculty and year respectively .",
            "you should use discipline enrollments of faculty and campus of campuses instead of number of rows of faculty and county respectively .",
            "you should use enrollments of faculty and campus fee of campuses instead of number of rows of faculty and year respectively .",
            "you should use csu fees of faculty and graduate of campuses instead of number of rows of faculty and year respectively .",
            "you should use csu fees of faculty and location of campuses instead of number of rows of faculty and year respectively .",
            "you should use enrollments of faculty and campus of campuses instead of number of rows of faculty and undergraduate respectively .",
            "you should use fte ay of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and campus of csu fees instead of number of rows of faculty and undergraduate respectively .",
            "you should use faculty of faculty and campus of campuses instead of number of rows of faculty and discipline respectively .",
            "you should use csu fees of faculty and campus of campuses instead of number of rows of faculty and id respectively .",
            "you should use discipline enrollments of faculty and campus of campuses instead of number of rows of faculty and degrees respectively .",
            "you should use degrees of faculty and campus of campuses instead of number of rows of faculty and location respectively .",
            "you should use faculty of faculty and undergraduate of csu fees instead of number of rows of faculty and year respectively .",
            "you should use location of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use degrees of faculty and campus of campuses instead of number of rows of faculty and graduate respectively .",
            "you should use degrees of degrees and campus of csu fees instead of number of rows of degrees and year respectively .",
            "you should use discipline enrollments of faculty and totalenrollment ay of campuses instead of number of rows of faculty and year respectively .",
            "you should use degrees of faculty and campus of campuses instead of number of rows of faculty and campus fee respectively .",
            "you should use csu fees of faculty and campus of campuses instead of number of rows of faculty and totalenrollment ay respectively .",
            "you should use enrollments of faculty and degrees of campuses instead of number of rows of faculty and year respectively .",
            "you should use totalenrollment ay of totalenrollment ay and campus of discipline enrollments instead of number of rows of totalenrollment ay and year respectively .",
            "you should use faculty of faculty and county of discipline enrollments instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and campus of discipline enrollments instead of number of rows of faculty and campus fee respectively .",
            "you should use fte ay of fte ay and campus of degrees instead of number of rows of fte ay and year respectively .",
            "you should use discipline of discipline and campus of enrollments instead of number of rows of discipline and year respectively .",
            "you should use enrollments of faculty and campus of campuses instead of number of rows of faculty and totalenrollment ay respectively .",
            "you should use faculty of faculty and campus of campuses instead of number of rows of faculty and totalenrollment ay respectively .",
            "you should use faculty of faculty and campus of csu fees instead of number of rows of faculty and degrees respectively .",
            "you should use undergraduate of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use discipline enrollments of faculty and fte ay of campuses instead of number of rows of faculty and year respectively .",
            "you should use totalenrollment ay of faculty and campus of campuses instead of number of rows of faculty and year respectively .",
            "you should use faculty of faculty and county of csu fees instead of number of rows of faculty and year respectively .",
            "you should use location of location and campus of enrollments instead of number of rows of location and year respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , find for each value of max page size in place of product . in step 2 , find max page size in place of product .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                24
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                25,
                29
            ]
        ],
        "positive_example": "Substitute product with max page size for both steps .",
        "negative_examples": [
            "substitute store district with store id for both steps .",
            "substitute store district with ranking for both steps .",
            "substitute headquartered city with max page size for both steps .",
            "substitute area size with max page size for both steps .",
            "substitute product with interface for both steps .",
            "substitute store with max page size for both steps .",
            "substitute store with pages per minute color for both steps .",
            "substitute store product with city area for both steps .",
            "substitute store district with district id for both steps .",
            "substitute store name with max page size for both steps .",
            "substitute store with dimensions for both steps .",
            "substitute district id with max page size for both steps .",
            "substitute dpi with max page size for both steps .",
            "substitute store product with store name for both steps .",
            "substitute district with store name for both steps .",
            "substitute store with interface for both steps .",
            "substitute district with district id for both steps .",
            "substitute store district with interface for both steps .",
            "substitute store product with ranking for both steps .",
            "substitute store product with area size for both steps .",
            "substitute store district with district name for both steps .",
            "substitute store product with headquartered city for both steps .",
            "substitute product with area size for both steps .",
            "substitute store with number of product category for both steps .",
            "substitute district with pages per minute color for both steps .",
            "substitute store district with city population for both steps .",
            "substitute store district with headquartered city for both steps .",
            "substitute district with interface for both steps .",
            "substitute store district with type for both steps .",
            "substitute store district with dimensions for both steps .",
            "substitute store id with max page size for both steps .",
            "substitute product id with max page size for both steps .",
            "substitute district with dpi for both steps .",
            "substitute ranking with max page size for both steps .",
            "substitute product with ranking for both steps .",
            "substitute product with city area for both steps .",
            "substitute dimensions with max page size for both steps .",
            "substitute product with store id for both steps .",
            "substitute store district with product id for both steps .",
            "substitute city area with max page size for both steps .",
            "substitute district with store id for both steps .",
            "substitute product with type for both steps .",
            "substitute district with city area for both steps .",
            "substitute store with dpi for both steps .",
            "substitute store with district id for both steps .",
            "substitute district with number of product category for both steps .",
            "substitute interface with max page size for both steps .",
            "substitute district with dimensions for both steps .",
            "substitute district with ranking for both steps .",
            "substitute pages per minute color with max page size for both steps ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the customers table . additionally make sure that lesson status code equals Completed .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                22
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Make sure Lessons's lesson status code equals Completed for that customer .",
        "negative_examples": [
            "make sure staff 's middle name equals completed for that customer .",
            "make sure vehicles 's last name equals completed for that customer .",
            "make sure staff 's first name equals completed for that customer .",
            "make sure addresses 's customer status code equals completed for that customer .",
            "make sure addresses 's lesson time equals completed for that customer .",
            "make sure customer payments 's nickname equals completed for that customer .",
            "make sure customers 's lesson time equals completed for that customer .",
            "make sure addresses 's lesson status code equals completed for that customer .",
            "make sure staff 's zip postcode equals completed for that customer .",
            "make sure customers 's nickname equals completed for that customer .",
            "make sure customer payments 's price equals completed for that customer .",
            "make sure vehicles 's staff address id equals completed for that customer .",
            "make sure lessons 's date joined staff equals completed for that customer .",
            "make sure customers 's date joined staff equals completed for that customer .",
            "make sure vehicles 's vehicle id equals completed for that customer .",
            "make sure staff 's vehicle details equals completed for that customer .",
            "make sure customers 's datetime payment equals completed for that customer .",
            "make sure customer payments 's date left staff equals completed for that customer .",
            "make sure customers 's zip postcode equals completed for that customer .",
            "make sure customer payments 's customer status code equals completed for that customer .",
            "make sure customer payments 's date became customer equals completed for that customer .",
            "make sure customer payments 's vehicle details equals completed for that customer .",
            "make sure vehicles 's payment method code equals completed for that customer .",
            "make sure addresses 's email address equals completed for that customer .",
            "make sure customers 's date of birth equals completed for that customer .",
            "make sure customers 's last name equals completed for that customer .",
            "make sure customer payments 's phone number equals completed for that customer .",
            "make sure customer payments 's lesson date equals completed for that customer .",
            "make sure customer payments 's line 1 number building equals completed for that customer .",
            "make sure customer payments 's payment method code equals completed for that customer .",
            "make sure customer payments 's date joined staff equals completed for that customer .",
            "make sure customer payments 's staff address id equals completed for that customer .",
            "make sure lessons 's staff id equals completed for that customer .",
            "make sure staff 's state province county equals completed for that customer .",
            "make sure customer payments 's lesson id equals completed for that customer .",
            "make sure staff 's date left staff equals completed for that customer .",
            "make sure staff 's payment method code equals completed for that customer .",
            "make sure customers 's staff id equals completed for that customer .",
            "make sure customers 's line 1 number building equals completed for that customer .",
            "make sure vehicles 's datetime payment equals completed for that customer .",
            "make sure addresses 's phone number equals completed for that customer .",
            "make sure vehicles 's price equals completed for that customer .",
            "make sure vehicles 's date joined staff equals completed for that customer .",
            "make sure staff 's phone number equals completed for that customer .",
            "make sure addresses 's amount payment equals completed for that customer .",
            "make sure customer payments 's address id equals completed for that customer .",
            "make sure addresses 's middle name equals completed for that customer .",
            "make sure customers 's date became customer equals completed for that customer .",
            "make sure vehicles 's line 1 number building equals completed for that customer .",
            "make sure customers 's staff address id equals completed for that customer ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Remove faculty's year part in step 2.",
        "negative_examples": [
            "remove faculty 's undergraduate part in step 2 .",
            "remove faculty 's degrees part in step 2 .",
            "remove csu fees 's campus fee part in step 2 .",
            "remove degrees 's fte ay part in step 2 .",
            "remove location 's year part in step 2 .",
            "remove discipline enrollments 's campus fee part in step 2 .",
            "remove discipline enrollments 's graduate part in step 2 .",
            "remove campuses 's county part in step 2 .",
            "remove enrollments 's graduate part in step 2 .",
            "remove faculty 's discipline part in step 2 .",
            "remove degrees 's undergraduate part in step 2 .",
            "remove campuses 's year part in step 2 .",
            "remove discipline enrollments 's location part in step 2 .",
            "remove campuses 's fte ay part in step 2 .",
            "remove enrollments 's year part in step 2 .",
            "remove totalenrollment ay 's year part in step 2 .",
            "remove csu fees 's campus part in step 2 .",
            "remove csu fees 's discipline part in step 2 .",
            "remove fte ay 's year part in step 2 .",
            "remove enrollments 's county part in step 2 .",
            "remove campuses 's id part in step 2 .",
            "remove campuses 's campus fee part in step 2 .",
            "remove campuses 's location part in step 2 .",
            "remove enrollments 's campus fee part in step 2 .",
            "remove discipline enrollments 's discipline part in step 2 .",
            "remove faculty 's campus fee part in step 2 .",
            "remove campuses 's graduate part in step 2 .",
            "remove degrees 's year part in step 2 .",
            "remove campuses 's discipline part in step 2 .",
            "remove faculty 's campus part in step 2 .",
            "remove discipline 's year part in step 2 .",
            "remove enrollments 's campus part in step 2 .",
            "remove degrees 's campus part in step 2 .",
            "remove faculty 's graduate part in step 2 .",
            "remove undergraduate 's year part in step 2 .",
            "remove csu fees 's fte ay part in step 2 .",
            "remove csu fees 's id part in step 2 .",
            "remove faculty 's fte ay part in step 2 .",
            "remove discipline enrollments 's id part in step 2 .",
            "remove campuses 's campus part in step 2 .",
            "remove id 's year part in step 2 .",
            "remove degrees 's campus fee part in step 2 .",
            "remove csu fees 's degrees part in step 2 .",
            "remove faculty 's county part in step 2 .",
            "remove county 's year part in step 2 .",
            "remove discipline enrollments 's totalenrollment ay part in step 2 .",
            "remove degrees 's discipline part in step 2 .",
            "remove enrollments 's fte ay part in step 2 .",
            "remove discipline enrollments 's fte ay part in step 2 .",
            "remove discipline enrollments 's undergraduate part in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the staff table besides the addresses table . consider the first name equals Janessa and last name equals Sawayn conditions in place of the line 1 number building equals Janessa conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                24
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                25,
                36
            ]
        ],
        "positive_example": "Make sure first name equals Janessa and last name equals Sawayn .",
        "negative_examples": [
            "make sure first name equals janessa and phone number equals sawayn .",
            "make sure first name equals janessa and zip postcode equals sawayn .",
            "make sure line 1 number building equals janessa and last name equals sawayn .",
            "make sure state province county equals janessa and last name equals sawayn .",
            "make sure price equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and customer status code equals sawayn .",
            "make sure customer id equals janessa and last name equals sawayn .",
            "make sure address id equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and country equals sawayn .",
            "make sure country equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and lesson status code equals sawayn .",
            "make sure first name equals janessa and vehicle id equals sawayn .",
            "make sure first name equals janessa and middle name equals sawayn .",
            "make sure amount payment equals janessa and last name equals sawayn .",
            "make sure zip postcode equals janessa and last name equals sawayn .",
            "make sure lesson date equals janessa and last name equals sawayn .",
            "make sure cell mobile phone number equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and payment method code equals sawayn .",
            "make sure vehicle id equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and staff address id equals sawayn .",
            "make sure amount outstanding equals janessa and last name equals sawayn .",
            "make sure nickname equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and line 1 number building equals sawayn .",
            "make sure date became customer equals janessa and last name equals sawayn .",
            "make sure phone number equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and amount outstanding equals sawayn .",
            "make sure first name equals janessa and state province county equals sawayn .",
            "make sure staff address id equals janessa and last name equals sawayn .",
            "make sure lesson status code equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and email address equals sawayn .",
            "make sure date joined staff equals janessa and last name equals sawayn .",
            "make sure date of birth equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and date of birth equals sawayn .",
            "make sure first name equals janessa and vehicle details equals sawayn .",
            "make sure vehicle details equals janessa and last name equals sawayn .",
            "make sure date left staff equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and lesson time equals sawayn .",
            "make sure first name equals janessa and cell mobile phone number equals sawayn .",
            "make sure customer address id equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and date left staff equals sawayn .",
            "make sure first name equals janessa and customer address id equals sawayn .",
            "make sure first name equals janessa and lesson date equals sawayn .",
            "make sure city equals janessa and last name equals sawayn .",
            "make sure datetime payment equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and date joined staff equals sawayn .",
            "make sure payment method code equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and amount payment equals sawayn .",
            "make sure email address equals janessa and last name equals sawayn .",
            "make sure customer status code equals janessa and last name equals sawayn .",
            "make sure first name equals janessa and price equals sawayn ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find transaction id in place of account id .",
        "primary_span": [
            [
                4,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ]
        ],
        "positive_example": "I want the id of transaction.",
        "negative_examples": [
            "i want the id of customer id .",
            "i want the id of customer first name .",
            "i want the id of customer middle initial .",
            "i want the id of customer last name .",
            "i want the id of gender .",
            "i want the id of email address .",
            "i want the id of login name .",
            "i want the id of login password .",
            "i want the id of phone number .",
            "i want the id of town city .",
            "i want the id of state county province .",
            "i want the id of country .",
            "i want the id of order id .",
            "i want the id of date order placed .",
            "i want the id of order details .",
            "i want the id of invoice number .",
            "i want the id of invoice date .",
            "i want the id of account id .",
            "i want the id of date account opened .",
            "i want the id of account name .",
            "i want the id of other account details .",
            "i want the id of production type code .",
            "i want the id of product type description .",
            "i want the id of vat rating .",
            "i want the id of product id .",
            "i want the id of parent product id .",
            "i want the id of unit price .",
            "i want the id of product name .",
            "i want the id of product color .",
            "i want the id of product size .",
            "i want the id of transaction type .",
            "i want the id of transaction date .",
            "i want the id of transaction amount .",
            "i want the id of transaction comment .",
            "i want the id of other transaction details .",
            "i want the id of order item id .",
            "i want the id of product quantity .",
            "i want the id of other order item details .",
            "i want the id of product title .",
            "i want the id of product price .",
            "i want the id of derived product cost .",
            "i want the id of derived vat payable .",
            "i want the id of derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customer payments table besides the customers table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "In step 1 , there should be customer payments table instead of customers table",
        "negative_examples": [
            "in step 1 , there should be addresses table instead of customers table",
            "in step 1 , there should be staff table instead of customers table",
            "in step 1 , there should be vehicles table instead of customers table",
            "in step 1 , there should be customers table instead of customers table",
            "in step 1 , there should be lessons table instead of customers table"
        ],
        "neg_len": 5
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , consider the rating date equals null conditions in place of the rating stars equals null conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                21,
                28
            ]
        ],
        "secondary_span": [
            [
                11,
                20
            ]
        ],
        "positive_example": "In step 2 Find name whose rating stars are valued null for particular date .",
        "negative_examples": [
            "in step 2 find name whose movie id are valued null for particular date .",
            "in step 2 find name whose title are valued null for particular date .",
            "in step 2 find name whose year are valued null for particular date .",
            "in step 2 find name whose director are valued null for particular date .",
            "in step 2 find name whose reviewer id are valued null for particular date .",
            "in step 2 find name whose name are valued null for particular date .",
            "in step 2 find name whose rating date are valued null for particular date ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building full name equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                32,
                36
            ]
        ],
        "secondary_span": [
            [
                13,
                31
            ],
            [
                37,
                44
            ]
        ],
        "positive_example": "In step 2, determine the aggregate of bedroom count where building short name is Columbus Square.",
        "negative_examples": [
            "in step 2 , determine the aggregate of bedroom count where building id is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where building full name is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where building description is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where building address is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where building manager is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where building phone is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where apartment id is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where apartment type code is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where apartment number is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where bathroom count is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where bedroom count is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where room count is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where facility code is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where guest id is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where gender code is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where guest first name is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where guest last name is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where date of birth is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where apartment booking id is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where booking status code is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where booking start date is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where booking end date is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where status date is columbus square .",
            "in step 2 , determine the aggregate of bedroom count where available yes or no is columbus square ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use accounts table in place of orders table . find account name , account id , date account opened , and other account details in place of order id , order details , and date order placed .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                23
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                24,
                37
            ]
        ],
        "positive_example": "You need to use account id, date account opened, other account details, accounts in lieu of order Id, date the order was placed, order details and orders respectively. you should also search the account's name.",
        "negative_examples": [
            "you need to use transaction amount , date account opened , other account details , customers in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , customer id , other account details , products in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other transaction details , financial transactions in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , financial transactions in lieu of derived total cost , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use date order placed , date account opened , other account details , products in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , parent product id and product categories respectively . you should also search the account 's name .",
            "you need to use country , date account opened , other account details , accounts in lieu of order id , date the order was placed , order details and financial transactions respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , unit price , accounts in lieu of order id , date the order was placed , order details and invoice line items respectively . you should also search the account 's name .",
            "you need to use account id , product price , other account details , accounts in lieu of order id , date the order was placed , order details and invoice line items respectively . you should also search the account 's name .",
            "you need to use product title , date account opened , other account details , product categories in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , product name and order items respectively . you should also search the account 's name .",
            "you need to use product id , date account opened , other account details , order items in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of date order placed , date the order was placed , order details and financial transactions respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , derived vat payable , accounts in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , product id and customers respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other order item details , order items in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use product price , date account opened , other account details , accounts in lieu of order id , date the order was placed , order details and product categories respectively . you should also search the account 's name .",
            "you need to use account id , product name , other account details , invoice line items in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , login name , invoices in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use transaction type , date account opened , other account details , order items in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use derived product cost , date account opened , other account details , accounts in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , invoices in lieu of order id , date the order was placed , town city and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , vat rating , accounts in lieu of order id , date the order was placed , order details and product categories respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , gender and products respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , unit price and order items respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of transaction comment , date the order was placed , order details and product categories respectively . you should also search the account 's name .",
            "you need to use account id , customer id , other account details , accounts in lieu of order id , date the order was placed , order details and invoice line items respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , customers in lieu of order id , date the order was placed , product color and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , login password and customers respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , invoices in lieu of phone number , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , product price , other account details , accounts in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , state county province , accounts in lieu of order id , date the order was placed , order details and order items respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , invoice number and financial transactions respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , invoices in lieu of transaction type , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use transaction date , date account opened , other account details , financial transactions in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , production type code and products respectively . you should also search the account 's name .",
            "you need to use other order item details , date account opened , other account details , product categories in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , product size , accounts in lieu of order id , date the order was placed , order details and product categories respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , product title and product categories respectively . you should also search the account 's name .",
            "you need to use account id , customer first name , other account details , order items in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , product color , accounts in lieu of order id , date the order was placed , order details and products respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , customers in lieu of order id , date the order was placed , unit price and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , product categories in lieu of other order item details , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of order id , date the order was placed , production type code and customers respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , accounts in lieu of country , date the order was placed , order details and invoices respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , other account details , order items in lieu of town city , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , vat rating , other account details , financial transactions in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , other order item details , other account details , invoices in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , customer first name , other account details , product categories in lieu of order id , date the order was placed , order details and orders respectively . you should also search the account 's name .",
            "you need to use account id , date account opened , state county province , accounts in lieu of order id , date the order was placed , order details and product categories respectively . you should also search the account 's name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "order the results by city area in place of city population .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                11
            ]
        ],
        "positive_example": "Here, you only require to search of descending order of city area.",
        "negative_examples": [
            "here , you only require to search of descending order of product id .",
            "here , you only require to search of descending order of product .",
            "here , you only require to search of descending order of dimensions .",
            "here , you only require to search of descending order of dpi .",
            "here , you only require to search of descending order of pages per minute color .",
            "here , you only require to search of descending order of max page size .",
            "here , you only require to search of descending order of interface .",
            "here , you only require to search of descending order of store id .",
            "here , you only require to search of descending order of store name .",
            "here , you only require to search of descending order of type .",
            "here , you only require to search of descending order of area size .",
            "here , you only require to search of descending order of number of product category .",
            "here , you only require to search of descending order of ranking .",
            "here , you only require to search of descending order of district id .",
            "here , you only require to search of descending order of district name .",
            "here , you only require to search of descending order of headquartered city .",
            "here , you only require to search of descending order of city population ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of products table . find number of different order id in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                22
            ]
        ],
        "positive_example": "Discover the number of each corresponding rows of different order id of order items.",
        "negative_examples": [
            "discover the number of each corresponding rows of different order details of financial transactions .",
            "discover the number of each corresponding rows of different other order item details of products .",
            "discover the number of each corresponding rows of different product title of orders .",
            "discover the number of each corresponding rows of different invoice date of financial transactions .",
            "discover the number of each corresponding rows of different country of invoices .",
            "discover the number of each corresponding rows of different transaction date of product categories .",
            "discover the number of each corresponding rows of different transaction comment of product categories .",
            "discover the number of each corresponding rows of different customer id of financial transactions .",
            "discover the number of each corresponding rows of different derived vat payable of invoice line items .",
            "discover the number of each corresponding rows of different vat rating of products .",
            "discover the number of each corresponding rows of different unit price of financial transactions .",
            "discover the number of each corresponding rows of different town city of customers .",
            "discover the number of each corresponding rows of different transaction amount of financial transactions .",
            "discover the number of each corresponding rows of different production type code of customers .",
            "discover the number of each corresponding rows of different invoice number of invoice line items .",
            "discover the number of each corresponding rows of different login name of invoice line items .",
            "discover the number of each corresponding rows of different production type code of accounts .",
            "discover the number of each corresponding rows of different product size of orders .",
            "discover the number of each corresponding rows of different gender of financial transactions .",
            "discover the number of each corresponding rows of different order details of product categories .",
            "discover the number of each corresponding rows of different customer first name of financial transactions .",
            "discover the number of each corresponding rows of different order details of products .",
            "discover the number of each corresponding rows of different product name of invoices .",
            "discover the number of each corresponding rows of different production type code of product categories .",
            "discover the number of each corresponding rows of different email address of accounts .",
            "discover the number of each corresponding rows of different product title of products .",
            "discover the number of each corresponding rows of different product id of order items .",
            "discover the number of each corresponding rows of different date account opened of invoices .",
            "discover the number of each corresponding rows of different customer middle initial of product categories .",
            "discover the number of each corresponding rows of different unit price of product categories .",
            "discover the number of each corresponding rows of different customer id of products .",
            "discover the number of each corresponding rows of different product quantity of invoices .",
            "discover the number of each corresponding rows of different transaction date of products .",
            "discover the number of each corresponding rows of different country of invoice line items .",
            "discover the number of each corresponding rows of different other order item details of customers .",
            "discover the number of each corresponding rows of different account id of invoice line items .",
            "discover the number of each corresponding rows of different order id of financial transactions .",
            "discover the number of each corresponding rows of different transaction type of invoice line items .",
            "discover the number of each corresponding rows of different other transaction details of financial transactions .",
            "discover the number of each corresponding rows of different product price of product categories .",
            "discover the number of each corresponding rows of different transaction id of invoices .",
            "discover the number of each corresponding rows of different derived vat payable of invoices .",
            "discover the number of each corresponding rows of different order details of orders .",
            "discover the number of each corresponding rows of different invoice number of orders .",
            "discover the number of each corresponding rows of different invoice date of orders .",
            "discover the number of each corresponding rows of different customer middle initial of orders .",
            "discover the number of each corresponding rows of different product size of customers .",
            "discover the number of each corresponding rows of different date account opened of product categories .",
            "discover the number of each corresponding rows of different customer first name of orders .",
            "discover the number of each corresponding rows of different parent product id of invoice line items ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "do not find for each value of apartment number . find room count in place of number of rows .",
        "primary_span": [
            [
                0,
                9
            ],
            [
                10,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                19
            ]
        ],
        "positive_example": "Also need to find room count .",
        "negative_examples": [
            "also need to find building id .",
            "also need to find building short name .",
            "also need to find building full name .",
            "also need to find building description .",
            "also need to find building address .",
            "also need to find building manager .",
            "also need to find building phone .",
            "also need to find apartment id .",
            "also need to find apartment type code .",
            "also need to find apartment number .",
            "also need to find bathroom count .",
            "also need to find bedroom count .",
            "also need to find facility code .",
            "also need to find guest id .",
            "also need to find gender code .",
            "also need to find guest first name .",
            "also need to find guest last name .",
            "also need to find date of birth .",
            "also need to find apartment booking id .",
            "also need to find booking status code .",
            "also need to find booking start date .",
            "also need to find booking end date .",
            "also need to find status date .",
            "also need to find available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 2 , find text of notes in place of notes id .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "Supersede notes id with text of notes in step 2.",
        "negative_examples": [
            "supersede notes id with date address from in step 2 .",
            "supersede notes id with address type code in step 2 .",
            "supersede notes id with first name in step 2 .",
            "supersede detention id with text of notes in step 2 .",
            "supersede line 1 with text of notes in step 2 .",
            "supersede notes id with monthly rental in step 2 .",
            "supersede notes id with middle name in step 2 .",
            "supersede notes id with detention type description in step 2 .",
            "supersede notes id with datetime detention start in step 2 .",
            "supersede incident type description with text of notes in step 2 .",
            "supersede notes id with country in step 2 .",
            "supersede teacher id with text of notes in step 2 .",
            "supersede notes id with date of notes in step 2 .",
            "supersede notes id with other address details in step 2 .",
            "supersede date incident start with text of notes in step 2 .",
            "supersede notes id with other details in step 2 .",
            "supersede notes id with cell mobile number in step 2 .",
            "supersede detention type code with text of notes in step 2 .",
            "supersede date address to with text of notes in step 2 .",
            "supersede address type code with text of notes in step 2 .",
            "supersede notes id with date first rental in step 2 .",
            "supersede incident summary with text of notes in step 2 .",
            "supersede notes id with address type description in step 2 .",
            "supersede notes id with date address to in step 2 .",
            "supersede cell mobile number with text of notes in step 2 .",
            "supersede last name with text of notes in step 2 .",
            "supersede notes id with incident id in step 2 .",
            "supersede date incident end with text of notes in step 2 .",
            "supersede notes id with date incident start in step 2 .",
            "supersede detention type description with text of notes in step 2 .",
            "supersede date address from with text of notes in step 2 .",
            "supersede notes id with incident type code in step 2 .",
            "supersede notes id with detention type code in step 2 .",
            "supersede incident type code with text of notes in step 2 .",
            "supersede other address details with text of notes in step 2 .",
            "supersede gender with text of notes in step 2 .",
            "supersede notes id with recommendations in step 2 .",
            "supersede notes id with line 2 in step 2 .",
            "supersede notes id with teacher id in step 2 .",
            "supersede line 2 with text of notes in step 2 .",
            "supersede notes id with last name in step 2 .",
            "supersede notes id with email address in step 2 .",
            "supersede notes id with other student details in step 2 .",
            "supersede notes id with state province county in step 2 .",
            "supersede detention summary with text of notes in step 2 .",
            "supersede notes id with datetime detention end in step 2 .",
            "supersede middle name with text of notes in step 2 .",
            "supersede notes id with zip postcode in step 2 .",
            "supersede incident id with text of notes in step 2 .",
            "supersede zip postcode with text of notes in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 2 , find for each value of degrees 's year in place of discipline enrollments 's year . in step 3 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                26
            ],
            [
                39,
                42
            ],
            [
                51,
                57
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                27,
                34
            ],
            [
                43,
                50
            ],
            [
                58,
                63
            ]
        ],
        "positive_example": "No need to find average in step 2 , change both discipline enrollments table with degrees in step 2 and 3.",
        "negative_examples": [
            "no need to find average in step 2 , change both year table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both campus fee table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both faculty table with undergraduate in step 2 and 3 .",
            "no need to find average in step 2 , change both fte ay table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with totalenrollment ay in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with campus in step 2 and 3 .",
            "no need to find average in step 2 , change both csu fees table with county in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with undergraduate in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with campus fee in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with id in step 2 and 3 .",
            "no need to find average in step 2 , change both csu fees table with faculty in step 2 and 3 .",
            "no need to find average in step 2 , change both faculty table with graduate in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with id in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with county in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with location in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with discipline in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with location in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with graduate in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with county in step 2 and 3 .",
            "no need to find average in step 2 , change both faculty table with fte ay in step 2 and 3 .",
            "no need to find average in step 2 , change both faculty table with location in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with csu fees in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with totalenrollment ay in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with year in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with year in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with fte ay in step 2 and 3 .",
            "no need to find average in step 2 , change both id table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both faculty table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both csu fees table with id in step 2 and 3 .",
            "no need to find average in step 2 , change both csu fees table with discipline in step 2 and 3 .",
            "no need to find average in step 2 , change both csu fees table with campus fee in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with campus in step 2 and 3 .",
            "no need to find average in step 2 , change both totalenrollment ay table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with campus fee in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with totalenrollment ay in step 2 and 3 .",
            "no need to find average in step 2 , change both csu fees table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with fte ay in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with discipline in step 2 and 3 .",
            "no need to find average in step 2 , change both graduate table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both faculty table with id in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with year in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with degrees in step 2 and 3 .",
            "no need to find average in step 2 , change both enrollments table with faculty in step 2 and 3 .",
            "no need to find average in step 2 , change both campuses table with discipline in step 2 and 3 .",
            "no need to find average in step 2 , change both faculty table with discipline in step 2 and 3 .",
            "no need to find average in step 2 , change both csu fees table with location in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with campuses in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with graduate in step 2 and 3 .",
            "no need to find average in step 2 , change both discipline enrollments table with undergraduate in step 2 and 3 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average bedroom count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "i want bedroom count instead of bathroom count.",
        "negative_examples": [
            "i want bedroom count instead of building id .",
            "i want bedroom count instead of building short name .",
            "i want bedroom count instead of building full name .",
            "i want bedroom count instead of building description .",
            "i want bedroom count instead of building address .",
            "i want bedroom count instead of building manager .",
            "i want bedroom count instead of building phone .",
            "i want bedroom count instead of apartment id .",
            "i want bedroom count instead of apartment type code .",
            "i want bedroom count instead of apartment number .",
            "i want bedroom count instead of room count .",
            "i want bedroom count instead of facility code .",
            "i want bedroom count instead of guest id .",
            "i want bedroom count instead of gender code .",
            "i want bedroom count instead of guest first name .",
            "i want bedroom count instead of guest last name .",
            "i want bedroom count instead of date of birth .",
            "i want bedroom count instead of apartment booking id .",
            "i want bedroom count instead of booking status code .",
            "i want bedroom count instead of booking start date .",
            "i want bedroom count instead of booking end date .",
            "i want bedroom count instead of status date .",
            "i want bedroom count instead of available yes or no .",
            "i want building id instead of bathroom count .",
            "i want building short name instead of bathroom count .",
            "i want building full name instead of bathroom count .",
            "i want building description instead of bathroom count .",
            "i want building address instead of bathroom count .",
            "i want building manager instead of bathroom count .",
            "i want building phone instead of bathroom count .",
            "i want apartment id instead of bathroom count .",
            "i want apartment type code instead of bathroom count .",
            "i want apartment number instead of bathroom count .",
            "i want room count instead of bathroom count .",
            "i want facility code instead of bathroom count .",
            "i want guest id instead of bathroom count .",
            "i want gender code instead of bathroom count .",
            "i want guest first name instead of bathroom count .",
            "i want guest last name instead of bathroom count .",
            "i want date of birth instead of bathroom count .",
            "i want apartment booking id instead of bathroom count .",
            "i want booking status code instead of bathroom count .",
            "i want booking start date instead of bathroom count .",
            "i want booking end date instead of bathroom count .",
            "i want status date instead of bathroom count .",
            "i want available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions . find campuses 's campus in place of county .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ],
            [
                25,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                33
            ]
        ],
        "positive_example": "You need to use campuses instead of 1st county and delete faculty's year that are greater than 2002.",
        "negative_examples": [
            "you need to use campuses instead of 1st graduate and delete csu fees 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete degrees 's campus fee that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete degrees 's fte ay that are greater than 2002 .",
            "you need to use campuses instead of 1st location and delete degrees 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st degrees and delete enrollments 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st id and delete campuses 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st totalenrollment ay and delete faculty 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st undergraduate and delete faculty 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete enrollments 's location that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete campuses 's discipline that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete campuses 's graduate that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete discipline enrollments 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete campuses 's degrees that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete campus fee 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st fte ay and delete discipline enrollments 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st undergraduate and delete discipline enrollments 's year that are greater than 2002 .",
            "you need to use fte ay instead of 1st county and delete faculty 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete faculty 's discipline that are greater than 2002 .",
            "you need to use campuses instead of 1st undergraduate and delete enrollments 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st discipline and delete csu fees 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st fte ay and delete degrees 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st degrees and delete campuses 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st campus fee and delete csu fees 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete campuses 's location that are greater than 2002 .",
            "you need to use campuses instead of 1st graduate and delete discipline enrollments 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete discipline enrollments 's id that are greater than 2002 .",
            "you need to use discipline instead of 1st county and delete faculty 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete csu fees 's graduate that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete csu fees 's location that are greater than 2002 .",
            "you need to use campuses instead of 1st fte ay and delete campuses 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete degrees 's discipline that are greater than 2002 .",
            "you need to use campuses instead of 1st id and delete discipline enrollments 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete faculty 's undergraduate that are greater than 2002 .",
            "you need to use graduate instead of 1st county and delete faculty 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete discipline enrollments 's discipline that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete faculty 's campus fee that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete id 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st totalenrollment ay and delete degrees 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete csu fees 's campus fee that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete enrollments 's fte ay that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete discipline 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete faculty 's totalenrollment ay that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete csu fees 's id that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete faculty 's id that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete csu fees 's fte ay that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete discipline enrollments 's campus fee that are greater than 2002 .",
            "you need to use campuses instead of 1st fte ay and delete faculty 's year that are greater than 2002 .",
            "you need to use undergraduate instead of 1st county and delete faculty 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st campus fee and delete campuses 's year that are greater than 2002 .",
            "you need to use campuses instead of 1st county and delete undergraduate 's year that are greater than 2002 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table besides the products table . find summation of product quantity in place of summation of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "You need to find the total of each value of product quantity.",
        "negative_examples": [
            "you need to find the total of each value of customer id .",
            "you need to find the total of each value of customer first name .",
            "you need to find the total of each value of customer middle initial .",
            "you need to find the total of each value of customer last name .",
            "you need to find the total of each value of gender .",
            "you need to find the total of each value of email address .",
            "you need to find the total of each value of login name .",
            "you need to find the total of each value of login password .",
            "you need to find the total of each value of phone number .",
            "you need to find the total of each value of town city .",
            "you need to find the total of each value of state county province .",
            "you need to find the total of each value of country .",
            "you need to find the total of each value of order id .",
            "you need to find the total of each value of date order placed .",
            "you need to find the total of each value of order details .",
            "you need to find the total of each value of invoice number .",
            "you need to find the total of each value of invoice date .",
            "you need to find the total of each value of account id .",
            "you need to find the total of each value of date account opened .",
            "you need to find the total of each value of account name .",
            "you need to find the total of each value of other account details .",
            "you need to find the total of each value of production type code .",
            "you need to find the total of each value of product type description .",
            "you need to find the total of each value of vat rating .",
            "you need to find the total of each value of product id .",
            "you need to find the total of each value of parent product id .",
            "you need to find the total of each value of unit price .",
            "you need to find the total of each value of product name .",
            "you need to find the total of each value of product color .",
            "you need to find the total of each value of product size .",
            "you need to find the total of each value of transaction id .",
            "you need to find the total of each value of transaction type .",
            "you need to find the total of each value of transaction date .",
            "you need to find the total of each value of transaction amount .",
            "you need to find the total of each value of transaction comment .",
            "you need to find the total of each value of other transaction details .",
            "you need to find the total of each value of order item id .",
            "you need to find the total of each value of other order item details .",
            "you need to find the total of each value of product title .",
            "you need to find the total of each value of product price .",
            "you need to find the total of each value of derived product cost .",
            "you need to find the total of each value of derived vat payable .",
            "you need to find the total of each value of derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "use assessment notes table in place of behavior incident table . order the results by date of notes in place of date incident start .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                11,
                17
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                18,
                24
            ]
        ],
        "positive_example": "You need to use behavior incident table and incident start date in place of notes table and date of notes respectively.",
        "negative_examples": [
            "you need to use addresses table and incident start date in place of notes table and first name respectively .",
            "you need to use assessment notes table and incident start date in place of notes table and incident type description respectively .",
            "you need to use assessment notes table and incident start date in place of notes table and datetime detention end respectively .",
            "you need to use teachers table and incident start date in place of notes table and line 3 respectively .",
            "you need to use detention table and incident start date in place of notes table and datetime detention start respectively .",
            "you need to use behavior incident table and incident start date in place of notes table and address id respectively .",
            "you need to use behavior incident table and incident start date in place of notes table and address type code respectively .",
            "you need to use reference address types table and incident start date in place of notes table and zip postcode respectively .",
            "you need to use behavior incident table and incident start date in place of notes table and city respectively .",
            "you need to use students table and incident start date in place of notes table and recommendations respectively .",
            "you need to use reference incident type table and incident start date in place of notes table and text of notes respectively .",
            "you need to use reference address types table and incident start date in place of notes table and address type code respectively .",
            "you need to use teachers table and incident start date in place of notes table and detention type description respectively .",
            "you need to use student addresses table and incident start date in place of notes table and other address details respectively .",
            "you need to use students table and incident start date in place of notes table and detention id respectively .",
            "you need to use student addresses table and incident start date in place of notes table and last name respectively .",
            "you need to use behavior incident table and incident start date in place of notes table and state province county respectively .",
            "you need to use students in detention table and incident start date in place of notes table and other student details respectively .",
            "you need to use detention table and incident start date in place of notes table and address type code respectively .",
            "you need to use addresses table and incident start date in place of notes table and email address respectively .",
            "you need to use teachers table and incident start date in place of notes table and student id respectively .",
            "you need to use reference detention type table and incident start date in place of notes table and teacher id respectively .",
            "you need to use student addresses table and incident start date in place of notes table and incident summary respectively .",
            "you need to use addresses table and incident start date in place of notes table and recommendations respectively .",
            "you need to use students table and incident start date in place of notes table and last name respectively .",
            "you need to use teachers table and incident start date in place of notes table and other student details respectively .",
            "you need to use reference detention type table and incident start date in place of notes table and date first rental respectively .",
            "you need to use detention table and incident start date in place of notes table and middle name respectively .",
            "you need to use students in detention table and incident start date in place of notes table and line 3 respectively .",
            "you need to use assessment notes table and incident start date in place of notes table and detention type code respectively .",
            "you need to use student addresses table and incident start date in place of notes table and notes id respectively .",
            "you need to use students table and incident start date in place of notes table and incident id respectively .",
            "you need to use addresses table and incident start date in place of notes table and date incident end respectively .",
            "you need to use teachers table and incident start date in place of notes table and incident summary respectively .",
            "you need to use reference address types table and incident start date in place of notes table and first name respectively .",
            "you need to use reference address types table and incident start date in place of notes table and teacher id respectively .",
            "you need to use students table and incident start date in place of notes table and detention type description respectively .",
            "you need to use addresses table and incident start date in place of notes table and line 3 respectively .",
            "you need to use reference address types table and incident start date in place of notes table and datetime detention end respectively .",
            "you need to use students table and incident start date in place of notes table and line 2 respectively .",
            "you need to use teachers table and incident start date in place of notes table and address id respectively .",
            "you need to use detention table and incident start date in place of notes table and incident summary respectively .",
            "you need to use addresses table and incident start date in place of notes table and address type code respectively .",
            "you need to use detention table and incident start date in place of notes table and other details respectively .",
            "you need to use behavior incident table and incident start date in place of notes table and monthly rental respectively .",
            "you need to use teachers table and incident start date in place of notes table and gender respectively .",
            "you need to use assessment notes table and incident start date in place of notes table and detention id respectively .",
            "you need to use reference incident type table and incident start date in place of notes table and middle name respectively .",
            "you need to use reference address types table and incident start date in place of notes table and incident summary respectively .",
            "you need to use detention table and incident start date in place of notes table and address type description respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "You need to use campus in place of ID.",
        "negative_examples": [
            "you need to use id in place of id .",
            "you need to use location in place of id .",
            "you need to use county in place of id .",
            "you need to use year in place of id .",
            "you need to use campus fee in place of id .",
            "you need to use degrees in place of id .",
            "you need to use discipline in place of id .",
            "you need to use undergraduate in place of id .",
            "you need to use graduate in place of id .",
            "you need to use totalenrollment ay in place of id .",
            "you need to use fte ay in place of id .",
            "you need to use faculty in place of id ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the discipline enrollments 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "csu fees 's campuses should be use in place of discipline enrollments 's year .",
        "negative_examples": [
            "csu fees 's campuses should be use in place of enrollments 's graduate .",
            "csu fees 's campuses should be use in place of csu fees 's faculty .",
            "csu fees 's campuses should be use in place of enrollments 's degrees .",
            "csu fees 's campuses should be use in place of faculty 's fte ay .",
            "csu fees 's campuses should be use in place of campuses 's discipline .",
            "csu fees 's campuses should be use in place of faculty 's location .",
            "csu fees 's location should be use in place of discipline enrollments 's year .",
            "csu fees 's campuses should be use in place of campuses 's totalenrollment ay .",
            "csu fees 's campuses should be use in place of campuses 's fte ay .",
            "csu fees 's campuses should be use in place of discipline enrollments 's totalenrollment ay .",
            "csu fees 's campuses should be use in place of discipline enrollments 's discipline .",
            "csu fees 's campuses should be use in place of faculty 's county .",
            "csu fees 's campuses should be use in place of graduate 's year .",
            "csu fees 's campuses should be use in place of county 's year .",
            "csu fees 's campuses should be use in place of undergraduate 's year .",
            "csu fees 's campuses should be use in place of enrollments 's totalenrollment ay .",
            "csu fees 's campuses should be use in place of campus fee 's year .",
            "csu fees 's campuses should be use in place of enrollments 's undergraduate .",
            "csu fees 's campuses should be use in place of discipline enrollments 's id .",
            "csu fees 's campuses should be use in place of degrees 's location .",
            "csu fees 's campuses should be use in place of csu fees 's degrees .",
            "csu fees 's campuses should be use in place of degrees 's undergraduate .",
            "csu fees 's campuses should be use in place of faculty 's discipline .",
            "csu fees 's campuses should be use in place of discipline enrollments 's graduate .",
            "csu fees 's campuses should be use in place of csu fees 's undergraduate .",
            "csu fees 's campuses should be use in place of degrees 's year .",
            "csu fees 's campuses should be use in place of degrees 's county .",
            "csu fees 's campuses should be use in place of campuses 's degrees .",
            "csu fees 's campuses should be use in place of csu fees 's year .",
            "csu fees 's fte ay should be use in place of discipline enrollments 's year .",
            "csu fees 's campuses should be use in place of campuses 's county .",
            "csu fees 's undergraduate should be use in place of discipline enrollments 's year .",
            "csu fees 's campuses should be use in place of faculty 's undergraduate .",
            "csu fees 's campuses should be use in place of degrees 's id .",
            "csu fees 's campuses should be use in place of faculty 's faculty .",
            "csu fees 's id should be use in place of discipline enrollments 's year .",
            "csu fees 's campuses should be use in place of discipline enrollments 's county .",
            "csu fees 's campuses should be use in place of degrees 's degrees .",
            "csu fees 's campuses should be use in place of enrollments 's fte ay .",
            "csu fees 's campuses should be use in place of campuses 's year .",
            "csu fees 's campus fee should be use in place of discipline enrollments 's year .",
            "csu fees 's campuses should be use in place of faculty 's year .",
            "csu fees 's discipline should be use in place of discipline enrollments 's year .",
            "csu fees 's campuses should be use in place of degrees 's fte ay .",
            "csu fees 's totalenrollment ay should be use in place of discipline enrollments 's year .",
            "csu fees 's campuses should be use in place of enrollments 's county .",
            "csu fees 's campuses should be use in place of campuses 's faculty .",
            "csu fees 's campuses should be use in place of discipline enrollments 's faculty .",
            "csu fees 's campuses should be use in place of degrees 's faculty .",
            "csu fees 's campuses should be use in place of enrollments 's discipline ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the csu fees table and faculty table . in step 2 , consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year greater than or equals 1935 and csu fees 's year less than or equals 1939 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                38
            ],
            [
                63,
                66
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                39,
                62
            ],
            [
                67,
                73
            ]
        ],
        "positive_example": "Supersede faculty 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
        "negative_examples": [
            "supersede id 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
            "supersede undergraduate 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede campus 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede undergraduate 's year with campuses 's year and campuses 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and location 's year with campuses 's year in step 2",
            "supersede location 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
            "supersede campus fee 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and campuses 's year with campuses 's year in step 2",
            "supersede location 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and fte ay 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and undergraduate 's year with campuses 's year in step 2",
            "supersede id 's year with campuses 's year and campuses 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede graduate 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede totalenrollment ay 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
            "supersede fte ay 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and campus 's year with campuses 's year in step 2",
            "supersede year 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede discipline enrollments 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
            "supersede enrollments 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
            "supersede county 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede graduate 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and year 's year with campuses 's year in step 2",
            "supersede totalenrollment ay 's year with campuses 's year and enrollments 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and id 's year with campuses 's year in step 2",
            "supersede id 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede year 's year with campuses 's year and csu fees 's year with campuses 's year in step 2",
            "supersede county 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede campus 's year with campuses 's year and enrollments 's year with campuses 's year in step 2",
            "supersede discipline 's year with campuses 's year and enrollments 's year with campuses 's year in step 2",
            "supersede degrees 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and graduate 's year with campuses 's year in step 2",
            "supersede county 's year with campuses 's year and campuses 's year with campuses 's year in step 2",
            "supersede undergraduate 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede campus fee 's year with campuses 's year and campuses 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and discipline 's year with campuses 's year in step 2",
            "supersede graduate 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and campus fee 's year with campuses 's year in step 2",
            "supersede fte ay 's year with campuses 's year and campuses 's year with campuses 's year in step 2",
            "supersede discipline 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede campus fee 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede location 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede discipline 's year with campuses 's year and campuses 's year with campuses 's year in step 2",
            "supersede discipline 's year with campuses 's year and degrees 's year with campuses 's year in step 2",
            "supersede degrees 's year with campuses 's year and discipline enrollments 's year with campuses 's year in step 2",
            "supersede graduate 's year with campuses 's year and enrollments 's year with campuses 's year in step 2",
            "supersede degrees 's year with campuses 's year and enrollments 's year with campuses 's year in step 2",
            "supersede year 's year with campuses 's year and enrollments 's year with campuses 's year in step 2",
            "supersede faculty 's year with campuses 's year and totalenrollment ay 's year with campuses 's year in step 2"
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find average snatch in place of average clean jerk .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                9
            ]
        ],
        "positive_example": "Substitute snatch in place of clean jerk.",
        "negative_examples": [
            "substitute snatch in place of body builder id .",
            "substitute snatch in place of people id .",
            "substitute snatch in place of total .",
            "substitute snatch in place of name .",
            "substitute snatch in place of height .",
            "substitute snatch in place of weight .",
            "substitute snatch in place of birth date .",
            "substitute snatch in place of birth place .",
            "substitute body builder id in place of clean jerk .",
            "substitute people id in place of clean jerk .",
            "substitute total in place of clean jerk .",
            "substitute name in place of clean jerk .",
            "substitute height in place of clean jerk .",
            "substitute weight in place of clean jerk .",
            "substitute birth date in place of clean jerk .",
            "substitute birth place in place of clean jerk ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building description . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building description .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                42,
                44
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                45,
                50
            ]
        ],
        "positive_example": "In step 1, count total number of Bathroom for all the Buildings of apartments, and in step 2, supplant building description with building address.",
        "negative_examples": [
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant apartment type code with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant facility code with building address .",
            "in step 1 , count total number of bathroom for all the buildings of view unit status , and in step 2 , supplant apartment number with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant guest id with building address .",
            "in step 1 , count total number of bathroom for all the buildings of guests , and in step 2 , supplant building description with room count .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant building description with available yes or no .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant apartment booking id with building address .",
            "in step 1 , count total number of bathroom for all the buildings of guests , and in step 2 , supplant apartment booking id with building address .",
            "in step 1 , count total number of bathroom for all the buildings of guests , and in step 2 , supplant building description with building manager .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building description with guest last name .",
            "in step 1 , count total number of bathroom for all the buildings of view unit status , and in step 2 , supplant apartment type code with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant building description with booking status code .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant date of birth with building address .",
            "in step 1 , count total number of bathroom for all the buildings of guests , and in step 2 , supplant building description with building short name .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant building description with guest last name .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant building description with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant building description with date of birth .",
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant room count with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant building description with bedroom count .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant building description with bathroom count .",
            "in step 1 , count total number of bathroom for all the buildings of view unit status , and in step 2 , supplant building description with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant facility code with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant bathroom count with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant bedroom count with building address .",
            "in step 1 , count total number of bathroom for all the buildings of view unit status , and in step 2 , supplant building description with date of birth .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building description with building full name .",
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant building description with gender code .",
            "in step 1 , count total number of bathroom for all the buildings of view unit status , and in step 2 , supplant building description with apartment id .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building description with building manager .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant guest first name with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building description with bathroom count .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant building manager with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant building manager with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant booking end date with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant building description with room count .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building description with room count .",
            "in step 1 , count total number of bathroom for all the buildings of guests , and in step 2 , supplant building description with status date .",
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant building description with bathroom count .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant building description with facility code .",
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant building full name with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant booking start date with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment bookings , and in step 2 , supplant building description with guest id .",
            "in step 1 , count total number of bathroom for all the buildings of view unit status , and in step 2 , supplant building description with bedroom count .",
            "in step 1 , count total number of bathroom for all the buildings of apartment buildings , and in step 2 , supplant building description with guest id .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building description with gender code .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant building short name with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant booking start date with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartment facilities , and in step 2 , supplant building description with building short name .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building full name with building address .",
            "in step 1 , count total number of bathroom for all the buildings of apartments , and in step 2 , supplant building description with apartment booking id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "do not find for each value of apartment number . find room count in place of number of rows .",
        "primary_span": [
            [
                0,
                9
            ],
            [
                10,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                19
            ]
        ],
        "positive_example": "What is the room count.",
        "negative_examples": [
            "what is the building id .",
            "what is the building short name .",
            "what is the building full name .",
            "what is the building description .",
            "what is the building address .",
            "what is the building manager .",
            "what is the building phone .",
            "what is the apartment id .",
            "what is the apartment type code .",
            "what is the apartment number .",
            "what is the bathroom count .",
            "what is the bedroom count .",
            "what is the facility code .",
            "what is the guest id .",
            "what is the gender code .",
            "what is the guest first name .",
            "what is the guest last name .",
            "what is the date of birth .",
            "what is the apartment booking id .",
            "what is the booking status code .",
            "what is the booking start date .",
            "what is the booking end date .",
            "what is the status date .",
            "what is the available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "in step 2 , consider the birth date like % January % conditions in place of the name like January conditions . find total in place of summation of total .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                22,
                23
            ]
        ],
        "secondary_span": [
            [
                13,
                21
            ],
            [
                24,
                30
            ]
        ],
        "positive_example": "Their is no need to do summation , Exchange name with birth date in step 2.",
        "negative_examples": [
            "their is no need to do summation , exchange name with body builder id in step 2 .",
            "their is no need to do summation , exchange name with people id in step 2 .",
            "their is no need to do summation , exchange name with snatch in step 2 .",
            "their is no need to do summation , exchange name with clean jerk in step 2 .",
            "their is no need to do summation , exchange name with total in step 2 .",
            "their is no need to do summation , exchange name with height in step 2 .",
            "their is no need to do summation , exchange name with weight in step 2 .",
            "their is no need to do summation , exchange name with birth place in step 2 .",
            "their is no need to do summation , exchange body builder id with birth date in step 2 .",
            "their is no need to do summation , exchange people id with birth date in step 2 .",
            "their is no need to do summation , exchange snatch with birth date in step 2 .",
            "their is no need to do summation , exchange clean jerk with birth date in step 2 .",
            "their is no need to do summation , exchange total with birth date in step 2 .",
            "their is no need to do summation , exchange height with birth date in step 2 .",
            "their is no need to do summation , exchange weight with birth date in step 2 .",
            "their is no need to do summation , exchange birth place with birth date in step 2 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and undergraduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "There should be csu fees 's rather than undergraduate and campuses rather than csu fees 's year .",
        "negative_examples": [
            "there should be csu fees 's rather than undergraduate and id rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and location rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and county rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and campus fee rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and degrees rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and discipline rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and graduate rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and totalenrollment ay rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and fte ay rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and faculty rather than csu fees 's year .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's id .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's location .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's county .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's campus fee .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's degrees .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's discipline .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's graduate .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's totalenrollment ay .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's fte ay .",
            "there should be csu fees 's rather than undergraduate and campuses rather than csu fees 's faculty .",
            "there should be csu fees 's rather than id and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than location and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than county and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than campus fee and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than degrees and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than discipline and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than graduate and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than totalenrollment ay and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than fte ay and campuses rather than csu fees 's year .",
            "there should be csu fees 's rather than faculty and campuses rather than csu fees 's year ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , use view unit status table in place of apartment bookings table in step 2 , consider the available yes or no equals 0 conditions in place of the booking status code equals 0 conditions . in step 3 , use view unit status table in place of apartment bookings table in step 4 , consider the available yes or no equals 1 conditions in place of the booking status code equals 1 conditions .",
        "primary_span": [
            [
                4,
                8
            ],
            [
                19,
                27
            ],
            [
                43,
                47
            ],
            [
                58,
                66
            ]
        ],
        "secondary_span": [
            [
                9,
                14
            ],
            [
                28,
                38
            ],
            [
                48,
                53
            ],
            [
                67,
                77
            ]
        ],
        "positive_example": "Replace apartment bookings with view unit status for both , apartment booking id with facility code .",
        "negative_examples": [
            "replace apartment bookings with apartment buildings for both , apartment booking id with facility code .",
            "replace apartment bookings with apartments for both , apartment booking id with facility code .",
            "replace apartment bookings with apartment facilities for both , apartment booking id with facility code .",
            "replace apartment bookings with guests for both , apartment booking id with facility code .",
            "replace apartment bookings with apartment bookings for both , apartment booking id with facility code ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                52
            ]
        ],
        "positive_example": "Find campus fee , ensure campuses ' campuses equals San Jose State University and csu fees ' year equals 1996 instep 2.",
        "negative_examples": [
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' id equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' campus equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' location equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' county equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' campus fee equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' degrees equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' discipline equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' undergraduate equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' graduate equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' totalenrollment ay equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' fte ay equals 1996 instep 2 .",
            "find campus fee , ensure campuses ' campuses equals san jose state university and csu fees ' faculty equals 1996 instep 2 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customers table besides the addresses table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 1 , it should be a city in which a customer from customers table lives in",
        "negative_examples": [
            "in step 1 , it should be a city in which a customer from addresses table lives in",
            "in step 1 , it should be a city in which a customer from staff table lives in",
            "in step 1 , it should be a city in which a customer from vehicles table lives in",
            "in step 1 , it should be a city in which a customer from customer payments table lives in",
            "in step 1 , it should be a city in which a customer from lessons table lives in"
        ],
        "neg_len": 5
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the rating table . in step 2 , consider the name like % Mike % conditions in place of the name like Mike conditions . find reviewer 's reviewer id in place of rating stars .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                22
            ],
            [
                32,
                36
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                23,
                31
            ],
            [
                37,
                42
            ]
        ],
        "positive_example": "In place of starts, you must use reviewer id.",
        "negative_examples": [
            "in place of starts , you must use movie id .",
            "in place of starts , you must use title .",
            "in place of starts , you must use year .",
            "in place of starts , you must use director .",
            "in place of starts , you must use name .",
            "in place of starts , you must use rating stars .",
            "in place of starts , you must use rating date ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                35,
                42
            ]
        ],
        "secondary_span": [
            [
                25,
                34
            ]
        ],
        "positive_example": "Use company name as Nokia Corporation in place of company type.",
        "negative_examples": [
            "use model name as nokia corporation in place of company type .",
            "use launch year as nokia corporation in place of company type .",
            "use ram mib as nokia corporation in place of company type .",
            "use rom mib as nokia corporation in place of company type .",
            "use slots as nokia corporation in place of company type .",
            "use wifi as nokia corporation in place of company type .",
            "use bluetooth as nokia corporation in place of company type .",
            "use graphics mode as nokia corporation in place of company type .",
            "use char cells as nokia corporation in place of company type .",
            "use pixels as nokia corporation in place of company type .",
            "use hardware colours as nokia corporation in place of company type .",
            "use used kb as nokia corporation in place of company type .",
            "use map as nokia corporation in place of company type .",
            "use hardware model name as nokia corporation in place of company type .",
            "use accreditation type as nokia corporation in place of company type .",
            "use accreditation level as nokia corporation in place of company type .",
            "use date as nokia corporation in place of company type .",
            "use chip model as nokia corporation in place of company type .",
            "use screen mode as nokia corporation in place of company type .",
            "use company name as nokia corporation in place of company model name .",
            "use company name as nokia corporation in place of company launch year .",
            "use company name as nokia corporation in place of company ram mib .",
            "use company name as nokia corporation in place of company rom mib .",
            "use company name as nokia corporation in place of company slots .",
            "use company name as nokia corporation in place of company wifi .",
            "use company name as nokia corporation in place of company bluetooth .",
            "use company name as nokia corporation in place of company graphics mode .",
            "use company name as nokia corporation in place of company char cells .",
            "use company name as nokia corporation in place of company pixels .",
            "use company name as nokia corporation in place of company hardware colours .",
            "use company name as nokia corporation in place of company used kb .",
            "use company name as nokia corporation in place of company map .",
            "use company name as nokia corporation in place of company hardware model name .",
            "use company name as nokia corporation in place of company accreditation type .",
            "use company name as nokia corporation in place of company accreditation level .",
            "use company name as nokia corporation in place of company date .",
            "use company name as nokia corporation in place of company chip model .",
            "use company name as nokia corporation in place of company screen mode ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment bookings table . do not find for each value of apartment bookings 's apartment id . in step 2 , additionally make sure that bedroom count greater than 2 . do not return booking end date .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                30
            ],
            [
                35,
                44
            ],
            [
                45,
                51
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "in step 1 you should have bedroom count and apartments table.",
        "negative_examples": [
            "in step 1 you should have booking status code and apartments table .",
            "in step 1 you should have booking start date and apartments table .",
            "in step 1 you should have bedroom count and apartment bookings table .",
            "in step 1 you should have apartment type code and apartments table .",
            "in step 1 you should have apartment id and apartment buildings table .",
            "in step 1 you should have apartment number and apartment buildings table .",
            "in step 1 you should have guest id and apartment buildings table .",
            "in step 1 you should have status date and apartment facilities table .",
            "in step 1 you should have available yes or no and view unit status table .",
            "in step 1 you should have building id and view unit status table .",
            "in step 1 you should have bathroom count and view unit status table .",
            "in step 1 you should have building description and apartment bookings table .",
            "in step 1 you should have building full name and guests table .",
            "in step 1 you should have room count and apartment buildings table .",
            "in step 1 you should have building manager and apartments table .",
            "in step 1 you should have gender code and view unit status table .",
            "in step 1 you should have booking end date and guests table .",
            "in step 1 you should have guest last name and apartment buildings table .",
            "in step 1 you should have booking status code and apartment bookings table .",
            "in step 1 you should have guest id and view unit status table .",
            "in step 1 you should have guest last name and guests table .",
            "in step 1 you should have bedroom count and apartment facilities table .",
            "in step 1 you should have guest first name and apartment facilities table .",
            "in step 1 you should have guest id and apartment facilities table .",
            "in step 1 you should have facility code and apartments table .",
            "in step 1 you should have building phone and apartments table .",
            "in step 1 you should have building manager and apartment facilities table .",
            "in step 1 you should have building phone and view unit status table .",
            "in step 1 you should have room count and guests table .",
            "in step 1 you should have status date and guests table .",
            "in step 1 you should have apartment booking id and apartment facilities table .",
            "in step 1 you should have building full name and apartment buildings table .",
            "in step 1 you should have guest last name and apartments table .",
            "in step 1 you should have guest last name and apartment facilities table .",
            "in step 1 you should have booking end date and view unit status table .",
            "in step 1 you should have building description and view unit status table .",
            "in step 1 you should have building description and apartment facilities table .",
            "in step 1 you should have building address and view unit status table .",
            "in step 1 you should have gender code and apartment buildings table .",
            "in step 1 you should have building id and apartment buildings table .",
            "in step 1 you should have status date and apartments table .",
            "in step 1 you should have apartment booking id and apartments table .",
            "in step 1 you should have building description and guests table .",
            "in step 1 you should have building address and apartment facilities table .",
            "in step 1 you should have building id and guests table .",
            "in step 1 you should have building short name and guests table .",
            "in step 1 you should have room count and apartment facilities table .",
            "in step 1 you should have room count and view unit status table .",
            "in step 1 you should have guest first name and apartments table .",
            "in step 1 you should have apartment type code and apartment bookings table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , do not use the orders table . in step 3 , find invoice date in place of date order placed .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                17
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                18,
                24
            ]
        ],
        "positive_example": "You should use Invoice number of Invoices and invoice date",
        "negative_examples": [
            "you should use invoice number of invoices and customer id",
            "you should use invoice number of invoices and customer first name",
            "you should use invoice number of invoices and customer middle initial",
            "you should use invoice number of invoices and customer last name",
            "you should use invoice number of invoices and gender",
            "you should use invoice number of invoices and email address",
            "you should use invoice number of invoices and login name",
            "you should use invoice number of invoices and login password",
            "you should use invoice number of invoices and phone number",
            "you should use invoice number of invoices and town city",
            "you should use invoice number of invoices and state county province",
            "you should use invoice number of invoices and country",
            "you should use invoice number of invoices and order id",
            "you should use invoice number of invoices and date order placed",
            "you should use invoice number of invoices and order details",
            "you should use invoice number of invoices and invoice number",
            "you should use invoice number of invoices and account id",
            "you should use invoice number of invoices and date account opened",
            "you should use invoice number of invoices and account name",
            "you should use invoice number of invoices and other account details",
            "you should use invoice number of invoices and production type code",
            "you should use invoice number of invoices and product type description",
            "you should use invoice number of invoices and vat rating",
            "you should use invoice number of invoices and product id",
            "you should use invoice number of invoices and parent product id",
            "you should use invoice number of invoices and unit price",
            "you should use invoice number of invoices and product name",
            "you should use invoice number of invoices and product color",
            "you should use invoice number of invoices and product size",
            "you should use invoice number of invoices and transaction id",
            "you should use invoice number of invoices and transaction type",
            "you should use invoice number of invoices and transaction date",
            "you should use invoice number of invoices and transaction amount",
            "you should use invoice number of invoices and transaction comment",
            "you should use invoice number of invoices and other transaction details",
            "you should use invoice number of invoices and order item id",
            "you should use invoice number of invoices and product quantity",
            "you should use invoice number of invoices and other order item details",
            "you should use invoice number of invoices and product title",
            "you should use invoice number of invoices and product price",
            "you should use invoice number of invoices and derived product cost",
            "you should use invoice number of invoices and derived vat payable",
            "you should use invoice number of invoices and derived total cost"
        ],
        "neg_len": 43
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find rating stars . additionally order the results by name and title .",
        "primary_span": [
            [
                4,
                8
            ],
            [
                9,
                17
            ]
        ],
        "secondary_span": [],
        "positive_example": "Also , find rating stars of rating table and order sequence should be reviewer name , title and rating stars .",
        "negative_examples": [
            "also , find movie id of rating table and order sequence should be reviewer name , title and rating stars .",
            "also , find year of rating table and order sequence should be reviewer name , title and rating stars .",
            "also , find director of rating table and order sequence should be reviewer name , title and rating stars .",
            "also , find reviewer id of rating table and order sequence should be reviewer name , title and rating stars .",
            "also , find rating date of rating table and order sequence should be reviewer name , title and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer name , movie id and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer name , year and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer name , director and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer name , reviewer id and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer name , rating date and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer movie id , title and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer year , title and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer director , title and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer reviewer id , title and rating stars .",
            "also , find rating stars of rating table and order sequence should be reviewer rating date , title and rating stars ."
        ],
        "neg_len": 15
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the financial transactions table besides the accounts table .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ]
        ],
        "positive_example": "financial transactions table should be use in place of accounts table .",
        "negative_examples": [
            "customers table should be use in place of accounts table .",
            "orders table should be use in place of accounts table .",
            "invoices table should be use in place of accounts table .",
            "accounts table should be use in place of accounts table .",
            "product categories table should be use in place of accounts table .",
            "products table should be use in place of accounts table .",
            "order items table should be use in place of accounts table .",
            "invoice line items table should be use in place of accounts table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "do not return total .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "Remove 1st total .",
        "negative_examples": [
            "remove 1st body builder id .",
            "remove 1st people id .",
            "remove 1st snatch .",
            "remove 1st clean jerk .",
            "remove 1st name .",
            "remove 1st height .",
            "remove 1st weight .",
            "remove 1st birth date .",
            "remove 1st birth place ."
        ],
        "neg_len": 9
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the staff table besides the addresses table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 1 calculate number of rows of staff table .",
        "negative_examples": [
            "in step 1 calculate number of rows of addresses table .",
            "in step 1 calculate number of rows of vehicles table .",
            "in step 1 calculate number of rows of customers table .",
            "in step 1 calculate number of rows of customer payments table .",
            "in step 1 calculate number of rows of lessons table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find director and rating stars .",
        "primary_span": [
            [
                4,
                10
            ]
        ],
        "secondary_span": [],
        "positive_example": "Also need to find title of movie for each director related to lowest rating stars .",
        "negative_examples": [
            "also need to find title of movie for each director related to lowest movie id .",
            "also need to find title of movie for each director related to lowest title .",
            "also need to find title of movie for each director related to lowest year .",
            "also need to find title of movie for each director related to lowest reviewer id .",
            "also need to find title of movie for each director related to lowest name .",
            "also need to find title of movie for each director related to lowest rating date .",
            "also need to find title of movie for each movie id related to lowest rating stars .",
            "also need to find title of movie for each title related to lowest rating stars .",
            "also need to find title of movie for each year related to lowest rating stars .",
            "also need to find title of movie for each reviewer id related to lowest rating stars .",
            "also need to find title of movie for each name related to lowest rating stars .",
            "also need to find title of movie for each rating date related to lowest rating stars ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the movie table . in step 2 , find the number of rows for each value of rating 's movie id . in step 3 , find rating 's movie id and average rating stars in place of title .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                28
            ],
            [
                33,
                41
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                42,
                46
            ]
        ],
        "positive_example": "rating stars value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table.",
        "negative_examples": [
            "movie id value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table .",
            "title value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table .",
            "year value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table .",
            "director value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table .",
            "reviewer id value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table .",
            "name value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table .",
            "rating date value 2 in rating stars table confirms that there are 2 different rows and also note that rating stars date is different from rating stars table ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building description . in step 2 , additionally make sure that bathroom count greater than 2 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "In step 1 , only find bathroom count of apartments table .",
        "negative_examples": [
            "in step 1 , only find building description of apartment buildings table .",
            "in step 1 , only find booking start date of apartment buildings table .",
            "in step 1 , only find booking end date of apartment buildings table .",
            "in step 1 , only find bedroom count of apartment buildings table .",
            "in step 1 , only find guest id of apartments table .",
            "in step 1 , only find bathroom count of apartment facilities table .",
            "in step 1 , only find apartment id of apartment facilities table .",
            "in step 1 , only find available yes or no of apartment bookings table .",
            "in step 1 , only find building short name of guests table .",
            "in step 1 , only find apartment booking id of apartment buildings table .",
            "in step 1 , only find gender code of view unit status table .",
            "in step 1 , only find building id of guests table .",
            "in step 1 , only find status date of view unit status table .",
            "in step 1 , only find apartment booking id of view unit status table .",
            "in step 1 , only find building short name of apartments table .",
            "in step 1 , only find apartment id of guests table .",
            "in step 1 , only find building manager of apartment facilities table .",
            "in step 1 , only find building manager of apartments table .",
            "in step 1 , only find guest first name of apartment facilities table .",
            "in step 1 , only find booking status code of apartment buildings table .",
            "in step 1 , only find apartment number of apartment buildings table .",
            "in step 1 , only find gender code of guests table .",
            "in step 1 , only find available yes or no of guests table .",
            "in step 1 , only find available yes or no of apartment buildings table .",
            "in step 1 , only find building description of guests table .",
            "in step 1 , only find bedroom count of view unit status table .",
            "in step 1 , only find building manager of guests table .",
            "in step 1 , only find building id of view unit status table .",
            "in step 1 , only find booking status code of guests table .",
            "in step 1 , only find guest last name of apartments table .",
            "in step 1 , only find apartment id of apartment bookings table .",
            "in step 1 , only find guest last name of apartment bookings table .",
            "in step 1 , only find building phone of apartment facilities table .",
            "in step 1 , only find building description of apartment bookings table .",
            "in step 1 , only find building manager of apartment buildings table .",
            "in step 1 , only find guest last name of apartment facilities table .",
            "in step 1 , only find apartment booking id of apartment facilities table .",
            "in step 1 , only find guest id of apartment bookings table .",
            "in step 1 , only find booking end date of apartment facilities table .",
            "in step 1 , only find apartment type code of view unit status table .",
            "in step 1 , only find building description of view unit status table .",
            "in step 1 , only find building phone of apartment bookings table .",
            "in step 1 , only find apartment type code of guests table .",
            "in step 1 , only find building full name of guests table .",
            "in step 1 , only find booking end date of apartment bookings table .",
            "in step 1 , only find building manager of apartment bookings table .",
            "in step 1 , only find apartment number of guests table .",
            "in step 1 , only find booking start date of apartment bookings table .",
            "in step 1 , only find apartment number of view unit status table .",
            "in step 1 , only find booking start date of apartment facilities table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the addresses table besides the students table . find line 1 in place of email address . in step 2 , additionally use the information from the addresses table besides the teachers table . find line 1 in place of teachers 's email address . return the rows in both of the results of step 1 and the results of step 2 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                19
            ],
            [
                30,
                37
            ],
            [
                43,
                45
            ],
            [
                54,
                71
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                20,
                25
            ],
            [
                38,
                42
            ],
            [
                46,
                53
            ]
        ],
        "positive_example": "Find address id in both step 1 and 2. Find value of Addresses's line 1 corresponding to step 1 and 2 result .",
        "negative_examples": [
            "find address id in both step 1 and 2. find value of students in detention 's zip postcode corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of teachers 's incident type description corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference address types 's datetime detention start corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference incident type 's text of notes corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of detention 's address type description corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's state province county corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of behavior incident 's address type code corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of teachers 's line 3 corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's datetime detention start corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of teachers 's detention type code corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's date incident start corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's line 2 corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference address types 's monthly rental corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's city corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of assessment notes 's incident summary corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference incident type 's date incident start corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of behavior incident 's address type description corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of behavior incident 's date address to corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of teachers 's detention type description corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's country corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of assessment notes 's monthly rental corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's incident type description corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of students in detention 's teacher id corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of students in detention 's cell mobile number corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's recommendations corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference address types 's address type description corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of behavior incident 's line 1 corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference address types 's date of notes corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference incident type 's middle name corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference incident type 's last name corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of addresses 's city corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's date incident start corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of students in detention 's state province county corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of teachers 's detention id corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of behavior incident 's incident id corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of assessment notes 's gender corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of assessment notes 's text of notes corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of addresses 's detention type code corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's address id corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of assessment notes 's address id corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of teachers 's date address to corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's gender corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's city corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's email address corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference address types 's city corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of student addresses 's other student details corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's middle name corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of teachers 's first name corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of reference detention type 's date address from corresponding to step 1 and 2 result .",
            "find address id in both step 1 and 2. find value of students 's text of notes corresponding to step 1 and 2 result ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building description equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "In step 2 Switch bathroom count with bedroom count , building description with building short name and Remove building short name equals Normandie Court\".",
        "negative_examples": [
            "in step 2 switch building id with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with guest first name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with guest last name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , apartment type code with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch booking start date with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with booking start date and remove building short name equals normandie court \" .",
            "in step 2 switch available yes or no with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building address with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , guest first name with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch guest last name with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with apartment booking id and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , gender code with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with booking status code and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , booking start date with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building full name with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with guest id and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with date of birth and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with building manager and remove building short name equals normandie court \" .",
            "in step 2 switch booking end date with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , booking end date with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , apartment id with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with status date and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , bedroom count with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , guest id with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with facility code and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , facility code with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building id with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch building phone with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , apartment booking id with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , available yes or no with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch facility code with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch status date with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with room count and remove building short name equals normandie court \" .",
            "in step 2 switch guest id with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch building manager with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch apartment type code with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch apartment booking id with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with bedroom count and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with building address and remove building short name equals normandie court \" .",
            "in step 2 switch guest first name with bedroom count , building description with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , guest last name with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , room count with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with apartment id and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with gender code and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , status date with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with booking end date and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , date of birth with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building description with apartment number and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , booking status code with building short name and remove building short name equals normandie court \" .",
            "in step 2 switch bathroom count with bedroom count , building phone with building short name and remove building short name equals normandie court \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , do not find for each value of apartment number . in step 2 , order the results by bedroom count in place of number of rows .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                23
            ]
        ],
        "secondary_span": [
            [
                24,
                30
            ]
        ],
        "positive_example": "Replace apartment number with bedroom count in step 1.",
        "negative_examples": [
            "replace apartment number with building id in step 1 .",
            "replace apartment number with building short name in step 1 .",
            "replace apartment number with building full name in step 1 .",
            "replace apartment number with building description in step 1 .",
            "replace apartment number with building address in step 1 .",
            "replace apartment number with building manager in step 1 .",
            "replace apartment number with building phone in step 1 .",
            "replace apartment number with apartment id in step 1 .",
            "replace apartment number with apartment type code in step 1 .",
            "replace apartment number with apartment number in step 1 .",
            "replace apartment number with bathroom count in step 1 .",
            "replace apartment number with room count in step 1 .",
            "replace apartment number with facility code in step 1 .",
            "replace apartment number with guest id in step 1 .",
            "replace apartment number with gender code in step 1 .",
            "replace apartment number with guest first name in step 1 .",
            "replace apartment number with guest last name in step 1 .",
            "replace apartment number with date of birth in step 1 .",
            "replace apartment number with apartment booking id in step 1 .",
            "replace apartment number with booking status code in step 1 .",
            "replace apartment number with booking start date in step 1 .",
            "replace apartment number with booking end date in step 1 .",
            "replace apartment number with status date in step 1 .",
            "replace apartment number with available yes or no in step 1 ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the csu fees 's year equals 1996 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                44
            ]
        ],
        "positive_example": "You have to delete csu fees year as 1996 and also make sure that  should be CSU.",
        "negative_examples": [
            "you have to delete csu fees id as 1996 and also make sure that should be csu .",
            "you have to delete csu fees campus as 1996 and also make sure that should be csu .",
            "you have to delete csu fees location as 1996 and also make sure that should be csu .",
            "you have to delete csu fees county as 1996 and also make sure that should be csu .",
            "you have to delete csu fees campus fee as 1996 and also make sure that should be csu .",
            "you have to delete csu fees degrees as 1996 and also make sure that should be csu .",
            "you have to delete csu fees discipline as 1996 and also make sure that should be csu .",
            "you have to delete csu fees undergraduate as 1996 and also make sure that should be csu .",
            "you have to delete csu fees graduate as 1996 and also make sure that should be csu .",
            "you have to delete csu fees totalenrollment ay as 1996 and also make sure that should be csu .",
            "you have to delete csu fees fte ay as 1996 and also make sure that should be csu .",
            "you have to delete csu fees faculty as 1996 and also make sure that should be csu ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find snatch in place of total . order the results by snatch in place of total .",
        "primary_span": [
            [
                0,
                1
            ],
            [
                7,
                11
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ],
            [
                12,
                16
            ]
        ],
        "positive_example": "You have to swap the total with snatch.",
        "negative_examples": [
            "you have to swap the total with body builder id .",
            "you have to swap the total with people id .",
            "you have to swap the total with clean jerk .",
            "you have to swap the total with name .",
            "you have to swap the total with height .",
            "you have to swap the total with weight .",
            "you have to swap the total with birth date .",
            "you have to swap the total with birth place .",
            "you have to swap the body builder id with snatch .",
            "you have to swap the people id with snatch .",
            "you have to swap the clean jerk with snatch .",
            "you have to swap the name with snatch .",
            "you have to swap the height with snatch .",
            "you have to swap the weight with snatch .",
            "you have to swap the birth date with snatch .",
            "you have to swap the birth place with snatch ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the enrollments 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "Change enrollments year with csu fees year and ensure that campuses equals San Jose State University .",
        "negative_examples": [
            "change degrees faculty with csu fees faculty and ensure that campuses equals san jose state university .",
            "change faculty undergraduate with csu fees undergraduate and ensure that campuses equals san jose state university .",
            "change faculty totalenrollment ay with csu fees totalenrollment ay and ensure that campuses equals san jose state university .",
            "change discipline year with csu fees year and ensure that campuses equals san jose state university .",
            "change csu fees degrees with csu fees degrees and ensure that campuses equals san jose state university .",
            "change degrees undergraduate with csu fees undergraduate and ensure that campuses equals san jose state university .",
            "change enrollments totalenrollment ay with csu fees year and ensure that campuses equals san jose state university .",
            "change csu fees county with csu fees county and ensure that campuses equals san jose state university .",
            "change campuses undergraduate with csu fees undergraduate and ensure that campuses equals san jose state university .",
            "change csu fees faculty with csu fees faculty and ensure that campuses equals san jose state university .",
            "change csu fees undergraduate with csu fees undergraduate and ensure that campuses equals san jose state university .",
            "change fte ay year with csu fees year and ensure that campuses equals san jose state university .",
            "change enrollments graduate with csu fees year and ensure that campuses equals san jose state university .",
            "change enrollments degrees with csu fees year and ensure that campuses equals san jose state university .",
            "change campuses fte ay with csu fees fte ay and ensure that campuses equals san jose state university .",
            "change enrollments fte ay with csu fees year and ensure that campuses equals san jose state university .",
            "change enrollments year with csu fees year and ensure that county equals san jose state university .",
            "change discipline enrollments year with csu fees year and ensure that campuses equals san jose state university .",
            "change id year with csu fees year and ensure that campuses equals san jose state university .",
            "change enrollments year with csu fees year and ensure that totalenrollment ay equals san jose state university .",
            "change faculty campus fee with csu fees campus fee and ensure that campuses equals san jose state university .",
            "change enrollments location with csu fees year and ensure that campuses equals san jose state university .",
            "change enrollments discipline with csu fees year and ensure that campuses equals san jose state university .",
            "change faculty discipline with csu fees discipline and ensure that campuses equals san jose state university .",
            "change csu fees id with csu fees id and ensure that campuses equals san jose state university .",
            "change degrees location with csu fees location and ensure that campuses equals san jose state university .",
            "change enrollments county with csu fees year and ensure that campuses equals san jose state university .",
            "change csu fees fte ay with csu fees fte ay and ensure that campuses equals san jose state university .",
            "change faculty degrees with csu fees degrees and ensure that campuses equals san jose state university .",
            "change campuses year with csu fees year and ensure that campuses equals san jose state university .",
            "change csu fees graduate with csu fees graduate and ensure that campuses equals san jose state university .",
            "change discipline enrollments location with csu fees location and ensure that campuses equals san jose state university .",
            "change degrees campus fee with csu fees campus fee and ensure that campuses equals san jose state university .",
            "change faculty graduate with csu fees graduate and ensure that campuses equals san jose state university .",
            "change enrollments year with csu fees year and ensure that location equals san jose state university .",
            "change faculty faculty with csu fees faculty and ensure that campuses equals san jose state university .",
            "change enrollments year with csu fees year and ensure that graduate equals san jose state university .",
            "change totalenrollment ay year with csu fees year and ensure that campuses equals san jose state university .",
            "change discipline enrollments undergraduate with csu fees undergraduate and ensure that campuses equals san jose state university .",
            "change degrees county with csu fees county and ensure that campuses equals san jose state university .",
            "change location year with csu fees year and ensure that campuses equals san jose state university .",
            "change csu fees location with csu fees location and ensure that campuses equals san jose state university .",
            "change campuses campus fee with csu fees campus fee and ensure that campuses equals san jose state university .",
            "change discipline enrollments discipline with csu fees discipline and ensure that campuses equals san jose state university .",
            "change degrees graduate with csu fees graduate and ensure that campuses equals san jose state university .",
            "change degrees fte ay with csu fees fte ay and ensure that campuses equals san jose state university .",
            "change discipline enrollments id with csu fees id and ensure that campuses equals san jose state university .",
            "change csu fees totalenrollment ay with csu fees totalenrollment ay and ensure that campuses equals san jose state university .",
            "change faculty location with csu fees location and ensure that campuses equals san jose state university .",
            "change campuses discipline with csu fees discipline and ensure that campuses equals san jose state university ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and undergraduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "Provide the csu fees and campuses in place of undergraduate and year of csu fees respectively.",
        "negative_examples": [
            "provide the csu fees and id in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and location in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and county in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and campus fee in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and degrees in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and discipline in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and graduate in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and totalenrollment ay in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and fte ay in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and faculty in place of undergraduate and year of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and id of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and location of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and county of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and campus fee of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and degrees of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and discipline of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and graduate of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and totalenrollment ay of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and fte ay of csu fees respectively .",
            "provide the csu fees and campuses in place of undergraduate and faculty of csu fees respectively .",
            "provide the csu fees and campuses in place of id and year of csu fees respectively .",
            "provide the csu fees and campuses in place of location and year of csu fees respectively .",
            "provide the csu fees and campuses in place of county and year of csu fees respectively .",
            "provide the csu fees and campuses in place of campus fee and year of csu fees respectively .",
            "provide the csu fees and campuses in place of degrees and year of csu fees respectively .",
            "provide the csu fees and campuses in place of discipline and year of csu fees respectively .",
            "provide the csu fees and campuses in place of graduate and year of csu fees respectively .",
            "provide the csu fees and campuses in place of totalenrollment ay and year of csu fees respectively .",
            "provide the csu fees and campuses in place of fte ay and year of csu fees respectively .",
            "provide the csu fees and campuses in place of faculty and year of csu fees respectively ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the rating table . in step 2 , consider the name like % Mike % conditions in place of the name equals Mike conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                22
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                23,
                31
            ]
        ],
        "positive_example": "Make sure that the name is Mike in step 2.",
        "negative_examples": [
            "make sure that the movie id is mike in step 2 .",
            "make sure that the title is mike in step 2 .",
            "make sure that the year is mike in step 2 .",
            "make sure that the director is mike in step 2 .",
            "make sure that the reviewer id is mike in step 2 .",
            "make sure that the rating stars is mike in step 2 .",
            "make sure that the rating date is mike in step 2 ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the accreditation type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                36,
                43
            ]
        ],
        "secondary_span": [
            [
                25,
                35
            ]
        ],
        "positive_example": "In step 2, substitute accreditation type with company name.",
        "negative_examples": [
            "in step 2 , substitute accreditation type with model name .",
            "in step 2 , substitute accreditation type with launch year .",
            "in step 2 , substitute accreditation type with ram mib .",
            "in step 2 , substitute accreditation type with rom mib .",
            "in step 2 , substitute accreditation type with slots .",
            "in step 2 , substitute accreditation type with wifi .",
            "in step 2 , substitute accreditation type with bluetooth .",
            "in step 2 , substitute accreditation type with graphics mode .",
            "in step 2 , substitute accreditation type with char cells .",
            "in step 2 , substitute accreditation type with pixels .",
            "in step 2 , substitute accreditation type with hardware colours .",
            "in step 2 , substitute accreditation type with used kb .",
            "in step 2 , substitute accreditation type with map .",
            "in step 2 , substitute accreditation type with type .",
            "in step 2 , substitute accreditation type with hardware model name .",
            "in step 2 , substitute accreditation type with accreditation level .",
            "in step 2 , substitute accreditation type with date .",
            "in step 2 , substitute accreditation type with chip model .",
            "in step 2 , substitute accreditation type with screen mode .",
            "in step 2 , substitute model name with company name .",
            "in step 2 , substitute launch year with company name .",
            "in step 2 , substitute ram mib with company name .",
            "in step 2 , substitute rom mib with company name .",
            "in step 2 , substitute slots with company name .",
            "in step 2 , substitute wifi with company name .",
            "in step 2 , substitute bluetooth with company name .",
            "in step 2 , substitute graphics mode with company name .",
            "in step 2 , substitute char cells with company name .",
            "in step 2 , substitute pixels with company name .",
            "in step 2 , substitute hardware colours with company name .",
            "in step 2 , substitute used kb with company name .",
            "in step 2 , substitute map with company name .",
            "in step 2 , substitute type with company name .",
            "in step 2 , substitute hardware model name with company name .",
            "in step 2 , substitute accreditation level with company name .",
            "in step 2 , substitute date with company name .",
            "in step 2 , substitute chip model with company name .",
            "in step 2 , substitute screen mode with company name ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the customers table . remove the last name equals Bernhard conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                20
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "You should use lessons table instead of customers table and also eliminate last name should be Bernhard",
        "negative_examples": [
            "you should use lessons table instead of customers table and also eliminate staff id should be bernhard",
            "you should use addresses table instead of customers table and also eliminate lesson id should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate date joined staff should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate country should be bernhard",
            "you should use lessons table instead of customers table and also eliminate email address should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate address id should be bernhard",
            "you should use lessons table instead of customers table and also eliminate zip postcode should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate customer status code should be bernhard",
            "you should use lessons table instead of customers table and also eliminate state province county should be bernhard",
            "you should use customers table instead of customers table and also eliminate zip postcode should be bernhard",
            "you should use lessons table instead of customers table and also eliminate customer address id should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate staff id should be bernhard",
            "you should use staff table instead of customers table and also eliminate address id should be bernhard",
            "you should use staff table instead of customers table and also eliminate lesson id should be bernhard",
            "you should use lessons table instead of customers table and also eliminate date of birth should be bernhard",
            "you should use lessons table instead of customers table and also eliminate address id should be bernhard",
            "you should use lessons table instead of customers table and also eliminate first name should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate date of birth should be bernhard",
            "you should use addresses table instead of customers table and also eliminate phone number should be bernhard",
            "you should use staff table instead of customers table and also eliminate amount payment should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate customer address id should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate last name should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate line 1 number building should be bernhard",
            "you should use customer payments table instead of customers table and also eliminate line 1 number building should be bernhard",
            "you should use customers table instead of customers table and also eliminate lesson date should be bernhard",
            "you should use lessons table instead of customers table and also eliminate date left staff should be bernhard",
            "you should use customers table instead of customers table and also eliminate phone number should be bernhard",
            "you should use addresses table instead of customers table and also eliminate last name should be bernhard",
            "you should use customer payments table instead of customers table and also eliminate customer status code should be bernhard",
            "you should use lessons table instead of customers table and also eliminate nickname should be bernhard",
            "you should use staff table instead of customers table and also eliminate lesson time should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate datetime payment should be bernhard",
            "you should use addresses table instead of customers table and also eliminate customer address id should be bernhard",
            "you should use lessons table instead of customers table and also eliminate city should be bernhard",
            "you should use staff table instead of customers table and also eliminate state province county should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate date became customer should be bernhard",
            "you should use lessons table instead of customers table and also eliminate date became customer should be bernhard",
            "you should use staff table instead of customers table and also eliminate nickname should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate price should be bernhard",
            "you should use staff table instead of customers table and also eliminate date became customer should be bernhard",
            "you should use staff table instead of customers table and also eliminate customer id should be bernhard",
            "you should use addresses table instead of customers table and also eliminate vehicle details should be bernhard",
            "you should use lessons table instead of customers table and also eliminate amount outstanding should be bernhard",
            "you should use customer payments table instead of customers table and also eliminate amount payment should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate staff address id should be bernhard",
            "you should use customer payments table instead of customers table and also eliminate customer id should be bernhard",
            "you should use vehicles table instead of customers table and also eliminate amount outstanding should be bernhard",
            "you should use staff table instead of customers table and also eliminate customer address id should be bernhard",
            "you should use customers table instead of customers table and also eliminate cell mobile phone number should be bernhard",
            "you should use addresses table instead of customers table and also eliminate customer id should be bernhard"
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table and discipline enrollments table in place of faculty table . consider the campuses 's campus equals San Francisco State University and discipline enrollments 's year equals 2004 conditions in place of the faculty 's year equals San Francisco State University and faculty 's campus equals 2004 conditions . find summation of graduate in place of number of rows .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                30
            ],
            [
                51,
                54
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                31,
                50
            ],
            [
                55,
                61
            ]
        ],
        "positive_example": "Supersede faculty with discipline enrollments , campus with year and year with corresponding campus .",
        "negative_examples": [
            "supersede fte ay with campuses , campus with year and year with corresponding campus .",
            "supersede faculty with csu fees , county with year and year with corresponding county .",
            "supersede id with csu fees , campus with year and year with corresponding campus .",
            "supersede faculty with enrollments , campus with county and county with corresponding campus .",
            "supersede faculty with enrollments , campus with discipline and discipline with corresponding campus .",
            "supersede faculty with campuses , campus with year and year with corresponding campus .",
            "supersede faculty with campus fee , campus with year and year with corresponding campus .",
            "supersede discipline with degrees , campus with year and year with corresponding campus .",
            "supersede faculty with discipline enrollments , fte ay with year and year with corresponding campus .",
            "supersede faculty with enrollments , campus with degrees and degrees with corresponding campus .",
            "supersede csu fees with discipline enrollments , campus with year and year with corresponding campus .",
            "supersede faculty with discipline enrollments , campus with totalenrollment ay and year with corresponding campus .",
            "supersede undergraduate with campuses , campus with year and year with corresponding campus .",
            "supersede faculty with degrees , campus with totalenrollment ay and totalenrollment ay with corresponding campus .",
            "supersede enrollments with discipline enrollments , campus with year and year with corresponding campus .",
            "supersede undergraduate with csu fees , campus with year and year with corresponding campus .",
            "supersede degrees with discipline enrollments , campus with totalenrollment ay and totalenrollment ay with corresponding campus .",
            "supersede csu fees with discipline enrollments , county with year and year with corresponding county .",
            "supersede faculty with degrees , campus with graduate and graduate with corresponding campus .",
            "supersede degrees with discipline enrollments , campus with location and location with corresponding campus .",
            "supersede faculty with enrollments , campus with year and year with corresponding campus .",
            "supersede faculty with campuses , campus with degrees and degrees with corresponding campus .",
            "supersede campuses with discipline enrollments , campus with year and year with corresponding campus .",
            "supersede enrollments with discipline enrollments , campus with location and location with corresponding campus .",
            "supersede faculty with degrees , county with year and year with corresponding county .",
            "supersede totalenrollment ay with csu fees , campus with year and year with corresponding campus .",
            "supersede graduate with degrees , campus with year and year with corresponding campus .",
            "supersede undergraduate with degrees , campus with year and year with corresponding campus .",
            "supersede faculty with csu fees , totalenrollment ay with year and year with corresponding totalenrollment ay .",
            "supersede enrollments with discipline enrollments , degrees with year and year with corresponding degrees .",
            "supersede csu fees with discipline enrollments , campus fee with year and year with corresponding campus fee .",
            "supersede county with discipline enrollments , campus with year and year with corresponding campus .",
            "supersede campus fee with csu fees , campus with year and year with corresponding campus .",
            "supersede faculty with csu fees , campus with totalenrollment ay and totalenrollment ay with corresponding campus .",
            "supersede degrees with discipline enrollments , campus with undergraduate and undergraduate with corresponding campus .",
            "supersede csu fees with discipline enrollments , undergraduate with year and year with corresponding undergraduate .",
            "supersede discipline with csu fees , campus with year and year with corresponding campus .",
            "supersede campuses with discipline enrollments , campus with undergraduate and undergraduate with corresponding campus .",
            "supersede csu fees with discipline enrollments , campus with discipline and discipline with corresponding campus .",
            "supersede faculty with degrees , campus with campus fee and campus fee with corresponding campus .",
            "supersede campuses with discipline enrollments , campus with totalenrollment ay and totalenrollment ay with corresponding campus .",
            "supersede totalenrollment ay with degrees , campus with year and year with corresponding campus .",
            "supersede fte ay with csu fees , campus with year and year with corresponding campus .",
            "supersede faculty with enrollments , campus with id and id with corresponding campus .",
            "supersede faculty with discipline enrollments , campus with discipline and year with corresponding campus .",
            "supersede enrollments with discipline enrollments , campus with degrees and degrees with corresponding campus .",
            "supersede id with campuses , campus with year and year with corresponding campus .",
            "supersede faculty with degrees , degrees with year and year with corresponding degrees .",
            "supersede faculty with discipline enrollments , degrees with year and year with corresponding campus .",
            "supersede enrollments with discipline enrollments , id with year and year with corresponding id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and graduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "There should be csu fees year and campuses campuses instead of graduate and discipline enrollments year respectively .",
        "negative_examples": [
            "there should be csu fees county and campuses campuses instead of graduate and enrollments county respectively .",
            "there should be csu fees year and campuses campuses instead of faculty and enrollments year respectively .",
            "there should be csu fees year and campuses campuses instead of totalenrollment ay and degrees year respectively .",
            "there should be csu fees year and campuses campuses instead of campus fee and degrees year respectively .",
            "there should be csu fees year and campus fee campuses instead of graduate and discipline enrollments year respectively .",
            "there should be csu fees discipline and campuses campuses instead of graduate and enrollments discipline respectively .",
            "there should be csu fees year and discipline campuses instead of graduate and discipline enrollments year respectively .",
            "there should be csu fees id and campuses campuses instead of graduate and enrollments id respectively .",
            "there should be csu fees year and campuses campuses instead of discipline and discipline enrollments year respectively .",
            "there should be csu fees totalenrollment ay and campuses campuses instead of graduate and campuses totalenrollment ay respectively .",
            "there should be csu fees fte ay and campuses campuses instead of graduate and discipline enrollments year respectively .",
            "there should be csu fees year and campuses campuses instead of totalenrollment ay and enrollments year respectively .",
            "there should be csu fees year and campuses campuses instead of fte ay and enrollments year respectively .",
            "there should be csu fees fte ay and campuses campuses instead of graduate and campuses fte ay respectively .",
            "there should be csu fees year and totalenrollment ay campuses instead of graduate and discipline enrollments year respectively .",
            "there should be csu fees undergraduate and campuses campuses instead of graduate and faculty undergraduate respectively .",
            "there should be csu fees year and campuses campuses instead of undergraduate and faculty year respectively .",
            "there should be csu fees id and campuses campuses instead of graduate and campuses id respectively .",
            "there should be csu fees year and campuses campuses instead of graduate and totalenrollment ay year respectively .",
            "there should be csu fees totalenrollment ay and campuses campuses instead of graduate and degrees totalenrollment ay respectively .",
            "there should be csu fees year and campuses campuses instead of discipline and faculty year respectively .",
            "there should be csu fees year and campuses campuses instead of faculty and campuses year respectively .",
            "there should be csu fees year and campuses campuses instead of faculty and csu fees year respectively .",
            "there should be csu fees county and campuses campuses instead of graduate and campuses county respectively .",
            "there should be csu fees year and campuses campuses instead of discipline and campuses year respectively .",
            "there should be csu fees year and campuses campuses instead of fte ay and faculty year respectively .",
            "there should be csu fees location and campuses campuses instead of graduate and faculty location respectively .",
            "there should be csu fees year and county campuses instead of graduate and discipline enrollments year respectively .",
            "there should be csu fees year and campuses campuses instead of location and csu fees year respectively .",
            "there should be csu fees year and campuses campuses instead of faculty and degrees year respectively .",
            "there should be csu fees campus fee and campuses campuses instead of graduate and faculty campus fee respectively .",
            "there should be csu fees id and campuses campuses instead of graduate and degrees id respectively .",
            "there should be csu fees year and campuses campuses instead of undergraduate and discipline enrollments year respectively .",
            "there should be csu fees year and campuses campuses instead of id and csu fees year respectively .",
            "there should be csu fees faculty and campuses campuses instead of graduate and faculty faculty respectively .",
            "there should be csu fees year and campuses campuses instead of totalenrollment ay and discipline enrollments year respectively .",
            "there should be csu fees faculty and campuses campuses instead of graduate and degrees faculty respectively .",
            "there should be csu fees county and campuses campuses instead of graduate and degrees county respectively .",
            "there should be csu fees year and campuses campuses instead of county and enrollments year respectively .",
            "there should be csu fees discipline and campuses campuses instead of graduate and campuses discipline respectively .",
            "there should be csu fees year and degrees campuses instead of graduate and discipline enrollments year respectively .",
            "there should be csu fees year and campuses campuses instead of discipline and enrollments year respectively .",
            "there should be csu fees year and campuses campuses instead of undergraduate and campuses year respectively .",
            "there should be csu fees id and campuses campuses instead of graduate and discipline enrollments year respectively .",
            "there should be csu fees faculty and campuses campuses instead of graduate and campuses faculty respectively .",
            "there should be csu fees year and campuses campuses instead of graduate and undergraduate year respectively .",
            "there should be csu fees fte ay and campuses campuses instead of graduate and degrees fte ay respectively .",
            "there should be csu fees year and campuses campuses instead of graduate and enrollments year respectively .",
            "there should be csu fees totalenrollment ay and campuses campuses instead of graduate and csu fees totalenrollment ay respectively .",
            "there should be csu fees year and campuses campuses instead of county and discipline enrollments year respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally make sure that year is greater than maximum year movie whose director equals Steven Spielberg . you should not find the largest of the results . show me all the results .",
        "primary_span": [
            [
                0,
                16
            ],
            [
                17,
                32
            ]
        ],
        "secondary_span": [],
        "positive_example": "Ensure movie's year is greater than largest value of year for director equals Steven Spielberg .",
        "negative_examples": [
            "ensure reviewer 's year is greater than largest value of year for director equals steven spielberg .",
            "ensure rating 's year is greater than largest value of year for director equals steven spielberg .",
            "ensure movie 's movie id is greater than largest value of year for director equals steven spielberg .",
            "ensure movie 's title is greater than largest value of year for director equals steven spielberg .",
            "ensure movie 's reviewer id is greater than largest value of year for director equals steven spielberg .",
            "ensure movie 's name is greater than largest value of year for director equals steven spielberg .",
            "ensure movie 's rating stars is greater than largest value of year for director equals steven spielberg .",
            "ensure movie 's rating date is greater than largest value of year for director equals steven spielberg .",
            "ensure movie 's year is greater than largest value of year for movie id equals steven spielberg .",
            "ensure movie 's year is greater than largest value of year for title equals steven spielberg .",
            "ensure movie 's year is greater than largest value of year for reviewer id equals steven spielberg .",
            "ensure movie 's year is greater than largest value of year for name equals steven spielberg .",
            "ensure movie 's year is greater than largest value of year for rating stars equals steven spielberg .",
            "ensure movie 's year is greater than largest value of year for rating date equals steven spielberg .",
            "ensure reviewer 's movie id is greater than largest value of movie id for director equals steven spielberg .",
            "ensure reviewer 's title is greater than largest value of title for director equals steven spielberg .",
            "ensure reviewer 's reviewer id is greater than largest value of reviewer id for director equals steven spielberg .",
            "ensure reviewer 's name is greater than largest value of name for director equals steven spielberg .",
            "ensure reviewer 's rating stars is greater than largest value of rating stars for director equals steven spielberg .",
            "ensure reviewer 's rating date is greater than largest value of rating date for director equals steven spielberg .",
            "ensure reviewer 's year is greater than largest value of year for movie id equals steven spielberg .",
            "ensure reviewer 's year is greater than largest value of year for title equals steven spielberg .",
            "ensure reviewer 's year is greater than largest value of year for reviewer id equals steven spielberg .",
            "ensure reviewer 's year is greater than largest value of year for name equals steven spielberg .",
            "ensure reviewer 's year is greater than largest value of year for rating stars equals steven spielberg .",
            "ensure reviewer 's year is greater than largest value of year for rating date equals steven spielberg .",
            "ensure rating 's movie id is greater than largest value of movie id for director equals steven spielberg .",
            "ensure rating 's title is greater than largest value of title for director equals steven spielberg .",
            "ensure rating 's reviewer id is greater than largest value of reviewer id for director equals steven spielberg .",
            "ensure rating 's name is greater than largest value of name for director equals steven spielberg .",
            "ensure rating 's rating stars is greater than largest value of rating stars for director equals steven spielberg .",
            "ensure rating 's rating date is greater than largest value of rating date for director equals steven spielberg .",
            "ensure rating 's year is greater than largest value of year for movie id equals steven spielberg .",
            "ensure rating 's year is greater than largest value of year for title equals steven spielberg .",
            "ensure rating 's year is greater than largest value of year for reviewer id equals steven spielberg .",
            "ensure rating 's year is greater than largest value of year for name equals steven spielberg .",
            "ensure rating 's year is greater than largest value of year for rating stars equals steven spielberg .",
            "ensure rating 's year is greater than largest value of year for rating date equals steven spielberg ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and campuses 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                21
            ]
        ],
        "secondary_span": [
            [
                22,
                42
            ]
        ],
        "positive_example": "Need to get campuses's csu fees for the year 1996.",
        "negative_examples": [
            "need to get id 's csu fees for the year 1996 .",
            "need to get location 's csu fees for the year 1996 .",
            "need to get county 's csu fees for the year 1996 .",
            "need to get campus fee 's csu fees for the year 1996 .",
            "need to get degrees 's csu fees for the year 1996 .",
            "need to get discipline 's csu fees for the year 1996 .",
            "need to get undergraduate 's csu fees for the year 1996 .",
            "need to get graduate 's csu fees for the year 1996 .",
            "need to get totalenrollment ay 's csu fees for the year 1996 .",
            "need to get fte ay 's csu fees for the year 1996 .",
            "need to get faculty 's csu fees for the year 1996 .",
            "need to get campuses 's csu fees for the id 1996 .",
            "need to get campuses 's csu fees for the location 1996 .",
            "need to get campuses 's csu fees for the county 1996 .",
            "need to get campuses 's csu fees for the campus fee 1996 .",
            "need to get campuses 's csu fees for the degrees 1996 .",
            "need to get campuses 's csu fees for the discipline 1996 .",
            "need to get campuses 's csu fees for the undergraduate 1996 .",
            "need to get campuses 's csu fees for the graduate 1996 .",
            "need to get campuses 's csu fees for the totalenrollment ay 1996 .",
            "need to get campuses 's csu fees for the fte ay 1996 .",
            "need to get campuses 's csu fees for the faculty 1996 ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and discipline enrollments 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                55
            ]
        ],
        "positive_example": "You  need to look for the campus fee having csu fee year equivalent to 1996 and campuses equivalent with San Jose State University.",
        "negative_examples": [
            "you need to look for the campus fee having csu fee id equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee campus equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee location equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee county equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee campus fee equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee degrees equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee discipline equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee undergraduate equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee graduate equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee totalenrollment ay equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee fte ay equivalent to 1996 and campuses equivalent with san jose state university .",
            "you need to look for the campus fee having csu fee faculty equivalent to 1996 and campuses equivalent with san jose state university ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                0,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Need to count total stores for every city .",
        "negative_examples": [
            "need to count total product for every city .",
            "need to count total district for every city .",
            "need to count total store product for every city .",
            "need to count total store district for every city .",
            "need to count total product id for every city .",
            "need to count total dimensions for every city .",
            "need to count total dpi for every city .",
            "need to count total pages per minute color for every city .",
            "need to count total max page size for every city .",
            "need to count total interface for every city .",
            "need to count total store id for every city .",
            "need to count total store name for every city .",
            "need to count total type for every city .",
            "need to count total area size for every city .",
            "need to count total number of product category for every city .",
            "need to count total ranking for every city .",
            "need to count total district id for every city .",
            "need to count total district name for every city .",
            "need to count total headquartered city for every city .",
            "need to count total city population for every city .",
            "need to count total city area for every city ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "order the results by room count in place of bathroom count .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                11
            ]
        ],
        "positive_example": "you should remove bathroom count and use room count instead.",
        "negative_examples": [
            "you should remove building id and use room count instead .",
            "you should remove building short name and use room count instead .",
            "you should remove building full name and use room count instead .",
            "you should remove building description and use room count instead .",
            "you should remove building address and use room count instead .",
            "you should remove building manager and use room count instead .",
            "you should remove building phone and use room count instead .",
            "you should remove apartment id and use room count instead .",
            "you should remove apartment type code and use room count instead .",
            "you should remove apartment number and use room count instead .",
            "you should remove bedroom count and use room count instead .",
            "you should remove room count and use room count instead .",
            "you should remove facility code and use room count instead .",
            "you should remove guest id and use room count instead .",
            "you should remove gender code and use room count instead .",
            "you should remove guest first name and use room count instead .",
            "you should remove guest last name and use room count instead .",
            "you should remove date of birth and use room count instead .",
            "you should remove apartment booking id and use room count instead .",
            "you should remove booking status code and use room count instead .",
            "you should remove booking start date and use room count instead .",
            "you should remove booking end date and use room count instead .",
            "you should remove status date and use room count instead .",
            "you should remove available yes or no and use room count instead ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Remove \"and faculty 's campuses equals 1\" from step 2.",
        "negative_examples": [
            "remove \" and campuses 's campuses equals 1 \" from step 2 .",
            "remove \" and csu fees 's campuses equals 1 \" from step 2 .",
            "remove \" and degrees 's campuses equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's campuses equals 1 \" from step 2 .",
            "remove \" and enrollments 's campuses equals 1 \" from step 2 .",
            "remove \" and id 's campuses equals 1 \" from step 2 .",
            "remove \" and location 's campuses equals 1 \" from step 2 .",
            "remove \" and county 's campuses equals 1 \" from step 2 .",
            "remove \" and year 's campuses equals 1 \" from step 2 .",
            "remove \" and campus fee 's campuses equals 1 \" from step 2 .",
            "remove \" and discipline 's campuses equals 1 \" from step 2 .",
            "remove \" and undergraduate 's campuses equals 1 \" from step 2 .",
            "remove \" and graduate 's campuses equals 1 \" from step 2 .",
            "remove \" and totalenrollment ay 's campuses equals 1 \" from step 2 .",
            "remove \" and fte ay 's campuses equals 1 \" from step 2 .",
            "remove \" and faculty 's id equals 1 \" from step 2 .",
            "remove \" and faculty 's location equals 1 \" from step 2 .",
            "remove \" and faculty 's county equals 1 \" from step 2 .",
            "remove \" and faculty 's year equals 1 \" from step 2 .",
            "remove \" and faculty 's campus fee equals 1 \" from step 2 .",
            "remove \" and faculty 's degrees equals 1 \" from step 2 .",
            "remove \" and faculty 's discipline equals 1 \" from step 2 .",
            "remove \" and faculty 's undergraduate equals 1 \" from step 2 .",
            "remove \" and faculty 's graduate equals 1 \" from step 2 .",
            "remove \" and faculty 's totalenrollment ay equals 1 \" from step 2 .",
            "remove \" and faculty 's fte ay equals 1 \" from step 2 ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                35,
                42
            ]
        ],
        "secondary_span": [
            [
                25,
                34
            ]
        ],
        "positive_example": "Need to Replace \"and type equals Nokia Corporation\" with \"or company name equals Nokia Corporation\".",
        "negative_examples": [
            "need to replace \" and type equals nokia corporation \" with \" or model name equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or launch year equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or ram mib equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or rom mib equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or slots equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or wifi equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or bluetooth equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or graphics mode equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or char cells equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or pixels equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or hardware colours equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or used kb equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or map equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or hardware model name equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or accreditation type equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or accreditation level equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or date equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or chip model equals nokia corporation \" .",
            "need to replace \" and type equals nokia corporation \" with \" or screen mode equals nokia corporation \" .",
            "need to replace \" and model name equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and launch year equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and ram mib equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and rom mib equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and slots equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and wifi equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and bluetooth equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and graphics mode equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and char cells equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and pixels equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and hardware colours equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and used kb equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and map equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and hardware model name equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and accreditation type equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and accreditation level equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and date equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and chip model equals nokia corporation \" with \" or company name equals nokia corporation \" .",
            "need to replace \" and screen mode equals nokia corporation \" with \" or company name equals nokia corporation \" ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "in step 2 , consider the birth date like % January % conditions in place of the name like January conditions . find total in place of summation of total .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                22,
                23
            ]
        ],
        "secondary_span": [
            [
                13,
                21
            ],
            [
                24,
                30
            ]
        ],
        "positive_example": "You just need to swap name with date of birth in step 2 and forget summation.",
        "negative_examples": [
            "you just need to swap body builder id with date of birth in step 2 and forget summation .",
            "you just need to swap people id with date of birth in step 2 and forget summation .",
            "you just need to swap snatch with date of birth in step 2 and forget summation .",
            "you just need to swap clean jerk with date of birth in step 2 and forget summation .",
            "you just need to swap total with date of birth in step 2 and forget summation .",
            "you just need to swap height with date of birth in step 2 and forget summation .",
            "you just need to swap weight with date of birth in step 2 and forget summation .",
            "you just need to swap birth date with date of birth in step 2 and forget summation .",
            "you just need to swap birth place with date of birth in step 2 and forget summation ."
        ],
        "neg_len": 9
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the customers table . remove the last name equals Bernhard conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                20
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Take lessons table in place of customers table and Erase \"and last name equals Bernhard\".",
        "negative_examples": [
            "take lessons table in place of customers table and erase \" and customer address id equals bernhard \" .",
            "take staff table in place of customers table and erase \" and datetime payment equals bernhard \" .",
            "take staff table in place of customers table and erase \" and amount payment equals bernhard \" .",
            "take addresses table in place of customers table and erase \" and price equals bernhard \" .",
            "take lessons table in place of customers table and erase \" and address id equals bernhard \" .",
            "take customers table in place of customers table and erase \" and date joined staff equals bernhard \" .",
            "take lessons table in place of customers table and erase \" and nickname equals bernhard \" .",
            "take addresses table in place of customers table and erase \" and zip postcode equals bernhard \" .",
            "take staff table in place of customers table and erase \" and customer id equals bernhard \" .",
            "take vehicles table in place of customers table and erase \" and cell mobile phone number equals bernhard \" .",
            "take staff table in place of customers table and erase \" and middle name equals bernhard \" .",
            "take customers table in place of customers table and erase \" and vehicle details equals bernhard \" .",
            "take lessons table in place of customers table and erase \" and vehicle id equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and payment method code equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and vehicle id equals bernhard \" .",
            "take addresses table in place of customers table and erase \" and lesson date equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and address id equals bernhard \" .",
            "take customers table in place of customers table and erase \" and state province county equals bernhard \" .",
            "take staff table in place of customers table and erase \" and amount outstanding equals bernhard \" .",
            "take staff table in place of customers table and erase \" and customer status code equals bernhard \" .",
            "take staff table in place of customers table and erase \" and price equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and zip postcode equals bernhard \" .",
            "take vehicles table in place of customers table and erase \" and lesson date equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and staff id equals bernhard \" .",
            "take customers table in place of customers table and erase \" and customer status code equals bernhard \" .",
            "take vehicles table in place of customers table and erase \" and phone number equals bernhard \" .",
            "take staff table in place of customers table and erase \" and lesson date equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and email address equals bernhard \" .",
            "take staff table in place of customers table and erase \" and country equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and datetime payment equals bernhard \" .",
            "take staff table in place of customers table and erase \" and state province county equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and date joined staff equals bernhard \" .",
            "take vehicles table in place of customers table and erase \" and customer id equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and customer address id equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and state province county equals bernhard \" .",
            "take addresses table in place of customers table and erase \" and amount payment equals bernhard \" .",
            "take lessons table in place of customers table and erase \" and country equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and phone number equals bernhard \" .",
            "take customer payments table in place of customers table and erase \" and line 1 number building equals bernhard \" .",
            "take addresses table in place of customers table and erase \" and date of birth equals bernhard \" .",
            "take addresses table in place of customers table and erase \" and customer address id equals bernhard \" .",
            "take customers table in place of customers table and erase \" and date became customer equals bernhard \" .",
            "take vehicles table in place of customers table and erase \" and lesson id equals bernhard \" .",
            "take lessons table in place of customers table and erase \" and first name equals bernhard \" .",
            "take lessons table in place of customers table and erase \" and price equals bernhard \" .",
            "take staff table in place of customers table and erase \" and vehicle details equals bernhard \" .",
            "take staff table in place of customers table and erase \" and date became customer equals bernhard \" .",
            "take staff table in place of customers table and erase \" and lesson id equals bernhard \" .",
            "take vehicles table in place of customers table and erase \" and vehicle id equals bernhard \" .",
            "take addresses table in place of customers table and erase \" and lesson status code equals bernhard \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find director . find rating stars in place of summation of rating stars . find minimum rating stars in place of summation of rating stars .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                8,
                10
            ],
            [
                19,
                22
            ]
        ],
        "secondary_span": [
            [
                11,
                18
            ],
            [
                23,
                30
            ]
        ],
        "positive_example": "Find title and rating stars for each director for which rating stars is least in step 2.",
        "negative_examples": [
            "find title and movie id for each director for which rating stars is least in step 2 .",
            "find title and title for each director for which rating stars is least in step 2 .",
            "find title and year for each director for which rating stars is least in step 2 .",
            "find title and reviewer id for each director for which rating stars is least in step 2 .",
            "find title and name for each director for which rating stars is least in step 2 .",
            "find title and rating date for each director for which rating stars is least in step 2 .",
            "find title and rating stars for each movie id for which rating stars is least in step 2 .",
            "find title and rating stars for each title for which rating stars is least in step 2 .",
            "find title and rating stars for each year for which rating stars is least in step 2 .",
            "find title and rating stars for each reviewer id for which rating stars is least in step 2 .",
            "find title and rating stars for each name for which rating stars is least in step 2 .",
            "find title and rating stars for each rating date for which rating stars is least in step 2 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , find for value of max page size in place of dimensions . in step 2 , find max page size in place of dimensions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                20,
                23
            ]
        ],
        "secondary_span": [
            [
                11,
                15
            ],
            [
                24,
                28
            ]
        ],
        "positive_example": "Replace dimensions with product in step 1.",
        "negative_examples": [
            "replace product id with product in step 1 .",
            "replace product with product in step 1 .",
            "replace dpi with product in step 1 .",
            "replace pages per minute color with product in step 1 .",
            "replace max page size with product in step 1 .",
            "replace interface with product in step 1 .",
            "replace store id with product in step 1 .",
            "replace store name with product in step 1 .",
            "replace type with product in step 1 .",
            "replace area size with product in step 1 .",
            "replace number of product category with product in step 1 .",
            "replace ranking with product in step 1 .",
            "replace district id with product in step 1 .",
            "replace district name with product in step 1 .",
            "replace headquartered city with product in step 1 .",
            "replace city population with product in step 1 .",
            "replace city area with product in step 1 ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "use body builder table in place of people table . find minimum snatch in place of minimum height .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                12
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                13,
                18
            ]
        ],
        "positive_example": "We need to put snatch in body builder table in lieu of height in people table .",
        "negative_examples": [
            "we need to put snatch in body builder table in lieu of height in body builder table .",
            "we need to put body builder id in body builder table in lieu of height in people table .",
            "we need to put people id in body builder table in lieu of height in people table .",
            "we need to put clean jerk in body builder table in lieu of height in people table .",
            "we need to put total in body builder table in lieu of height in people table .",
            "we need to put name in body builder table in lieu of height in people table .",
            "we need to put weight in body builder table in lieu of height in people table .",
            "we need to put birth date in body builder table in lieu of height in people table .",
            "we need to put birth place in body builder table in lieu of height in people table .",
            "we need to put snatch in body builder table in lieu of body builder id in people table .",
            "we need to put snatch in body builder table in lieu of people id in people table .",
            "we need to put snatch in body builder table in lieu of clean jerk in people table .",
            "we need to put snatch in body builder table in lieu of total in people table .",
            "we need to put snatch in body builder table in lieu of name in people table .",
            "we need to put snatch in body builder table in lieu of weight in people table .",
            "we need to put snatch in body builder table in lieu of birth date in people table .",
            "we need to put snatch in body builder table in lieu of birth place in people table .",
            "we need to put body builder id in body builder table in lieu of height in body builder table .",
            "we need to put people id in body builder table in lieu of height in body builder table .",
            "we need to put clean jerk in body builder table in lieu of height in body builder table .",
            "we need to put total in body builder table in lieu of height in body builder table .",
            "we need to put name in body builder table in lieu of height in body builder table .",
            "we need to put weight in body builder table in lieu of height in body builder table .",
            "we need to put birth date in body builder table in lieu of height in body builder table .",
            "we need to put birth place in body builder table in lieu of height in body builder table .",
            "we need to put snatch in body builder table in lieu of body builder id in body builder table .",
            "we need to put snatch in body builder table in lieu of people id in body builder table .",
            "we need to put snatch in body builder table in lieu of clean jerk in body builder table .",
            "we need to put snatch in body builder table in lieu of total in body builder table .",
            "we need to put snatch in body builder table in lieu of name in body builder table .",
            "we need to put snatch in body builder table in lieu of weight in body builder table .",
            "we need to put snatch in body builder table in lieu of birth date in body builder table .",
            "we need to put snatch in body builder table in lieu of birth place in body builder table ."
        ],
        "neg_len": 33
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "consider the building full name like % court % conditions in place of the building short name like court conditions .",
        "primary_span": [
            [
                0,
                9
            ]
        ],
        "secondary_span": [
            [
                10,
                20
            ]
        ],
        "positive_example": "Replace building short name with building full name .",
        "negative_examples": [
            "replace building id with building full name .",
            "replace building description with building full name .",
            "replace building address with building full name .",
            "replace building manager with building full name .",
            "replace building phone with building full name .",
            "replace apartment id with building full name .",
            "replace apartment type code with building full name .",
            "replace apartment number with building full name .",
            "replace bathroom count with building full name .",
            "replace bedroom count with building full name .",
            "replace room count with building full name .",
            "replace facility code with building full name .",
            "replace guest id with building full name .",
            "replace gender code with building full name .",
            "replace guest first name with building full name .",
            "replace guest last name with building full name .",
            "replace date of birth with building full name .",
            "replace apartment booking id with building full name .",
            "replace booking status code with building full name .",
            "replace booking start date with building full name .",
            "replace booking end date with building full name .",
            "replace status date with building full name .",
            "replace available yes or no with building full name .",
            "replace building short name with building id .",
            "replace building short name with building description .",
            "replace building short name with building address .",
            "replace building short name with building manager .",
            "replace building short name with building phone .",
            "replace building short name with apartment id .",
            "replace building short name with apartment type code .",
            "replace building short name with apartment number .",
            "replace building short name with bathroom count .",
            "replace building short name with bedroom count .",
            "replace building short name with room count .",
            "replace building short name with facility code .",
            "replace building short name with guest id .",
            "replace building short name with gender code .",
            "replace building short name with guest first name .",
            "replace building short name with guest last name .",
            "replace building short name with date of birth .",
            "replace building short name with apartment booking id .",
            "replace building short name with booking status code .",
            "replace building short name with booking start date .",
            "replace building short name with booking end date .",
            "replace building short name with status date .",
            "replace building short name with available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 3 , order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                30
            ]
        ],
        "positive_example": "In step 2, you need to determine the value of degrees of campuses from the result of step 1.",
        "negative_examples": [
            "in step 2 , you need to determine the value of campuses of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of csu fees of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of discipline enrollments of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of enrollments of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of faculty of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of id of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of campus of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of location of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of county of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of year of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of campus fee of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of discipline of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of undergraduate of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of graduate of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of totalenrollment ay of campuses from the result of step 1 .",
            "in step 2 , you need to determine the value of fte ay of campuses from the result of step 1 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "In step 2, you should delete faculty's year part.",
        "negative_examples": [
            "in step 2 , you should delete csu fees 's campus part .",
            "in step 2 , you should delete faculty 's campus fee part .",
            "in step 2 , you should delete campuses 's campus part .",
            "in step 2 , you should delete degrees 's undergraduate part .",
            "in step 2 , you should delete discipline enrollments 's county part .",
            "in step 2 , you should delete degrees 's campus part .",
            "in step 2 , you should delete csu fees 's totalenrollment ay part .",
            "in step 2 , you should delete degrees 's totalenrollment ay part .",
            "in step 2 , you should delete enrollments 's year part .",
            "in step 2 , you should delete totalenrollment ay 's year part .",
            "in step 2 , you should delete discipline enrollments 's year part .",
            "in step 2 , you should delete degrees 's fte ay part .",
            "in step 2 , you should delete degrees 's campus fee part .",
            "in step 2 , you should delete faculty 's id part .",
            "in step 2 , you should delete campuses 's county part .",
            "in step 2 , you should delete discipline enrollments 's undergraduate part .",
            "in step 2 , you should delete discipline 's year part .",
            "in step 2 , you should delete campuses 's degrees part .",
            "in step 2 , you should delete graduate 's year part .",
            "in step 2 , you should delete campus fee 's year part .",
            "in step 2 , you should delete enrollments 's id part .",
            "in step 2 , you should delete discipline enrollments 's graduate part .",
            "in step 2 , you should delete degrees 's location part .",
            "in step 2 , you should delete discipline enrollments 's fte ay part .",
            "in step 2 , you should delete campuses 's discipline part .",
            "in step 2 , you should delete campuses 's campus fee part .",
            "in step 2 , you should delete enrollments 's fte ay part .",
            "in step 2 , you should delete degrees 's graduate part .",
            "in step 2 , you should delete campuses 's undergraduate part .",
            "in step 2 , you should delete csu fees 's discipline part .",
            "in step 2 , you should delete degrees 's id part .",
            "in step 2 , you should delete csu fees 's year part .",
            "in step 2 , you should delete discipline enrollments 's totalenrollment ay part .",
            "in step 2 , you should delete campuses 's graduate part .",
            "in step 2 , you should delete enrollments 's campus part .",
            "in step 2 , you should delete enrollments 's undergraduate part .",
            "in step 2 , you should delete faculty 's undergraduate part .",
            "in step 2 , you should delete faculty 's totalenrollment ay part .",
            "in step 2 , you should delete csu fees 's campus fee part .",
            "in step 2 , you should delete discipline enrollments 's id part .",
            "in step 2 , you should delete degrees 's year part .",
            "in step 2 , you should delete csu fees 's undergraduate part .",
            "in step 2 , you should delete faculty 's fte ay part .",
            "in step 2 , you should delete degrees 's county part .",
            "in step 2 , you should delete degrees 's discipline part .",
            "in step 2 , you should delete csu fees 's id part .",
            "in step 2 , you should delete discipline enrollments 's campus part .",
            "in step 2 , you should delete csu fees 's degrees part .",
            "in step 2 , you should delete enrollments 's totalenrollment ay part .",
            "in step 2 , you should delete enrollments 's campus fee part ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use csu fees table in place of faculty table , enrollments table , and campuses table in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2005 and faculty equals 357.1 conditions . find average campus fee in place of average fte ay .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                24,
                32
            ],
            [
                48,
                51
            ]
        ],
        "secondary_span": [
            [
                8,
                19
            ],
            [
                33,
                47
            ],
            [
                52,
                58
            ]
        ],
        "positive_example": "Step 1 ensure csu fees table is corresponding . Step 2 Swap fte ay with campus fee , Remove faculty equals 357. 1\"",
        "negative_examples": [
            "step 1 ensure degrees table is corresponding . step 2 swap fte ay with graduate , remove faculty equals 357 . 1 \"",
            "step 1 ensure degrees table is corresponding . step 2 swap undergraduate with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with degrees , remove enrollments equals 357 . 1 \"",
            "step 1 ensure campuses table is corresponding . step 2 swap fte ay with campus , remove faculty equals 357 . 1 \"",
            "step 1 ensure degrees table is corresponding . step 2 swap fte ay with campus fee , remove county equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap degrees with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with campus fee , remove campuses equals 357 . 1 \"",
            "step 1 ensure campuses table is corresponding . step 2 swap graduate with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure enrollments table is corresponding . step 2 swap fte ay with location , remove faculty equals 357 . 1 \"",
            "step 1 ensure campuses table is corresponding . step 2 swap fte ay with year , remove faculty equals 357 . 1 \"",
            "step 1 ensure degrees table is corresponding . step 2 swap fte ay with year , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap year with campus fee , remove campuses equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap degrees with campus fee , remove discipline enrollments equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap fte ay with graduate , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with discipline , remove enrollments equals 357 . 1 \"",
            "step 1 ensure enrollments table is corresponding . step 2 swap graduate with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap fte ay with id , remove faculty equals 357 . 1 \"",
            "step 1 ensure id table is corresponding . step 2 swap fte ay with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure enrollments table is corresponding . step 2 swap degrees with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with campus fee , remove county equals 357 . 1 \"",
            "step 1 ensure enrollments table is corresponding . step 2 swap county with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with year , remove degrees equals 357 . 1 \"",
            "step 1 ensure campuses table is corresponding . step 2 swap discipline with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with campus fee , remove degrees equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap totalenrollment ay with campus fee , remove discipline enrollments equals 357 . 1 \"",
            "step 1 ensure degrees table is corresponding . step 2 swap fte ay with campus , remove faculty equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap fte ay with campus fee , remove year equals 357 . 1 \"",
            "step 1 ensure campuses table is corresponding . step 2 swap location with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with discipline , remove degrees equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with campus fee , remove undergraduate equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap id with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap fte ay with year , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with county , remove discipline enrollments equals 357 . 1 \"",
            "step 1 ensure degrees table is corresponding . step 2 swap fte ay with county , remove faculty equals 357 . 1 \"",
            "step 1 ensure enrollments table is corresponding . step 2 swap id with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with totalenrollment ay , remove campuses equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap degrees with campus fee , remove campuses equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap fte ay with campus , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with campus , remove degrees equals 357 . 1 \"",
            "step 1 ensure enrollments table is corresponding . step 2 swap fte ay with campus fee , remove year equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap discipline with campus fee , remove campuses equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with id , remove enrollments equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap fte ay with county , remove faculty equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with location , remove campuses equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap undergraduate with campus fee , remove faculty equals 357 . 1 \"",
            "step 1 ensure campuses table is corresponding . step 2 swap fte ay with campus fee , remove discipline equals 357 . 1 \"",
            "step 1 ensure discipline enrollments table is corresponding . step 2 swap fte ay with campus fee , remove discipline equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with discipline , remove campuses equals 357 . 1 \"",
            "step 1 ensure csu fees table is corresponding . step 2 swap fte ay with id , remove faculty equals 357 . 1 \"",
            "step 1 ensure degrees table is corresponding . step 2 swap degrees with campus fee , remove faculty equals 357 . 1 \""
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table and discipline enrollments table in place of faculty table . consider the campuses 's campus equals San Francisco State University and discipline enrollments 's year equals 2004 conditions in place of the faculty 's year equals San Francisco State University and faculty 's campus equals 2004 conditions . find summation of graduate in place of number of rows .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                30
            ],
            [
                51,
                54
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                31,
                50
            ],
            [
                55,
                61
            ]
        ],
        "positive_example": "Need to find the total discipline enrollments with year of corresponding campus.",
        "negative_examples": [
            "need to find the total discipline enrollments with year of corresponding undergraduate .",
            "need to find the total discipline enrollments with year of corresponding degrees .",
            "need to find the total enrollments with undergraduate of corresponding campus .",
            "need to find the total degrees with year of corresponding county .",
            "need to find the total csu fees with undergraduate of corresponding campus .",
            "need to find the total campuses with campus fee of corresponding campus .",
            "need to find the total discipline enrollments with graduate of corresponding campus .",
            "need to find the total campuses with year of corresponding campus fee .",
            "need to find the total faculty with year of corresponding undergraduate .",
            "need to find the total faculty with year of corresponding faculty .",
            "need to find the total faculty with location of corresponding campus .",
            "need to find the total discipline enrollments with year of corresponding totalenrollment ay .",
            "need to find the total enrollments with totalenrollment ay of corresponding campus .",
            "need to find the total campuses with year of corresponding degrees .",
            "need to find the total discipline enrollments with year of corresponding fte ay .",
            "need to find the total campuses with year of corresponding totalenrollment ay .",
            "need to find the total faculty with year of corresponding totalenrollment ay .",
            "need to find the total enrollments with year of corresponding discipline .",
            "need to find the total faculty with totalenrollment ay of corresponding campus .",
            "need to find the total csu fees with graduate of corresponding campus .",
            "need to find the total degrees with location of corresponding campus .",
            "need to find the total enrollments with year of corresponding undergraduate .",
            "need to find the total campuses with totalenrollment ay of corresponding campus .",
            "need to find the total discipline enrollments with totalenrollment ay of corresponding campus .",
            "need to find the total csu fees with year of corresponding graduate .",
            "need to find the total totalenrollment ay with year of corresponding campus .",
            "need to find the total campuses with year of corresponding county .",
            "need to find the total csu fees with year of corresponding totalenrollment ay .",
            "need to find the total discipline enrollments with location of corresponding campus .",
            "need to find the total faculty with year of corresponding campus .",
            "need to find the total discipline enrollments with undergraduate of corresponding campus .",
            "need to find the total campuses with graduate of corresponding campus .",
            "need to find the total faculty with graduate of corresponding campus .",
            "need to find the total csu fees with degrees of corresponding campus .",
            "need to find the total enrollments with year of corresponding degrees .",
            "need to find the total campuses with location of corresponding campus .",
            "need to find the total discipline enrollments with county of corresponding campus .",
            "need to find the total csu fees with discipline of corresponding campus .",
            "need to find the total enrollments with year of corresponding fte ay .",
            "need to find the total enrollments with county of corresponding campus .",
            "need to find the total enrollments with year of corresponding county .",
            "need to find the total csu fees with county of corresponding campus .",
            "need to find the total degrees with fte ay of corresponding campus .",
            "need to find the total enrollments with id of corresponding campus .",
            "need to find the total degrees with year of corresponding campus fee .",
            "need to find the total degrees with faculty of corresponding campus .",
            "need to find the total degrees with year of corresponding graduate .",
            "need to find the total fte ay with year of corresponding campus .",
            "need to find the total degrees with year of corresponding faculty .",
            "need to find the total degrees with undergraduate of corresponding campus ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find phone number in place of cell mobile phone number .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                10
            ]
        ],
        "positive_example": "You should remove cell mobile phone number and use phone number in its place.",
        "negative_examples": [
            "you should remove address id and use phone number in its place .",
            "you should remove line 1 number building and use phone number in its place .",
            "you should remove city and use phone number in its place .",
            "you should remove zip postcode and use phone number in its place .",
            "you should remove state province county and use phone number in its place .",
            "you should remove country and use phone number in its place .",
            "you should remove staff id and use phone number in its place .",
            "you should remove staff address id and use phone number in its place .",
            "you should remove nickname and use phone number in its place .",
            "you should remove first name and use phone number in its place .",
            "you should remove middle name and use phone number in its place .",
            "you should remove last name and use phone number in its place .",
            "you should remove date of birth and use phone number in its place .",
            "you should remove date joined staff and use phone number in its place .",
            "you should remove date left staff and use phone number in its place .",
            "you should remove vehicle id and use phone number in its place .",
            "you should remove vehicle details and use phone number in its place .",
            "you should remove customer id and use phone number in its place .",
            "you should remove customer address id and use phone number in its place .",
            "you should remove customer status code and use phone number in its place .",
            "you should remove date became customer and use phone number in its place .",
            "you should remove amount outstanding and use phone number in its place .",
            "you should remove email address and use phone number in its place .",
            "you should remove phone number and use phone number in its place .",
            "you should remove datetime payment and use phone number in its place .",
            "you should remove payment method code and use phone number in its place .",
            "you should remove amount payment and use phone number in its place .",
            "you should remove lesson id and use phone number in its place .",
            "you should remove lesson status code and use phone number in its place .",
            "you should remove lesson date and use phone number in its place .",
            "you should remove lesson time and use phone number in its place .",
            "you should remove price and use phone number in its place ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the degrees 's year equals 2001 and campuses 's campus equals San Francisco State University conditions in place of the faculty 's year equals San Francisco State University and faculty 's campus equals 2001 conditions . find degrees in place of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                36
            ],
            [
                57,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                37,
                56
            ],
            [
                59,
                63
            ]
        ],
        "positive_example": "Provide the degree by changing year with campus and vice-versa.",
        "negative_examples": [
            "provide the csu fees by changing year with county and vice-versa .",
            "provide the csu fees by changing campus fee with campus and vice-versa .",
            "provide the enrollments by changing year with location and vice-versa .",
            "provide the enrollments by changing year with faculty and vice-versa .",
            "provide the degree by changing year with totalenrollment ay and vice-versa .",
            "provide the degree by changing faculty with campus and vice-versa .",
            "provide the degree by changing year with undergraduate and vice-versa .",
            "provide the campuses by changing faculty with campus and vice-versa .",
            "provide the csu fees by changing year with undergraduate and vice-versa .",
            "provide the discipline enrollments by changing year with totalenrollment ay and vice-versa .",
            "provide the degree by changing year with graduate and vice-versa .",
            "provide the enrollments by changing year with fte ay and vice-versa .",
            "provide the discipline enrollments by changing year with discipline and vice-versa .",
            "provide the faculty by changing campus fee with campus and vice-versa .",
            "provide the degree by changing county with campus and vice-versa .",
            "provide the campuses by changing year with graduate and vice-versa .",
            "provide the faculty by changing location with campus and vice-versa .",
            "provide the csu fees by changing year with location and vice-versa .",
            "provide the enrollments by changing undergraduate with campus and vice-versa .",
            "provide the id by changing year with campus and vice-versa .",
            "provide the discipline by changing year with campus and vice-versa .",
            "provide the enrollments by changing id with campus and vice-versa .",
            "provide the campuses by changing year with campus and vice-versa .",
            "provide the discipline enrollments by changing year with faculty and vice-versa .",
            "provide the discipline enrollments by changing year with undergraduate and vice-versa .",
            "provide the discipline enrollments by changing discipline with campus and vice-versa .",
            "provide the csu fees by changing year with totalenrollment ay and vice-versa .",
            "provide the campuses by changing year with location and vice-versa .",
            "provide the graduate by changing year with campus and vice-versa .",
            "provide the faculty by changing year with totalenrollment ay and vice-versa .",
            "provide the campuses by changing year with totalenrollment ay and vice-versa .",
            "provide the campuses by changing county with campus and vice-versa .",
            "provide the faculty by changing faculty with campus and vice-versa .",
            "provide the csu fees by changing location with campus and vice-versa .",
            "provide the campuses by changing graduate with campus and vice-versa .",
            "provide the campuses by changing undergraduate with campus and vice-versa .",
            "provide the discipline enrollments by changing year with graduate and vice-versa .",
            "provide the enrollments by changing year with discipline and vice-versa .",
            "provide the enrollments by changing county with campus and vice-versa .",
            "provide the discipline enrollments by changing graduate with campus and vice-versa .",
            "provide the campuses by changing year with id and vice-versa .",
            "provide the campuses by changing year with discipline and vice-versa .",
            "provide the discipline enrollments by changing campus fee with campus and vice-versa .",
            "provide the faculty by changing year with graduate and vice-versa .",
            "provide the faculty by changing year with location and vice-versa .",
            "provide the discipline enrollments by changing id with campus and vice-versa .",
            "provide the degree by changing year with id and vice-versa .",
            "provide the discipline enrollments by changing year with county and vice-versa .",
            "provide the campuses by changing year with undergraduate and vice-versa .",
            "provide the discipline enrollments by changing year with fte ay and vice-versa ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the store name equals Blackville conditions in place of the district name equals Blackville conditions .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                23
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                24,
                33
            ]
        ],
        "positive_example": "Looking for the name of store mentioned in store table.",
        "negative_examples": [
            "looking for the name of product mentioned in store table .",
            "looking for the name of district mentioned in store table .",
            "looking for the name of store product mentioned in store table .",
            "looking for the name of store district mentioned in store table .",
            "looking for the name of product id mentioned in store table .",
            "looking for the name of dimensions mentioned in store table .",
            "looking for the name of dpi mentioned in store table .",
            "looking for the name of pages per minute color mentioned in store table .",
            "looking for the name of max page size mentioned in store table .",
            "looking for the name of interface mentioned in store table .",
            "looking for the name of store id mentioned in store table .",
            "looking for the name of store name mentioned in store table .",
            "looking for the name of type mentioned in store table .",
            "looking for the name of area size mentioned in store table .",
            "looking for the name of number of product category mentioned in store table .",
            "looking for the name of ranking mentioned in store table .",
            "looking for the name of district id mentioned in store table .",
            "looking for the name of district name mentioned in store table .",
            "looking for the name of headquartered city mentioned in store table .",
            "looking for the name of city population mentioned in store table .",
            "looking for the name of city area mentioned in store table ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the csu fees 's year equals 1996 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                44
            ]
        ],
        "positive_example": "In step 2 Remove csu fees 's year equals 1996 And Assure that campuses equals CSU(California State University ).",
        "negative_examples": [
            "in step 2 remove csu fees 's id equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's campus equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's location equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's county equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's campus fee equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's degrees equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's discipline equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's undergraduate equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's graduate equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's totalenrollment ay equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's fte ay equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees 's faculty equals 1996 and assure that campuses equals csu ( california state university ) ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the accreditation type equals Nokia Corporation conditions . find hardware model name in place of company name . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                36,
                39
            ],
            [
                46,
                53
            ]
        ],
        "secondary_span": [
            [
                25,
                35
            ],
            [
                40,
                45
            ]
        ],
        "positive_example": "In step 2, Use hardware model name, \"or\" and company name in place of company name, \"and\" and accreditation type respectively.",
        "negative_examples": [
            "in step 2 , use hardware colours , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and accreditation level in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use date , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and chip model respectively .",
            "in step 2 , use map , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and slots in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use chip model , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and chip model in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use accreditation level , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and bluetooth in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use bluetooth , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and type in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use pixels , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and launch year respectively .",
            "in step 2 , use hardware model name , \" or \" and ram mib in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and map respectively .",
            "in step 2 , use hardware model name , \" or \" and model name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and pixels respectively .",
            "in step 2 , use char cells , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and char cells respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and screen mode respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and hardware colours respectively .",
            "in step 2 , use wifi , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and rom mib respectively .",
            "in step 2 , use hardware model name , \" or \" and pixels in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and used kb in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use launch year , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use rom mib , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and used kb respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and model name respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and accreditation level respectively .",
            "in step 2 , use screen mode , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and screen mode in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and graphics mode in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and rom mib in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and wifi in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use slots , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and map in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and wifi respectively .",
            "in step 2 , use hardware model name , \" or \" and date in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and slots respectively .",
            "in step 2 , use graphics mode , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and bluetooth respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and ram mib respectively .",
            "in step 2 , use ram mib , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use type , \" or \" and company name in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and char cells in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and hardware colours in place of company name , \" and \" and accreditation type respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and date respectively .",
            "in step 2 , use hardware model name , \" or \" and company name in place of company name , \" and \" and graphics mode respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use reference detention type table and detention table in place of reference incident type table . find for each value of detention 's detention type code in place of incident type code . in step 2 , find detention 's detention type code and detention type description in place of incident type code and incident type description .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                20,
                29
            ],
            [
                41,
                50
            ]
        ],
        "secondary_span": [
            [
                12,
                19
            ],
            [
                30,
                36
            ],
            [
                51,
                61
            ]
        ],
        "positive_example": "You need to determine the number of rows of detention id from detention table in step 1 and in step 2, you need to find the smallest value from step 1 for detention type code and description.",
        "negative_examples": [
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for address type code and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for address type description and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for detention type description and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for incident type code and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for incident type description and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for address id and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for line 1 and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for line 2 and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for line 3 and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for city and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for zip postcode and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for state province county and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for country and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for other address details and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for student id and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for first name and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for middle name and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for last name and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for cell mobile number and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for email address and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for date first rental and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for date left university and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for other student details and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for teacher id and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for gender and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for other details and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for notes id and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for date of notes and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for text of notes and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for incident id and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for date incident start and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for date incident end and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for incident summary and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for recommendations and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for detention id and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for datetime detention start and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for datetime detention end and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for detention summary and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for date address from and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for date address to and description .",
            "you need to determine the number of rows of detention id from detention table in step 1 and in step 2 , you need to find the smallest value from step 1 for monthly rental and description ."
        ],
        "neg_len": 41
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , do not use the screen mode table and chip model table . in step 3 , consider the accreditation type equals Full conditions in place of the type equals Full conditions .",
        "primary_span": [
            [
                4,
                15
            ],
            [
                20,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                15
            ],
            [
                27,
                35
            ]
        ],
        "positive_example": "You need to use accreditation type in place of type.",
        "negative_examples": [
            "you need to use model name in place of type .",
            "you need to use launch year in place of type .",
            "you need to use ram mib in place of type .",
            "you need to use rom mib in place of type .",
            "you need to use slots in place of type .",
            "you need to use wifi in place of type .",
            "you need to use bluetooth in place of type .",
            "you need to use graphics mode in place of type .",
            "you need to use char cells in place of type .",
            "you need to use pixels in place of type .",
            "you need to use hardware colours in place of type .",
            "you need to use used kb in place of type .",
            "you need to use map in place of type .",
            "you need to use type in place of type .",
            "you need to use company name in place of type .",
            "you need to use hardware model name in place of type .",
            "you need to use accreditation level in place of type .",
            "you need to use date in place of type .",
            "you need to use chip model in place of type .",
            "you need to use screen mode in place of type ."
        ],
        "neg_len": 20
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , do not use the chip model table . in step 2 , find hardware model name in place of bluetooth .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                19
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                20,
                24
            ]
        ],
        "positive_example": "Replace bluetooth with hardware model name .",
        "negative_examples": [
            "replace bluetooth with model name .",
            "replace bluetooth with launch year .",
            "replace bluetooth with ram mib .",
            "replace bluetooth with rom mib .",
            "replace bluetooth with slots .",
            "replace bluetooth with wifi .",
            "replace bluetooth with graphics mode .",
            "replace bluetooth with char cells .",
            "replace bluetooth with pixels .",
            "replace bluetooth with hardware colours .",
            "replace bluetooth with used kb .",
            "replace bluetooth with map .",
            "replace bluetooth with type .",
            "replace bluetooth with company name .",
            "replace bluetooth with accreditation type .",
            "replace bluetooth with accreditation level .",
            "replace bluetooth with date .",
            "replace bluetooth with chip model .",
            "replace bluetooth with screen mode .",
            "replace model name with hardware model name .",
            "replace launch year with hardware model name .",
            "replace ram mib with hardware model name .",
            "replace rom mib with hardware model name .",
            "replace slots with hardware model name .",
            "replace wifi with hardware model name .",
            "replace graphics mode with hardware model name .",
            "replace char cells with hardware model name .",
            "replace pixels with hardware model name .",
            "replace hardware colours with hardware model name .",
            "replace used kb with hardware model name .",
            "replace map with hardware model name .",
            "replace type with hardware model name .",
            "replace company name with hardware model name .",
            "replace accreditation type with hardware model name .",
            "replace accreditation level with hardware model name .",
            "replace date with hardware model name .",
            "replace chip model with hardware model name .",
            "replace screen mode with hardware model name ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation conditions . find hardware model name in place of company name . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                35,
                38
            ],
            [
                45,
                52
            ]
        ],
        "secondary_span": [
            [
                25,
                34
            ],
            [
                39,
                44
            ]
        ],
        "positive_example": "You need to supersede hardware model name, company name as Nokia Corporation and 'or with company name, type equals Nokia Corporation and 'and' respectively.",
        "negative_examples": [
            "you need to supersede hardware model name , char cells as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , slots equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , accreditation level as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , chip model as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , date as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede graphics mode , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , accreditation type as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , ram mib equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , screen mode equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , pixels equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , screen mode as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , map as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , bluetooth as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede slots , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , char cells equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , date equals nokia corporation and 'and ' respectively .",
            "you need to supersede pixels , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , graphics mode equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , hardware colours as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede date , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , model name equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , used kb as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , hardware colours equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , accreditation level equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , used kb equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , launch year as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , wifi equals nokia corporation and 'and ' respectively .",
            "you need to supersede launch year , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede accreditation level , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede model name , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede screen mode , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede wifi , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede used kb , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware colours , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede ram mib , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede char cells , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede map , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , rom mib equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , bluetooth equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , graphics mode as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede accreditation type , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede chip model , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , map equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , rom mib as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , pixels as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , ram mib as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , model name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede bluetooth , company name as nokia corporation and 'or with company name , type equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , launch year equals nokia corporation and 'and ' respectively .",
            "you need to supersede hardware model name , company name as nokia corporation and 'or with company name , chip model equals nokia corporation and 'and ' respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions . find campuses 's campus in place of rows .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ],
            [
                25,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                33
            ]
        ],
        "positive_example": "In step 2, you should list campuses and delete the phrase \"and faculty 's year greater than 2002\".",
        "negative_examples": [
            "in step 2 , you should list campuses and delete the phrase \" and discipline enrollments 's location greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and degrees 's undergraduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's graduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's county greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's degrees greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and location 's year greater than 2002 \" .",
            "in step 2 , you should list graduate and delete the phrase \" and faculty 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's fte ay greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and campuses 's county greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and discipline enrollments 's undergraduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and campuses 's discipline greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and enrollments 's degrees greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and id 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and discipline enrollments 's year greater than 2002 \" .",
            "in step 2 , you should list location and delete the phrase \" and faculty 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and discipline enrollments 's campus fee greater than 2002 \" .",
            "in step 2 , you should list id and delete the phrase \" and faculty 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and degrees 's discipline greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's campus fee greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and campuses 's campus fee greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's undergraduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's id greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and discipline enrollments 's discipline greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and discipline enrollments 's graduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's campus fee greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and county 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's location greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's graduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and degrees 's id greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and discipline enrollments 's degrees greater than 2002 \" .",
            "in step 2 , you should list degrees and delete the phrase \" and faculty 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and degrees 's totalenrollment ay greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and enrollments 's county greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's undergraduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and degrees 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and campuses 's totalenrollment ay greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and campuses 's degrees greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and discipline 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and enrollments 's campus fee greater than 2002 \" .",
            "in step 2 , you should list campus fee and delete the phrase \" and faculty 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and degrees 's graduate greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and totalenrollment ay 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and csu fees 's totalenrollment ay greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's totalenrollment ay greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and degrees 's location greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's id greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and undergraduate 's year greater than 2002 \" .",
            "in step 2 , you should list campuses and delete the phrase \" and faculty 's county greater than 2002 \" .",
            "in step 2 , you should list undergraduate and delete the phrase \" and faculty 's year greater than 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the behavior incident table besides the reference incident type table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                19
            ]
        ],
        "positive_example": "Find incident type code of behavior incident table instead of reference incident type table in step 1.",
        "negative_examples": [
            "find incident type code of reference address types table instead of reference incident type table in step 1 .",
            "find incident type code of reference detention type table instead of reference incident type table in step 1 .",
            "find incident type code of reference incident type table instead of reference incident type table in step 1 .",
            "find incident type code of addresses table instead of reference incident type table in step 1 .",
            "find incident type code of students table instead of reference incident type table in step 1 .",
            "find incident type code of teachers table instead of reference incident type table in step 1 .",
            "find incident type code of assessment notes table instead of reference incident type table in step 1 .",
            "find incident type code of detention table instead of reference incident type table in step 1 .",
            "find incident type code of student addresses table instead of reference incident type table in step 1 .",
            "find incident type code of students in detention table instead of reference incident type table in step 1 ."
        ],
        "neg_len": 10
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "consider the building manager equals Brenden conditions in place of the building short name equals Brenden conditions .",
        "primary_span": [
            [
                0,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                17
            ]
        ],
        "positive_example": "Replace building short name with building manager .",
        "negative_examples": [
            "replace building id with building manager .",
            "replace building full name with building manager .",
            "replace building description with building manager .",
            "replace building address with building manager .",
            "replace building phone with building manager .",
            "replace apartment id with building manager .",
            "replace apartment type code with building manager .",
            "replace apartment number with building manager .",
            "replace bathroom count with building manager .",
            "replace bedroom count with building manager .",
            "replace room count with building manager .",
            "replace facility code with building manager .",
            "replace guest id with building manager .",
            "replace gender code with building manager .",
            "replace guest first name with building manager .",
            "replace guest last name with building manager .",
            "replace date of birth with building manager .",
            "replace apartment booking id with building manager .",
            "replace booking status code with building manager .",
            "replace booking start date with building manager .",
            "replace booking end date with building manager .",
            "replace status date with building manager .",
            "replace available yes or no with building manager .",
            "replace building short name with building id .",
            "replace building short name with building full name .",
            "replace building short name with building description .",
            "replace building short name with building address .",
            "replace building short name with building phone .",
            "replace building short name with apartment id .",
            "replace building short name with apartment type code .",
            "replace building short name with apartment number .",
            "replace building short name with bathroom count .",
            "replace building short name with bedroom count .",
            "replace building short name with room count .",
            "replace building short name with facility code .",
            "replace building short name with guest id .",
            "replace building short name with gender code .",
            "replace building short name with guest first name .",
            "replace building short name with guest last name .",
            "replace building short name with date of birth .",
            "replace building short name with apartment booking id .",
            "replace building short name with booking status code .",
            "replace building short name with booking start date .",
            "replace building short name with booking end date .",
            "replace building short name with status date .",
            "replace building short name with available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions . find campuses 's campus in place of county .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ],
            [
                43,
                46
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ],
            [
                47,
                51
            ]
        ],
        "positive_example": "Show campuses ' campuses whose county equals Los Angeles and campuses ' year greater than 1950.",
        "negative_examples": [
            "show id ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show location ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show campus fee ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show degrees ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show discipline ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show undergraduate ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show graduate ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show totalenrollment ay ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show fte ay ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show faculty ' campuses whose county equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose id equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose location equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose campus fee equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose degrees equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose discipline equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose undergraduate equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose graduate equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose totalenrollment ay equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose fte ay equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose faculty equals los angeles and campuses ' year greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' id greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' location greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' campus fee greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' degrees greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' discipline greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' undergraduate greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' graduate greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' totalenrollment ay greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' fte ay greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campuses ' faculty greater than 1950 ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                52
            ]
        ],
        "positive_example": "I want csu fees year and campuses.",
        "negative_examples": [
            "i want csu fees year and id .",
            "i want csu fees year and location .",
            "i want csu fees year and county .",
            "i want csu fees year and campus fee .",
            "i want csu fees year and degrees .",
            "i want csu fees year and discipline .",
            "i want csu fees year and undergraduate .",
            "i want csu fees year and graduate .",
            "i want csu fees year and totalenrollment ay .",
            "i want csu fees year and fte ay .",
            "i want csu fees year and faculty .",
            "i want csu fees id and campuses .",
            "i want csu fees location and campuses .",
            "i want csu fees county and campuses .",
            "i want csu fees campus fee and campuses .",
            "i want csu fees degrees and campuses .",
            "i want csu fees discipline and campuses .",
            "i want csu fees undergraduate and campuses .",
            "i want csu fees graduate and campuses .",
            "i want csu fees totalenrollment ay and campuses .",
            "i want csu fees fte ay and campuses .",
            "i want csu fees faculty and campuses ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find minimum snatch in place of minimum clean jerk .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                9
            ]
        ],
        "positive_example": "Trade clean jerk with snatch .",
        "negative_examples": [
            "trade body builder id with snatch .",
            "trade people id with snatch .",
            "trade total with snatch .",
            "trade name with snatch .",
            "trade height with snatch .",
            "trade weight with snatch .",
            "trade birth date with snatch .",
            "trade birth place with snatch .",
            "trade clean jerk with body builder id .",
            "trade clean jerk with people id .",
            "trade clean jerk with total .",
            "trade clean jerk with name .",
            "trade clean jerk with height .",
            "trade clean jerk with weight .",
            "trade clean jerk with birth date .",
            "trade clean jerk with birth place ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . find hardware model name in place of company name .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                20
            ]
        ],
        "secondary_span": [
            [
                21,
                26
            ]
        ],
        "positive_example": "Replace company name with hardware model name of phone table .",
        "negative_examples": [
            "replace company name with model name of phone table .",
            "replace company name with launch year of phone table .",
            "replace company name with ram mib of phone table .",
            "replace company name with rom mib of phone table .",
            "replace company name with slots of phone table .",
            "replace company name with wifi of phone table .",
            "replace company name with bluetooth of phone table .",
            "replace company name with graphics mode of phone table .",
            "replace company name with char cells of phone table .",
            "replace company name with pixels of phone table .",
            "replace company name with hardware colours of phone table .",
            "replace company name with used kb of phone table .",
            "replace company name with map of phone table .",
            "replace company name with type of phone table .",
            "replace company name with accreditation type of phone table .",
            "replace company name with accreditation level of phone table .",
            "replace company name with date of phone table .",
            "replace company name with chip model of phone table .",
            "replace company name with screen mode of phone table .",
            "replace model name with hardware model name of phone table .",
            "replace launch year with hardware model name of phone table .",
            "replace ram mib with hardware model name of phone table .",
            "replace rom mib with hardware model name of phone table .",
            "replace slots with hardware model name of phone table .",
            "replace wifi with hardware model name of phone table .",
            "replace bluetooth with hardware model name of phone table .",
            "replace graphics mode with hardware model name of phone table .",
            "replace char cells with hardware model name of phone table .",
            "replace pixels with hardware model name of phone table .",
            "replace hardware colours with hardware model name of phone table .",
            "replace used kb with hardware model name of phone table .",
            "replace map with hardware model name of phone table .",
            "replace type with hardware model name of phone table .",
            "replace accreditation type with hardware model name of phone table .",
            "replace accreditation level with hardware model name of phone table .",
            "replace date with hardware model name of phone table .",
            "replace chip model with hardware model name of phone table .",
            "replace screen mode with hardware model name of phone table ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number like Columbus Square conditions . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ],
            [
                34,
                38
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ],
            [
                39,
                45
            ]
        ],
        "positive_example": "I want building short name in place of apartment number.",
        "negative_examples": [
            "i want building id in place of apartment number .",
            "i want building full name in place of apartment number .",
            "i want building description in place of apartment number .",
            "i want building address in place of apartment number .",
            "i want building manager in place of apartment number .",
            "i want building phone in place of apartment number .",
            "i want apartment id in place of apartment number .",
            "i want apartment type code in place of apartment number .",
            "i want apartment number in place of apartment number .",
            "i want bathroom count in place of apartment number .",
            "i want bedroom count in place of apartment number .",
            "i want room count in place of apartment number .",
            "i want facility code in place of apartment number .",
            "i want guest id in place of apartment number .",
            "i want gender code in place of apartment number .",
            "i want guest first name in place of apartment number .",
            "i want guest last name in place of apartment number .",
            "i want date of birth in place of apartment number .",
            "i want apartment booking id in place of apartment number .",
            "i want booking status code in place of apartment number .",
            "i want booking start date in place of apartment number .",
            "i want booking end date in place of apartment number .",
            "i want status date in place of apartment number .",
            "i want available yes or no in place of apartment number ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally find minimum bathroom count .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [],
        "positive_example": "Replace first maximum with minimum bathroom count .",
        "negative_examples": [
            "replace first maximum with minimum building id .",
            "replace first maximum with minimum building short name .",
            "replace first maximum with minimum building full name .",
            "replace first maximum with minimum building description .",
            "replace first maximum with minimum building address .",
            "replace first maximum with minimum building manager .",
            "replace first maximum with minimum building phone .",
            "replace first maximum with minimum apartment id .",
            "replace first maximum with minimum apartment type code .",
            "replace first maximum with minimum apartment number .",
            "replace first maximum with minimum bedroom count .",
            "replace first maximum with minimum room count .",
            "replace first maximum with minimum facility code .",
            "replace first maximum with minimum guest id .",
            "replace first maximum with minimum gender code .",
            "replace first maximum with minimum guest first name .",
            "replace first maximum with minimum guest last name .",
            "replace first maximum with minimum date of birth .",
            "replace first maximum with minimum apartment booking id .",
            "replace first maximum with minimum booking status code .",
            "replace first maximum with minimum booking start date .",
            "replace first maximum with minimum booking end date .",
            "replace first maximum with minimum status date .",
            "replace first maximum with minimum available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 or max page size equals A4 conditions in place of the dpi less than 5 or dpi less than A4 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "Need to supplant dpi with pages per minute color and dpi less than with max page size equals A 4.",
        "negative_examples": [
            "need to supplant dpi with product id and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with product and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with dimensions and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with interface and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with store id and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with store name and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with type and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with area size and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with number of product category and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with ranking and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with district id and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with district name and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with headquartered city and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with city population and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with city area and dpi less than with max page size equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with product id equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with product equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with dimensions equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with interface equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with store id equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with store name equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with type equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with area size equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with number of product category equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with ranking equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with district id equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with district name equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with headquartered city equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with city population equals a 4 .",
            "need to supplant dpi with pages per minute color and dpi less than with city area equals a 4 .",
            "need to supplant product id with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant product with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant dimensions with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant interface with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant store id with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant store name with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant type with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant area size with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant number of product category with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant ranking with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant district id with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant district name with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant headquartered city with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant city population with pages per minute color and dpi less than with max page size equals a 4 .",
            "need to supplant city area with pages per minute color and dpi less than with max page size equals a 4 ."
        ],
        "neg_len": 45
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of csu fees table , campuses table , and discipline enrollments table in step 2 , find for each value of degrees 's year in place of csu fees 's year . in step 3 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average undergraduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                25,
                32
            ],
            [
                45,
                48
            ],
            [
                57,
                63
            ]
        ],
        "secondary_span": [
            [
                7,
                20
            ],
            [
                33,
                40
            ],
            [
                49,
                56
            ],
            [
                64,
                69
            ]
        ],
        "positive_example": "Find year of degrees table whose value of degrees is largest .",
        "negative_examples": [
            "find year of campuses table whose value of degrees is largest .",
            "find year of csu fees table whose value of degrees is largest .",
            "find year of discipline enrollments table whose value of degrees is largest .",
            "find year of enrollments table whose value of degrees is largest .",
            "find year of faculty table whose value of degrees is largest .",
            "find year of id table whose value of degrees is largest .",
            "find year of campus table whose value of degrees is largest .",
            "find year of location table whose value of degrees is largest .",
            "find year of county table whose value of degrees is largest .",
            "find year of year table whose value of degrees is largest .",
            "find year of campus fee table whose value of degrees is largest .",
            "find year of discipline table whose value of degrees is largest .",
            "find year of undergraduate table whose value of degrees is largest .",
            "find year of graduate table whose value of degrees is largest .",
            "find year of totalenrollment ay table whose value of degrees is largest .",
            "find year of fte ay table whose value of degrees is largest ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the phone table besides the chip model table . find hardware model name in place of model name .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                17
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                18,
                23
            ]
        ],
        "positive_example": "Use hardware model name from phone table in place of model name from chip model table.",
        "negative_examples": [
            "use hardware model name from slots table in place of model name from chip slots .",
            "use rom mib from phone table in place of model name from chip model table .",
            "use ram mib from screen mode table in place of model name from chip model table .",
            "use slots from chip model table in place of model name from chip model table .",
            "use hardware model name from pixels table in place of model name from chip pixels .",
            "use slots from phone table in place of model name from chip model table .",
            "use graphics mode from chip model table in place of model name from chip model table .",
            "use ram mib from chip model table in place of model name from chip model table .",
            "use char cells from phone table in place of model name from chip model table .",
            "use used kb from screen mode table in place of model name from chip model table .",
            "use company name from screen mode table in place of model name from chip model table .",
            "use type from phone table in place of model name from chip model table .",
            "use hardware model name from graphics mode table in place of model name from chip graphics mode .",
            "use used kb from chip model table in place of model name from chip model table .",
            "use wifi from chip model table in place of model name from chip model table .",
            "use hardware model name from hardware colours table in place of model name from chip hardware colours .",
            "use hardware model name from pixels table in place of model name from chip model table .",
            "use hardware model name from char cells table in place of model name from chip model table .",
            "use hardware model name from used kb table in place of model name from chip used kb .",
            "use hardware model name from rom mib table in place of model name from chip model table .",
            "use accreditation level from screen mode table in place of model name from chip model table .",
            "use hardware model name from rom mib table in place of model name from chip rom mib .",
            "use date from screen mode table in place of model name from chip model table .",
            "use model name from screen mode table in place of model name from chip model table .",
            "use accreditation type from phone table in place of model name from chip model table .",
            "use hardware model name from date table in place of model name from chip date .",
            "use char cells from chip model table in place of model name from chip model table .",
            "use hardware model name from accreditation level table in place of model name from chip accreditation level .",
            "use hardware model name from launch year table in place of model name from chip launch year .",
            "use map from phone table in place of model name from chip model table .",
            "use chip model from phone table in place of model name from chip model table .",
            "use used kb from phone table in place of model name from chip model table .",
            "use hardware model name from type table in place of model name from chip model table .",
            "use date from phone table in place of model name from chip model table .",
            "use hardware model name from map table in place of model name from chip map .",
            "use hardware model name from chip model table in place of model name from chip model table .",
            "use accreditation level from chip model table in place of model name from chip model table .",
            "use map from chip model table in place of model name from chip model table .",
            "use hardware model name from hardware colours table in place of model name from chip model table .",
            "use hardware model name from accreditation type table in place of model name from chip model table .",
            "use hardware model name from screen mode table in place of model name from chip model table .",
            "use slots from screen mode table in place of model name from chip model table .",
            "use hardware model name from company name table in place of model name from chip model table .",
            "use wifi from screen mode table in place of model name from chip model table .",
            "use hardware model name from screen mode table in place of model name from chip screen mode .",
            "use hardware model name from wifi table in place of model name from chip wifi .",
            "use bluetooth from phone table in place of model name from chip model table .",
            "use graphics mode from screen mode table in place of model name from chip model table .",
            "use date from chip model table in place of model name from chip model table .",
            "use char cells from screen mode table in place of model name from chip model table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "remove the year equals 1996 conditions .",
        "primary_span": [
            [
                0,
                6
            ]
        ],
        "secondary_span": [],
        "positive_example": "Discard \"and year equals 1996\" phrase .",
        "negative_examples": [
            "discard \" and id equals 1996 \" phrase .",
            "discard \" and campus equals 1996 \" phrase .",
            "discard \" and location equals 1996 \" phrase .",
            "discard \" and county equals 1996 \" phrase .",
            "discard \" and campus fee equals 1996 \" phrase .",
            "discard \" and degrees equals 1996 \" phrase .",
            "discard \" and discipline equals 1996 \" phrase .",
            "discard \" and undergraduate equals 1996 \" phrase .",
            "discard \" and graduate equals 1996 \" phrase .",
            "discard \" and totalenrollment ay equals 1996 \" phrase .",
            "discard \" and fte ay equals 1996 \" phrase .",
            "discard \" and faculty equals 1996 \" phrase ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the csu fees 's year equals 1996 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                44
            ]
        ],
        "positive_example": "You need to find year of csu fee of CSU campus and delete the phrase \"csu fees's year equals 1996\".",
        "negative_examples": [
            "you need to find id of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find campus of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find location of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find county of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find campus fee of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find degrees of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find discipline of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find undergraduate of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find graduate of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find totalenrollment ay of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find fte ay of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" .",
            "you need to find faculty of csu fee of csu campus and delete the phrase \" csu fees 's year equals 1996 \" ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the company name equals Graphics and type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "Need to confirm that company name equals Nokia Corporation or type equals Graphics .",
        "negative_examples": [
            "need to confirm that model name equals nokia corporation or type equals graphics .",
            "need to confirm that launch year equals nokia corporation or type equals graphics .",
            "need to confirm that ram mib equals nokia corporation or type equals graphics .",
            "need to confirm that rom mib equals nokia corporation or type equals graphics .",
            "need to confirm that slots equals nokia corporation or type equals graphics .",
            "need to confirm that wifi equals nokia corporation or type equals graphics .",
            "need to confirm that bluetooth equals nokia corporation or type equals graphics .",
            "need to confirm that graphics mode equals nokia corporation or type equals graphics .",
            "need to confirm that char cells equals nokia corporation or type equals graphics .",
            "need to confirm that pixels equals nokia corporation or type equals graphics .",
            "need to confirm that hardware colours equals nokia corporation or type equals graphics .",
            "need to confirm that used kb equals nokia corporation or type equals graphics .",
            "need to confirm that map equals nokia corporation or type equals graphics .",
            "need to confirm that hardware model name equals nokia corporation or type equals graphics .",
            "need to confirm that accreditation type equals nokia corporation or type equals graphics .",
            "need to confirm that accreditation level equals nokia corporation or type equals graphics .",
            "need to confirm that date equals nokia corporation or type equals graphics .",
            "need to confirm that chip model equals nokia corporation or type equals graphics .",
            "need to confirm that screen mode equals nokia corporation or type equals graphics .",
            "need to confirm that company name equals nokia corporation or model name equals graphics .",
            "need to confirm that company name equals nokia corporation or launch year equals graphics .",
            "need to confirm that company name equals nokia corporation or ram mib equals graphics .",
            "need to confirm that company name equals nokia corporation or rom mib equals graphics .",
            "need to confirm that company name equals nokia corporation or slots equals graphics .",
            "need to confirm that company name equals nokia corporation or wifi equals graphics .",
            "need to confirm that company name equals nokia corporation or bluetooth equals graphics .",
            "need to confirm that company name equals nokia corporation or graphics mode equals graphics .",
            "need to confirm that company name equals nokia corporation or char cells equals graphics .",
            "need to confirm that company name equals nokia corporation or pixels equals graphics .",
            "need to confirm that company name equals nokia corporation or hardware colours equals graphics .",
            "need to confirm that company name equals nokia corporation or used kb equals graphics .",
            "need to confirm that company name equals nokia corporation or map equals graphics .",
            "need to confirm that company name equals nokia corporation or hardware model name equals graphics .",
            "need to confirm that company name equals nokia corporation or accreditation type equals graphics .",
            "need to confirm that company name equals nokia corporation or accreditation level equals graphics .",
            "need to confirm that company name equals nokia corporation or date equals graphics .",
            "need to confirm that company name equals nokia corporation or chip model equals graphics .",
            "need to confirm that company name equals nokia corporation or screen mode equals graphics ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 2 , find for each value of degrees 's year in place of discipline enrollments 's year . in step 3 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                26
            ],
            [
                39,
                42
            ],
            [
                51,
                57
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                27,
                34
            ],
            [
                43,
                50
            ],
            [
                58,
                63
            ]
        ],
        "positive_example": "You should use degrees in place of discipline enrollments in step 2 and 3. Also, do not look for average in step 2.",
        "negative_examples": [
            "you should use degrees in place of graduate in step 2 and 3. also , do not look for average in step 2 .",
            "you should use graduate in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of campus fee in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of year in step 2 and 3. also , do not look for average in step 2 .",
            "you should use campus fee in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use undergraduate in place of enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use location in place of faculty in step 2 and 3. also , do not look for average in step 2 .",
            "you should use totalenrollment ay in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use discipline in place of csu fees in step 2 and 3. also , do not look for average in step 2 .",
            "you should use graduate in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use undergraduate in place of csu fees in step 2 and 3. also , do not look for average in step 2 .",
            "you should use csu fees in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of csu fees in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of totalenrollment ay in step 2 and 3. also , do not look for average in step 2 .",
            "you should use campus fee in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use year in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use county in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use graduate in place of csu fees in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of location in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of faculty in step 2 and 3. also , do not look for average in step 2 .",
            "you should use location in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use graduate in place of enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use campus in place of enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use id in place of csu fees in step 2 and 3. also , do not look for average in step 2 .",
            "you should use campus in place of faculty in step 2 and 3. also , do not look for average in step 2 .",
            "you should use county in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use enrollments in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use campus in place of csu fees in step 2 and 3. also , do not look for average in step 2 .",
            "you should use discipline in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use faculty in place of enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of discipline in step 2 and 3. also , do not look for average in step 2 .",
            "you should use id in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use totalenrollment ay in place of faculty in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of fte ay in step 2 and 3. also , do not look for average in step 2 .",
            "you should use totalenrollment ay in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use discipline in place of faculty in step 2 and 3. also , do not look for average in step 2 .",
            "you should use id in place of enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use fte ay in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of county in step 2 and 3. also , do not look for average in step 2 .",
            "you should use fte ay in place of csu fees in step 2 and 3. also , do not look for average in step 2 .",
            "you should use fte ay in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use campus fee in place of enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use id in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use campus fee in place of faculty in step 2 and 3. also , do not look for average in step 2 .",
            "you should use faculty in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use degrees in place of campuses in step 2 and 3. also , do not look for average in step 2 .",
            "you should use id in place of faculty in step 2 and 3. also , do not look for average in step 2 .",
            "you should use location in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use discipline in place of discipline enrollments in step 2 and 3. also , do not look for average in step 2 .",
            "you should use faculty in place of campuses in step 2 and 3. also , do not look for average in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use accounts table in place of orders table . find account name , account id , date account opened , and other account details in place of order id , order details , and date order placed .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                23
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                24,
                37
            ]
        ],
        "positive_example": "Replace order id with account id , date order placed with date account opened , order details with other account details , orders with accounts , find account name .",
        "negative_examples": [
            "replace order id with account id , date order placed with date account opened , order details with other account details , orders with product categories , find transaction amount .",
            "replace order id with account id , date order placed with date account opened , product price with other account details , invoice line items with accounts , find account name .",
            "replace order id with account id , product id with date account opened , order details with other account details , orders with products , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with derived product cost , orders with financial transactions , find account name .",
            "replace order id with transaction id , date order placed with date account opened , order details with other account details , orders with invoices , find account name .",
            "replace order id with account id , country with date account opened , order details with other account details , orders with financial transactions , find account name .",
            "replace order id with account id , transaction type with date account opened , order details with other account details , orders with invoice line items , find account name .",
            "replace order id with account id , transaction id with date account opened , order details with other account details , financial transactions with accounts , find account name .",
            "replace order item id with account id , date order placed with date account opened , order details with other account details , financial transactions with accounts , find account name .",
            "replace order id with order item id , date order placed with date account opened , order details with other account details , invoice line items with accounts , find account name .",
            "replace order id with account id , transaction comment with date account opened , order details with other account details , orders with products , find account name .",
            "replace order id with derived total cost , date order placed with date account opened , order details with other account details , product categories with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with product name , product categories with accounts , find account name .",
            "replace parent product id with account id , date order placed with date account opened , order details with other account details , invoices with accounts , find account name .",
            "replace order id with phone number , date order placed with date account opened , order details with other account details , orders with order items , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , product categories with accounts , find invoice date .",
            "replace order id with state county province , date order placed with date account opened , order details with other account details , products with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , product categories with accounts , find parent product id .",
            "replace order id with account id , date order placed with date account opened , transaction comment with other account details , products with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with transaction id , orders with customers , find account name .",
            "replace order id with account id , date order placed with order item id , order details with other account details , orders with customers , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , invoice line items with accounts , find product size .",
            "replace transaction date with account id , date order placed with date account opened , order details with other account details , customers with accounts , find account name .",
            "replace order id with account id , date order placed with country , order details with other account details , orders with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , orders with invoices , find production type code .",
            "replace order id with account id , date order placed with date account opened , product price with other account details , order items with accounts , find account name .",
            "replace product size with account id , date order placed with date account opened , order details with other account details , financial transactions with accounts , find account name .",
            "replace order id with unit price , date order placed with date account opened , order details with other account details , orders with order items , find account name .",
            "replace parent product id with account id , date order placed with date account opened , order details with other account details , orders with product categories , find account name .",
            "replace order id with account id , date order placed with date account opened , product id with other account details , financial transactions with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , login password with other account details , customers with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , orders with products , find product title .",
            "replace order id with unit price , date order placed with date account opened , order details with other account details , product categories with accounts , find account name .",
            "replace order id with account id , date order placed with country , order details with other account details , orders with order items , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , orders with customers , find unit price .",
            "replace transaction amount with account id , date order placed with date account opened , order details with other account details , orders with products , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , orders with accounts , find other transaction details .",
            "replace order id with account id , date order placed with date account opened , order details with gender , orders with accounts , find account name .",
            "replace order id with account id , customer last name with date account opened , order details with other account details , product categories with accounts , find account name .",
            "replace order id with account id , date order placed with product type description , order details with other account details , orders with financial transactions , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , orders with financial transactions , find unit price .",
            "replace order id with account id , date order placed with date account opened , transaction date with other account details , customers with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , orders with invoices , find country .",
            "replace login name with account id , date order placed with date account opened , order details with other account details , orders with products , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , products with accounts , find derived total cost .",
            "replace order id with account id , date order placed with date account opened , login name with other account details , orders with accounts , find account name .",
            "replace order id with town city , date order placed with date account opened , order details with other account details , financial transactions with accounts , find account name .",
            "replace transaction type with account id , date order placed with date account opened , order details with other account details , product categories with accounts , find account name .",
            "replace order id with account id , date order placed with date account opened , order details with other account details , invoices with accounts , find town city .",
            "replace order id with account id , date order placed with transaction id , order details with other account details , invoice line items with accounts , find account name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the chip model table besides the phone table . find average rom mib in place of average screen mode .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                17
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                18,
                24
            ]
        ],
        "positive_example": "Replace screen mode in phone table with rom mib in chip model table .",
        "negative_examples": [
            "replace hardware colours in phone table with rom mib in phone table .",
            "replace phone in phone table with char cells in chip model table .",
            "replace screen mode in phone table with company name in phone table .",
            "replace phone in phone table with type in chip model table .",
            "replace phone in phone table with rom mib in hardware model name table .",
            "replace phone in phone table with rom mib in model name table .",
            "replace screen mode in phone table with bluetooth in phone table .",
            "replace screen mode in phone table with rom mib in used kb table .",
            "replace screen mode in phone table with launch year in phone table .",
            "replace slots in phone table with rom mib in chip model table .",
            "replace screen mode in phone table with rom mib in ram mib table .",
            "replace screen mode in phone table with bluetooth in chip model table .",
            "replace char cells in phone table with rom mib in phone table .",
            "replace screen mode in phone table with map in chip model table .",
            "replace wifi in phone table with rom mib in chip model table .",
            "replace screen mode in phone table with rom mib in bluetooth table .",
            "replace accreditation level in phone table with rom mib in phone table .",
            "replace screen mode in phone table with rom mib in model name table .",
            "replace screen mode in phone table with ram mib in chip model table .",
            "replace phone in phone table with rom mib in ram mib table .",
            "replace phone in phone table with graphics mode in chip model table .",
            "replace screen mode in phone table with rom mib in phone table .",
            "replace screen mode in phone table with pixels in chip model table .",
            "replace phone in phone table with ram mib in chip model table .",
            "replace screen mode in phone table with pixels in phone table .",
            "replace graphics mode in phone table with rom mib in phone table .",
            "replace screen mode in phone table with model name in chip model table .",
            "replace screen mode in phone table with date in phone table .",
            "replace screen mode in phone table with accreditation type in phone table .",
            "replace screen mode in phone table with graphics mode in chip model table .",
            "replace model name in phone table with rom mib in phone table .",
            "replace screen mode in phone table with rom mib in pixels table .",
            "replace screen mode in phone table with ram mib in phone table .",
            "replace screen mode in phone table with rom mib in hardware colours table .",
            "replace phone in phone table with bluetooth in chip model table .",
            "replace screen mode in phone table with map in phone table .",
            "replace hardware colours in phone table with rom mib in chip model table .",
            "replace type in phone table with rom mib in phone table .",
            "replace phone in phone table with accreditation type in chip model table .",
            "replace screen mode in phone table with hardware colours in chip model table .",
            "replace model name in phone table with rom mib in chip model table .",
            "replace phone in phone table with rom mib in accreditation type table .",
            "replace screen mode in phone table with rom mib in graphics mode table .",
            "replace screen mode in phone table with rom mib in hardware model name table .",
            "replace phone in phone table with pixels in chip model table .",
            "replace screen mode in phone table with graphics mode in phone table .",
            "replace screen mode in phone table with wifi in phone table .",
            "replace phone in phone table with rom mib in graphics mode table .",
            "replace phone in phone table with rom mib in company name table .",
            "replace ram mib in phone table with rom mib in chip model table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use accounts table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Need to replace customers table with accounts table .",
        "negative_examples": [
            "need to replace orders table with accounts table .",
            "need to replace invoices table with accounts table .",
            "need to replace product categories table with accounts table .",
            "need to replace products table with accounts table .",
            "need to replace financial transactions table with accounts table .",
            "need to replace order items table with accounts table .",
            "need to replace invoice line items table with accounts table .",
            "need to replace customers table with orders table .",
            "need to replace customers table with invoices table .",
            "need to replace customers table with product categories table .",
            "need to replace customers table with products table .",
            "need to replace customers table with financial transactions table .",
            "need to replace customers table with order items table .",
            "need to replace customers table with invoice line items table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 or max page size equals A4 conditions in place of the dpi less than 5 or dpi less than A4 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "Use pages per minute color and max page size is correlate to A 4.",
        "negative_examples": [
            "use product id and max page size is correlate to a 4 .",
            "use product and max page size is correlate to a 4 .",
            "use dimensions and max page size is correlate to a 4 .",
            "use dpi and max page size is correlate to a 4 .",
            "use interface and max page size is correlate to a 4 .",
            "use store id and max page size is correlate to a 4 .",
            "use store name and max page size is correlate to a 4 .",
            "use type and max page size is correlate to a 4 .",
            "use area size and max page size is correlate to a 4 .",
            "use number of product category and max page size is correlate to a 4 .",
            "use ranking and max page size is correlate to a 4 .",
            "use district id and max page size is correlate to a 4 .",
            "use district name and max page size is correlate to a 4 .",
            "use headquartered city and max page size is correlate to a 4 .",
            "use city population and max page size is correlate to a 4 .",
            "use city area and max page size is correlate to a 4 .",
            "use pages per minute color and product id is correlate to a 4 .",
            "use pages per minute color and product is correlate to a 4 .",
            "use pages per minute color and dimensions is correlate to a 4 .",
            "use pages per minute color and dpi is correlate to a 4 .",
            "use pages per minute color and interface is correlate to a 4 .",
            "use pages per minute color and store id is correlate to a 4 .",
            "use pages per minute color and store name is correlate to a 4 .",
            "use pages per minute color and type is correlate to a 4 .",
            "use pages per minute color and area size is correlate to a 4 .",
            "use pages per minute color and number of product category is correlate to a 4 .",
            "use pages per minute color and ranking is correlate to a 4 .",
            "use pages per minute color and district id is correlate to a 4 .",
            "use pages per minute color and district name is correlate to a 4 .",
            "use pages per minute color and headquartered city is correlate to a 4 .",
            "use pages per minute color and city population is correlate to a 4 .",
            "use pages per minute color and city area is correlate to a 4 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , use apartment buildings table in place of apartment bookings table and guests table in step 2 , consider the building manager equals Kyle conditions in place of the guest first name equals Kyle conditions .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                21,
                27
            ]
        ],
        "secondary_span": [
            [
                8,
                16
            ],
            [
                28,
                38
            ]
        ],
        "positive_example": "I want the apartment buildings table with their building managers.",
        "negative_examples": [
            "i want the apartment buildings table with their building id .",
            "i want the apartment buildings table with their building short name .",
            "i want the apartment buildings table with their building full name .",
            "i want the apartment buildings table with their building description .",
            "i want the apartment buildings table with their building address .",
            "i want the apartment buildings table with their building phone .",
            "i want the apartment buildings table with their apartment id .",
            "i want the apartment buildings table with their apartment type code .",
            "i want the apartment buildings table with their apartment number .",
            "i want the apartment buildings table with their bathroom count .",
            "i want the apartment buildings table with their bedroom count .",
            "i want the apartment buildings table with their room count .",
            "i want the apartment buildings table with their facility code .",
            "i want the apartment buildings table with their guest id .",
            "i want the apartment buildings table with their gender code .",
            "i want the apartment buildings table with their guest first name .",
            "i want the apartment buildings table with their guest last name .",
            "i want the apartment buildings table with their date of birth .",
            "i want the apartment buildings table with their apartment booking id .",
            "i want the apartment buildings table with their booking status code .",
            "i want the apartment buildings table with their booking start date .",
            "i want the apartment buildings table with their booking end date .",
            "i want the apartment buildings table with their status date .",
            "i want the apartment buildings table with their available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use rating table in place of movie table . additionally make sure that rating stars greater than 3 .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                18
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "In ratings table, find the number of rows of having rating date 3 or more.",
        "negative_examples": [
            "in movie table , find the number of rows of having rating date 3 or more .",
            "in reviewer table , find the number of rows of having rating date 3 or more ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the csu fees table and campuses table . in step 2 , find for each value of degrees 's year in place of csu fees 's year . in step 3 , find degrees 's year in place of csu fees 's year . order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                26
            ],
            [
                39,
                42
            ],
            [
                51,
                57
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                27,
                34
            ],
            [
                43,
                50
            ],
            [
                58,
                63
            ]
        ],
        "positive_example": "In step 2 no need to find average value of degrees .",
        "negative_examples": [
            "in step 2 no need to find average value of campuses .",
            "in step 2 no need to find average value of csu fees .",
            "in step 2 no need to find average value of discipline enrollments .",
            "in step 2 no need to find average value of enrollments .",
            "in step 2 no need to find average value of faculty .",
            "in step 2 no need to find average value of id .",
            "in step 2 no need to find average value of campus .",
            "in step 2 no need to find average value of location .",
            "in step 2 no need to find average value of county .",
            "in step 2 no need to find average value of year .",
            "in step 2 no need to find average value of campus fee .",
            "in step 2 no need to find average value of discipline .",
            "in step 2 no need to find average value of undergraduate .",
            "in step 2 no need to find average value of graduate .",
            "in step 2 no need to find average value of totalenrollment ay .",
            "in step 2 no need to find average value of fte ay ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the addresses table besides the customers table . consider the city equals Lockmanfurt conditions in place of the email address equals Lockmanfurt conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                18
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                19,
                28
            ]
        ],
        "positive_example": "Need to replace email address with Addresses's city .",
        "negative_examples": [
            "need to replace datetime payment with lessons 's city .",
            "need to replace amount payment with lessons 's city .",
            "need to replace date left staff with lessons 's city .",
            "need to replace customer status code with lessons 's city .",
            "need to replace staff id with customers 's city .",
            "need to replace email address with addresses 's customer status code .",
            "need to replace email address with staff 's customer id .",
            "need to replace customer status code with customers 's city .",
            "need to replace email address with staff 's date left staff .",
            "need to replace email address with lessons 's zip postcode .",
            "need to replace middle name with staff 's city .",
            "need to replace email address with customers 's line 1 number building .",
            "need to replace date joined staff with staff 's city .",
            "need to replace email address with staff 's zip postcode .",
            "need to replace staff address id with staff 's city .",
            "need to replace email address with vehicles 's price .",
            "need to replace email address with lessons 's price .",
            "need to replace email address with staff 's city .",
            "need to replace payment method code with customers 's city .",
            "need to replace email address with staff 's first name .",
            "need to replace email address with addresses 's customer address id .",
            "need to replace email address with addresses 's payment method code .",
            "need to replace lesson status code with addresses 's city .",
            "need to replace country with staff 's city .",
            "need to replace email address with customer payments 's vehicle details .",
            "need to replace date became customer with staff 's city .",
            "need to replace amount payment with customers 's city .",
            "need to replace address id with vehicles 's city .",
            "need to replace lesson id with customers 's city .",
            "need to replace zip postcode with staff 's city .",
            "need to replace lesson time with staff 's city .",
            "need to replace staff address id with vehicles 's city .",
            "need to replace email address with vehicles 's middle name .",
            "need to replace email address with lessons 's last name .",
            "need to replace email address with addresses 's date joined staff .",
            "need to replace date of birth with customer payments 's city .",
            "need to replace lesson status code with lessons 's city .",
            "need to replace datetime payment with vehicles 's city .",
            "need to replace datetime payment with staff 's city .",
            "need to replace email address with staff 's date became customer .",
            "need to replace email address with vehicles 's amount payment .",
            "need to replace cell mobile phone number with lessons 's city .",
            "need to replace vehicle id with addresses 's city .",
            "need to replace address id with staff 's city .",
            "need to replace email address with customers 's state province county .",
            "need to replace datetime payment with addresses 's city .",
            "need to replace email address with customer payments 's amount outstanding .",
            "need to replace email address with customers 's phone number .",
            "need to replace state province county with customers 's city .",
            "need to replace customer id with vehicles 's city ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use staff table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Make sure Staff table is used in place of address table.",
        "negative_examples": [
            "make sure staff table is used in place of vehicles table .",
            "make sure staff table is used in place of customers table .",
            "make sure staff table is used in place of customer payments table .",
            "make sure staff table is used in place of lessons table .",
            "make sure vehicles table is used in place of address table .",
            "make sure customers table is used in place of address table .",
            "make sure customer payments table is used in place of address table .",
            "make sure lessons table is used in place of address table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building address equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "Change bathroom count with bedroom count , remove\"building address equals Columbus Square\" , ensure that building short name equals Columbus Square .",
        "negative_examples": [
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that available yes or no equals columbus square .",
            "change bathroom count with bedroom count , remove \" gender code equals columbus square \" , ensure that building short name equals columbus square .",
            "change guest last name with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" guest first name equals columbus square \" , ensure that building short name equals columbus square .",
            "change available yes or no with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building phone equals columbus square \" , ensure that building short name equals columbus square .",
            "change building phone with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building description equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" status date equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that booking end date equals columbus square .",
            "change bathroom count with bedroom count , remove \" guest last name equals columbus square \" , ensure that building short name equals columbus square .",
            "change building description with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that status date equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that bedroom count equals columbus square .",
            "change bathroom count with bedroom count , remove \" apartment type code equals columbus square \" , ensure that building short name equals columbus square .",
            "change guest first name with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that building description equals columbus square .",
            "change apartment number with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" booking end date equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that room count equals columbus square .",
            "change apartment type code with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that apartment type code equals columbus square .",
            "change bathroom count with bedroom count , remove \" guest id equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that apartment id equals columbus square .",
            "change booking status code with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change room count with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bedroom count with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that building phone equals columbus square .",
            "change gender code with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change booking start date with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change status date with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that guest last name equals columbus square .",
            "change apartment booking id with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that booking status code equals columbus square .",
            "change bathroom count with bedroom count , remove \" apartment id equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that guest first name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building manager equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building id equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that apartment number equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that building manager equals columbus square .",
            "change building id with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that building id equals columbus square .",
            "change date of birth with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change building full name with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that guest id equals columbus square .",
            "change guest id with bedroom count , remove \" building address equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" available yes or no equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building address equals columbus square \" , ensure that building full name equals columbus square .",
            "change bathroom count with bedroom count , remove \" facility code equals columbus square \" , ensure that building short name equals columbus square .",
            "change bathroom count with bedroom count , remove \" building full name equals columbus square \" , ensure that building short name equals columbus square ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2005 and faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "Change faculty 's with csu fees ' , remove \"and faculty equals 357. 1\".",
        "negative_examples": [
            "change campuses 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change csu fees 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change degrees 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change discipline enrollments 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change enrollments 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change id 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change campus 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change location 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change county 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change year 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change campus fee 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change discipline 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change undergraduate 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change graduate 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change totalenrollment ay 's with csu fees ' , remove \" and faculty equals 357 . 1 \" .",
            "change fte ay 's with csu fees ' , remove \" and faculty equals 357 . 1 \" ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2, Ignore the phrase \"and faculty's year equals 2002\"",
        "negative_examples": [
            "in step 2 , ignore the phrase \" and csu fees 's county equals 2002 \"",
            "in step 2 , ignore the phrase \" and csu fees 's degrees equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's campus fee equals 2002 \"",
            "in step 2 , ignore the phrase \" and location 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and undergraduate 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's graduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's campus equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's fte ay equals 2002 \"",
            "in step 2 , ignore the phrase \" and discipline enrollments 's campus fee equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's county equals 2002 \"",
            "in step 2 , ignore the phrase \" and id 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and degrees 's county equals 2002 \"",
            "in step 2 , ignore the phrase \" and degrees 's undergraduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and county 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's campus fee equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's county equals 2002 \"",
            "in step 2 , ignore the phrase \" and degrees 's campus equals 2002 \"",
            "in step 2 , ignore the phrase \" and csu fees 's campus fee equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's totalenrollment ay equals 2002 \"",
            "in step 2 , ignore the phrase \" and discipline enrollments 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and degrees 's id equals 2002 \"",
            "in step 2 , ignore the phrase \" and degrees 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's graduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's discipline equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's undergraduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's campus fee equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's undergraduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and discipline enrollments 's degrees equals 2002 \"",
            "in step 2 , ignore the phrase \" and discipline enrollments 's location equals 2002 \"",
            "in step 2 , ignore the phrase \" and discipline enrollments 's totalenrollment ay equals 2002 \"",
            "in step 2 , ignore the phrase \" and degrees 's graduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's id equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's undergraduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's totalenrollment ay equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's id equals 2002 \"",
            "in step 2 , ignore the phrase \" and discipline enrollments 's id equals 2002 \"",
            "in step 2 , ignore the phrase \" and enrollments 's campus equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's degrees equals 2002 \"",
            "in step 2 , ignore the phrase \" and csu fees 's id equals 2002 \"",
            "in step 2 , ignore the phrase \" and csu fees 's graduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's location equals 2002 \"",
            "in step 2 , ignore the phrase \" and csu fees 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and fte ay 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and totalenrollment ay 's year equals 2002 \"",
            "in step 2 , ignore the phrase \" and csu fees 's totalenrollment ay equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's id equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's fte ay equals 2002 \"",
            "in step 2 , ignore the phrase \" and campuses 's graduate equals 2002 \"",
            "in step 2 , ignore the phrase \" and faculty 's location equals 2002 \""
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , use apartment buildings table in place of apartment bookings table and guests table in step 2 , consider the building manager equals Kyle conditions in place of the guest first name equals Kyle conditions .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                21,
                27
            ]
        ],
        "secondary_span": [
            [
                8,
                16
            ],
            [
                28,
                38
            ]
        ],
        "positive_example": "In step 1 instead of Guest table use apartment buildings table , exchange building full name with available yes or no in step 2",
        "negative_examples": [
            "in step 1 instead of apartment buildings table use apartment buildings table , exchange building full name with available yes or no in step 2",
            "in step 1 instead of apartments table use apartment buildings table , exchange building full name with available yes or no in step 2",
            "in step 1 instead of apartment facilities table use apartment buildings table , exchange building full name with available yes or no in step 2",
            "in step 1 instead of apartment bookings table use apartment buildings table , exchange building full name with available yes or no in step 2",
            "in step 1 instead of view unit status table use apartment buildings table , exchange building full name with available yes or no in step 2"
        ],
        "neg_len": 5
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the store name equals Blackville conditions in place of the district name equals Blackville conditions . find headquartered city in place of city population .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                23
            ],
            [
                34,
                36
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                24,
                33
            ],
            [
                37,
                42
            ]
        ],
        "positive_example": "Use headquartered city instead of city population and store name instead of district name",
        "negative_examples": [
            "use pages per minute color instead of city population and store name instead of district name",
            "use headquartered city instead of city population and ranking instead of district name",
            "use headquartered city instead of number of product category and store name instead of district name",
            "use headquartered city instead of city population and city area instead of district name",
            "use store id instead of city population and store name instead of district name",
            "use headquartered city instead of city population and store name instead of type",
            "use dpi instead of city population and store name instead of district name",
            "use headquartered city instead of city population and store name instead of ranking",
            "use headquartered city instead of max page size and store name instead of district name",
            "use headquartered city instead of type and store name instead of district name",
            "use headquartered city instead of product and store name instead of district name",
            "use max page size instead of city population and store name instead of district name",
            "use headquartered city instead of ranking and store name instead of district name",
            "use headquartered city instead of city population and dpi instead of district name",
            "use product instead of city population and store name instead of district name",
            "use headquartered city instead of city population and dimensions instead of district name",
            "use headquartered city instead of district id and store name instead of district name",
            "use headquartered city instead of city population and max page size instead of district name",
            "use headquartered city instead of area size and store name instead of district name",
            "use headquartered city instead of city population and type instead of district name",
            "use dimensions instead of city population and store name instead of district name",
            "use headquartered city instead of city area and store name instead of district name",
            "use ranking instead of city population and store name instead of district name",
            "use headquartered city instead of city population and store name instead of city area",
            "use headquartered city instead of city population and store name instead of dpi",
            "use headquartered city instead of city population and number of product category instead of district name",
            "use headquartered city instead of city population and store name instead of product id",
            "use headquartered city instead of city population and store name instead of number of product category",
            "use headquartered city instead of city population and store id instead of district name",
            "use headquartered city instead of city population and area size instead of district name",
            "use headquartered city instead of city population and store name instead of area size",
            "use headquartered city instead of dimensions and store name instead of district name",
            "use headquartered city instead of city population and store name instead of dimensions",
            "use headquartered city instead of city population and store name instead of district id",
            "use headquartered city instead of city population and store name instead of pages per minute color",
            "use number of product category instead of city population and store name instead of district name",
            "use headquartered city instead of city population and product instead of district name",
            "use district id instead of city population and store name instead of district name",
            "use headquartered city instead of city population and store name instead of max page size",
            "use type instead of city population and store name instead of district name",
            "use headquartered city instead of city population and product id instead of district name",
            "use headquartered city instead of city population and store name instead of store id",
            "use interface instead of city population and store name instead of district name",
            "use headquartered city instead of city population and district id instead of district name",
            "use headquartered city instead of dpi and store name instead of district name",
            "use headquartered city instead of city population and interface instead of district name",
            "use headquartered city instead of store id and store name instead of district name",
            "use headquartered city instead of city population and store name instead of interface",
            "use headquartered city instead of pages per minute color and store name instead of district name",
            "use headquartered city instead of city population and pages per minute color instead of district name"
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use vehicles table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "You need to place table of vehicles as table of address is not correct.",
        "negative_examples": [
            "you need to place table of addresses as table of address is not correct .",
            "you need to place table of staff as table of address is not correct .",
            "you need to place table of customers as table of address is not correct .",
            "you need to place table of customer payments as table of address is not correct .",
            "you need to place table of lessons as table of address is not correct ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the orders table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "You must use orders table in place of customers table in step 1.",
        "negative_examples": [
            "you must use customers table in place of customers table in step 1 .",
            "you must use invoices table in place of customers table in step 1 .",
            "you must use accounts table in place of customers table in step 1 .",
            "you must use product categories table in place of customers table in step 1 .",
            "you must use products table in place of customers table in step 1 .",
            "you must use financial transactions table in place of customers table in step 1 .",
            "you must use order items table in place of customers table in step 1 .",
            "you must use invoice line items table in place of customers table in step 1 ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use csu fees table in place of faculty table , enrollments table , and campuses table in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2005 and faculty equals 357.1 conditions . find average campus fee in place of average fte ay .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                24,
                32
            ],
            [
                48,
                51
            ]
        ],
        "secondary_span": [
            [
                8,
                19
            ],
            [
                33,
                47
            ],
            [
                52,
                58
            ]
        ],
        "positive_example": "You need to make sure the table of csu fees is similar . In step 2, Utilize the fee of campus , delete condition faculty equivalent with 357.1.",
        "negative_examples": [
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition year equivalent with 357.1 .",
            "you need to make sure the table of fte ay is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition totalenrollment ay equivalent with 357.1 .",
            "you need to make sure the table of csu fees is similar . in step 2 , utilize the fee of campus , delete condition enrollments equivalent with 357.1 .",
            "you need to make sure the table of csu fees is similar . in step 2 , utilize the fee of campus , delete condition campus fee equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition undergraduate equivalent with 357.1 .",
            "you need to make sure the table of campus fee is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition fte ay equivalent with 357.1 .",
            "you need to make sure the table of campus is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition county equivalent with 357.1 .",
            "you need to make sure the table of csu fees is similar . in step 2 , utilize the fee of campus , delete condition undergraduate equivalent with 357.1 .",
            "you need to make sure the table of campuses is similar . in step 2 , utilize the fee of campus , delete condition year equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition location equivalent with 357.1 .",
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition degrees equivalent with 357.1 .",
            "you need to make sure the table of csu fees is similar . in step 2 , utilize the fee of campus , delete condition campus equivalent with 357.1 .",
            "you need to make sure the table of campuses is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition totalenrollment ay equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition graduate equivalent with 357.1 .",
            "you need to make sure the table of undergraduate is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition discipline equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition campus fee equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition year equivalent with 357.1 .",
            "you need to make sure the table of campuses is similar . in step 2 , utilize the fee of campus , delete condition id equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition campus fee equivalent with 357.1 .",
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition graduate equivalent with 357.1 .",
            "you need to make sure the table of id is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition fte ay equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition discipline equivalent with 357.1 .",
            "you need to make sure the table of campuses is similar . in step 2 , utilize the fee of campus , delete condition degrees equivalent with 357.1 .",
            "you need to make sure the table of csu fees is similar . in step 2 , utilize the fee of campus , delete condition campuses equivalent with 357.1 .",
            "you need to make sure the table of totalenrollment ay is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition year equivalent with 357.1 .",
            "you need to make sure the table of csu fees is similar . in step 2 , utilize the fee of campus , delete condition graduate equivalent with 357.1 .",
            "you need to make sure the table of campuses is similar . in step 2 , utilize the fee of campus , delete condition totalenrollment ay equivalent with 357.1 .",
            "you need to make sure the table of csu fees is similar . in step 2 , utilize the fee of campus , delete condition location equivalent with 357.1 .",
            "you need to make sure the table of campuses is similar . in step 2 , utilize the fee of campus , delete condition location equivalent with 357.1 .",
            "you need to make sure the table of campuses is similar . in step 2 , utilize the fee of campus , delete condition discipline equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition totalenrollment ay equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition campus equivalent with 357.1 .",
            "you need to make sure the table of year is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of location is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition discipline equivalent with 357.1 .",
            "you need to make sure the table of discipline is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition fte ay equivalent with 357.1 .",
            "you need to make sure the table of degrees is similar . in step 2 , utilize the fee of campus , delete condition id equivalent with 357.1 .",
            "you need to make sure the table of graduate is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition faculty equivalent with 357.1 .",
            "you need to make sure the table of enrollments is similar . in step 2 , utilize the fee of campus , delete condition county equivalent with 357.1 .",
            "you need to make sure the table of discipline enrollments is similar . in step 2 , utilize the fee of campus , delete condition degrees equivalent with 357.1 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 2 , remove the discipline enrollments 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ]
        ],
        "positive_example": "Remove \"and discipline enrollments 's campuses equals 1\" from step 2.",
        "negative_examples": [
            "remove \" and campuses 's campuses equals 1 \" from step 2 .",
            "remove \" and csu fees 's campuses equals 1 \" from step 2 .",
            "remove \" and degrees 's campuses equals 1 \" from step 2 .",
            "remove \" and enrollments 's campuses equals 1 \" from step 2 .",
            "remove \" and faculty 's campuses equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's id equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's location equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's county equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's year equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's campus fee equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's degrees equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's discipline equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's undergraduate equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's graduate equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's totalenrollment ay equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's fte ay equals 1 \" from step 2 .",
            "remove \" and discipline enrollments 's faculty equals 1 \" from step 2 .",
            "remove \" and id 's campuses equals 1 \" from step 2 .",
            "remove \" and location 's campuses equals 1 \" from step 2 .",
            "remove \" and county 's campuses equals 1 \" from step 2 .",
            "remove \" and year 's campuses equals 1 \" from step 2 .",
            "remove \" and campus fee 's campuses equals 1 \" from step 2 .",
            "remove \" and discipline 's campuses equals 1 \" from step 2 .",
            "remove \" and undergraduate 's campuses equals 1 \" from step 2 .",
            "remove \" and graduate 's campuses equals 1 \" from step 2 .",
            "remove \" and totalenrollment ay 's campuses equals 1 \" from step 2 .",
            "remove \" and fte ay 's campuses equals 1 \" from step 2 ."
        ],
        "neg_len": 27
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find apartment number in place of bedroom count . order the results by room count in place of bathroom count .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                14
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                15,
                20
            ]
        ],
        "positive_example": "Put apartment number in place of bedroom count and bedroom count in place of bathroom count .",
        "negative_examples": [
            "put apartment number in place of bedroom count and bedroom count in place of building id .",
            "put apartment number in place of bedroom count and bedroom count in place of building short name .",
            "put apartment number in place of bedroom count and bedroom count in place of building full name .",
            "put apartment number in place of bedroom count and bedroom count in place of building description .",
            "put apartment number in place of bedroom count and bedroom count in place of building address .",
            "put apartment number in place of bedroom count and bedroom count in place of building manager .",
            "put apartment number in place of bedroom count and bedroom count in place of building phone .",
            "put apartment number in place of bedroom count and bedroom count in place of apartment id .",
            "put apartment number in place of bedroom count and bedroom count in place of apartment type code .",
            "put apartment number in place of bedroom count and bedroom count in place of apartment number .",
            "put apartment number in place of bedroom count and bedroom count in place of room count .",
            "put apartment number in place of bedroom count and bedroom count in place of facility code .",
            "put apartment number in place of bedroom count and bedroom count in place of guest id .",
            "put apartment number in place of bedroom count and bedroom count in place of gender code .",
            "put apartment number in place of bedroom count and bedroom count in place of guest first name .",
            "put apartment number in place of bedroom count and bedroom count in place of guest last name .",
            "put apartment number in place of bedroom count and bedroom count in place of date of birth .",
            "put apartment number in place of bedroom count and bedroom count in place of apartment booking id .",
            "put apartment number in place of bedroom count and bedroom count in place of booking status code .",
            "put apartment number in place of bedroom count and bedroom count in place of booking start date .",
            "put apartment number in place of bedroom count and bedroom count in place of booking end date .",
            "put apartment number in place of bedroom count and bedroom count in place of status date .",
            "put apartment number in place of bedroom count and bedroom count in place of available yes or no .",
            "put apartment number in place of building id and bedroom count in place of bathroom count .",
            "put apartment number in place of building short name and bedroom count in place of bathroom count .",
            "put apartment number in place of building full name and bedroom count in place of bathroom count .",
            "put apartment number in place of building description and bedroom count in place of bathroom count .",
            "put apartment number in place of building address and bedroom count in place of bathroom count .",
            "put apartment number in place of building manager and bedroom count in place of bathroom count .",
            "put apartment number in place of building phone and bedroom count in place of bathroom count .",
            "put apartment number in place of apartment id and bedroom count in place of bathroom count .",
            "put apartment number in place of apartment type code and bedroom count in place of bathroom count .",
            "put apartment number in place of apartment number and bedroom count in place of bathroom count .",
            "put apartment number in place of room count and bedroom count in place of bathroom count .",
            "put apartment number in place of facility code and bedroom count in place of bathroom count .",
            "put apartment number in place of guest id and bedroom count in place of bathroom count .",
            "put apartment number in place of gender code and bedroom count in place of bathroom count .",
            "put apartment number in place of guest first name and bedroom count in place of bathroom count .",
            "put apartment number in place of guest last name and bedroom count in place of bathroom count .",
            "put apartment number in place of date of birth and bedroom count in place of bathroom count .",
            "put apartment number in place of apartment booking id and bedroom count in place of bathroom count .",
            "put apartment number in place of booking status code and bedroom count in place of bathroom count .",
            "put apartment number in place of booking start date and bedroom count in place of bathroom count .",
            "put apartment number in place of booking end date and bedroom count in place of bathroom count .",
            "put apartment number in place of status date and bedroom count in place of bathroom count .",
            "put apartment number in place of available yes or no and bedroom count in place of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table . in step 2 , remove the enrollments 's year greater than 1956 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Eliminate \"and enrollments 's year greater than 1956\" from step 2.",
        "negative_examples": [
            "eliminate \" and undergraduate 's year greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's totalenrollment ay greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's id greater than 1956 \" from step 2 .",
            "eliminate \" and faculty 's undergraduate greater than 1956 \" from step 2 .",
            "eliminate \" and degrees 's graduate greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's year greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's year greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's fte ay greater than 1956 \" from step 2 .",
            "eliminate \" and campus 's year greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's campus fee greater than 1956 \" from step 2 .",
            "eliminate \" and totalenrollment ay 's year greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's county greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's location greater than 1956 \" from step 2 .",
            "eliminate \" and location 's year greater than 1956 \" from step 2 .",
            "eliminate \" and degrees 's faculty greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's degrees greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's totalenrollment ay greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's county greater than 1956 \" from step 2 .",
            "eliminate \" and enrollments 's id greater than 1956 \" from step 2 .",
            "eliminate \" and enrollments 's campus fee greater than 1956 \" from step 2 .",
            "eliminate \" and faculty 's graduate greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's graduate greater than 1956 \" from step 2 .",
            "eliminate \" and id 's year greater than 1956 \" from step 2 .",
            "eliminate \" and faculty 's id greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's campus fee greater than 1956 \" from step 2 .",
            "eliminate \" and campus fee 's year greater than 1956 \" from step 2 .",
            "eliminate \" and enrollments 's campus greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's campus greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's degrees greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's campus greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's discipline greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's location greater than 1956 \" from step 2 .",
            "eliminate \" and faculty 's totalenrollment ay greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's faculty greater than 1956 \" from step 2 .",
            "eliminate \" and enrollments 's totalenrollment ay greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's faculty greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's graduate greater than 1956 \" from step 2 .",
            "eliminate \" and county 's year greater than 1956 \" from step 2 .",
            "eliminate \" and enrollments 's undergraduate greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's discipline greater than 1956 \" from step 2 .",
            "eliminate \" and enrollments 's fte ay greater than 1956 \" from step 2 .",
            "eliminate \" and discipline enrollments 's county greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's fte ay greater than 1956 \" from step 2 .",
            "eliminate \" and faculty 's location greater than 1956 \" from step 2 .",
            "eliminate \" and csu fees 's degrees greater than 1956 \" from step 2 .",
            "eliminate \" and degrees 's degrees greater than 1956 \" from step 2 .",
            "eliminate \" and enrollments 's county greater than 1956 \" from step 2 .",
            "eliminate \" and faculty 's campus greater than 1956 \" from step 2 .",
            "eliminate \" and campuses 's id greater than 1956 \" from step 2 .",
            "eliminate \" and faculty 's campus fee greater than 1956 \" from step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average bedroom count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Remove bathroom count and use bedroom count in its place.",
        "negative_examples": [
            "remove building id and use bedroom count in its place .",
            "remove building short name and use bedroom count in its place .",
            "remove building full name and use bedroom count in its place .",
            "remove building description and use bedroom count in its place .",
            "remove building address and use bedroom count in its place .",
            "remove building manager and use bedroom count in its place .",
            "remove building phone and use bedroom count in its place .",
            "remove apartment id and use bedroom count in its place .",
            "remove apartment type code and use bedroom count in its place .",
            "remove apartment number and use bedroom count in its place .",
            "remove room count and use bedroom count in its place .",
            "remove facility code and use bedroom count in its place .",
            "remove guest id and use bedroom count in its place .",
            "remove gender code and use bedroom count in its place .",
            "remove guest first name and use bedroom count in its place .",
            "remove guest last name and use bedroom count in its place .",
            "remove date of birth and use bedroom count in its place .",
            "remove apartment booking id and use bedroom count in its place .",
            "remove booking status code and use bedroom count in its place .",
            "remove booking start date and use bedroom count in its place .",
            "remove booking end date and use bedroom count in its place .",
            "remove status date and use bedroom count in its place .",
            "remove available yes or no and use bedroom count in its place .",
            "remove bathroom count and use building id in its place .",
            "remove bathroom count and use building short name in its place .",
            "remove bathroom count and use building full name in its place .",
            "remove bathroom count and use building description in its place .",
            "remove bathroom count and use building address in its place .",
            "remove bathroom count and use building manager in its place .",
            "remove bathroom count and use building phone in its place .",
            "remove bathroom count and use apartment id in its place .",
            "remove bathroom count and use apartment type code in its place .",
            "remove bathroom count and use apartment number in its place .",
            "remove bathroom count and use room count in its place .",
            "remove bathroom count and use facility code in its place .",
            "remove bathroom count and use guest id in its place .",
            "remove bathroom count and use gender code in its place .",
            "remove bathroom count and use guest first name in its place .",
            "remove bathroom count and use guest last name in its place .",
            "remove bathroom count and use date of birth in its place .",
            "remove bathroom count and use apartment booking id in its place .",
            "remove bathroom count and use booking status code in its place .",
            "remove bathroom count and use booking start date in its place .",
            "remove bathroom count and use booking end date in its place .",
            "remove bathroom count and use status date in its place .",
            "remove bathroom count and use available yes or no in its place ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the campuses 's campus equals San Jose State University and degrees 's year equals 2000 conditions in place of the county equals San Jose State University and faculty 's year equals 2000 conditions . find degrees in place of summation of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                36
            ],
            [
                55,
                56
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                37,
                54
            ],
            [
                57,
                63
            ]
        ],
        "positive_example": "Summation of graduate , county and faculty's year should be replaced by degrees , campus and degrees' year .",
        "negative_examples": [
            "summation of graduate , undergraduate and faculty 's year should be replaced by csu fees , campus and degrees ' year .",
            "summation of graduate , county and faculty 's year should be replaced by degrees , totalenrollment ay and degrees ' year .",
            "summation of graduate , location and faculty 's year should be replaced by enrollments , campus and degrees ' year .",
            "summation of discipline , county and campuses 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of totalenrollment ay , county and faculty 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , county and faculty 's year should be replaced by enrollments , id and degrees ' year .",
            "summation of graduate , totalenrollment ay and csu fees 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of id , county and csu fees 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of year , county and faculty 's year should be replaced by discipline enrollments , campus and degrees ' year .",
            "summation of graduate , county and csu fees 's year should be replaced by degrees , undergraduate and degrees ' year .",
            "summation of graduate , county and totalenrollment ay 's year should be replaced by discipline enrollments , campus and degrees ' year .",
            "summation of graduate , id and faculty 's year should be replaced by enrollments , campus and degrees ' year .",
            "summation of discipline , county and enrollments 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , county and faculty 's year should be replaced by campus fee , campus and degrees ' year .",
            "summation of graduate , county and fte ay 's year should be replaced by campuses , campus and degrees ' year .",
            "summation of graduate , county and faculty 's year should be replaced by undergraduate , campus and degrees ' year .",
            "summation of graduate , county and campuses 's year should be replaced by fte ay , campus and fte ay ' year .",
            "summation of graduate , county and csu fees 's year should be replaced by degrees , campus fee and degrees ' year .",
            "summation of graduate , county and discipline enrollments 's year should be replaced by id , campus and id ' year .",
            "summation of discipline , county and faculty 's year should be replaced by campuses , campus and degrees ' year .",
            "summation of graduate , county and campuses 's year should be replaced by undergraduate , campus and undergraduate ' year .",
            "summation of graduate , county and discipline enrollments 's year should be replaced by degrees , year and degrees ' year .",
            "summation of graduate , id and enrollments 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , county and discipline 's year should be replaced by csu fees , campus and degrees ' year .",
            "summation of graduate , county and faculty 's year should be replaced by discipline enrollments , fte ay and degrees ' year .",
            "summation of graduate , county and enrollments 's year should be replaced by undergraduate , campus and undergraduate ' year .",
            "summation of graduate , id and discipline enrollments 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , county and campuses 's year should be replaced by campus fee , campus and campus fee ' year .",
            "summation of graduate , county and fte ay 's year should be replaced by csu fees , campus and degrees ' year .",
            "summation of graduate , id and faculty 's year should be replaced by discipline enrollments , campus and degrees ' year .",
            "summation of graduate , county and totalenrollment ay 's year should be replaced by enrollments , campus and degrees ' year .",
            "summation of graduate , fte ay and faculty 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , undergraduate and faculty 's year should be replaced by discipline enrollments , campus and degrees ' year .",
            "summation of graduate , year and faculty 's year should be replaced by campuses , campus and degrees ' year .",
            "summation of graduate , year and campuses 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , county and discipline enrollments 's year should be replaced by degrees , undergraduate and degrees ' year .",
            "summation of graduate , fte ay and faculty 's year should be replaced by csu fees , campus and degrees ' year .",
            "summation of graduate , totalenrollment ay and faculty 's year should be replaced by enrollments , campus and degrees ' year .",
            "summation of graduate , county and undergraduate 's year should be replaced by enrollments , campus and degrees ' year .",
            "summation of graduate , discipline and faculty 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , fte ay and faculty 's year should be replaced by campuses , campus and degrees ' year .",
            "summation of graduate , id and faculty 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of fte ay , county and csu fees 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of graduate , county and year 's year should be replaced by discipline enrollments , campus and degrees ' year .",
            "summation of location , county and discipline enrollments 's year should be replaced by degrees , campus and degrees ' year .",
            "summation of location , county and faculty 's year should be replaced by csu fees , campus and degrees ' year .",
            "summation of graduate , county and id 's year should be replaced by csu fees , campus and degrees ' year .",
            "summation of graduate , county and campuses 's year should be replaced by degrees , campus fee and degrees ' year .",
            "summation of fte ay , county and faculty 's year should be replaced by enrollments , campus and degrees ' year .",
            "summation of graduate , discipline and campuses 's year should be replaced by degrees , campus and degrees ' year ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "use chip model table in place of screen mode table . remove the type equals Graphics conditions . find rows in place of used kb .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                11,
                17
            ],
            [
                18,
                19
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                20,
                25
            ]
        ],
        "positive_example": "I want to delete the last part and should search for the rows count of chip model.",
        "negative_examples": [
            "i want to delete the last part and should search for the rows count of screen mode .",
            "i want to delete the last part and should search for the rows count of phone .",
            "i want to delete the last part and should search for the rows count of model name .",
            "i want to delete the last part and should search for the rows count of launch year .",
            "i want to delete the last part and should search for the rows count of ram mib .",
            "i want to delete the last part and should search for the rows count of rom mib .",
            "i want to delete the last part and should search for the rows count of slots .",
            "i want to delete the last part and should search for the rows count of wifi .",
            "i want to delete the last part and should search for the rows count of bluetooth .",
            "i want to delete the last part and should search for the rows count of graphics mode .",
            "i want to delete the last part and should search for the rows count of char cells .",
            "i want to delete the last part and should search for the rows count of pixels .",
            "i want to delete the last part and should search for the rows count of hardware colours .",
            "i want to delete the last part and should search for the rows count of used kb .",
            "i want to delete the last part and should search for the rows count of map .",
            "i want to delete the last part and should search for the rows count of type .",
            "i want to delete the last part and should search for the rows count of company name .",
            "i want to delete the last part and should search for the rows count of hardware model name .",
            "i want to delete the last part and should search for the rows count of accreditation type .",
            "i want to delete the last part and should search for the rows count of accreditation level .",
            "i want to delete the last part and should search for the rows count of date ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "You should use year of csu fees instead of faculty and remove year of faculty is 2002.",
        "negative_examples": [
            "you should use location of csu fees instead of csu fees and remove location of faculty is 2002 .",
            "you should use undergraduate of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use county of csu fees instead of discipline enrollments and remove county of faculty is 2002 .",
            "you should use discipline of csu fees instead of discipline enrollments and remove discipline of faculty is 2002 .",
            "you should use graduate of csu fees instead of csu fees and remove graduate of faculty is 2002 .",
            "you should use degrees of csu fees instead of degrees and remove degrees of faculty is 2002 .",
            "you should use county of csu fees instead of enrollments and remove county of faculty is 2002 .",
            "you should use campus fee of csu fees instead of discipline enrollments and remove campus fee of faculty is 2002 .",
            "you should use location of csu fees instead of degrees and remove location of faculty is 2002 .",
            "you should use fte ay of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use graduate of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use year of csu fees instead of id and remove year of faculty is 2002 .",
            "you should use totalenrollment ay of csu fees instead of discipline enrollments and remove totalenrollment ay of faculty is 2002 .",
            "you should use degrees of csu fees instead of csu fees and remove degrees of faculty is 2002 .",
            "you should use totalenrollment ay of csu fees instead of degrees and remove totalenrollment ay of faculty is 2002 .",
            "you should use year of csu fees instead of csu fees and remove year of faculty is 2002 .",
            "you should use graduate of csu fees instead of degrees and remove graduate of faculty is 2002 .",
            "you should use year of csu fees instead of campus and remove year of faculty is 2002 .",
            "you should use campus fee of csu fees instead of enrollments and remove campus fee of faculty is 2002 .",
            "you should use year of csu fees instead of discipline and remove year of faculty is 2002 .",
            "you should use fte ay of csu fees instead of campuses and remove fte ay of faculty is 2002 .",
            "you should use year of csu fees instead of campuses and remove year of faculty is 2002 .",
            "you should use location of csu fees instead of discipline enrollments and remove location of faculty is 2002 .",
            "you should use fte ay of csu fees instead of degrees and remove fte ay of faculty is 2002 .",
            "you should use undergraduate of csu fees instead of campuses and remove undergraduate of faculty is 2002 .",
            "you should use discipline of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use year of csu fees instead of fte ay and remove year of faculty is 2002 .",
            "you should use undergraduate of csu fees instead of discipline enrollments and remove undergraduate of faculty is 2002 .",
            "you should use campus of csu fees instead of campuses and remove campus of faculty is 2002 .",
            "you should use campus fee of csu fees instead of csu fees and remove campus fee of faculty is 2002 .",
            "you should use year of csu fees instead of campus fee and remove year of faculty is 2002 .",
            "you should use campus of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use county of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use campus fee of csu fees instead of degrees and remove campus fee of faculty is 2002 .",
            "you should use id of csu fees instead of degrees and remove id of faculty is 2002 .",
            "you should use campus fee of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use county of csu fees instead of campuses and remove county of faculty is 2002 .",
            "you should use id of csu fees instead of enrollments and remove id of faculty is 2002 .",
            "you should use id of csu fees instead of faculty and remove year of faculty is 2002 .",
            "you should use degrees of csu fees instead of campuses and remove degrees of faculty is 2002 .",
            "you should use location of csu fees instead of campuses and remove location of faculty is 2002 .",
            "you should use totalenrollment ay of csu fees instead of campuses and remove totalenrollment ay of faculty is 2002 .",
            "you should use campus fee of csu fees instead of campuses and remove campus fee of faculty is 2002 .",
            "you should use campus of csu fees instead of csu fees and remove campus of faculty is 2002 .",
            "you should use county of csu fees instead of degrees and remove county of faculty is 2002 .",
            "you should use undergraduate of csu fees instead of degrees and remove undergraduate of faculty is 2002 .",
            "you should use year of csu fees instead of graduate and remove year of faculty is 2002 .",
            "you should use discipline of csu fees instead of campuses and remove discipline of faculty is 2002 .",
            "you should use fte ay of csu fees instead of discipline enrollments and remove fte ay of faculty is 2002 .",
            "you should use id of csu fees instead of csu fees and remove id of faculty is 2002 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the staff table . consider the first name like % a % conditions in place of the first name like a conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                21
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                22,
                31
            ]
        ],
        "positive_example": "You need to use table of staff not the lessons table.",
        "negative_examples": [
            "you need to use table of staff not the addresses table .",
            "you need to use table of staff not the staff table .",
            "you need to use table of staff not the vehicles table .",
            "you need to use table of staff not the customers table .",
            "you need to use table of staff not the customer payments table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building description like Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                24,
                28
            ]
        ],
        "secondary_span": [
            [
                13,
                23
            ],
            [
                29,
                36
            ]
        ],
        "positive_example": "You should use bedroom in place of bathroom count and short name of building instead of building description contains.",
        "negative_examples": [
            "you should use bedroom in place of bathroom count and short name of building instead of building id contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of building short name contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of building full name contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of building address contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of building manager contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of building phone contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of apartment id contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of apartment type code contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of apartment number contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of bedroom count contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of room count contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of facility code contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of guest id contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of gender code contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of guest first name contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of guest last name contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of date of birth contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of apartment booking id contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of booking status code contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of booking start date contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of booking end date contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of status date contains .",
            "you should use bedroom in place of bathroom count and short name of building instead of available yes or no contains .",
            "you should use bedroom in place of building id and short name of building instead of building description contains .",
            "you should use bedroom in place of building short name and short name of building instead of building description contains .",
            "you should use bedroom in place of building full name and short name of building instead of building description contains .",
            "you should use bedroom in place of building address and short name of building instead of building description contains .",
            "you should use bedroom in place of building manager and short name of building instead of building description contains .",
            "you should use bedroom in place of building phone and short name of building instead of building description contains .",
            "you should use bedroom in place of apartment id and short name of building instead of building description contains .",
            "you should use bedroom in place of apartment type code and short name of building instead of building description contains .",
            "you should use bedroom in place of apartment number and short name of building instead of building description contains .",
            "you should use bedroom in place of bedroom count and short name of building instead of building description contains .",
            "you should use bedroom in place of room count and short name of building instead of building description contains .",
            "you should use bedroom in place of facility code and short name of building instead of building description contains .",
            "you should use bedroom in place of guest id and short name of building instead of building description contains .",
            "you should use bedroom in place of gender code and short name of building instead of building description contains .",
            "you should use bedroom in place of guest first name and short name of building instead of building description contains .",
            "you should use bedroom in place of guest last name and short name of building instead of building description contains .",
            "you should use bedroom in place of date of birth and short name of building instead of building description contains .",
            "you should use bedroom in place of apartment booking id and short name of building instead of building description contains .",
            "you should use bedroom in place of booking status code and short name of building instead of building description contains .",
            "you should use bedroom in place of booking start date and short name of building instead of building description contains .",
            "you should use bedroom in place of booking end date and short name of building instead of building description contains .",
            "you should use bedroom in place of status date and short name of building instead of building description contains .",
            "you should use bedroom in place of available yes or no and short name of building instead of building description contains ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                16
            ]
        ],
        "positive_example": "Replace bathroom count with bedroom count in step 2.",
        "negative_examples": [
            "replace building id with bedroom count in step 2 .",
            "replace building short name with bedroom count in step 2 .",
            "replace building full name with bedroom count in step 2 .",
            "replace building description with bedroom count in step 2 .",
            "replace building address with bedroom count in step 2 .",
            "replace building manager with bedroom count in step 2 .",
            "replace building phone with bedroom count in step 2 .",
            "replace apartment id with bedroom count in step 2 .",
            "replace apartment type code with bedroom count in step 2 .",
            "replace apartment number with bedroom count in step 2 .",
            "replace bedroom count with bedroom count in step 2 .",
            "replace room count with bedroom count in step 2 .",
            "replace facility code with bedroom count in step 2 .",
            "replace guest id with bedroom count in step 2 .",
            "replace gender code with bedroom count in step 2 .",
            "replace guest first name with bedroom count in step 2 .",
            "replace guest last name with bedroom count in step 2 .",
            "replace date of birth with bedroom count in step 2 .",
            "replace apartment booking id with bedroom count in step 2 .",
            "replace booking status code with bedroom count in step 2 .",
            "replace booking start date with bedroom count in step 2 .",
            "replace booking end date with bedroom count in step 2 .",
            "replace status date with bedroom count in step 2 .",
            "replace available yes or no with bedroom count in step 2 ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2005 and faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "Dismiss the value of faculty which is 357.1 and also, use csu fees instead of faculty.",
        "negative_examples": [
            "dismiss the value of campuses which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of csu fees which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of degrees which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of discipline enrollments which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of enrollments which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of id which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of campus which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of location which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of county which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of year which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of campus fee which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of discipline which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of undergraduate which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of graduate which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of totalenrollment ay which is 357.1 and also , use csu fees instead of faculty .",
            "dismiss the value of fte ay which is 357.1 and also , use csu fees instead of faculty ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartments table besides the apartment facilities table . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "In apartments table, check out the total number of rooms.",
        "negative_examples": [
            "in apartment buildings table , check out the total number of rooms .",
            "in apartment facilities table , check out the total number of rooms .",
            "in guests table , check out the total number of rooms .",
            "in apartment bookings table , check out the total number of rooms .",
            "in view unit status table , check out the total number of rooms ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the county equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                26
            ]
        ],
        "positive_example": "It is require to substitute campus in place of county.",
        "negative_examples": [
            "it is require to substitute id in place of county .",
            "it is require to substitute location in place of county .",
            "it is require to substitute year in place of county .",
            "it is require to substitute campus fee in place of county .",
            "it is require to substitute degrees in place of county .",
            "it is require to substitute discipline in place of county .",
            "it is require to substitute undergraduate in place of county .",
            "it is require to substitute graduate in place of county .",
            "it is require to substitute totalenrollment ay in place of county .",
            "it is require to substitute fte ay in place of county .",
            "it is require to substitute faculty in place of county .",
            "it is require to substitute campus in place of id .",
            "it is require to substitute campus in place of location .",
            "it is require to substitute campus in place of year .",
            "it is require to substitute campus in place of campus fee .",
            "it is require to substitute campus in place of degrees .",
            "it is require to substitute campus in place of discipline .",
            "it is require to substitute campus in place of undergraduate .",
            "it is require to substitute campus in place of graduate .",
            "it is require to substitute campus in place of totalenrollment ay .",
            "it is require to substitute campus in place of fte ay .",
            "it is require to substitute campus in place of faculty ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "use product table in place of store table . find average pages per minute color in place of average ranking .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                14
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                15,
                20
            ]
        ],
        "positive_example": "You should change pages per minute color of product table for ranking of store table. ",
        "negative_examples": [
            "you should change pages per minute color of store district table for headquartered city of store table .",
            "you should change pages per minute color of product table for headquartered city of store product table .",
            "you should change pages per minute color of store product table for dpi of store table .",
            "you should change pages per minute color of district name table for ranking of store table .",
            "you should change number of product category of product table for ranking of store district table .",
            "you should change pages per minute color of product table for product id of store product table .",
            "you should change max page size of product table for ranking of district table .",
            "you should change pages per minute color of number of product category table for ranking of store district table .",
            "you should change district id of product table for ranking of store table .",
            "you should change pages per minute color of product id table for ranking of store district table .",
            "you should change pages per minute color of store district table for dpi of store table .",
            "you should change pages per minute color of district table for product id of store table .",
            "you should change pages per minute color of product table for ranking of store product table .",
            "you should change pages per minute color of type table for ranking of store product table .",
            "you should change pages per minute color of district id table for ranking of district table .",
            "you should change pages per minute color of product table for product id of store district table .",
            "you should change type of product table for ranking of store table .",
            "you should change pages per minute color of product table for city population of store product table .",
            "you should change pages per minute color of product table for store name of district table .",
            "you should change pages per minute color of headquartered city table for ranking of district table .",
            "you should change pages per minute color of product table for district name of store product table .",
            "you should change pages per minute color of city area table for ranking of store product table .",
            "you should change pages per minute color of product table for interface of district table .",
            "you should change pages per minute color of store district table for number of product category of store table .",
            "you should change pages per minute color of city population table for ranking of store district table .",
            "you should change pages per minute color of product table for store id of store district table .",
            "you should change pages per minute color of store product table for max page size of store table .",
            "you should change pages per minute color of product table for product id of district table .",
            "you should change product id of product table for ranking of store table .",
            "you should change pages per minute color of product table for city population of district table .",
            "you should change pages per minute color of store district table for store id of store table .",
            "you should change pages per minute color of store id table for ranking of district table .",
            "you should change city population of store district table for ranking of store table .",
            "you should change pages per minute color of interface table for ranking of store district table .",
            "you should change pages per minute color of max page size table for ranking of district table .",
            "you should change pages per minute color of city population table for ranking of store product table .",
            "you should change city area of store district table for ranking of store table .",
            "you should change store id of store product table for ranking of store table .",
            "you should change dpi of product table for ranking of store table .",
            "you should change store name of product table for ranking of store district table .",
            "you should change store id of product table for ranking of district table .",
            "you should change max page size of store product table for ranking of store table .",
            "you should change pages per minute color of product table for dpi of store product table .",
            "you should change city area of product table for ranking of district table .",
            "you should change pages per minute color of product table for area size of district table .",
            "you should change area size of product table for ranking of district table .",
            "you should change dimensions of product table for ranking of store product table .",
            "you should change store id of product table for ranking of store table .",
            "you should change max page size of store district table for ranking of store table .",
            "you should change type of district table for ranking of store table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Remove \"and faculty 's year equals 2002\" in step 2.",
        "negative_examples": [
            "remove \" and undergraduate 's year equals 2002 \" in step 2 .",
            "remove \" and id 's year equals 2002 \" in step 2 .",
            "remove \" and enrollments 's campus equals 2002 \" in step 2 .",
            "remove \" and campuses 's totalenrollment ay equals 2002 \" in step 2 .",
            "remove \" and csu fees 's campus fee equals 2002 \" in step 2 .",
            "remove \" and campuses 's county equals 2002 \" in step 2 .",
            "remove \" and csu fees 's fte ay equals 2002 \" in step 2 .",
            "remove \" and enrollments 's county equals 2002 \" in step 2 .",
            "remove \" and graduate 's year equals 2002 \" in step 2 .",
            "remove \" and enrollments 's fte ay equals 2002 \" in step 2 .",
            "remove \" and degrees 's county equals 2002 \" in step 2 .",
            "remove \" and campuses 's discipline equals 2002 \" in step 2 .",
            "remove \" and enrollments 's undergraduate equals 2002 \" in step 2 .",
            "remove \" and discipline enrollments 's discipline equals 2002 \" in step 2 .",
            "remove \" and discipline enrollments 's undergraduate equals 2002 \" in step 2 .",
            "remove \" and discipline enrollments 's fte ay equals 2002 \" in step 2 .",
            "remove \" and degrees 's campus fee equals 2002 \" in step 2 .",
            "remove \" and faculty 's county equals 2002 \" in step 2 .",
            "remove \" and csu fees 's county equals 2002 \" in step 2 .",
            "remove \" and enrollments 's year equals 2002 \" in step 2 .",
            "remove \" and csu fees 's location equals 2002 \" in step 2 .",
            "remove \" and faculty 's graduate equals 2002 \" in step 2 .",
            "remove \" and enrollments 's location equals 2002 \" in step 2 .",
            "remove \" and degrees 's discipline equals 2002 \" in step 2 .",
            "remove \" and faculty 's campus equals 2002 \" in step 2 .",
            "remove \" and enrollments 's campus fee equals 2002 \" in step 2 .",
            "remove \" and csu fees 's year equals 2002 \" in step 2 .",
            "remove \" and csu fees 's totalenrollment ay equals 2002 \" in step 2 .",
            "remove \" and campuses 's id equals 2002 \" in step 2 .",
            "remove \" and enrollments 's discipline equals 2002 \" in step 2 .",
            "remove \" and discipline enrollments 's location equals 2002 \" in step 2 .",
            "remove \" and degrees 's degrees equals 2002 \" in step 2 .",
            "remove \" and degrees 's year equals 2002 \" in step 2 .",
            "remove \" and csu fees 's degrees equals 2002 \" in step 2 .",
            "remove \" and county 's year equals 2002 \" in step 2 .",
            "remove \" and degrees 's totalenrollment ay equals 2002 \" in step 2 .",
            "remove \" and campus 's year equals 2002 \" in step 2 .",
            "remove \" and faculty 's discipline equals 2002 \" in step 2 .",
            "remove \" and faculty 's location equals 2002 \" in step 2 .",
            "remove \" and campuses 's undergraduate equals 2002 \" in step 2 .",
            "remove \" and degrees 's id equals 2002 \" in step 2 .",
            "remove \" and csu fees 's undergraduate equals 2002 \" in step 2 .",
            "remove \" and csu fees 's graduate equals 2002 \" in step 2 .",
            "remove \" and discipline enrollments 's degrees equals 2002 \" in step 2 .",
            "remove \" and discipline enrollments 's id equals 2002 \" in step 2 .",
            "remove \" and campuses 's degrees equals 2002 \" in step 2 .",
            "remove \" and csu fees 's id equals 2002 \" in step 2 .",
            "remove \" and csu fees 's campus equals 2002 \" in step 2 .",
            "remove \" and faculty 's totalenrollment ay equals 2002 \" in step 2 .",
            "remove \" and discipline enrollments 's campus equals 2002 \" in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "use assessment notes table in place of reference incident type table . order the results by date of notes in place of incident type description .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                12,
                18
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "Substitute reference incident type with assessment notes and incident type description with date of notes .",
        "negative_examples": [
            "substitute behavior incident with assessment notes and line 3 with date of notes .",
            "substitute teachers with assessment notes and incident type description with monthly rental .",
            "substitute reference incident type with teachers and date incident start with date of notes .",
            "substitute student addresses with assessment notes and incident type description with line 1 .",
            "substitute students in detention with assessment notes and country with date of notes .",
            "substitute reference incident type with behavior incident and incident type description with student id .",
            "substitute teachers with assessment notes and incident type description with text of notes .",
            "substitute reference incident type with student addresses and date first rental with date of notes .",
            "substitute reference incident type with addresses and incident type description with first name .",
            "substitute reference incident type with behavior incident and middle name with date of notes .",
            "substitute reference incident type with teachers and incident type description with state province county .",
            "substitute reference incident type with addresses and incident type description with date address from .",
            "substitute detention with assessment notes and incident type description with student id .",
            "substitute student addresses with assessment notes and date first rental with date of notes .",
            "substitute reference incident type with addresses and incident type description with address type code .",
            "substitute reference incident type with addresses and other address details with date of notes .",
            "substitute teachers with assessment notes and student id with date of notes .",
            "substitute detention with assessment notes and last name with date of notes .",
            "substitute behavior incident with assessment notes and datetime detention end with date of notes .",
            "substitute addresses with assessment notes and incident type description with incident summary .",
            "substitute reference incident type with reference address types and incident type description with last name .",
            "substitute reference incident type with reference detention type and incident type description with last name .",
            "substitute reference incident type with students in detention and incident type description with date incident end .",
            "substitute detention with assessment notes and first name with date of notes .",
            "substitute detention with assessment notes and incident type description with gender .",
            "substitute reference incident type with detention and teacher id with date of notes .",
            "substitute students with assessment notes and incident type description with date first rental .",
            "substitute behavior incident with assessment notes and other student details with date of notes .",
            "substitute reference incident type with detention and incident type description with city .",
            "substitute reference incident type with students in detention and incident type description with gender .",
            "substitute students with assessment notes and incident type description with middle name .",
            "substitute students with assessment notes and first name with date of notes .",
            "substitute reference incident type with reference detention type and state province county with date of notes .",
            "substitute reference incident type with behavior incident and country with date of notes .",
            "substitute reference incident type with addresses and incident type description with line 2 .",
            "substitute reference incident type with detention and date address from with date of notes .",
            "substitute student addresses with assessment notes and notes id with date of notes .",
            "substitute reference incident type with students and address type description with date of notes .",
            "substitute teachers with assessment notes and city with date of notes .",
            "substitute reference incident type with detention and incident type description with last name .",
            "substitute reference incident type with students and cell mobile number with date of notes .",
            "substitute reference incident type with assessment notes and address type description with date of notes .",
            "substitute reference incident type with reference address types and first name with date of notes .",
            "substitute reference incident type with reference address types and incident type description with detention type code .",
            "substitute students in detention with assessment notes and line 3 with date of notes .",
            "substitute reference incident type with reference detention type and incident type description with zip postcode .",
            "substitute addresses with assessment notes and incident type description with other details .",
            "substitute reference incident type with detention and detention id with date of notes .",
            "substitute students in detention with assessment notes and incident type description with notes id .",
            "substitute reference incident type with addresses and detention type code with date of notes ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                52
            ]
        ],
        "positive_example": "You should find campus fee of San Jose State University for year 1996.",
        "negative_examples": [
            "you should find campus fee of san jose state university for id 1996 .",
            "you should find campus fee of san jose state university for campus 1996 .",
            "you should find campus fee of san jose state university for location 1996 .",
            "you should find campus fee of san jose state university for county 1996 .",
            "you should find campus fee of san jose state university for campus fee 1996 .",
            "you should find campus fee of san jose state university for degrees 1996 .",
            "you should find campus fee of san jose state university for discipline 1996 .",
            "you should find campus fee of san jose state university for undergraduate 1996 .",
            "you should find campus fee of san jose state university for graduate 1996 .",
            "you should find campus fee of san jose state university for totalenrollment ay 1996 .",
            "you should find campus fee of san jose state university for fte ay 1996 .",
            "you should find campus fee of san jose state university for faculty 1996 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , order the results by average room count in place of average bathroom count .",
        "primary_span": [
            [
                4,
                10
            ]
        ],
        "secondary_span": [
            [
                11,
                17
            ]
        ],
        "positive_example": "you should use room count instead of bathroom count.",
        "negative_examples": [
            "you should use room count instead of building id .",
            "you should use room count instead of building short name .",
            "you should use room count instead of building full name .",
            "you should use room count instead of building description .",
            "you should use room count instead of building address .",
            "you should use room count instead of building manager .",
            "you should use room count instead of building phone .",
            "you should use room count instead of apartment id .",
            "you should use room count instead of apartment type code .",
            "you should use room count instead of apartment number .",
            "you should use room count instead of bedroom count .",
            "you should use room count instead of facility code .",
            "you should use room count instead of guest id .",
            "you should use room count instead of gender code .",
            "you should use room count instead of guest first name .",
            "you should use room count instead of guest last name .",
            "you should use room count instead of date of birth .",
            "you should use room count instead of apartment booking id .",
            "you should use room count instead of booking status code .",
            "you should use room count instead of booking start date .",
            "you should use room count instead of booking end date .",
            "you should use room count instead of status date .",
            "you should use room count instead of available yes or no .",
            "you should use building id instead of bathroom count .",
            "you should use building short name instead of bathroom count .",
            "you should use building full name instead of bathroom count .",
            "you should use building description instead of bathroom count .",
            "you should use building address instead of bathroom count .",
            "you should use building manager instead of bathroom count .",
            "you should use building phone instead of bathroom count .",
            "you should use apartment id instead of bathroom count .",
            "you should use apartment type code instead of bathroom count .",
            "you should use apartment number instead of bathroom count .",
            "you should use bedroom count instead of bathroom count .",
            "you should use facility code instead of bathroom count .",
            "you should use guest id instead of bathroom count .",
            "you should use gender code instead of bathroom count .",
            "you should use guest first name instead of bathroom count .",
            "you should use guest last name instead of bathroom count .",
            "you should use date of birth instead of bathroom count .",
            "you should use apartment booking id instead of bathroom count .",
            "you should use booking status code instead of bathroom count .",
            "you should use booking start date instead of bathroom count .",
            "you should use booking end date instead of bathroom count .",
            "you should use status date instead of bathroom count .",
            "you should use available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , do not use the screen mode table . in step 2 , consider the hardware model name equals LG-P760 conditions in place of the company name equals LG-P760 conditions . find screen mode and chip model in place of hardware colours and char cells .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                23
            ],
            [
                34,
                39
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                24,
                33
            ],
            [
                40,
                48
            ]
        ],
        "positive_example": "Replace hardware colours , char cells and company name with chip model , screen mode and hardware model name .",
        "negative_examples": [
            "replace hardware colours , bluetooth and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , launch year and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and used kb with chip model , phone and hardware model name .",
            "replace hardware colours , char cells and company name with chip model , phone and launch year .",
            "replace hardware colours , char cells and company name with phone , screen mode and ram mib .",
            "replace hardware colours , char cells and company name with ram mib , phone and hardware model name .",
            "replace hardware colours , char cells and rom mib with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and slots with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and bluetooth with chip model , phone and hardware model name .",
            "replace hardware colours , accreditation level and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , model name and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and bluetooth with phone , screen mode and hardware model name .",
            "replace hardware colours , date and company name with chip model , phone and hardware model name .",
            "replace accreditation type , char cells and company name with chip model , phone and hardware model name .",
            "replace rom mib , char cells and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with date , phone and hardware model name .",
            "replace hardware colours , char cells and company name with chip model , phone and ram mib .",
            "replace hardware colours , char cells and graphics mode with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with phone , screen mode and rom mib .",
            "replace hardware colours , char cells and model name with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with phone , screen mode and graphics mode .",
            "replace hardware colours , char cells and company name with phone , wifi and hardware model name .",
            "replace hardware colours , char cells and map with chip model , screen mode and hardware model name .",
            "replace bluetooth , char cells and company name with chip model , screen mode and hardware model name .",
            "replace ram mib , char cells and company name with phone , screen mode and hardware model name .",
            "replace hardware colours , type and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with chip model , phone and accreditation type .",
            "replace hardware colours , char cells and date with chip model , phone and hardware model name .",
            "replace hardware colours , char cells and company name with phone , screen mode and used kb .",
            "replace hardware colours , char cells and company name with phone , screen mode and pixels .",
            "replace hardware colours , char cells and company name with chip model , screen mode and ram mib .",
            "replace hardware colours , char cells and company name with phone , screen mode and launch year .",
            "replace hardware colours , char cells and company name with chip model , phone and graphics mode .",
            "replace hardware colours , char cells and company name with pixels , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with phone , screen mode and bluetooth .",
            "replace hardware colours , char cells and company name with chip model , phone and used kb .",
            "replace hardware colours , char cells and company name with phone , accreditation type and hardware model name .",
            "replace hardware colours , char cells and company name with chip model , phone and slots .",
            "replace type , char cells and company name with chip model , phone and hardware model name .",
            "replace rom mib , char cells and company name with chip model , phone and hardware model name .",
            "replace hardware colours , char cells and company name with wifi , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with type , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with chip model , phone and type .",
            "replace slots , char cells and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with chip model , phone and accreditation level .",
            "replace hardware colours , char cells and company name with bluetooth , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with phone , screen mode and model name .",
            "replace hardware colours , char cells and company name with chip model , screen mode and launch year .",
            "replace map , char cells and company name with chip model , screen mode and hardware model name .",
            "replace hardware colours , char cells and company name with phone , screen mode and date ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the movie table . in step 2 , find the number of rows for each value of rating 's movie id . in step 3 , find rating 's movie id and average rating stars in place of title .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                28
            ],
            [
                33,
                41
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                42,
                46
            ]
        ],
        "positive_example": "2 ratings means 2 corresponding rows in Ratings table not the same as rating stars",
        "negative_examples": [
            "2 movie means 2 corresponding rows in ratings table not the same as rating stars",
            "2 reviewer means 2 corresponding rows in ratings table not the same as rating stars",
            "2 ratings means 2 corresponding rows in ratings table not the same as movie id",
            "2 ratings means 2 corresponding rows in ratings table not the same as title",
            "2 ratings means 2 corresponding rows in ratings table not the same as year",
            "2 ratings means 2 corresponding rows in ratings table not the same as director",
            "2 ratings means 2 corresponding rows in ratings table not the same as reviewer id",
            "2 ratings means 2 corresponding rows in ratings table not the same as name",
            "2 ratings means 2 corresponding rows in ratings table not the same as rating date",
            "2 movie means 2 corresponding rows in ratings table not the same as movie id",
            "2 movie means 2 corresponding rows in ratings table not the same as title",
            "2 movie means 2 corresponding rows in ratings table not the same as year",
            "2 movie means 2 corresponding rows in ratings table not the same as director",
            "2 movie means 2 corresponding rows in ratings table not the same as reviewer id",
            "2 movie means 2 corresponding rows in ratings table not the same as name",
            "2 movie means 2 corresponding rows in ratings table not the same as rating date",
            "2 reviewer means 2 corresponding rows in ratings table not the same as movie id",
            "2 reviewer means 2 corresponding rows in ratings table not the same as title",
            "2 reviewer means 2 corresponding rows in ratings table not the same as year",
            "2 reviewer means 2 corresponding rows in ratings table not the same as director",
            "2 reviewer means 2 corresponding rows in ratings table not the same as reviewer id",
            "2 reviewer means 2 corresponding rows in ratings table not the same as name",
            "2 reviewer means 2 corresponding rows in ratings table not the same as rating date"
        ],
        "neg_len": 23
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "In step 2, you should delete the year of faculty which is higher than 2002.",
        "negative_examples": [
            "in step 2 , you should delete the id of enrollments which is higher than 2002 .",
            "in step 2 , you should delete the totalenrollment ay of faculty which is higher than 2002 .",
            "in step 2 , you should delete the fte ay of csu fees which is higher than 2002 .",
            "in step 2 , you should delete the undergraduate of faculty which is higher than 2002 .",
            "in step 2 , you should delete the year of campus which is higher than 2002 .",
            "in step 2 , you should delete the discipline of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the location of campuses which is higher than 2002 .",
            "in step 2 , you should delete the graduate of csu fees which is higher than 2002 .",
            "in step 2 , you should delete the undergraduate of csu fees which is higher than 2002 .",
            "in step 2 , you should delete the campus fee of csu fees which is higher than 2002 .",
            "in step 2 , you should delete the undergraduate of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the year of campus fee which is higher than 2002 .",
            "in step 2 , you should delete the fte ay of degrees which is higher than 2002 .",
            "in step 2 , you should delete the fte ay of faculty which is higher than 2002 .",
            "in step 2 , you should delete the county of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the year of degrees which is higher than 2002 .",
            "in step 2 , you should delete the campus of faculty which is higher than 2002 .",
            "in step 2 , you should delete the campus fee of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the campus of csu fees which is higher than 2002 .",
            "in step 2 , you should delete the undergraduate of degrees which is higher than 2002 .",
            "in step 2 , you should delete the campus of enrollments which is higher than 2002 .",
            "in step 2 , you should delete the fte ay of enrollments which is higher than 2002 .",
            "in step 2 , you should delete the id of faculty which is higher than 2002 .",
            "in step 2 , you should delete the county of degrees which is higher than 2002 .",
            "in step 2 , you should delete the campus fee of faculty which is higher than 2002 .",
            "in step 2 , you should delete the campus of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the discipline of enrollments which is higher than 2002 .",
            "in step 2 , you should delete the discipline of csu fees which is higher than 2002 .",
            "in step 2 , you should delete the graduate of campuses which is higher than 2002 .",
            "in step 2 , you should delete the year of enrollments which is higher than 2002 .",
            "in step 2 , you should delete the campus fee of campuses which is higher than 2002 .",
            "in step 2 , you should delete the totalenrollment ay of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the fte ay of campuses which is higher than 2002 .",
            "in step 2 , you should delete the discipline of degrees which is higher than 2002 .",
            "in step 2 , you should delete the id of campuses which is higher than 2002 .",
            "in step 2 , you should delete the year of totalenrollment ay which is higher than 2002 .",
            "in step 2 , you should delete the year of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the graduate of degrees which is higher than 2002 .",
            "in step 2 , you should delete the graduate of enrollments which is higher than 2002 .",
            "in step 2 , you should delete the campus of campuses which is higher than 2002 .",
            "in step 2 , you should delete the degrees of faculty which is higher than 2002 .",
            "in step 2 , you should delete the undergraduate of campuses which is higher than 2002 .",
            "in step 2 , you should delete the year of id which is higher than 2002 .",
            "in step 2 , you should delete the graduate of discipline enrollments which is higher than 2002 .",
            "in step 2 , you should delete the discipline of campuses which is higher than 2002 .",
            "in step 2 , you should delete the totalenrollment ay of enrollments which is higher than 2002 .",
            "in step 2 , you should delete the graduate of faculty which is higher than 2002 .",
            "in step 2 , you should delete the year of discipline which is higher than 2002 .",
            "in step 2 , you should delete the totalenrollment ay of degrees which is higher than 2002 .",
            "in step 2 , you should delete the location of degrees which is higher than 2002 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the movie table and rating table besides the reviewer table . additionally make sure that title equals Gone with the Wind .",
        "primary_span": [
            [
                0,
                10
            ],
            [
                16,
                26
            ]
        ],
        "secondary_span": [
            [
                11,
                15
            ]
        ],
        "positive_example": "You have to be sure that Gone is reviewed by them along with the Wind Movie.",
        "negative_examples": [
            "you have to be sure that gone is reviewed by them along with the wind reviewer .",
            "you have to be sure that gone is reviewed by them along with the wind rating ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 3 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                22
            ],
            [
                31,
                37
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                23,
                30
            ],
            [
                38,
                43
            ]
        ],
        "positive_example": "I don't want the average value of degrees in step 2.",
        "negative_examples": [
            "i do n't want the average value of campuses in step 2 .",
            "i do n't want the average value of csu fees in step 2 .",
            "i do n't want the average value of discipline enrollments in step 2 .",
            "i do n't want the average value of enrollments in step 2 .",
            "i do n't want the average value of faculty in step 2 .",
            "i do n't want the average value of id in step 2 .",
            "i do n't want the average value of campus in step 2 .",
            "i do n't want the average value of location in step 2 .",
            "i do n't want the average value of county in step 2 .",
            "i do n't want the average value of year in step 2 .",
            "i do n't want the average value of campus fee in step 2 .",
            "i do n't want the average value of discipline in step 2 .",
            "i do n't want the average value of undergraduate in step 2 .",
            "i do n't want the average value of graduate in step 2 .",
            "i do n't want the average value of totalenrollment ay in step 2 .",
            "i do n't want the average value of fte ay in step 2 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the csu fees table . consider the campuses 's campus equals San Jose State University conditions in place of the csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                24
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                25,
                39
            ]
        ],
        "positive_example": "Need to make sure Campuses's campus equals San Jose State University and not year .",
        "negative_examples": [
            "need to make sure id 's campus equals san jose state university and not year .",
            "need to make sure location 's campus equals san jose state university and not year .",
            "need to make sure county 's campus equals san jose state university and not year .",
            "need to make sure campus fee 's campus equals san jose state university and not year .",
            "need to make sure degrees 's campus equals san jose state university and not year .",
            "need to make sure discipline 's campus equals san jose state university and not year .",
            "need to make sure undergraduate 's campus equals san jose state university and not year .",
            "need to make sure graduate 's campus equals san jose state university and not year .",
            "need to make sure totalenrollment ay 's campus equals san jose state university and not year .",
            "need to make sure fte ay 's campus equals san jose state university and not year .",
            "need to make sure faculty 's campus equals san jose state university and not year .",
            "need to make sure campuses 's campus equals san jose state university and not id .",
            "need to make sure campuses 's campus equals san jose state university and not location .",
            "need to make sure campuses 's campus equals san jose state university and not county .",
            "need to make sure campuses 's campus equals san jose state university and not campus fee .",
            "need to make sure campuses 's campus equals san jose state university and not degrees .",
            "need to make sure campuses 's campus equals san jose state university and not discipline .",
            "need to make sure campuses 's campus equals san jose state university and not undergraduate .",
            "need to make sure campuses 's campus equals san jose state university and not graduate .",
            "need to make sure campuses 's campus equals san jose state university and not totalenrollment ay .",
            "need to make sure campuses 's campus equals san jose state university and not fte ay .",
            "need to make sure campuses 's campus equals san jose state university and not faculty ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use movie table in place of reviewer table . find for each value of director whose number of rows equals 1 . find director in place of name . permit repetitions in the results .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                21
            ],
            [
                22,
                23
            ],
            [
                29,
                34
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                24,
                28
            ]
        ],
        "positive_example": "Replace name of reviewer with director of movie table , make sure director had 1 movie .",
        "negative_examples": [
            "replace name of reviewer with director of rating table , make sure director had 1 movie .",
            "replace name of rating with director of movie table , make sure director had 1 movie .",
            "replace name of reviewer with movie id of movie table , make sure director had 1 movie .",
            "replace name of reviewer with title of movie table , make sure director had 1 movie .",
            "replace name of reviewer with year of movie table , make sure director had 1 movie .",
            "replace name of reviewer with reviewer id of movie table , make sure director had 1 movie .",
            "replace name of reviewer with rating stars of movie table , make sure director had 1 movie .",
            "replace name of reviewer with rating date of movie table , make sure director had 1 movie .",
            "replace movie id of reviewer with director of movie table , make sure director had 1 movie .",
            "replace title of reviewer with director of movie table , make sure director had 1 movie .",
            "replace year of reviewer with director of movie table , make sure director had 1 movie .",
            "replace reviewer id of reviewer with director of movie table , make sure director had 1 movie .",
            "replace rating stars of reviewer with director of movie table , make sure director had 1 movie .",
            "replace rating date of reviewer with director of movie table , make sure director had 1 movie .",
            "replace name of reviewer with movie id of rating table , make sure movie id had 1 movie .",
            "replace name of reviewer with title of rating table , make sure title had 1 movie .",
            "replace name of reviewer with year of rating table , make sure year had 1 movie .",
            "replace name of reviewer with reviewer id of rating table , make sure reviewer id had 1 movie .",
            "replace name of reviewer with rating stars of rating table , make sure rating stars had 1 movie .",
            "replace name of reviewer with rating date of rating table , make sure rating date had 1 movie .",
            "replace movie id of reviewer with director of rating table , make sure director had 1 movie .",
            "replace title of reviewer with director of rating table , make sure director had 1 movie .",
            "replace year of reviewer with director of rating table , make sure director had 1 movie .",
            "replace reviewer id of reviewer with director of rating table , make sure director had 1 movie .",
            "replace rating stars of reviewer with director of rating table , make sure director had 1 movie .",
            "replace rating date of reviewer with director of rating table , make sure director had 1 movie .",
            "replace name of rating with movie id of movie table , make sure movie id had 1 movie .",
            "replace name of rating with title of movie table , make sure title had 1 movie .",
            "replace name of rating with year of movie table , make sure year had 1 movie .",
            "replace name of rating with reviewer id of movie table , make sure reviewer id had 1 movie .",
            "replace name of rating with rating stars of movie table , make sure rating stars had 1 movie .",
            "replace name of rating with rating date of movie table , make sure rating date had 1 movie .",
            "replace movie id of rating with director of movie table , make sure director had 1 movie .",
            "replace title of rating with director of movie table , make sure director had 1 movie .",
            "replace year of rating with director of movie table , make sure director had 1 movie .",
            "replace reviewer id of rating with director of movie table , make sure director had 1 movie .",
            "replace rating stars of rating with director of movie table , make sure director had 1 movie .",
            "replace rating date of rating with director of movie table , make sure director had 1 movie ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building address equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "Use bedroom count instead of bathroom count and make sure building short name is Columbus Square. Ignore \"building address equals Columbus Square\".",
        "negative_examples": [
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" date of birth equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" facility code equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building phone is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure guest first name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" building description equals columbus square \" .",
            "use bedroom count instead of facility code and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" apartment booking id equals columbus square \" .",
            "use bedroom count instead of apartment number and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bedroom count and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" booking start date equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure guest id is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" available yes or no equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" room count equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure date of birth is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" guest last name equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure status date is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" status date equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure apartment id is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building manager is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" apartment number equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure room count is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of building phone and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" bedroom count equals columbus square \" .",
            "use bedroom count instead of booking status code and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of apartment type code and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" building manager equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building description is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" building phone equals columbus square \" .",
            "use bedroom count instead of building id and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure apartment booking id is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure booking status code is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of guest id and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of date of birth and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of guest last name and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" guest id equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure bedroom count is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure facility code is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of available yes or no and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" booking status code equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" booking end date equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure gender code is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of booking start date and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of status date and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure building short name is columbus square . ignore \" guest first name equals columbus square \" .",
            "use bedroom count instead of gender code and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure booking start date is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure available yes or no is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure apartment number is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of building manager and make sure building short name is columbus square . ignore \" building address equals columbus square \" .",
            "use bedroom count instead of bathroom count and make sure apartment type code is columbus square . ignore \" building address equals columbus square \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use reviewer table in place of movie table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "you need to label reviewer table instead of movie table.",
        "negative_examples": [
            "you need to label reviewer table instead of rating table .",
            "you need to label rating table instead of movie table ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the county equals Los Angeles and campuses 's year greater than 1950 conditions in place of the campuses 's campus equals Los Angeles and faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                54
            ]
        ],
        "positive_example": "Show campuses ' campuses whose county equals Los Angeles and year greater than 1950.",
        "negative_examples": [
            "show id ' campuses whose county equals los angeles and year greater than 1950 .",
            "show location ' campuses whose county equals los angeles and year greater than 1950 .",
            "show campus fee ' campuses whose county equals los angeles and year greater than 1950 .",
            "show degrees ' campuses whose county equals los angeles and year greater than 1950 .",
            "show discipline ' campuses whose county equals los angeles and year greater than 1950 .",
            "show undergraduate ' campuses whose county equals los angeles and year greater than 1950 .",
            "show graduate ' campuses whose county equals los angeles and year greater than 1950 .",
            "show totalenrollment ay ' campuses whose county equals los angeles and year greater than 1950 .",
            "show fte ay ' campuses whose county equals los angeles and year greater than 1950 .",
            "show faculty ' campuses whose county equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose id equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose location equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose campus fee equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose degrees equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose discipline equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose undergraduate equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose graduate equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose totalenrollment ay equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose fte ay equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose faculty equals los angeles and year greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and id greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and location greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and campus fee greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and degrees greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and discipline greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and undergraduate greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and graduate greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and totalenrollment ay greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and fte ay greater than 1950 .",
            "show campuses ' campuses whose county equals los angeles and faculty greater than 1950 ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , use chip model table in place of screen mode table . make sure the model name is not one of the results of step 1 the hardware colours is not one of the results of step 1 . find average ram mib in place of average hardware colours .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                15,
                28
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ],
            [
                29,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "Replace chip model with model name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
        "negative_examples": [
            "replace chip model with type , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace pixels with model name , phone with chip pixels hardware colours with ram mib , phone with chip model pixels",
            "replace phone with accreditation level , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , char cells with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , company name with ram mib , screen mode with chip model .",
            "replace phone with graphics mode , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with graphics mode , screen mode with chip model .",
            "replace pixels with model name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace chip model with type , phone with chip model , hardware colours with ram mib , phone with chip model .",
            "replace phone with hardware model name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with slots , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with ram mib , wifi with chip model .",
            "replace phone with model name , phone with chip model , used kb with ram mib , screen mode with chip model .",
            "replace date with model name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace map with model name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with company name , phone with chip model .",
            "replace chip model with accreditation level , phone with chip model , hardware colours with ram mib , phone with chip model .",
            "replace chip model with date , phone with chip model , hardware colours with ram mib , phone with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with ram mib , graphics mode with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with rom mib , screen mode with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with graphics mode , screen mode with chip model .",
            "replace chip model with company name , phone with chip model , hardware colours with ram mib , phone with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with ram mib , type with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with company name , screen mode with chip model .",
            "replace phone with accreditation type , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , bluetooth with ram mib , phone with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with ram mib , company name with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with hardware model name , phone with chip model .",
            "replace chip model with model name , phone with chip model , launch year with ram mib , screen mode with chip model .",
            "replace phone with model name , phone with chip model , hardware model name with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , wifi with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with used kb , screen mode with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with ram mib , type with chip model .",
            "replace chip model with model name , phone with chip model , wifi with ram mib , phone with chip model .",
            "replace chip model with model name , phone with chip model , rom mib with ram mib , screen mode with chip model .",
            "replace accreditation level with model name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace phone with company name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with ram mib , launch year with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with date , screen mode with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with type , screen mode with chip model .",
            "replace char cells with model name , phone with chip char cells hardware colours with ram mib , phone with chip model char cells",
            "replace wifi with model name , phone with chip wifi hardware colours with ram mib , phone with chip model wifi",
            "replace chip model with model name , phone with chip model , hardware colours with wifi , phone with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with ram mib , pixels with chip model .",
            "replace chip model with wifi , phone with chip model , hardware colours with ram mib , phone with chip model .",
            "replace chip model with model name , phone with chip model , hardware colours with char cells , phone with chip model .",
            "replace phone with model name , phone with chip model , bluetooth with ram mib , screen mode with chip model .",
            "replace phone with model name , phone with chip model , map with ram mib , screen mode with chip model .",
            "replace graphics mode with model name , phone with chip model , hardware colours with ram mib , screen mode with chip model .",
            "replace phone with model name , phone with chip model , hardware colours with launch year , screen mode with chip model ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the degrees 's year equals 2001 conditions in place of the faculty 's year equals 2001 conditions . find degrees in place of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                27
            ],
            [
                39,
                40
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                28,
                38
            ],
            [
                41,
                45
            ]
        ],
        "positive_example": "Ensure to correlate it with degree table in step 1 and in step 2, use degrees in place of graduate.",
        "negative_examples": [
            "ensure to correlate it with degree table in step 1 and in step 2 , use csu fees in place of fte ay .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use csu fees in place of year .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of faculty .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of county .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use faculty in place of undergraduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of fte ay .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of campus fee .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use degrees in place of discipline .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of location .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of location .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of undergraduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campus in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of discipline .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of totalenrollment ay .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of campus .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of location .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of faculty .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use csu fees in place of undergraduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of year .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of discipline .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use csu fees in place of totalenrollment ay .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use faculty in place of county .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use csu fees in place of discipline .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of campus fee .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use faculty in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use csu fees in place of campus .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of year .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use totalenrollment ay in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use degrees in place of fte ay .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of county .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use degrees in place of faculty .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use faculty in place of year .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use location in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use faculty in place of totalenrollment ay .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of year .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of faculty .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use faculty in place of campus fee .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use csu fees in place of faculty .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of campus .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use enrollments in place of id .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use faculty in place of campus .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campuses in place of county .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use discipline enrollments in place of id .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use id in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use campus fee in place of graduate .",
            "ensure to correlate it with degree table in step 1 and in step 2 , use degrees in place of location ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use staff table in place of customers table in step 2 , consider the staff 's first name equals Janessa and staff 's last name equals Sawayn conditions in place of the state province county equals Sawayn and customers 's first name equals Janessa conditions . additionally find state province county .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                31
            ],
            [
                50,
                55
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                32,
                49
            ]
        ],
        "positive_example": "In step 1 and 2, I want staff and last name instead of customers and state province county respectively. Also, then search state province county.",
        "negative_examples": [
            "in step 1 and 2 , i want addresses and price instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want lessons and date became customer instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want customer payments and payment method code instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want lessons and address id instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want customer payments and last name instead of customers and zip postcode respectively . also , then search state province zip postcode",
            "in step 1 and 2 , i want staff and last name instead of customer payments and customer address id respectively . also , then search state province customer address id",
            "in step 1 and 2 , i want staff and vehicle details instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want lessons and last name instead of customers and lesson date respectively . also , then search state province lesson date",
            "in step 1 and 2 , i want staff and last name instead of customers and lesson status code respectively . also , then search state province county .",
            "in step 1 and 2 , i want customer payments and last name instead of customers and country respectively . also , then search state province country",
            "in step 1 and 2 , i want staff and country instead of customer payments and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and last name instead of lessons and vehicle id respectively . also , then search state province vehicle id",
            "in step 1 and 2 , i want staff and last name instead of vehicles and customer address id respectively . also , then search state province customer address id",
            "in step 1 and 2 , i want vehicles and country instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want vehicles and last name instead of customers and amount outstanding respectively . also , then search state province amount outstanding",
            "in step 1 and 2 , i want staff and last name instead of vehicles and middle name respectively . also , then search state province middle name",
            "in step 1 and 2 , i want lessons and last name instead of customers and vehicle id respectively . also , then search state province vehicle id",
            "in step 1 and 2 , i want lessons and last name instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and date joined staff instead of vehicles and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want vehicles and last name instead of customers and price respectively . also , then search state province price",
            "in step 1 and 2 , i want staff and staff id instead of customer payments and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want vehicles and last name instead of customers and staff address id respectively . also , then search state province staff address id",
            "in step 1 and 2 , i want staff and date of birth instead of vehicles and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and staff id instead of addresses and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and lesson time instead of vehicles and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and phone number instead of customer payments and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and amount outstanding instead of vehicles and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want addresses and last name instead of customers and middle name respectively . also , then search state province middle name",
            "in step 1 and 2 , i want staff and lesson date instead of lessons and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and first name instead of customer payments and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and last name instead of addresses and phone number respectively . also , then search state province phone number",
            "in step 1 and 2 , i want staff and date left staff instead of addresses and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want lessons and last name instead of customers and customer id respectively . also , then search state province customer id",
            "in step 1 and 2 , i want staff and line 1 number building instead of vehicles and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want addresses and amount outstanding instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and lesson id instead of customer payments and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and last name instead of addresses and payment method code respectively . also , then search state province payment method code",
            "in step 1 and 2 , i want staff and lesson time instead of customer payments and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want addresses and customer id instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and amount outstanding instead of lessons and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and last name instead of customers and phone number respectively . also , then search state province county .",
            "in step 1 and 2 , i want vehicles and last name instead of customers and zip postcode respectively . also , then search state province zip postcode",
            "in step 1 and 2 , i want addresses and customer status code instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and price instead of lessons and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want lessons and lesson time instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want lessons and payment method code instead of customers and state province county respectively . also , then search state province county .",
            "in step 1 and 2 , i want staff and last name instead of lessons and zip postcode respectively . also , then search state province zip postcode",
            "in step 1 and 2 , i want addresses and last name instead of customers and customer address id respectively . also , then search state province customer address id",
            "in step 1 and 2 , i want staff and last name instead of customer payments and lesson status code respectively . also , then search state province lesson status code",
            "in step 1 and 2 , i want customer payments and last name instead of customers and line 1 number building respectively . also , then search state province line 1 number building"
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                25,
                29
            ]
        ],
        "secondary_span": [
            [
                13,
                24
            ],
            [
                30,
                37
            ]
        ],
        "positive_example": "Supersede bathroom count with room count ' in step 2.",
        "negative_examples": [
            "supersede building id with room count ' in step 2 .",
            "supersede building short name with room count ' in step 2 .",
            "supersede building full name with room count ' in step 2 .",
            "supersede building description with room count ' in step 2 .",
            "supersede building address with room count ' in step 2 .",
            "supersede building manager with room count ' in step 2 .",
            "supersede building phone with room count ' in step 2 .",
            "supersede apartment id with room count ' in step 2 .",
            "supersede apartment type code with room count ' in step 2 .",
            "supersede apartment number with room count ' in step 2 .",
            "supersede bedroom count with room count ' in step 2 .",
            "supersede room count with room count ' in step 2 .",
            "supersede facility code with room count ' in step 2 .",
            "supersede guest id with room count ' in step 2 .",
            "supersede gender code with room count ' in step 2 .",
            "supersede guest first name with room count ' in step 2 .",
            "supersede guest last name with room count ' in step 2 .",
            "supersede date of birth with room count ' in step 2 .",
            "supersede apartment booking id with room count ' in step 2 .",
            "supersede booking status code with room count ' in step 2 .",
            "supersede booking start date with room count ' in step 2 .",
            "supersede booking end date with room count ' in step 2 .",
            "supersede status date with room count ' in step 2 .",
            "supersede available yes or no with room count ' in step 2 ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 3 , additionally find rating 's movie id . order the results by number of rows in place of summation of rating stars .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                11,
                17
            ]
        ],
        "secondary_span": [
            [
                18,
                25
            ]
        ],
        "positive_example": "From the rating table, I need to count the all the rows with Movie ID.",
        "negative_examples": [
            "from the movie table , i need to count the all the rows with movie id .",
            "from the reviewer table , i need to count the all the rows with movie id .",
            "from the rating table , i need to count the all the rows with title .",
            "from the rating table , i need to count the all the rows with year .",
            "from the rating table , i need to count the all the rows with director .",
            "from the rating table , i need to count the all the rows with reviewer id .",
            "from the rating table , i need to count the all the rows with name .",
            "from the rating table , i need to count the all the rows with rating stars .",
            "from the rating table , i need to count the all the rows with rating date .",
            "from the movie table , i need to count the all the rows with title .",
            "from the movie table , i need to count the all the rows with year .",
            "from the movie table , i need to count the all the rows with director .",
            "from the movie table , i need to count the all the rows with reviewer id .",
            "from the movie table , i need to count the all the rows with name .",
            "from the movie table , i need to count the all the rows with rating stars .",
            "from the movie table , i need to count the all the rows with rating date .",
            "from the reviewer table , i need to count the all the rows with title .",
            "from the reviewer table , i need to count the all the rows with year .",
            "from the reviewer table , i need to count the all the rows with director .",
            "from the reviewer table , i need to count the all the rows with reviewer id .",
            "from the reviewer table , i need to count the all the rows with name .",
            "from the reviewer table , i need to count the all the rows with rating stars .",
            "from the reviewer table , i need to count the all the rows with rating date ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , do not use the screen mode table and chip model table . in step 3 , consider the accreditation type equals Full conditions in place of the type equals Full conditions .",
        "primary_span": [
            [
                4,
                15
            ],
            [
                20,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                15
            ],
            [
                27,
                35
            ]
        ],
        "positive_example": "There should be accreditation type , not type .",
        "negative_examples": [
            "there should be model name , not type .",
            "there should be launch year , not type .",
            "there should be ram mib , not type .",
            "there should be rom mib , not type .",
            "there should be slots , not type .",
            "there should be wifi , not type .",
            "there should be bluetooth , not type .",
            "there should be graphics mode , not type .",
            "there should be char cells , not type .",
            "there should be pixels , not type .",
            "there should be hardware colours , not type .",
            "there should be used kb , not type .",
            "there should be map , not type .",
            "there should be type , not type .",
            "there should be company name , not type .",
            "there should be hardware model name , not type .",
            "there should be accreditation level , not type .",
            "there should be date , not type .",
            "there should be chip model , not type .",
            "there should be screen mode , not type ."
        ],
        "neg_len": 20
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "Find campuses equals San Jose State University instead of faculty year , ensure csu fees year equals 1996.",
        "negative_examples": [
            "find campuses equals san jose state university instead of enrollments totalenrollment ay , ensure csu fees totalenrollment ay equals 1996 .",
            "find campuses equals san jose state university instead of degrees campus fee , ensure csu fees campus fee equals 1996 .",
            "find campuses equals san jose state university instead of faculty campus fee , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of csu fees year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments id , ensure csu fees id equals 1996 .",
            "find campuses equals san jose state university instead of campuses fte ay , ensure csu fees fte ay equals 1996 .",
            "find campuses equals san jose state university instead of degrees totalenrollment ay , ensure csu fees totalenrollment ay equals 1996 .",
            "find campuses equals san jose state university instead of totalenrollment ay year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of degrees county , ensure csu fees county equals 1996 .",
            "find campuses equals san jose state university instead of campuses county , ensure csu fees county equals 1996 .",
            "find campuses equals san jose state university instead of enrollments undergraduate , ensure csu fees undergraduate equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments degrees , ensure csu fees degrees equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments location , ensure csu fees location equals 1996 .",
            "find campuses equals san jose state university instead of undergraduate year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of enrollments fte ay , ensure csu fees fte ay equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments campus fee , ensure csu fees campus fee equals 1996 .",
            "find campuses equals san jose state university instead of csu fees discipline , ensure csu fees discipline equals 1996 .",
            "find campuses equals san jose state university instead of faculty undergraduate , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of csu fees id , ensure csu fees id equals 1996 .",
            "find campuses equals san jose state university instead of degrees fte ay , ensure csu fees fte ay equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments fte ay , ensure csu fees fte ay equals 1996 .",
            "find county equals san jose state university instead of faculty year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of campuses degrees , ensure csu fees degrees equals 1996 .",
            "find campuses equals san jose state university instead of campuses undergraduate , ensure csu fees undergraduate equals 1996 .",
            "find fte ay equals san jose state university instead of faculty year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of graduate year , ensure csu fees year equals 1996 .",
            "find id equals san jose state university instead of faculty year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of county year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of degrees degrees , ensure csu fees degrees equals 1996 .",
            "find campuses equals san jose state university instead of enrollments graduate , ensure csu fees graduate equals 1996 .",
            "find campuses equals san jose state university instead of enrollments discipline , ensure csu fees discipline equals 1996 .",
            "find campuses equals san jose state university instead of degrees discipline , ensure csu fees discipline equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments county , ensure csu fees county equals 1996 .",
            "find campuses equals san jose state university instead of campus fee year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of degrees location , ensure csu fees location equals 1996 .",
            "find campuses equals san jose state university instead of csu fees graduate , ensure csu fees graduate equals 1996 .",
            "find campuses equals san jose state university instead of csu fees undergraduate , ensure csu fees undergraduate equals 1996 .",
            "find campuses equals san jose state university instead of campuses year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments discipline , ensure csu fees discipline equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments undergraduate , ensure csu fees undergraduate equals 1996 .",
            "find campuses equals san jose state university instead of faculty degrees , ensure csu fees year equals 1996 .",
            "find location equals san jose state university instead of faculty year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of csu fees totalenrollment ay , ensure csu fees totalenrollment ay equals 1996 .",
            "find campuses equals san jose state university instead of degrees id , ensure csu fees id equals 1996 .",
            "find campuses equals san jose state university instead of enrollments location , ensure csu fees location equals 1996 .",
            "find totalenrollment ay equals san jose state university instead of faculty year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of id year , ensure csu fees year equals 1996 .",
            "find campuses equals san jose state university instead of csu fees location , ensure csu fees location equals 1996 .",
            "find campuses equals san jose state university instead of faculty totalenrollment ay , ensure csu fees year equals 1996 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the customers table . remove the last name equals Bernhard conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                20
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "The 'Customers table' should  be rename to 'lessons table' .Meanwhile consider removal of \" and last name equals Bernhard\" from it. ",
        "negative_examples": [
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and line 1 number building equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and lesson time equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and price equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and zip postcode equals bernhard \" from it .",
            "the 'customers table ' should be rename to customer payments table ' .meanwhile consider removal of \" and address id equals bernhard \" from it .",
            "the 'customers table ' should be rename to customers table ' .meanwhile consider removal of \" and customer status code equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and line 1 number building equals bernhard \" from it .",
            "the 'customers table ' should be rename to customers table ' .meanwhile consider removal of \" and price equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and lesson date equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and state province county equals bernhard \" from it .",
            "the 'customers table ' should be rename to customers table ' .meanwhile consider removal of \" and first name equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and cell mobile phone number equals bernhard \" from it .",
            "the 'customers table ' should be rename to customer payments table ' .meanwhile consider removal of \" and lesson id equals bernhard \" from it .",
            "the 'customers table ' should be rename to customers table ' .meanwhile consider removal of \" and line 1 number building equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and middle name equals bernhard \" from it .",
            "the 'customers table ' should be rename to 'lessons table ' .meanwhile consider removal of \" and date joined staff equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and phone number equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and vehicle details equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and country equals bernhard \" from it .",
            "the 'customers table ' should be rename to customer payments table ' .meanwhile consider removal of \" and lesson status code equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and address id equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and last name equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and date joined staff equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and lesson date equals bernhard \" from it .",
            "the 'customers table ' should be rename to 'lessons table ' .meanwhile consider removal of \" and payment method code equals bernhard \" from it .",
            "the 'customers table ' should be rename to 'lessons table ' .meanwhile consider removal of \" and email address equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and first name equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and lesson status code equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and cell mobile phone number equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and payment method code equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and email address equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and customer id equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and last name equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and lesson id equals bernhard \" from it .",
            "the 'customers table ' should be rename to customer payments table ' .meanwhile consider removal of \" and staff id equals bernhard \" from it .",
            "the 'customers table ' should be rename to customers table ' .meanwhile consider removal of \" and state province county equals bernhard \" from it .",
            "the 'customers table ' should be rename to customers table ' .meanwhile consider removal of \" and staff id equals bernhard \" from it .",
            "the 'customers table ' should be rename to customer payments table ' .meanwhile consider removal of \" and customer status code equals bernhard \" from it .",
            "the 'customers table ' should be rename to 'lessons table ' .meanwhile consider removal of \" and nickname equals bernhard \" from it .",
            "the 'customers table ' should be rename to 'lessons table ' .meanwhile consider removal of \" and amount outstanding equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and date became customer equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and vehicle id equals bernhard \" from it .",
            "the 'customers table ' should be rename to vehicles table ' .meanwhile consider removal of \" and date joined staff equals bernhard \" from it .",
            "the 'customers table ' should be rename to addresses table ' .meanwhile consider removal of \" and date became customer equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and line 1 number building equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and amount outstanding equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and customer status code equals bernhard \" from it .",
            "the 'customers table ' should be rename to staff table ' .meanwhile consider removal of \" and amount payment equals bernhard \" from it .",
            "the 'customers table ' should be rename to customer payments table ' .meanwhile consider removal of \" and date became customer equals bernhard \" from it .",
            "the 'customers table ' should be rename to 'lessons table ' .meanwhile consider removal of \" and middle name equals bernhard \" from it ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally find first name .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "In addition to middle name and last name , also show first name .",
        "negative_examples": [
            "in addition to middle name and last name , also show address id .",
            "in addition to middle name and last name , also show line 1 number building .",
            "in addition to middle name and last name , also show city .",
            "in addition to middle name and last name , also show zip postcode .",
            "in addition to middle name and last name , also show state province county .",
            "in addition to middle name and last name , also show country .",
            "in addition to middle name and last name , also show staff id .",
            "in addition to middle name and last name , also show staff address id .",
            "in addition to middle name and last name , also show nickname .",
            "in addition to middle name and last name , also show middle name .",
            "in addition to middle name and last name , also show last name .",
            "in addition to middle name and last name , also show date of birth .",
            "in addition to middle name and last name , also show date joined staff .",
            "in addition to middle name and last name , also show date left staff .",
            "in addition to middle name and last name , also show vehicle id .",
            "in addition to middle name and last name , also show vehicle details .",
            "in addition to middle name and last name , also show customer id .",
            "in addition to middle name and last name , also show customer address id .",
            "in addition to middle name and last name , also show customer status code .",
            "in addition to middle name and last name , also show date became customer .",
            "in addition to middle name and last name , also show amount outstanding .",
            "in addition to middle name and last name , also show email address .",
            "in addition to middle name and last name , also show phone number .",
            "in addition to middle name and last name , also show cell mobile phone number .",
            "in addition to middle name and last name , also show datetime payment .",
            "in addition to middle name and last name , also show payment method code .",
            "in addition to middle name and last name , also show amount payment .",
            "in addition to middle name and last name , also show lesson id .",
            "in addition to middle name and last name , also show lesson status code .",
            "in addition to middle name and last name , also show lesson date .",
            "in addition to middle name and last name , also show lesson time .",
            "in addition to middle name and last name , also show price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Delete faculty's year which says 1996 and determine the campuses whose value is CSU along with csu fee's year.",
        "negative_examples": [
            "delete discipline enrollments 's campus fee which says 1996 and determine the campuses whose value is csu along with csu fee 's campus fee .",
            "delete discipline enrollments 's undergraduate which says 1996 and determine the campuses whose value is csu along with csu fee 's undergraduate .",
            "delete faculty 's campus which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete discipline enrollments 's graduate which says 1996 and determine the campuses whose value is csu along with csu fee 's graduate .",
            "delete degrees 's campus fee which says 1996 and determine the campuses whose value is csu along with csu fee 's campus fee .",
            "delete csu fees 's location which says 1996 and determine the campuses whose value is csu along with csu fee 's location .",
            "delete discipline enrollments 's totalenrollment ay which says 1996 and determine the campuses whose value is csu along with csu fee 's totalenrollment ay .",
            "delete degrees 's location which says 1996 and determine the campuses whose value is csu along with csu fee 's location .",
            "delete degrees 's degrees which says 1996 and determine the campuses whose value is csu along with csu fee 's degrees .",
            "delete degrees 's graduate which says 1996 and determine the campuses whose value is csu along with csu fee 's graduate .",
            "delete campuses 's county which says 1996 and determine the campuses whose value is csu along with csu fee 's county .",
            "delete csu fees 's totalenrollment ay which says 1996 and determine the campuses whose value is csu along with csu fee 's totalenrollment ay .",
            "delete campuses 's fte ay which says 1996 and determine the campuses whose value is csu along with csu fee 's fte ay .",
            "delete discipline enrollments 's county which says 1996 and determine the campuses whose value is csu along with csu fee 's county .",
            "delete discipline 's year which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete csu fees 's graduate which says 1996 and determine the campuses whose value is csu along with csu fee 's graduate .",
            "delete enrollments 's graduate which says 1996 and determine the campuses whose value is csu along with csu fee 's graduate .",
            "delete faculty 's degrees which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete totalenrollment ay 's year which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete discipline enrollments 's discipline which says 1996 and determine the campuses whose value is csu along with csu fee 's discipline .",
            "delete campuses 's location which says 1996 and determine the campuses whose value is csu along with csu fee 's location .",
            "delete degrees 's id which says 1996 and determine the campuses whose value is csu along with csu fee 's id .",
            "delete csu fees 's degrees which says 1996 and determine the campuses whose value is csu along with csu fee 's degrees .",
            "delete degrees 's fte ay which says 1996 and determine the campuses whose value is csu along with csu fee 's fte ay .",
            "delete degrees 's discipline which says 1996 and determine the campuses whose value is csu along with csu fee 's discipline .",
            "delete csu fees 's id which says 1996 and determine the campuses whose value is csu along with csu fee 's id .",
            "delete county 's year which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete campuses 's campus which says 1996 and determine the campuses whose value is csu along with csu fee 's campus .",
            "delete discipline enrollments 's year which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete faculty 's totalenrollment ay which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete csu fees 's discipline which says 1996 and determine the campuses whose value is csu along with csu fee 's discipline .",
            "delete faculty 's graduate which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete campuses 's graduate which says 1996 and determine the campuses whose value is csu along with csu fee 's graduate .",
            "delete csu fees 's fte ay which says 1996 and determine the campuses whose value is csu along with csu fee 's fte ay .",
            "delete faculty 's fte ay which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete campuses 's id which says 1996 and determine the campuses whose value is csu along with csu fee 's id .",
            "delete campuses 's campus fee which says 1996 and determine the campuses whose value is csu along with csu fee 's campus fee .",
            "delete enrollments 's discipline which says 1996 and determine the campuses whose value is csu along with csu fee 's discipline .",
            "delete campuses 's year which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete enrollments 's undergraduate which says 1996 and determine the campuses whose value is csu along with csu fee 's undergraduate .",
            "delete csu fees 's campus fee which says 1996 and determine the campuses whose value is csu along with csu fee 's campus fee .",
            "delete fte ay 's year which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete enrollments 's location which says 1996 and determine the campuses whose value is csu along with csu fee 's location .",
            "delete enrollments 's degrees which says 1996 and determine the campuses whose value is csu along with csu fee 's degrees .",
            "delete enrollments 's fte ay which says 1996 and determine the campuses whose value is csu along with csu fee 's fte ay .",
            "delete faculty 's county which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete degrees 's county which says 1996 and determine the campuses whose value is csu along with csu fee 's county .",
            "delete discipline enrollments 's location which says 1996 and determine the campuses whose value is csu along with csu fee 's location .",
            "delete degrees 's year which says 1996 and determine the campuses whose value is csu along with csu fee 's year .",
            "delete faculty 's discipline which says 1996 and determine the campuses whose value is csu along with csu fee 's year ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "use store table and store district table in place of district table . additionally make sure that store district 's district id is equals district 's district id district with largest city population . find store name in place of district name . you should not find the largest of the results . show me all the results .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                33
            ],
            [
                34,
                36
            ],
            [
                43,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                37,
                42
            ]
        ],
        "positive_example": "There should be store's store name instead of district name of district table .",
        "negative_examples": [
            "there should be store 's store name instead of dimensions of district table .",
            "there should be store district 's headquartered city instead of district name of district table .",
            "there should be store product 's store name instead of store id of district table .",
            "there should be store district 's store name instead of district name of district table .",
            "there should be district 's store name instead of dimensions of district table .",
            "there should be store district 's store name instead of product of district table .",
            "there should be store product 's interface instead of district name of district table .",
            "there should be store 's max page size instead of district name of district table .",
            "there should be store district 's district id instead of district name of district table .",
            "there should be store product 's store name instead of interface of district table .",
            "there should be store district 's store name instead of district id of district table .",
            "there should be store 's store name instead of product id of district table .",
            "there should be district 's type instead of district name of district table .",
            "there should be store district 's store name instead of area size of district table .",
            "there should be product 's store name instead of number of product category of district table .",
            "there should be product 's store name instead of district name of district table .",
            "there should be product 's store name instead of type of district table .",
            "there should be dimensions 's store name instead of district name of district table .",
            "there should be product 's store id instead of district name of district table .",
            "there should be store 's city area instead of district name of district table .",
            "there should be store 's store name instead of type of district table .",
            "there should be store district 's store name instead of city area of district table .",
            "there should be store product 's district id instead of district name of district table .",
            "there should be store district 's store name instead of type of district table .",
            "there should be district 's product instead of district name of district table .",
            "there should be store product 's store name instead of district id of district table .",
            "there should be store 's ranking instead of district name of district table .",
            "there should be store district 's store name instead of city population of district table .",
            "there should be district 's ranking instead of district name of district table .",
            "there should be product 's store name instead of interface of district table .",
            "there should be city area 's store name instead of district name of district table .",
            "there should be store product 's city area instead of district name of district table .",
            "there should be product 's headquartered city instead of district name of district table .",
            "there should be city population 's store name instead of district name of district table .",
            "there should be ranking 's store name instead of district name of district table .",
            "there should be district 's number of product category instead of district name of district table .",
            "there should be district 's dimensions instead of district name of district table .",
            "there should be store 's store name instead of headquartered city of district table .",
            "there should be store product 's store name instead of dimensions of district table .",
            "there should be district 's max page size instead of district name of district table .",
            "there should be district 's store name instead of type of district table .",
            "there should be store 's dimensions instead of district name of district table .",
            "there should be store district 's store id instead of district name of district table .",
            "there should be store 's interface instead of district name of district table .",
            "there should be store product 's store name instead of type of district table .",
            "there should be store 's district id instead of district name of district table .",
            "there should be store 's city population instead of district name of district table .",
            "there should be product 's city area instead of district name of district table .",
            "there should be store product 's dimensions instead of district name of district table .",
            "there should be store district 's city area instead of district name of district table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find apartment number in place of bedroom count .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace bedroom count with apartment number .",
        "negative_examples": [
            "replace building id with apartment number .",
            "replace building short name with apartment number .",
            "replace building full name with apartment number .",
            "replace building description with apartment number .",
            "replace building address with apartment number .",
            "replace building manager with apartment number .",
            "replace building phone with apartment number .",
            "replace apartment id with apartment number .",
            "replace apartment type code with apartment number .",
            "replace apartment number with apartment number .",
            "replace bathroom count with apartment number .",
            "replace room count with apartment number .",
            "replace facility code with apartment number .",
            "replace guest id with apartment number .",
            "replace gender code with apartment number .",
            "replace guest first name with apartment number .",
            "replace guest last name with apartment number .",
            "replace date of birth with apartment number .",
            "replace apartment booking id with apartment number .",
            "replace booking status code with apartment number .",
            "replace booking start date with apartment number .",
            "replace booking end date with apartment number .",
            "replace status date with apartment number .",
            "replace available yes or no with apartment number ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use reference detention type table and detention table in place of reference incident type table . find for each value of detention 's detention type code in place of incident type code . in step 2 , find detention 's detention type code and detention type description in place of incident type code and incident type description .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                20,
                29
            ],
            [
                41,
                50
            ]
        ],
        "secondary_span": [
            [
                12,
                19
            ],
            [
                30,
                36
            ],
            [
                51,
                61
            ]
        ],
        "positive_example": "In step 1 find number of rows of detention id in detention table , in step 2 find detention type code , detention type description of reference address types with smallest value in step 1's results .",
        "negative_examples": [
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , other address details of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , gender of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find incident summary , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find notes id , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , date first rental of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find address id , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , email address of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find other details , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , last name of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , datetime detention end of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find teacher id , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find last name , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find date left university , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , state province county of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , zip postcode of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , middle name of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find country , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , incident type code of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , notes id of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , address id of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find state province county , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , city of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find zip postcode , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , date left university of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , teacher id of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , first name of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find date address from , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find cell mobile number , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , date incident start of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find date address to , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find line 2 , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find datetime detention start , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , date incident end of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , line 1 of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find student id , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , datetime detention start of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find other student details , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find first name , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find monthly rental , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , line 2 of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find recommendations , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find email address , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , address type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find date incident start , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , recommendations of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention id , detention type description of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , student id of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , date address from of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find detention type code , cell mobile number of reference address types with smallest value in step 1 's results .",
            "in step 1 find number of rows of detention id in detention table , in step 2 find incident id , detention type description of reference address types with smallest value in step 1 's results ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table in place of faculty table . consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year between 1939 and 1935 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                28
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                29,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "Remove faculty table and use campuses table instead, also the word \"equals or\" must be deleted.",
        "negative_examples": [
            "remove campuses table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove csu fees table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove degrees table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove discipline enrollments table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove enrollments table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove id table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove location table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove county table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove year table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove campus fee table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove discipline table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove undergraduate table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove graduate table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove totalenrollment ay table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove fte ay table and use campuses table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use id table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use location table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use county table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use year table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use campus fee table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use degrees table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use discipline table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use undergraduate table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use graduate table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use totalenrollment ay table instead , also the word \" equals or \" must be deleted .",
            "remove faculty table and use fte ay table instead , also the word \" equals or \" must be deleted ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 2 , additionally use the information from the lessons table besides the staff table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Confirm that not even a single lessons is conveyed by the staff given in the list.",
        "negative_examples": [
            "confirm that not even a single addresses is conveyed by the staff given in the list .",
            "confirm that not even a single staff is conveyed by the staff given in the list .",
            "confirm that not even a single vehicles is conveyed by the staff given in the list .",
            "confirm that not even a single customers is conveyed by the staff given in the list .",
            "confirm that not even a single customer payments is conveyed by the staff given in the list ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the discipline enrollments 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "csu fees campuses should be use in place of discipline enrollments year .",
        "negative_examples": [
            "csu fees campuses should be use in place of csu fees campus fee .",
            "csu fees campuses should be use in place of degrees id .",
            "csu fees campuses should be use in place of enrollments year .",
            "csu fees undergraduate should be use in place of discipline enrollments year .",
            "csu fees campuses should be use in place of csu fees totalenrollment ay .",
            "csu fees campuses should be use in place of enrollments graduate .",
            "csu fees campuses should be use in place of discipline enrollments id .",
            "csu fees campuses should be use in place of campuses degrees .",
            "csu fees campuses should be use in place of campuses fte ay .",
            "csu fees campuses should be use in place of degrees totalenrollment ay .",
            "csu fees campuses should be use in place of csu fees location .",
            "csu fees campus fee should be use in place of discipline enrollments year .",
            "csu fees campuses should be use in place of degrees degrees .",
            "csu fees campuses should be use in place of discipline enrollments location .",
            "csu fees campuses should be use in place of undergraduate year .",
            "csu fees county should be use in place of discipline enrollments year .",
            "csu fees faculty should be use in place of discipline enrollments year .",
            "csu fees campuses should be use in place of degrees undergraduate .",
            "csu fees campuses should be use in place of fte ay year .",
            "csu fees campuses should be use in place of faculty undergraduate .",
            "csu fees campuses should be use in place of campus fee year .",
            "csu fees campuses should be use in place of graduate year .",
            "csu fees campuses should be use in place of campuses id .",
            "csu fees campuses should be use in place of degrees campus fee .",
            "csu fees campuses should be use in place of enrollments location .",
            "csu fees campuses should be use in place of discipline enrollments degrees .",
            "csu fees degrees should be use in place of discipline enrollments year .",
            "csu fees campuses should be use in place of discipline enrollments discipline .",
            "csu fees campuses should be use in place of faculty faculty .",
            "csu fees campuses should be use in place of degrees graduate .",
            "csu fees campuses should be use in place of csu fees graduate .",
            "csu fees discipline should be use in place of discipline enrollments year .",
            "csu fees campuses should be use in place of campuses totalenrollment ay .",
            "csu fees campuses should be use in place of csu fees year .",
            "csu fees graduate should be use in place of discipline enrollments year .",
            "csu fees campuses should be use in place of degrees fte ay .",
            "csu fees campuses should be use in place of campuses graduate .",
            "csu fees campuses should be use in place of faculty county .",
            "csu fees campuses should be use in place of degrees faculty .",
            "csu fees campuses should be use in place of enrollments undergraduate .",
            "csu fees campuses should be use in place of csu fees id .",
            "csu fees campuses should be use in place of location year .",
            "csu fees campuses should be use in place of county year .",
            "csu fees campuses should be use in place of campuses faculty .",
            "csu fees campuses should be use in place of enrollments discipline .",
            "csu fees campuses should be use in place of degrees location .",
            "csu fees campuses should be use in place of campuses year .",
            "csu fees campuses should be use in place of enrollments faculty .",
            "csu fees totalenrollment ay should be use in place of discipline enrollments year .",
            "csu fees id should be use in place of discipline enrollments year ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and undergraduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "Use csu fees and campuses in place of undergraduate and csu fees year respectively.",
        "negative_examples": [
            "use csu fees and id in place of undergraduate and csu fees year respectively .",
            "use csu fees and location in place of undergraduate and csu fees year respectively .",
            "use csu fees and county in place of undergraduate and csu fees year respectively .",
            "use csu fees and campus fee in place of undergraduate and csu fees year respectively .",
            "use csu fees and degrees in place of undergraduate and csu fees year respectively .",
            "use csu fees and discipline in place of undergraduate and csu fees year respectively .",
            "use csu fees and graduate in place of undergraduate and csu fees year respectively .",
            "use csu fees and totalenrollment ay in place of undergraduate and csu fees year respectively .",
            "use csu fees and fte ay in place of undergraduate and csu fees year respectively .",
            "use csu fees and faculty in place of undergraduate and csu fees year respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees id respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees location respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees county respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees campus fee respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees degrees respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees discipline respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees graduate respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees totalenrollment ay respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees fte ay respectively .",
            "use csu fees and campuses in place of undergraduate and csu fees faculty respectively .",
            "use csu fees and campuses in place of id and csu fees year respectively .",
            "use csu fees and campuses in place of location and csu fees year respectively .",
            "use csu fees and campuses in place of county and csu fees year respectively .",
            "use csu fees and campuses in place of campus fee and csu fees year respectively .",
            "use csu fees and campuses in place of degrees and csu fees year respectively .",
            "use csu fees and campuses in place of discipline and csu fees year respectively .",
            "use csu fees and campuses in place of graduate and csu fees year respectively .",
            "use csu fees and campuses in place of totalenrollment ay and csu fees year respectively .",
            "use csu fees and campuses in place of fte ay and csu fees year respectively .",
            "use csu fees and campuses in place of faculty and csu fees year respectively ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and discipline enrollments 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                55
            ]
        ],
        "positive_example": "Looking for the campus fee of San Jose University for year 1996.",
        "negative_examples": [
            "looking for the campus fee of san jose university for id 1996 .",
            "looking for the campus fee of san jose university for campus 1996 .",
            "looking for the campus fee of san jose university for location 1996 .",
            "looking for the campus fee of san jose university for county 1996 .",
            "looking for the campus fee of san jose university for campus fee 1996 .",
            "looking for the campus fee of san jose university for degrees 1996 .",
            "looking for the campus fee of san jose university for discipline 1996 .",
            "looking for the campus fee of san jose university for undergraduate 1996 .",
            "looking for the campus fee of san jose university for graduate 1996 .",
            "looking for the campus fee of san jose university for totalenrollment ay 1996 .",
            "looking for the campus fee of san jose university for fte ay 1996 .",
            "looking for the campus fee of san jose university for faculty 1996 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Normandie Court and building full name equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                32,
                36
            ]
        ],
        "secondary_span": [
            [
                13,
                31
            ],
            [
                37,
                44
            ]
        ],
        "positive_example": "Supersede bathroom count with bedroom count , building full name with building short name , remove \"and building short name contains Normandie Court\" from step 2.",
        "negative_examples": [
            "supersede bathroom count with bedroom count , building address with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with status date , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede booking end date with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with date of birth , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with apartment number , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede status date with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with bedroom count , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bedroom count with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede booking status code with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with building id , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building id with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with building address , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with guest last name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , apartment number with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede guest last name with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with guest id , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with room count , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , date of birth with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , guest id with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede building id with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with building description , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with booking status code , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with gender code , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede room count with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede booking start date with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede apartment type code with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , bedroom count with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , apartment booking id with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , room count with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with apartment booking id , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with booking end date , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , booking status code with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , gender code with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , booking end date with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede building address with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with building phone , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building manager with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede building description with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede apartment booking id with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede guest first name with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , available yes or no with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede building manager with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede apartment id with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with apartment type code , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , apartment id with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , apartment type code with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with facility code , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede gender code with bedroom count , building full name with building short name , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with apartment id , remove \" and building short name contains normandie court \" from step 2 .",
            "supersede bathroom count with bedroom count , building full name with booking start date , remove \" and building short name contains normandie court \" from step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Remove \"and faculty year equals 2002\".",
        "negative_examples": [
            "remove \" and enrollments county equals 2002 \" .",
            "remove \" and campuses undergraduate equals 2002 \" .",
            "remove \" and campus fee year equals 2002 \" .",
            "remove \" and degrees campus fee equals 2002 \" .",
            "remove \" and campuses totalenrollment ay equals 2002 \" .",
            "remove \" and campuses year equals 2002 \" .",
            "remove \" and csu fees year equals 2002 \" .",
            "remove \" and csu fees undergraduate equals 2002 \" .",
            "remove \" and faculty id equals 2002 \" .",
            "remove \" and undergraduate year equals 2002 \" .",
            "remove \" and faculty degrees equals 2002 \" .",
            "remove \" and csu fees degrees equals 2002 \" .",
            "remove \" and degrees county equals 2002 \" .",
            "remove \" and campuses degrees equals 2002 \" .",
            "remove \" and enrollments undergraduate equals 2002 \" .",
            "remove \" and degrees year equals 2002 \" .",
            "remove \" and graduate year equals 2002 \" .",
            "remove \" and faculty graduate equals 2002 \" .",
            "remove \" and location year equals 2002 \" .",
            "remove \" and csu fees fte ay equals 2002 \" .",
            "remove \" and csu fees graduate equals 2002 \" .",
            "remove \" and faculty campus fee equals 2002 \" .",
            "remove \" and discipline enrollments graduate equals 2002 \" .",
            "remove \" and degrees id equals 2002 \" .",
            "remove \" and enrollments location equals 2002 \" .",
            "remove \" and csu fees campus equals 2002 \" .",
            "remove \" and discipline enrollments totalenrollment ay equals 2002 \" .",
            "remove \" and fte ay year equals 2002 \" .",
            "remove \" and discipline enrollments county equals 2002 \" .",
            "remove \" and discipline year equals 2002 \" .",
            "remove \" and csu fees id equals 2002 \" .",
            "remove \" and degrees campus equals 2002 \" .",
            "remove \" and faculty location equals 2002 \" .",
            "remove \" and campuses fte ay equals 2002 \" .",
            "remove \" and discipline enrollments campus fee equals 2002 \" .",
            "remove \" and csu fees campus fee equals 2002 \" .",
            "remove \" and enrollments totalenrollment ay equals 2002 \" .",
            "remove \" and enrollments discipline equals 2002 \" .",
            "remove \" and campuses id equals 2002 \" .",
            "remove \" and discipline enrollments year equals 2002 \" .",
            "remove \" and campus year equals 2002 \" .",
            "remove \" and degrees graduate equals 2002 \" .",
            "remove \" and campuses campus equals 2002 \" .",
            "remove \" and discipline enrollments discipline equals 2002 \" .",
            "remove \" and faculty fte ay equals 2002 \" .",
            "remove \" and campuses campus fee equals 2002 \" .",
            "remove \" and enrollments degrees equals 2002 \" .",
            "remove \" and degrees degrees equals 2002 \" .",
            "remove \" and csu fees location equals 2002 \" .",
            "remove \" and discipline enrollments fte ay equals 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and graduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "There should be csu fees ' year and campuses ' campuses instead of graduate and discipline enrollments 's year respectively .",
        "negative_examples": [
            "there should be csu fees ' year and campuses ' campuses instead of county and enrollments 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of campus fee and discipline enrollments 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of graduate and faculty 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of graduate and totalenrollment ay 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of degrees and degrees 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of id and campuses 's year respectively .",
            "there should be csu fees ' undergraduate and campuses ' campuses instead of graduate and campuses 's undergraduate respectively .",
            "there should be csu fees ' degrees and campuses ' campuses instead of graduate and faculty 's degrees respectively .",
            "there should be csu fees ' discipline and campuses ' campuses instead of graduate and faculty 's discipline respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of county and degrees 's year respectively .",
            "there should be csu fees ' campus fee and campuses ' campuses instead of graduate and campuses 's campus fee respectively .",
            "there should be csu fees ' totalenrollment ay and campuses ' campuses instead of graduate and enrollments 's totalenrollment ay respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of discipline and faculty 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of county and campuses 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of id and discipline enrollments 's year respectively .",
            "there should be csu fees ' location and campuses ' campuses instead of graduate and enrollments 's location respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of undergraduate and campuses 's year respectively .",
            "there should be csu fees ' degrees and campuses ' campuses instead of graduate and csu fees 's degrees respectively .",
            "there should be csu fees ' faculty and campuses ' campuses instead of graduate and faculty 's faculty respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of totalenrollment ay and discipline enrollments 's year respectively .",
            "there should be csu fees ' fte ay and campuses ' campuses instead of graduate and csu fees 's fte ay respectively .",
            "there should be csu fees ' year and fte ay ' campuses instead of graduate and discipline enrollments 's year respectively .",
            "there should be csu fees ' discipline and campuses ' campuses instead of graduate and csu fees 's discipline respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of id and degrees 's year respectively .",
            "there should be csu fees ' campus fee and campuses ' campuses instead of graduate and csu fees 's campus fee respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of totalenrollment ay and degrees 's year respectively .",
            "there should be csu fees ' id and campuses ' campuses instead of graduate and enrollments 's id respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of id and faculty 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of faculty and discipline enrollments 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of fte ay and discipline enrollments 's year respectively .",
            "there should be csu fees ' year and county ' campuses instead of graduate and discipline enrollments 's year respectively .",
            "there should be csu fees ' degrees and campuses ' campuses instead of graduate and enrollments 's degrees respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of discipline and campuses 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of location and discipline enrollments 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of faculty and degrees 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of graduate and undergraduate 's year respectively .",
            "there should be csu fees ' fte ay and campuses ' campuses instead of graduate and faculty 's fte ay respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of fte ay and degrees 's year respectively .",
            "there should be csu fees ' year and totalenrollment ay ' campuses instead of graduate and discipline enrollments 's year respectively .",
            "there should be csu fees ' county and campuses ' campuses instead of graduate and discipline enrollments 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of campus fee and faculty 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of county and csu fees 's year respectively .",
            "there should be csu fees ' faculty and campuses ' campuses instead of graduate and campuses 's faculty respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of graduate and county 's year respectively .",
            "there should be csu fees ' degrees and campuses ' campuses instead of graduate and discipline enrollments 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of totalenrollment ay and csu fees 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of faculty and csu fees 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of campus fee and degrees 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of id and enrollments 's year respectively .",
            "there should be csu fees ' year and campuses ' campuses instead of graduate and enrollments 's year respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals Steven Spielberg conditions in place of the name equals Steven Spielberg conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "in place of name, i want you to look for name.",
        "negative_examples": [
            "in place of movie id , i want you to look for name .",
            "in place of title , i want you to look for name .",
            "in place of year , i want you to look for name .",
            "in place of director , i want you to look for name .",
            "in place of reviewer id , i want you to look for name .",
            "in place of rating stars , i want you to look for name .",
            "in place of rating date , i want you to look for name ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally find minimum bathroom count .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [],
        "positive_example": "substitute minimum for first maximum bathroom count.",
        "negative_examples": [
            "substitute minimum for first maximum building id .",
            "substitute minimum for first maximum building short name .",
            "substitute minimum for first maximum building full name .",
            "substitute minimum for first maximum building description .",
            "substitute minimum for first maximum building address .",
            "substitute minimum for first maximum building manager .",
            "substitute minimum for first maximum building phone .",
            "substitute minimum for first maximum apartment id .",
            "substitute minimum for first maximum apartment type code .",
            "substitute minimum for first maximum apartment number .",
            "substitute minimum for first maximum bedroom count .",
            "substitute minimum for first maximum room count .",
            "substitute minimum for first maximum facility code .",
            "substitute minimum for first maximum guest id .",
            "substitute minimum for first maximum gender code .",
            "substitute minimum for first maximum guest first name .",
            "substitute minimum for first maximum guest last name .",
            "substitute minimum for first maximum date of birth .",
            "substitute minimum for first maximum apartment booking id .",
            "substitute minimum for first maximum booking status code .",
            "substitute minimum for first maximum booking start date .",
            "substitute minimum for first maximum booking end date .",
            "substitute minimum for first maximum status date .",
            "substitute minimum for first maximum available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "consider the building full name like % court % conditions in place of the building short name like court conditions .",
        "primary_span": [
            [
                0,
                9
            ]
        ],
        "secondary_span": [
            [
                10,
                20
            ]
        ],
        "positive_example": "the building full name should be implanted in place of building full name.",
        "negative_examples": [
            "the building id should be implanted in place of building full name .",
            "the building short name should be implanted in place of building full name .",
            "the building description should be implanted in place of building full name .",
            "the building address should be implanted in place of building full name .",
            "the building manager should be implanted in place of building full name .",
            "the building phone should be implanted in place of building full name .",
            "the apartment id should be implanted in place of building full name .",
            "the apartment type code should be implanted in place of building full name .",
            "the apartment number should be implanted in place of building full name .",
            "the bathroom count should be implanted in place of building full name .",
            "the bedroom count should be implanted in place of building full name .",
            "the room count should be implanted in place of building full name .",
            "the facility code should be implanted in place of building full name .",
            "the guest id should be implanted in place of building full name .",
            "the gender code should be implanted in place of building full name .",
            "the guest first name should be implanted in place of building full name .",
            "the guest last name should be implanted in place of building full name .",
            "the date of birth should be implanted in place of building full name .",
            "the apartment booking id should be implanted in place of building full name .",
            "the booking status code should be implanted in place of building full name .",
            "the booking start date should be implanted in place of building full name .",
            "the booking end date should be implanted in place of building full name .",
            "the status date should be implanted in place of building full name .",
            "the available yes or no should be implanted in place of building full name ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals Steven Spielberg conditions in place of the name equals Steven Spielberg conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "Replace director with reviewer id .",
        "negative_examples": [
            "replace movie id with reviewer id .",
            "replace title with reviewer id .",
            "replace year with reviewer id .",
            "replace reviewer id with reviewer id .",
            "replace name with reviewer id .",
            "replace rating stars with reviewer id .",
            "replace rating date with reviewer id ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the faculty 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                25
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                26,
                39
            ]
        ],
        "positive_example": "In step 2, you should use campuses of campuses in place of year of faculty.",
        "negative_examples": [
            "in step 2 , you should use campuses of campuses in place of fte ay of csu fees .",
            "in step 2 , you should use campuses of campuses in place of degrees of campuses .",
            "in step 2 , you should use discipline of campuses in place of year of faculty .",
            "in step 2 , you should use campuses of campuses in place of id of enrollments .",
            "in step 2 , you should use campuses of campuses in place of discipline of campuses .",
            "in step 2 , you should use campuses of campuses in place of degrees of faculty .",
            "in step 2 , you should use campuses of campuses in place of undergraduate of enrollments .",
            "in step 2 , you should use campuses of campuses in place of county of faculty .",
            "in step 2 , you should use id of campuses in place of year of faculty .",
            "in step 2 , you should use campuses of campuses in place of year of csu fees .",
            "in step 2 , you should use campuses of campuses in place of id of csu fees .",
            "in step 2 , you should use campus fee of campuses in place of year of faculty .",
            "in step 2 , you should use campuses of campuses in place of discipline of faculty .",
            "in step 2 , you should use campuses of campuses in place of county of degrees .",
            "in step 2 , you should use campuses of campuses in place of campus fee of enrollments .",
            "in step 2 , you should use degrees of campuses in place of year of faculty .",
            "in step 2 , you should use campuses of campuses in place of discipline of degrees .",
            "in step 2 , you should use campuses of campuses in place of year of discipline .",
            "in step 2 , you should use campuses of campuses in place of fte ay of discipline enrollments .",
            "in step 2 , you should use campuses of campuses in place of year of totalenrollment ay .",
            "in step 2 , you should use campuses of campuses in place of campus fee of csu fees .",
            "in step 2 , you should use campuses of campuses in place of county of campuses .",
            "in step 2 , you should use campuses of campuses in place of discipline of csu fees .",
            "in step 2 , you should use campuses of campuses in place of discipline of enrollments .",
            "in step 2 , you should use campuses of campuses in place of id of degrees .",
            "in step 2 , you should use campuses of campuses in place of location of campuses .",
            "in step 2 , you should use fte ay of campuses in place of year of faculty .",
            "in step 2 , you should use campuses of campuses in place of id of campuses .",
            "in step 2 , you should use campuses of campuses in place of graduate of campuses .",
            "in step 2 , you should use campuses of campuses in place of graduate of degrees .",
            "in step 2 , you should use campuses of campuses in place of year of degrees .",
            "in step 2 , you should use campuses of campuses in place of county of enrollments .",
            "in step 2 , you should use campuses of campuses in place of location of faculty .",
            "in step 2 , you should use campuses of campuses in place of id of faculty .",
            "in step 2 , you should use campuses of campuses in place of undergraduate of campuses .",
            "in step 2 , you should use campuses of campuses in place of totalenrollment ay of degrees .",
            "in step 2 , you should use campuses of campuses in place of year of location .",
            "in step 2 , you should use campuses of campuses in place of fte ay of enrollments .",
            "in step 2 , you should use campuses of campuses in place of location of enrollments .",
            "in step 2 , you should use campuses of campuses in place of year of campus fee .",
            "in step 2 , you should use campuses of campuses in place of year of graduate .",
            "in step 2 , you should use campuses of campuses in place of location of degrees .",
            "in step 2 , you should use campuses of campuses in place of year of undergraduate .",
            "in step 2 , you should use campuses of campuses in place of undergraduate of faculty .",
            "in step 2 , you should use graduate of campuses in place of year of faculty .",
            "in step 2 , you should use campuses of campuses in place of graduate of discipline enrollments .",
            "in step 2 , you should use campuses of campuses in place of undergraduate of csu fees .",
            "in step 2 , you should use campuses of campuses in place of graduate of csu fees .",
            "in step 2 , you should use campuses of campuses in place of graduate of enrollments .",
            "in step 2 , you should use campuses of campuses in place of totalenrollment ay of discipline enrollments ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the degrees 's year equals 2001 conditions in place of the faculty 's year equals 2001 conditions . find degrees in place of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                27
            ],
            [
                39,
                40
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                28,
                38
            ],
            [
                41,
                45
            ]
        ],
        "positive_example": "Put degrees table , degrees and degrees ' year instead of faculty table , graduate and faculty 's year respectively .",
        "negative_examples": [
            "put campus table , degrees and degrees ' year instead of faculty table , graduate and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of enrollments table , fte ay and faculty 's year respectively .",
            "put campuses table , degrees and degrees ' year instead of faculty table , discipline and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of discipline enrollments table , id and faculty 's year respectively .",
            "put county table , county and county ' year instead of csu fees table , graduate and faculty 's year respectively .",
            "put fte ay table , fte ay and fte ay ' year instead of enrollments table , graduate and faculty 's year respectively .",
            "put enrollments table , degrees and degrees ' year instead of campus table , graduate and campus 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of campuses table , graduate and faculty 's year respectively .",
            "put discipline enrollments table , degrees and degrees ' year instead of totalenrollment ay table , graduate and totalenrollment ay 's year respectively .",
            "put enrollments table , degrees and degrees ' year instead of faculty table , location and faculty 's year respectively .",
            "put location table , location and location ' year instead of enrollments table , graduate and faculty 's year respectively .",
            "put location table , degrees and degrees ' year instead of faculty table , graduate and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of campuses table , undergraduate and faculty 's year respectively .",
            "put discipline table , discipline and discipline ' year instead of discipline enrollments table , graduate and faculty 's year respectively .",
            "put campus table , campus and campus ' year instead of campuses table , graduate and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of totalenrollment ay table , graduate and faculty 's year respectively .",
            "put campuses table , degrees and degrees ' year instead of faculty table , county and faculty 's year respectively .",
            "put campus table , campus and campus ' year instead of csu fees table , graduate and faculty 's year respectively .",
            "put id table , id and id ' year instead of discipline enrollments table , graduate and faculty 's year respectively .",
            "put csu fees table , degrees and degrees ' year instead of faculty table , location and faculty 's year respectively .",
            "put enrollments table , degrees and degrees ' year instead of faculty table , discipline and faculty 's year respectively .",
            "put csu fees table , degrees and degrees ' year instead of faculty table , discipline and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of discipline enrollments table , fte ay and faculty 's year respectively .",
            "put undergraduate table , undergraduate and undergraduate ' year instead of enrollments table , graduate and faculty 's year respectively .",
            "put campus fee table , campus fee and campus fee ' year instead of campuses table , graduate and faculty 's year respectively .",
            "put year table , year and year ' year instead of campuses table , graduate and faculty 's year respectively .",
            "put enrollments table , degrees and degrees ' year instead of faculty table , totalenrollment ay and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of faculty table , year and faculty 's year respectively .",
            "put campuses table , degrees and degrees ' year instead of discipline table , graduate and discipline 's year respectively .",
            "put discipline enrollments table , degrees and degrees ' year instead of faculty table , undergraduate and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of campus table , graduate and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of csu fees table , undergraduate and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of csu fees table , graduate and faculty 's year respectively .",
            "put discipline enrollments table , degrees and degrees ' year instead of faculty table , county and faculty 's year respectively .",
            "put campuses table , degrees and degrees ' year instead of faculty table , year and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of csu fees table , campus fee and faculty 's year respectively .",
            "put campuses table , degrees and degrees ' year instead of faculty table , id and faculty 's year respectively .",
            "put csu fees table , degrees and degrees ' year instead of faculty table , campus and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of campuses table , county and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of faculty table , location and faculty 's year respectively .",
            "put totalenrollment ay table , totalenrollment ay and totalenrollment ay ' year instead of enrollments table , graduate and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of enrollments table , year and faculty 's year respectively .",
            "put enrollments table , degrees and degrees ' year instead of county table , graduate and county 's year respectively .",
            "put discipline table , discipline and discipline ' year instead of csu fees table , graduate and faculty 's year respectively .",
            "put csu fees table , degrees and degrees ' year instead of campus table , graduate and campus 's year respectively .",
            "put enrollments table , degrees and degrees ' year instead of faculty table , county and faculty 's year respectively .",
            "put degrees table , degrees and degrees ' year instead of campuses table , location and faculty 's year respectively .",
            "put csu fees table , degrees and degrees ' year instead of county table , graduate and county 's year respectively .",
            "put county table , degrees and degrees ' year instead of faculty table , graduate and faculty 's year respectively .",
            "put enrollments table , degrees and degrees ' year instead of id table , graduate and id 's year respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the csu fees table . in step 2 , consider the campuses 's campus equals Long Beach State University conditions in place of the csu fees 's year equals Long Beach State University conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                26
            ],
            [
                42,
                43
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                27,
                41
            ],
            [
                44,
                50
            ]
        ],
        "positive_example": "I required campus from the campuses table.",
        "negative_examples": [
            "i required id from the campuses table .",
            "i required location from the campuses table .",
            "i required county from the campuses table .",
            "i required year from the campuses table .",
            "i required campus fee from the campuses table .",
            "i required degrees from the campuses table .",
            "i required discipline from the campuses table .",
            "i required undergraduate from the campuses table .",
            "i required graduate from the campuses table .",
            "i required totalenrollment ay from the campuses table .",
            "i required fte ay from the campuses table .",
            "i required faculty from the campuses table ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment facilities table . do not find for each value of facility code . in step 2 , additionally make sure that bedroom count greater than 4 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "In step 1 , it should search apartments ' bedroom count for each apartment id .",
        "negative_examples": [
            "in step 1 , it should search apartment buildings ' room count for each apartment id .",
            "in step 1 , it should search apartment buildings ' booking status code for each apartment id .",
            "in step 1 , it should search apartment buildings ' gender code for each apartment id .",
            "in step 1 , it should search apartment facilities ' status date for each apartment id .",
            "in step 1 , it should search apartment facilities ' date of birth for each apartment id .",
            "in step 1 , it should search view unit status ' booking start date for each apartment id .",
            "in step 1 , it should search apartment bookings ' building address for each apartment id .",
            "in step 1 , it should search apartment buildings ' building address for each apartment id .",
            "in step 1 , it should search apartments ' facility code for each apartment id .",
            "in step 1 , it should search apartment bookings ' guest last name for each apartment id .",
            "in step 1 , it should search apartments ' guest id for each apartment id .",
            "in step 1 , it should search guests ' guest id for each apartment id .",
            "in step 1 , it should search apartment facilities ' gender code for each apartment id .",
            "in step 1 , it should search apartment bookings ' available yes or no for each apartment id .",
            "in step 1 , it should search guests ' apartment id for each apartment id .",
            "in step 1 , it should search apartment bookings ' building short name for each apartment id .",
            "in step 1 , it should search guests ' building full name for each apartment id .",
            "in step 1 , it should search apartments ' building description for each apartment id .",
            "in step 1 , it should search apartment buildings ' date of birth for each apartment id .",
            "in step 1 , it should search apartment bookings ' apartment type code for each apartment id .",
            "in step 1 , it should search apartment bookings ' gender code for each apartment id .",
            "in step 1 , it should search apartment facilities ' apartment number for each apartment id .",
            "in step 1 , it should search apartment facilities ' bedroom count for each apartment id .",
            "in step 1 , it should search view unit status ' status date for each apartment id .",
            "in step 1 , it should search apartment bookings ' guest first name for each apartment id .",
            "in step 1 , it should search apartments ' apartment number for each apartment id .",
            "in step 1 , it should search apartments ' building id for each apartment id .",
            "in step 1 , it should search apartment buildings ' apartment id for each apartment id .",
            "in step 1 , it should search apartment buildings ' building manager for each apartment id .",
            "in step 1 , it should search apartment bookings ' date of birth for each apartment id .",
            "in step 1 , it should search apartment facilities ' booking start date for each apartment id .",
            "in step 1 , it should search view unit status ' apartment type code for each apartment id .",
            "in step 1 , it should search apartments ' apartment booking id for each apartment id .",
            "in step 1 , it should search apartment buildings ' building id for each apartment id .",
            "in step 1 , it should search view unit status ' guest last name for each apartment id .",
            "in step 1 , it should search apartment facilities ' available yes or no for each apartment id .",
            "in step 1 , it should search guests ' apartment booking id for each apartment id .",
            "in step 1 , it should search guests ' apartment type code for each apartment id .",
            "in step 1 , it should search apartment buildings ' building short name for each apartment id .",
            "in step 1 , it should search apartment facilities ' building short name for each apartment id .",
            "in step 1 , it should search apartment bookings ' guest id for each apartment id .",
            "in step 1 , it should search apartment bookings ' room count for each apartment id .",
            "in step 1 , it should search apartment facilities ' apartment booking id for each apartment id .",
            "in step 1 , it should search apartment facilities ' guest first name for each apartment id .",
            "in step 1 , it should search apartment buildings ' bathroom count for each apartment id .",
            "in step 1 , it should search apartment facilities ' building description for each apartment id .",
            "in step 1 , it should search apartment bookings ' status date for each apartment id .",
            "in step 1 , it should search apartment buildings ' status date for each apartment id .",
            "in step 1 , it should search apartment bookings ' apartment number for each apartment id .",
            "in step 1 , it should search guests ' facility code for each apartment id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , do not find for each value of apartments 's apartment id . in step 3 , additionally make sure that bedroom count greater than 4 .",
        "primary_span": [
            [
                4,
                15
            ],
            [
                20,
                29
            ]
        ],
        "secondary_span": [],
        "positive_example": "There should be bedroom count instead of apartment id .",
        "negative_examples": [
            "there should be bedroom count instead of building id .",
            "there should be bedroom count instead of building short name .",
            "there should be bedroom count instead of building full name .",
            "there should be bedroom count instead of building description .",
            "there should be bedroom count instead of building address .",
            "there should be bedroom count instead of building manager .",
            "there should be bedroom count instead of building phone .",
            "there should be bedroom count instead of apartment type code .",
            "there should be bedroom count instead of apartment number .",
            "there should be bedroom count instead of bathroom count .",
            "there should be bedroom count instead of room count .",
            "there should be bedroom count instead of facility code .",
            "there should be bedroom count instead of guest id .",
            "there should be bedroom count instead of gender code .",
            "there should be bedroom count instead of guest first name .",
            "there should be bedroom count instead of guest last name .",
            "there should be bedroom count instead of date of birth .",
            "there should be bedroom count instead of apartment booking id .",
            "there should be bedroom count instead of booking status code .",
            "there should be bedroom count instead of booking start date .",
            "there should be bedroom count instead of booking end date .",
            "there should be bedroom count instead of status date .",
            "there should be bedroom count instead of available yes or no .",
            "there should be building id instead of apartment id .",
            "there should be building short name instead of apartment id .",
            "there should be building full name instead of apartment id .",
            "there should be building description instead of apartment id .",
            "there should be building address instead of apartment id .",
            "there should be building manager instead of apartment id .",
            "there should be building phone instead of apartment id .",
            "there should be apartment type code instead of apartment id .",
            "there should be apartment number instead of apartment id .",
            "there should be bathroom count instead of apartment id .",
            "there should be room count instead of apartment id .",
            "there should be facility code instead of apartment id .",
            "there should be guest id instead of apartment id .",
            "there should be gender code instead of apartment id .",
            "there should be guest first name instead of apartment id .",
            "there should be guest last name instead of apartment id .",
            "there should be date of birth instead of apartment id .",
            "there should be apartment booking id instead of apartment id .",
            "there should be booking status code instead of apartment id .",
            "there should be booking start date instead of apartment id .",
            "there should be booking end date instead of apartment id .",
            "there should be status date instead of apartment id .",
            "there should be available yes or no instead of apartment id ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the enrollments 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "Change enrollments 's year with csu fees 's year and ensure that campuses equals San Jose State University .",
        "negative_examples": [
            "change degrees 's id with csu fees 's id and ensure that campuses equals san jose state university .",
            "change enrollments 's degrees with csu fees 's year and ensure that campuses equals san jose state university .",
            "change enrollments 's year with csu fees 's year and ensure that totalenrollment ay equals san jose state university .",
            "change discipline enrollments 's county with csu fees 's county and ensure that campuses equals san jose state university .",
            "change campus fee 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change csu fees 's location with csu fees 's location and ensure that campuses equals san jose state university .",
            "change discipline enrollments 's fte ay with csu fees 's fte ay and ensure that campuses equals san jose state university .",
            "change csu fees 's graduate with csu fees 's graduate and ensure that campuses equals san jose state university .",
            "change campuses 's totalenrollment ay with csu fees 's totalenrollment ay and ensure that campuses equals san jose state university .",
            "change enrollments 's faculty with csu fees 's year and ensure that campuses equals san jose state university .",
            "change csu fees 's county with csu fees 's county and ensure that campuses equals san jose state university .",
            "change undergraduate 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change enrollments 's year with csu fees 's year and ensure that id equals san jose state university .",
            "change discipline enrollments 's discipline with csu fees 's discipline and ensure that campuses equals san jose state university .",
            "change location 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change discipline enrollments 's faculty with csu fees 's faculty and ensure that campuses equals san jose state university .",
            "change csu fees 's campus fee with csu fees 's campus fee and ensure that campuses equals san jose state university .",
            "change campuses 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change discipline enrollments 's campus fee with csu fees 's campus fee and ensure that campuses equals san jose state university .",
            "change csu fees 's degrees with csu fees 's degrees and ensure that campuses equals san jose state university .",
            "change campuses 's county with csu fees 's county and ensure that campuses equals san jose state university .",
            "change totalenrollment ay 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change faculty 's location with csu fees 's location and ensure that campuses equals san jose state university .",
            "change csu fees 's faculty with csu fees 's faculty and ensure that campuses equals san jose state university .",
            "change csu fees 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change discipline enrollments 's degrees with csu fees 's degrees and ensure that campuses equals san jose state university .",
            "change faculty 's graduate with csu fees 's graduate and ensure that campuses equals san jose state university .",
            "change faculty 's county with csu fees 's county and ensure that campuses equals san jose state university .",
            "change enrollments 's year with csu fees 's year and ensure that graduate equals san jose state university .",
            "change discipline enrollments 's id with csu fees 's id and ensure that campuses equals san jose state university .",
            "change discipline 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change id 's year with csu fees 's year and ensure that campuses equals san jose state university .",
            "change enrollments 's totalenrollment ay with csu fees 's year and ensure that campuses equals san jose state university .",
            "change enrollments 's location with csu fees 's year and ensure that campuses equals san jose state university .",
            "change campuses 's fte ay with csu fees 's fte ay and ensure that campuses equals san jose state university .",
            "change enrollments 's year with csu fees 's year and ensure that degrees equals san jose state university .",
            "change discipline enrollments 's totalenrollment ay with csu fees 's totalenrollment ay and ensure that campuses equals san jose state university .",
            "change enrollments 's campus fee with csu fees 's year and ensure that campuses equals san jose state university .",
            "change enrollments 's year with csu fees 's year and ensure that campus fee equals san jose state university .",
            "change campuses 's faculty with csu fees 's faculty and ensure that campuses equals san jose state university .",
            "change csu fees 's id with csu fees 's id and ensure that campuses equals san jose state university .",
            "change csu fees 's undergraduate with csu fees 's undergraduate and ensure that campuses equals san jose state university .",
            "change enrollments 's graduate with csu fees 's year and ensure that campuses equals san jose state university .",
            "change degrees 's location with csu fees 's location and ensure that campuses equals san jose state university .",
            "change campuses 's id with csu fees 's id and ensure that campuses equals san jose state university .",
            "change campuses 's location with csu fees 's location and ensure that campuses equals san jose state university .",
            "change campuses 's discipline with csu fees 's discipline and ensure that campuses equals san jose state university .",
            "change faculty 's totalenrollment ay with csu fees 's totalenrollment ay and ensure that campuses equals san jose state university .",
            "change degrees 's faculty with csu fees 's faculty and ensure that campuses equals san jose state university .",
            "change degrees 's year with csu fees 's year and ensure that campuses equals san jose state university ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the city population between 200000 and 2000000 conditions in place of the city area between 2000000 and 200000 conditions .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                20
            ]
        ],
        "positive_example": "The \"City Area equals or\" condition part is wrong . There should be city population is\" instead .",
        "negative_examples": [
            "the \" city area equals or \" condition part is wrong . there should be product id is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be product is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be dimensions is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be dpi is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be pages per minute color is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be max page size is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be interface is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be store id is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be store name is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be type is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be area size is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be number of product category is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be ranking is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be district id is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be district name is \" instead .",
            "the \" city area equals or \" condition part is wrong . there should be headquartered city is \" instead .",
            "the \" product id equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" product equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" dimensions equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" dpi equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" pages per minute color equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" max page size equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" interface equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" store id equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" store name equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" type equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" area size equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" number of product category equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" ranking equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" district id equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" district name equals or \" condition part is wrong . there should be city population is \" instead .",
            "the \" headquartered city equals or \" condition part is wrong . there should be city population is \" instead ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , do not use the chip model table . in step 2 , consider the hardware model name equals LG-P760 conditions in place of the model name equals LG-P760 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                24,
                33
            ]
        ],
        "positive_example": "Replace model name with hardware model name .",
        "negative_examples": [
            "replace model name with launch year .",
            "replace model name with ram mib .",
            "replace model name with rom mib .",
            "replace model name with slots .",
            "replace model name with wifi .",
            "replace model name with bluetooth .",
            "replace model name with graphics mode .",
            "replace model name with char cells .",
            "replace model name with pixels .",
            "replace model name with hardware colours .",
            "replace model name with used kb .",
            "replace model name with map .",
            "replace model name with type .",
            "replace model name with company name .",
            "replace model name with accreditation type .",
            "replace model name with accreditation level .",
            "replace model name with date .",
            "replace model name with chip model .",
            "replace model name with screen mode .",
            "replace launch year with hardware model name .",
            "replace ram mib with hardware model name .",
            "replace rom mib with hardware model name .",
            "replace slots with hardware model name .",
            "replace wifi with hardware model name .",
            "replace bluetooth with hardware model name .",
            "replace graphics mode with hardware model name .",
            "replace char cells with hardware model name .",
            "replace pixels with hardware model name .",
            "replace hardware colours with hardware model name .",
            "replace used kb with hardware model name .",
            "replace map with hardware model name .",
            "replace type with hardware model name .",
            "replace company name with hardware model name .",
            "replace accreditation type with hardware model name .",
            "replace accreditation level with hardware model name .",
            "replace date with hardware model name .",
            "replace chip model with hardware model name .",
            "replace screen mode with hardware model name ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally find middle name .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "You need to identify the middle name.",
        "negative_examples": [
            "you need to identify the address id .",
            "you need to identify the line 1 number building .",
            "you need to identify the city .",
            "you need to identify the zip postcode .",
            "you need to identify the state province county .",
            "you need to identify the country .",
            "you need to identify the staff id .",
            "you need to identify the staff address id .",
            "you need to identify the nickname .",
            "you need to identify the first name .",
            "you need to identify the last name .",
            "you need to identify the date of birth .",
            "you need to identify the date joined staff .",
            "you need to identify the date left staff .",
            "you need to identify the vehicle id .",
            "you need to identify the vehicle details .",
            "you need to identify the customer id .",
            "you need to identify the customer address id .",
            "you need to identify the customer status code .",
            "you need to identify the date became customer .",
            "you need to identify the amount outstanding .",
            "you need to identify the email address .",
            "you need to identify the phone number .",
            "you need to identify the cell mobile phone number .",
            "you need to identify the datetime payment .",
            "you need to identify the payment method code .",
            "you need to identify the amount payment .",
            "you need to identify the lesson id .",
            "you need to identify the lesson status code .",
            "you need to identify the lesson date .",
            "you need to identify the lesson time .",
            "you need to identify the price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 2 , additionally make sure that nickname like % s % .",
        "primary_span": [
            [
                4,
                13
            ]
        ],
        "secondary_span": [],
        "positive_example": "You need to verify that the nickname for \"staff\" should contain the letter \"s\".",
        "negative_examples": [
            "you need to verify that the address id for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the line 1 number building for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the city for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the zip postcode for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the state province county for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the country for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the staff id for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the staff address id for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the first name for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the middle name for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the last name for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the date of birth for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the date joined staff for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the date left staff for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the vehicle id for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the vehicle details for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the customer id for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the customer address id for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the customer status code for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the date became customer for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the amount outstanding for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the email address for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the phone number for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the cell mobile phone number for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the datetime payment for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the payment method code for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the amount payment for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the lesson id for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the lesson status code for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the lesson date for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the lesson time for \" staff \" should contain the letter \" s \" .",
            "you need to verify that the price for \" staff \" should contain the letter \" s \" ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , do not find for each value of rating 's reviewer id . in step 3 , additionally make sure that rating stars greater than 3 .",
        "primary_span": [
            [
                4,
                15
            ],
            [
                20,
                29
            ]
        ],
        "secondary_span": [],
        "positive_example": "Replace reviewer id with rating stars .",
        "negative_examples": [
            "replace movie id with rating stars .",
            "replace title with rating stars .",
            "replace year with rating stars .",
            "replace director with rating stars .",
            "replace name with rating stars .",
            "replace rating date with rating stars .",
            "replace reviewer id with movie id .",
            "replace reviewer id with title .",
            "replace reviewer id with year .",
            "replace reviewer id with director .",
            "replace reviewer id with name .",
            "replace reviewer id with rating date ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the degrees table . additionally make sure that degrees 's year equals 2001 and campuses 's campus equals San Francisco State University . find degrees in place of maximum degrees .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                31
            ],
            [
                32,
                33
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                34,
                39
            ]
        ],
        "positive_example": "Display total degrees allocated for year equals 2001 and campuses equals \"San Francisco State University\".",
        "negative_examples": [
            "display total csu fees allocated for faculty equals 2001 and campuses equals \" san francisco state university \" .",
            "display total campuses allocated for campus fee equals 2001 and campuses equals \" san francisco state university \" .",
            "display total campuses allocated for location equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and totalenrollment ay equals \" san francisco state university \" .",
            "display total faculty allocated for location equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline enrollments allocated for county equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and graduate equals \" san francisco state university \" .",
            "display total faculty allocated for totalenrollment ay equals 2001 and campuses equals \" san francisco state university \" .",
            "display total csu fees allocated for undergraduate equals 2001 and campuses equals \" san francisco state university \" .",
            "display total campuses allocated for fte ay equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for discipline equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline enrollments allocated for totalenrollment ay equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and faculty equals \" san francisco state university \" .",
            "display total graduate allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total location allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline enrollments allocated for graduate equals 2001 and campuses equals \" san francisco state university \" .",
            "display total enrollments allocated for county equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline enrollments allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total enrollments allocated for totalenrollment ay equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and county equals \" san francisco state university \" .",
            "display total enrollments allocated for faculty equals 2001 and campuses equals \" san francisco state university \" .",
            "display total csu fees allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total totalenrollment ay allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for undergraduate equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and discipline equals \" san francisco state university \" .",
            "display total csu fees allocated for fte ay equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for location equals 2001 and campuses equals \" san francisco state university \" .",
            "display total campuses allocated for id equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and undergraduate equals \" san francisco state university \" .",
            "display total undergraduate allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline enrollments allocated for discipline equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for fte ay equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for county equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and fte ay equals \" san francisco state university \" .",
            "display total fte ay allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total faculty allocated for discipline equals 2001 and campuses equals \" san francisco state university \" .",
            "display total enrollments allocated for fte ay equals 2001 and campuses equals \" san francisco state university \" .",
            "display total csu fees allocated for discipline equals 2001 and campuses equals \" san francisco state university \" .",
            "display total campuses allocated for undergraduate equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and campus fee equals \" san francisco state university \" .",
            "display total faculty allocated for graduate equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline enrollments allocated for faculty equals 2001 and campuses equals \" san francisco state university \" .",
            "display total csu fees allocated for graduate equals 2001 and campuses equals \" san francisco state university \" .",
            "display total enrollments allocated for discipline equals 2001 and campuses equals \" san francisco state university \" .",
            "display total csu fees allocated for campus fee equals 2001 and campuses equals \" san francisco state university \" .",
            "display total campuses allocated for faculty equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total campuses allocated for year equals 2001 and campuses equals \" san francisco state university \" .",
            "display total discipline enrollments allocated for location equals 2001 and campuses equals \" san francisco state university \" .",
            "display total degrees allocated for year equals 2001 and location equals \" san francisco state university \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "Delete \"and faculty 's year equals 2002\" and replace faculty 's year with csu fees ' year .",
        "negative_examples": [
            "delete \" and csu fees 's discipline equals 2002 \" and replace faculty 's discipline with csu fees ' discipline .",
            "delete \" and discipline enrollments 's campus equals 2002 \" and replace faculty 's campus with csu fees ' campus .",
            "delete \" and degrees 's fte ay equals 2002 \" and replace faculty 's fte ay with csu fees ' fte ay .",
            "delete \" and degrees 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and campuses 's undergraduate equals 2002 \" and replace faculty 's undergraduate with csu fees ' undergraduate .",
            "delete \" and discipline enrollments 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and fte ay 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and location 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and campuses 's county equals 2002 \" and replace faculty 's county with csu fees ' county .",
            "delete \" and enrollments 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and degrees 's county equals 2002 \" and replace faculty 's county with csu fees ' county .",
            "delete \" and degrees 's degrees equals 2002 \" and replace faculty 's degrees with csu fees ' degrees .",
            "delete \" and campuses 's location equals 2002 \" and replace faculty 's location with csu fees ' location .",
            "delete \" and enrollments 's campus fee equals 2002 \" and replace faculty 's campus fee with csu fees ' campus fee .",
            "delete \" and enrollments 's id equals 2002 \" and replace faculty 's id with csu fees ' id .",
            "delete \" and faculty 's id equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and county 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and degrees 's totalenrollment ay equals 2002 \" and replace faculty 's totalenrollment ay with csu fees ' totalenrollment ay .",
            "delete \" and discipline 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and faculty 's campus equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and discipline enrollments 's id equals 2002 \" and replace faculty 's id with csu fees ' id .",
            "delete \" and degrees 's location equals 2002 \" and replace faculty 's location with csu fees ' location .",
            "delete \" and campuses 's campus fee equals 2002 \" and replace faculty 's campus fee with csu fees ' campus fee .",
            "delete \" and enrollments 's fte ay equals 2002 \" and replace faculty 's fte ay with csu fees ' fte ay .",
            "delete \" and campuses 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and csu fees 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and csu fees 's location equals 2002 \" and replace faculty 's location with csu fees ' location .",
            "delete \" and campuses 's totalenrollment ay equals 2002 \" and replace faculty 's totalenrollment ay with csu fees ' totalenrollment ay .",
            "delete \" and enrollments 's campus equals 2002 \" and replace faculty 's campus with csu fees ' campus .",
            "delete \" and csu fees 's county equals 2002 \" and replace faculty 's county with csu fees ' county .",
            "delete \" and enrollments 's graduate equals 2002 \" and replace faculty 's graduate with csu fees ' graduate .",
            "delete \" and graduate 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and faculty 's totalenrollment ay equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and csu fees 's graduate equals 2002 \" and replace faculty 's graduate with csu fees ' graduate .",
            "delete \" and campuses 's fte ay equals 2002 \" and replace faculty 's fte ay with csu fees ' fte ay .",
            "delete \" and csu fees 's totalenrollment ay equals 2002 \" and replace faculty 's totalenrollment ay with csu fees ' totalenrollment ay .",
            "delete \" and degrees 's undergraduate equals 2002 \" and replace faculty 's undergraduate with csu fees ' undergraduate .",
            "delete \" and faculty 's degrees equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and csu fees 's degrees equals 2002 \" and replace faculty 's degrees with csu fees ' degrees .",
            "delete \" and enrollments 's county equals 2002 \" and replace faculty 's county with csu fees ' county .",
            "delete \" and degrees 's discipline equals 2002 \" and replace faculty 's discipline with csu fees ' discipline .",
            "delete \" and degrees 's campus equals 2002 \" and replace faculty 's campus with csu fees ' campus .",
            "delete \" and discipline enrollments 's graduate equals 2002 \" and replace faculty 's graduate with csu fees ' graduate .",
            "delete \" and campuses 's graduate equals 2002 \" and replace faculty 's graduate with csu fees ' graduate .",
            "delete \" and discipline enrollments 's county equals 2002 \" and replace faculty 's county with csu fees ' county .",
            "delete \" and totalenrollment ay 's year equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and csu fees 's undergraduate equals 2002 \" and replace faculty 's undergraduate with csu fees ' undergraduate .",
            "delete \" and faculty 's graduate equals 2002 \" and replace faculty 's year with csu fees ' year .",
            "delete \" and csu fees 's campus equals 2002 \" and replace faculty 's campus with csu fees ' campus .",
            "delete \" and discipline enrollments 's undergraduate equals 2002 \" and replace faculty 's undergraduate with csu fees ' undergraduate ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , find for each value of director . additionally find rating stars and minimum rating stars . you should not find the smallest of the results . show me all the results .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                11,
                19
            ],
            [
                20,
                35
            ]
        ],
        "secondary_span": [],
        "positive_example": "you need to use rating stars of rating table.",
        "negative_examples": [
            "you need to use movie id of rating table .",
            "you need to use title of rating table .",
            "you need to use year of rating table .",
            "you need to use director of rating table .",
            "you need to use reviewer id of rating table .",
            "you need to use name of rating table .",
            "you need to use rating date of rating table ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions . find campuses 's campus in place of rows .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ],
            [
                43,
                46
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ],
            [
                47,
                51
            ]
        ],
        "positive_example": "List the campuses where county is Los Angeles and its year is greater than 1950.",
        "negative_examples": [
            "list the id where county is los angeles and its year is greater than 1950 .",
            "list the location where county is los angeles and its year is greater than 1950 .",
            "list the county where county is los angeles and its year is greater than 1950 .",
            "list the campus fee where county is los angeles and its year is greater than 1950 .",
            "list the degrees where county is los angeles and its year is greater than 1950 .",
            "list the discipline where county is los angeles and its year is greater than 1950 .",
            "list the undergraduate where county is los angeles and its year is greater than 1950 .",
            "list the graduate where county is los angeles and its year is greater than 1950 .",
            "list the totalenrollment ay where county is los angeles and its year is greater than 1950 .",
            "list the fte ay where county is los angeles and its year is greater than 1950 .",
            "list the faculty where county is los angeles and its year is greater than 1950 .",
            "list the campuses where county is los angeles and its id is greater than 1950 .",
            "list the campuses where county is los angeles and its location is greater than 1950 .",
            "list the campuses where county is los angeles and its county is greater than 1950 .",
            "list the campuses where county is los angeles and its campus fee is greater than 1950 .",
            "list the campuses where county is los angeles and its degrees is greater than 1950 .",
            "list the campuses where county is los angeles and its discipline is greater than 1950 .",
            "list the campuses where county is los angeles and its undergraduate is greater than 1950 .",
            "list the campuses where county is los angeles and its graduate is greater than 1950 .",
            "list the campuses where county is los angeles and its totalenrollment ay is greater than 1950 .",
            "list the campuses where county is los angeles and its fte ay is greater than 1950 .",
            "list the campuses where county is los angeles and its faculty is greater than 1950 ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the addresses table besides the students table . find line 1 in place of email address . in step 2 , additionally use the information from the addresses table besides the teachers table . find line 1 in place of teachers 's email address . return the rows in both of the results of step 1 and the results of step 2 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                19
            ],
            [
                30,
                37
            ],
            [
                43,
                45
            ],
            [
                54,
                71
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                20,
                25
            ],
            [
                38,
                42
            ],
            [
                46,
                53
            ]
        ],
        "positive_example": "In both step 1 and 2 you need to search ID of address and also you need to look for the value of Addresses's line 1 similar to step 1 and 2 reports.",
        "negative_examples": [
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference incident type 's incident type code similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of detention 's date incident start similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of assessment notes 's datetime detention start similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of student addresses 's state province county similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of detention 's other details similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students in detention 's date address from similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of assessment notes 's detention summary similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of detention 's date left university similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of teachers 's other student details similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference address types 's recommendations similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students 's date left university similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of teachers 's date address from similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of assessment notes 's zip postcode similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of assessment notes 's address type code similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of student addresses 's date first rental similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students in detention 's date incident end similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference detention type 's country similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students in detention 's email address similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of teachers 's date address to similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of detention 's student id similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference detention type 's other details similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference address types 's line 3 similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of assessment notes 's date incident start similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students 's line 2 similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference incident type 's address type description similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of detention 's state province county similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference detention type 's address type code similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students 's date address from similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students in detention 's gender similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of student addresses 's text of notes similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of behavior incident 's incident summary similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference incident type 's incident summary similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of behavior incident 's first name similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference detention type 's email address similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of addresses 's detention summary similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of addresses 's date left university similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of detention 's country similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of addresses 's country similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of teachers 's text of notes similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of students 's detention summary similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of teachers 's monthly rental similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference incident type 's incident type description similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference detention type 's incident type description similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of student addresses 's line 2 similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of addresses 's date address to similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of reference detention type 's date of notes similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of teachers 's last name similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of assessment notes 's address id similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of detention 's incident id similar to step 1 and 2 reports .",
            "in both step 1 and 2 you need to search id of address and also you need to look for the value of assessment notes 's date left university similar to step 1 and 2 reports ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the csu fees table . in step 2 , consider the campuses 's campus equals Long Beach State University conditions in place of the csu fees 's year equals Long Beach State University conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                26
            ],
            [
                42,
                43
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                27,
                41
            ],
            [
                44,
                50
            ]
        ],
        "positive_example": "There should be campus of campuses table instead of csu fees's year .",
        "negative_examples": [
            "there should be campus of campuses table instead of enrollments 's graduate .",
            "there should be location of campuses table instead of degrees 's year .",
            "there should be graduate of campuses table instead of campuses 's year .",
            "there should be undergraduate of campuses table instead of enrollments 's year .",
            "there should be campus of campuses table instead of degrees 's graduate .",
            "there should be campus of campuses table instead of discipline enrollments 's discipline .",
            "there should be id of campuses table instead of discipline enrollments 's year .",
            "there should be campus of campuses table instead of discipline enrollments 's faculty .",
            "there should be campus of campuses table instead of csu fees 's campus fee .",
            "there should be campus of campuses table instead of campuses 's fte ay .",
            "there should be campus fee of campuses table instead of faculty 's year .",
            "there should be discipline of campuses table instead of degrees 's year .",
            "there should be campus of campuses table instead of campuses 's totalenrollment ay .",
            "there should be campus of campuses table instead of discipline enrollments 's id .",
            "there should be campus of campuses table instead of campuses 's year .",
            "there should be campus of campuses table instead of campuses 's graduate .",
            "there should be campus of campuses table instead of enrollments 's discipline .",
            "there should be campus of campuses table instead of discipline enrollments 's campus fee .",
            "there should be graduate of campuses table instead of enrollments 's year .",
            "there should be campus of campuses table instead of campus fee 's year .",
            "there should be campus of campuses table instead of fte ay 's year .",
            "there should be campus of campuses table instead of degrees 's degrees .",
            "there should be campus of campuses table instead of csu fees 's degrees .",
            "there should be id of campuses table instead of degrees 's year .",
            "there should be campus of campuses table instead of enrollments 's degrees .",
            "there should be campus of campuses table instead of campuses 's id .",
            "there should be graduate of campuses table instead of degrees 's year .",
            "there should be campus of campuses table instead of enrollments 's campus fee .",
            "there should be campus of campuses table instead of faculty 's undergraduate .",
            "there should be campus of campuses table instead of undergraduate 's year .",
            "there should be id of campuses table instead of faculty 's year .",
            "there should be location of campuses table instead of enrollments 's year .",
            "there should be totalenrollment ay of campuses table instead of campuses 's year .",
            "there should be campus of campuses table instead of faculty 's totalenrollment ay .",
            "there should be totalenrollment ay of campuses table instead of discipline enrollments 's year .",
            "there should be degrees of campuses table instead of degrees 's year .",
            "there should be discipline of campuses table instead of enrollments 's year .",
            "there should be campus of campuses table instead of csu fees 's location .",
            "there should be id of campuses table instead of enrollments 's year .",
            "there should be campus of campuses table instead of faculty 's discipline .",
            "there should be campus of campuses table instead of csu fees 's totalenrollment ay .",
            "there should be campus of campuses table instead of enrollments 's faculty .",
            "there should be faculty of campuses table instead of discipline enrollments 's year .",
            "there should be campus of campuses table instead of enrollments 's totalenrollment ay .",
            "there should be campus of campuses table instead of csu fees 's discipline .",
            "there should be discipline of campuses table instead of faculty 's year .",
            "there should be location of campuses table instead of campuses 's year .",
            "there should be campus of campuses table instead of degrees 's campus fee .",
            "there should be campus of campuses table instead of campuses 's degrees .",
            "there should be location of campuses table instead of faculty 's year ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find transaction id in place of account id .",
        "primary_span": [
            [
                4,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ]
        ],
        "positive_example": "Replace account id with transaction id .",
        "negative_examples": [
            "replace account id with invoice number .",
            "replace account id with vat rating .",
            "replace parent product id with transaction id .",
            "replace account id with invoice date .",
            "replace invoice date with transaction id .",
            "replace transaction date with transaction id .",
            "replace derived total cost with transaction id .",
            "replace account id with derived vat payable .",
            "replace account name with transaction id .",
            "replace product name with transaction id .",
            "replace product color with transaction id .",
            "replace account id with phone number .",
            "replace customer last name with transaction id .",
            "replace order details with transaction id .",
            "replace login password with transaction id .",
            "replace production type code with transaction id .",
            "replace account id with town city .",
            "replace date order placed with transaction id .",
            "replace login name with transaction id .",
            "replace customer id with transaction id .",
            "replace account id with transaction date .",
            "replace derived product cost with transaction id .",
            "replace product id with transaction id .",
            "replace account id with product size .",
            "replace product quantity with transaction id .",
            "replace account id with state county province .",
            "replace account id with email address .",
            "replace account id with gender .",
            "replace account id with customer id .",
            "replace other order item details with transaction id .",
            "replace account id with transaction type .",
            "replace product price with transaction id .",
            "replace account id with transaction amount .",
            "replace unit price with transaction id .",
            "replace account id with date account opened .",
            "replace account id with product type description .",
            "replace town city with transaction id .",
            "replace customer first name with transaction id .",
            "replace account id with other transaction details .",
            "replace account id with customer middle initial .",
            "replace date account opened with transaction id .",
            "replace account id with other order item details .",
            "replace derived vat payable with transaction id .",
            "replace account id with derived total cost .",
            "replace account id with order item id .",
            "replace other transaction details with transaction id .",
            "replace phone number with transaction id .",
            "replace account id with product price .",
            "replace account id with login password .",
            "replace account id with account name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use enrollments table in place of faculty table and discipline enrollments table in step 2 , consider the enrollments 's year equals 1956 and totalenrollment ay greater than 400 and fte ay greater than 200 conditions in place of the discipline enrollments 's year equals 400 and undergraduate greater than 1956 conditions . find campuses 's campus in place of faculty .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                39
            ],
            [
                57,
                60
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                40,
                56
            ],
            [
                61,
                65
            ]
        ],
        "positive_example": "Make sure fte ay equals 1956 , totalenrollment ay greater than 400 and Need to find campus .",
        "negative_examples": [
            "make sure fte ay equals 1956 , id greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , location greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , county greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , year greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , campus fee greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , degrees greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , discipline greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , undergraduate greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , graduate greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , faculty greater than 400 and need to find campus .",
            "make sure id equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure location equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure county equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure year equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure campus fee equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure degrees equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure discipline equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure undergraduate equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure graduate equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure faculty equals 1956 , totalenrollment ay greater than 400 and need to find campus .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find id .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find location .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find county .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find year .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find campus fee .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find degrees .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find discipline .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find undergraduate .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find graduate .",
            "make sure fte ay equals 1956 , totalenrollment ay greater than 400 and need to find faculty ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find director . find rating stars in place of average rating stars . find minimum rating stars in place of average rating stars .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                8,
                10
            ],
            [
                18,
                21
            ]
        ],
        "secondary_span": [
            [
                11,
                17
            ],
            [
                22,
                28
            ]
        ],
        "positive_example": "Take \"Lowest value of rating stars instead of \"average rating stars , also find title of movie table .",
        "negative_examples": [
            "take \" lowest value of movie id instead of \" average rating stars , also find title of movie table .",
            "take \" lowest value of title instead of \" average rating stars , also find title of movie table .",
            "take \" lowest value of year instead of \" average rating stars , also find title of movie table .",
            "take \" lowest value of director instead of \" average rating stars , also find title of movie table .",
            "take \" lowest value of reviewer id instead of \" average rating stars , also find title of movie table .",
            "take \" lowest value of name instead of \" average rating stars , also find title of movie table .",
            "take \" lowest value of rating date instead of \" average rating stars , also find title of movie table ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find apartment number in place of bedroom count . order the results by room count in place of bathroom count .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                14
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                15,
                20
            ]
        ],
        "positive_example": "Supersede bedroom and bathroom count with apartment number and bedroom count respectively.",
        "negative_examples": [
            "supersede bedroom and building id with apartment number and bedroom count respectively .",
            "supersede bedroom and building short name with apartment number and bedroom count respectively .",
            "supersede bedroom and building full name with apartment number and bedroom count respectively .",
            "supersede bedroom and building description with apartment number and bedroom count respectively .",
            "supersede bedroom and building address with apartment number and bedroom count respectively .",
            "supersede bedroom and building manager with apartment number and bedroom count respectively .",
            "supersede bedroom and building phone with apartment number and bedroom count respectively .",
            "supersede bedroom and apartment id with apartment number and bedroom count respectively .",
            "supersede bedroom and apartment type code with apartment number and bedroom count respectively .",
            "supersede bedroom and apartment number with apartment number and bedroom count respectively .",
            "supersede bedroom and room count with apartment number and bedroom count respectively .",
            "supersede bedroom and facility code with apartment number and bedroom count respectively .",
            "supersede bedroom and guest id with apartment number and bedroom count respectively .",
            "supersede bedroom and gender code with apartment number and bedroom count respectively .",
            "supersede bedroom and guest first name with apartment number and bedroom count respectively .",
            "supersede bedroom and guest last name with apartment number and bedroom count respectively .",
            "supersede bedroom and date of birth with apartment number and bedroom count respectively .",
            "supersede bedroom and apartment booking id with apartment number and bedroom count respectively .",
            "supersede bedroom and booking status code with apartment number and bedroom count respectively .",
            "supersede bedroom and booking start date with apartment number and bedroom count respectively .",
            "supersede bedroom and booking end date with apartment number and bedroom count respectively .",
            "supersede bedroom and status date with apartment number and bedroom count respectively .",
            "supersede bedroom and available yes or no with apartment number and bedroom count respectively .",
            "supersede bedroom and bathroom count with apartment number and building id respectively .",
            "supersede bedroom and bathroom count with apartment number and building short name respectively .",
            "supersede bedroom and bathroom count with apartment number and building full name respectively .",
            "supersede bedroom and bathroom count with apartment number and building description respectively .",
            "supersede bedroom and bathroom count with apartment number and building address respectively .",
            "supersede bedroom and bathroom count with apartment number and building manager respectively .",
            "supersede bedroom and bathroom count with apartment number and building phone respectively .",
            "supersede bedroom and bathroom count with apartment number and apartment id respectively .",
            "supersede bedroom and bathroom count with apartment number and apartment type code respectively .",
            "supersede bedroom and bathroom count with apartment number and apartment number respectively .",
            "supersede bedroom and bathroom count with apartment number and room count respectively .",
            "supersede bedroom and bathroom count with apartment number and facility code respectively .",
            "supersede bedroom and bathroom count with apartment number and guest id respectively .",
            "supersede bedroom and bathroom count with apartment number and gender code respectively .",
            "supersede bedroom and bathroom count with apartment number and guest first name respectively .",
            "supersede bedroom and bathroom count with apartment number and guest last name respectively .",
            "supersede bedroom and bathroom count with apartment number and date of birth respectively .",
            "supersede bedroom and bathroom count with apartment number and apartment booking id respectively .",
            "supersede bedroom and bathroom count with apartment number and booking status code respectively .",
            "supersede bedroom and bathroom count with apartment number and booking start date respectively .",
            "supersede bedroom and bathroom count with apartment number and booking end date respectively .",
            "supersede bedroom and bathroom count with apartment number and status date respectively .",
            "supersede bedroom and bathroom count with apartment number and available yes or no respectively ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , do not use the addresses table and staff table . in step 2 , remove the staff 's last name equals Sawayn conditions . in step 3 , do not use the customers table and addresses table . in step 4 , remove the staff 's last name equals Sawayn conditions . find staff 's last name in place of customers 's last name .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                46,
                55
            ],
            [
                56,
                60
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                32,
                41
            ],
            [
                61,
                68
            ]
        ],
        "positive_example": "In step 2 only find Customer's last name , in step 3 only find Staff's last name .",
        "negative_examples": [
            "in step 2 only find vehicles 's line 1 number building , in step 3 only find staff 's last line 1 number building",
            "in step 2 only find customer 's lesson time , in step 3 only find customer payments 's last lesson time",
            "in step 2 only find customer payments 's lesson id , in step 3 only find staff 's last lesson id",
            "in step 2 only find customer 's lesson id , in step 3 only find vehicles 's last lesson id",
            "in step 2 only find customer 's datetime payment , in step 3 only find customer payments 's last datetime payment",
            "in step 2 only find lessons 's first name , in step 3 only find staff 's last first name",
            "in step 2 only find addresses 's address id , in step 3 only find staff 's last address id",
            "in step 2 only find customer 's nickname , in step 3 only find lessons 's last nickname",
            "in step 2 only find lessons 's staff address id , in step 3 only find staff 's last staff address id",
            "in step 2 only find customer 's date joined staff , in step 3 only find vehicles 's last date joined staff",
            "in step 2 only find customer 's zip postcode , in step 3 only find customer payments 's last zip postcode",
            "in step 2 only find customer 's customer status code , in step 3 only find addresses 's last customer status code",
            "in step 2 only find customer 's address id , in step 3 only find vehicles 's last address id",
            "in step 2 only find customer 's country , in step 3 only find addresses 's last country",
            "in step 2 only find addresses 's lesson time , in step 3 only find staff 's last lesson time",
            "in step 2 only find customer 's staff address id , in step 3 only find customer payments 's last staff address id",
            "in step 2 only find lessons 's vehicle id , in step 3 only find staff 's last vehicle id",
            "in step 2 only find customer 's amount outstanding , in step 3 only find lessons 's last amount outstanding",
            "in step 2 only find customer 's customer address id , in step 3 only find vehicles 's last customer address id",
            "in step 2 only find lessons 's state province county , in step 3 only find staff 's last state province county",
            "in step 2 only find customer 's date joined staff , in step 3 only find staff 's last name .",
            "in step 2 only find customer payments 's line 1 number building , in step 3 only find staff 's last line 1 number building",
            "in step 2 only find customer 's staff id , in step 3 only find staff 's last name .",
            "in step 2 only find customer 's lesson time , in step 3 only find lessons 's last lesson time",
            "in step 2 only find customer 's date of birth , in step 3 only find staff 's last name .",
            "in step 2 only find customer payments 's staff address id , in step 3 only find staff 's last staff address id",
            "in step 2 only find customer payments 's staff id , in step 3 only find staff 's last staff id",
            "in step 2 only find customer 's date became customer , in step 3 only find customer payments 's last date became customer",
            "in step 2 only find customer 's vehicle details , in step 3 only find customer payments 's last vehicle details",
            "in step 2 only find vehicles 's date became customer , in step 3 only find staff 's last date became customer",
            "in step 2 only find vehicles 's cell mobile phone number , in step 3 only find staff 's last cell mobile phone number",
            "in step 2 only find customer payments 's customer status code , in step 3 only find staff 's last customer status code",
            "in step 2 only find customer 's payment method code , in step 3 only find customer payments 's last payment method code",
            "in step 2 only find customer 's price , in step 3 only find addresses 's last price",
            "in step 2 only find customer 's middle name , in step 3 only find customer payments 's last middle name",
            "in step 2 only find customer payments 's customer id , in step 3 only find staff 's last customer id",
            "in step 2 only find customer 's staff address id , in step 3 only find addresses 's last staff address id",
            "in step 2 only find customer 's nickname , in step 3 only find vehicles 's last nickname",
            "in step 2 only find customer 's last name , in step 3 only find vehicles 's last name .",
            "in step 2 only find customer 's payment method code , in step 3 only find vehicles 's last payment method code",
            "in step 2 only find addresses 's first name , in step 3 only find staff 's last first name",
            "in step 2 only find customer 's price , in step 3 only find customer payments 's last price",
            "in step 2 only find customer 's address id , in step 3 only find lessons 's last address id",
            "in step 2 only find customer 's staff address id , in step 3 only find vehicles 's last staff address id",
            "in step 2 only find customer 's customer status code , in step 3 only find customer payments 's last customer status code",
            "in step 2 only find customer 's amount payment , in step 3 only find lessons 's last amount payment",
            "in step 2 only find customer 's address id , in step 3 only find staff 's last name .",
            "in step 2 only find customer payments 's customer address id , in step 3 only find staff 's last customer address id",
            "in step 2 only find customer 's customer id , in step 3 only find lessons 's last customer id",
            "in step 2 only find customer 's nickname , in step 3 only find addresses 's last nickname"
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "additionally find date incident end .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [],
        "positive_example": "Will have to put date incident end in place of one of the date incident start .",
        "negative_examples": [
            "will have to put address type code in place of one of the date incident start .",
            "will have to put address type description in place of one of the date incident start .",
            "will have to put detention type code in place of one of the date incident start .",
            "will have to put detention type description in place of one of the date incident start .",
            "will have to put incident type code in place of one of the date incident start .",
            "will have to put incident type description in place of one of the date incident start .",
            "will have to put address id in place of one of the date incident start .",
            "will have to put line 1 in place of one of the date incident start .",
            "will have to put line 2 in place of one of the date incident start .",
            "will have to put line 3 in place of one of the date incident start .",
            "will have to put city in place of one of the date incident start .",
            "will have to put zip postcode in place of one of the date incident start .",
            "will have to put state province county in place of one of the date incident start .",
            "will have to put country in place of one of the date incident start .",
            "will have to put other address details in place of one of the date incident start .",
            "will have to put student id in place of one of the date incident start .",
            "will have to put first name in place of one of the date incident start .",
            "will have to put middle name in place of one of the date incident start .",
            "will have to put last name in place of one of the date incident start .",
            "will have to put cell mobile number in place of one of the date incident start .",
            "will have to put email address in place of one of the date incident start .",
            "will have to put date first rental in place of one of the date incident start .",
            "will have to put date left university in place of one of the date incident start .",
            "will have to put other student details in place of one of the date incident start .",
            "will have to put teacher id in place of one of the date incident start .",
            "will have to put gender in place of one of the date incident start .",
            "will have to put other details in place of one of the date incident start .",
            "will have to put notes id in place of one of the date incident start .",
            "will have to put date of notes in place of one of the date incident start .",
            "will have to put text of notes in place of one of the date incident start .",
            "will have to put incident id in place of one of the date incident start .",
            "will have to put date incident start in place of one of the date incident start .",
            "will have to put incident summary in place of one of the date incident start .",
            "will have to put recommendations in place of one of the date incident start .",
            "will have to put detention id in place of one of the date incident start .",
            "will have to put datetime detention start in place of one of the date incident start .",
            "will have to put datetime detention end in place of one of the date incident start .",
            "will have to put detention summary in place of one of the date incident start .",
            "will have to put date address from in place of one of the date incident start .",
            "will have to put date address to in place of one of the date incident start .",
            "will have to put monthly rental in place of one of the date incident start ."
        ],
        "neg_len": 41
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the rating table . in step 2 , find reviewer 's reviewer id in place of rating stars .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                19
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                20,
                25
            ]
        ],
        "positive_example": "reviewer id should be use in place of rating stars .",
        "negative_examples": [
            "movie id should be use in place of rating stars .",
            "title should be use in place of rating stars .",
            "year should be use in place of rating stars .",
            "director should be use in place of rating stars .",
            "name should be use in place of rating stars .",
            "rating date should be use in place of rating stars .",
            "reviewer id should be use in place of movie id .",
            "reviewer id should be use in place of title .",
            "reviewer id should be use in place of year .",
            "reviewer id should be use in place of director .",
            "reviewer id should be use in place of name .",
            "reviewer id should be use in place of rating date ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "consider the building manager equals Brenden conditions in place of the building short name equals Brenden conditions .",
        "primary_span": [
            [
                0,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                17
            ]
        ],
        "positive_example": "There should be building manager instead of building short name .",
        "negative_examples": [
            "there should be building manager instead of building id .",
            "there should be building manager instead of building full name .",
            "there should be building manager instead of building description .",
            "there should be building manager instead of building address .",
            "there should be building manager instead of building phone .",
            "there should be building manager instead of apartment id .",
            "there should be building manager instead of apartment type code .",
            "there should be building manager instead of apartment number .",
            "there should be building manager instead of bathroom count .",
            "there should be building manager instead of bedroom count .",
            "there should be building manager instead of room count .",
            "there should be building manager instead of facility code .",
            "there should be building manager instead of guest id .",
            "there should be building manager instead of gender code .",
            "there should be building manager instead of guest first name .",
            "there should be building manager instead of guest last name .",
            "there should be building manager instead of date of birth .",
            "there should be building manager instead of apartment booking id .",
            "there should be building manager instead of booking status code .",
            "there should be building manager instead of booking start date .",
            "there should be building manager instead of booking end date .",
            "there should be building manager instead of status date .",
            "there should be building manager instead of available yes or no .",
            "there should be building id instead of building short name .",
            "there should be building full name instead of building short name .",
            "there should be building description instead of building short name .",
            "there should be building address instead of building short name .",
            "there should be building phone instead of building short name .",
            "there should be apartment id instead of building short name .",
            "there should be apartment type code instead of building short name .",
            "there should be apartment number instead of building short name .",
            "there should be bathroom count instead of building short name .",
            "there should be bedroom count instead of building short name .",
            "there should be room count instead of building short name .",
            "there should be facility code instead of building short name .",
            "there should be guest id instead of building short name .",
            "there should be gender code instead of building short name .",
            "there should be guest first name instead of building short name .",
            "there should be guest last name instead of building short name .",
            "there should be date of birth instead of building short name .",
            "there should be apartment booking id instead of building short name .",
            "there should be booking status code instead of building short name .",
            "there should be booking start date instead of building short name .",
            "there should be booking end date instead of building short name .",
            "there should be status date instead of building short name .",
            "there should be available yes or no instead of building short name ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find transaction id in place of account id .",
        "primary_span": [
            [
                4,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ]
        ],
        "positive_example": "Replace account id with transaction id .",
        "negative_examples": [
            "replace account id with order id .",
            "replace email address with transaction id .",
            "replace phone number with transaction id .",
            "replace account id with order item id .",
            "replace account id with product quantity .",
            "replace account id with product price .",
            "replace transaction amount with transaction id .",
            "replace invoice number with transaction id .",
            "replace account id with production type code .",
            "replace account id with product color .",
            "replace account id with customer last name .",
            "replace account id with transaction date .",
            "replace account id with customer first name .",
            "replace account id with date account opened .",
            "replace account id with transaction comment .",
            "replace account id with unit price .",
            "replace transaction comment with transaction id .",
            "replace transaction date with transaction id .",
            "replace production type code with transaction id .",
            "replace transaction type with transaction id .",
            "replace account id with email address .",
            "replace product title with transaction id .",
            "replace other account details with transaction id .",
            "replace town city with transaction id .",
            "replace other order item details with transaction id .",
            "replace account id with invoice date .",
            "replace login password with transaction id .",
            "replace order item id with transaction id .",
            "replace account id with product id .",
            "replace account id with login name .",
            "replace vat rating with transaction id .",
            "replace account id with vat rating .",
            "replace account id with other order item details .",
            "replace parent product id with transaction id .",
            "replace account id with product name .",
            "replace derived vat payable with transaction id .",
            "replace account id with country .",
            "replace product type description with transaction id .",
            "replace account id with town city .",
            "replace product name with transaction id .",
            "replace derived product cost with transaction id .",
            "replace account id with login password .",
            "replace customer id with transaction id .",
            "replace unit price with transaction id .",
            "replace product size with transaction id .",
            "replace account id with phone number .",
            "replace account id with date order placed .",
            "replace invoice date with transaction id .",
            "replace other transaction details with transaction id .",
            "replace customer last name with transaction id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , do not use the screen mode table . in step 2 , consider the hardware model name equals LG-P760 conditions in place of the company name equals LG-P760 conditions . find screen mode and chip model in place of hardware colours and char cells .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                23
            ],
            [
                34,
                39
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                24,
                33
            ],
            [
                40,
                48
            ]
        ],
        "positive_example": "I want chip model, screen mode and model name of hardware.",
        "negative_examples": [
            "i want phone , used kb and model name of hardware .",
            "i want model name , phone and model name of hardware .",
            "i want phone , hardware colours and model name of hardware .",
            "i want chip model , accreditation level and model name of hardware .",
            "i want rom mib , screen mode and model name of hardware .",
            "i want wifi , screen mode and model name of hardware .",
            "i want wifi , phone and model name of hardware .",
            "i want phone , slots and model name of hardware .",
            "i want phone , screen mode and model name of hardware .",
            "i want hardware colours , phone and model name of hardware .",
            "i want phone , rom mib and model name of hardware .",
            "i want phone , graphics mode and model name of hardware .",
            "i want chip model , date and model name of hardware .",
            "i want accreditation level , phone and model name of hardware .",
            "i want accreditation type , screen mode and model name of hardware .",
            "i want chip model , hardware colours and model name of hardware .",
            "i want slots , phone and model name of hardware .",
            "i want used kb , screen mode and model name of hardware .",
            "i want phone , map and model name of hardware .",
            "i want chip model , bluetooth and model name of hardware .",
            "i want char cells , phone and model name of hardware .",
            "i want map , screen mode and model name of hardware .",
            "i want hardware colours , screen mode and model name of hardware .",
            "i want rom mib , phone and model name of hardware .",
            "i want bluetooth , phone and model name of hardware .",
            "i want phone , pixels and model name of hardware .",
            "i want char cells , screen mode and model name of hardware .",
            "i want used kb , phone and model name of hardware .",
            "i want pixels , phone and model name of hardware .",
            "i want slots , screen mode and model name of hardware .",
            "i want chip model , slots and model name of hardware .",
            "i want chip model , char cells and model name of hardware .",
            "i want chip model , launch year and model name of hardware .",
            "i want phone , ram mib and model name of hardware .",
            "i want accreditation level , screen mode and model name of hardware .",
            "i want hardware model name , screen mode and model name of hardware .",
            "i want graphics mode , screen mode and model name of hardware .",
            "i want chip model , type and model name of hardware .",
            "i want chip model , wifi and model name of hardware .",
            "i want pixels , screen mode and model name of hardware .",
            "i want chip model , model name and model name of hardware .",
            "i want phone , launch year and model name of hardware .",
            "i want chip model , company name and model name of hardware .",
            "i want chip model , used kb and model name of hardware .",
            "i want phone , char cells and model name of hardware .",
            "i want company name , phone and model name of hardware .",
            "i want bluetooth , screen mode and model name of hardware .",
            "i want launch year , phone and model name of hardware .",
            "i want chip model , accreditation type and model name of hardware .",
            "i want date , screen mode and model name of hardware ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the enrollments 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "I want year of csu fee of San Jose State University.",
        "negative_examples": [
            "i want id of csu fee of san jose state university .",
            "i want campus of csu fee of san jose state university .",
            "i want location of csu fee of san jose state university .",
            "i want county of csu fee of san jose state university .",
            "i want campus fee of csu fee of san jose state university .",
            "i want degrees of csu fee of san jose state university .",
            "i want discipline of csu fee of san jose state university .",
            "i want undergraduate of csu fee of san jose state university .",
            "i want graduate of csu fee of san jose state university .",
            "i want totalenrollment ay of csu fee of san jose state university .",
            "i want fte ay of csu fee of san jose state university .",
            "i want faculty of csu fee of san jose state university ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table and degrees table besides the faculty table . consider the faculty 's year equals 2001 conditions in place of the faculty 's year equals 1 conditions . find faculty in place of number of rows . find the result with the smallest degrees .",
        "primary_span": [
            [
                0,
                10
            ],
            [
                16,
                23
            ],
            [
                35,
                36
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                11,
                15
            ],
            [
                24,
                34
            ],
            [
                37,
                43
            ]
        ],
        "positive_example": "Replace 1 with 2001 and make sure faculty has least degrees from degree table .",
        "negative_examples": [
            "replace 1 with 2001 and make sure id has least discipline enrollments from degree table .",
            "replace 1 with 2001 and make sure campuses has least county from degree table .",
            "replace 1 with 2001 and make sure location has least discipline enrollments from degree table .",
            "replace 1 with 2001 and make sure enrollments has least year from degree table .",
            "replace 1 with 2001 and make sure year has least csu fees from degree table .",
            "replace 1 with 2001 and make sure year has least degrees from degree table .",
            "replace 1 with 2001 and make sure faculty has least discipline enrollments from degree table .",
            "replace 1 with 2001 and make sure campuses has least discipline from degree table .",
            "replace 1 with 2001 and make sure enrollments has least campus from degree table .",
            "replace 1 with 2001 and make sure discipline enrollments has least fte ay from degree table .",
            "replace 1 with 2001 and make sure enrollments has least county from degree table .",
            "replace 1 with 2001 and make sure location has least enrollments from degree table .",
            "replace 1 with 2001 and make sure discipline enrollments has least totalenrollment ay from degree table .",
            "replace 1 with 2001 and make sure discipline has least discipline enrollments from degree table .",
            "replace 1 with 2001 and make sure enrollments has least fte ay from degree table .",
            "replace 1 with 2001 and make sure campus has least discipline enrollments from degree table .",
            "replace 1 with 2001 and make sure discipline has least campuses from degree table .",
            "replace 1 with 2001 and make sure id has least enrollments from degree table .",
            "replace 1 with 2001 and make sure campus fee has least degrees from degree table .",
            "replace 1 with 2001 and make sure fte ay has least campuses from degree table .",
            "replace 1 with 2001 and make sure campus has least campuses from degree table .",
            "replace 1 with 2001 and make sure county has least discipline enrollments from degree table .",
            "replace 1 with 2001 and make sure county has least degrees from degree table .",
            "replace 1 with 2001 and make sure undergraduate has least degrees from degree table .",
            "replace 1 with 2001 and make sure faculty has least undergraduate from degree table .",
            "replace 1 with 2001 and make sure csu fees has least degrees from degree table .",
            "replace 1 with 2001 and make sure faculty has least fte ay from degree table .",
            "replace 1 with 2001 and make sure enrollments has least totalenrollment ay from degree table .",
            "replace 1 with 2001 and make sure enrollments has least location from degree table .",
            "replace 1 with 2001 and make sure faculty has least csu fees from degree table .",
            "replace 1 with 2001 and make sure faculty has least campuses from degree table .",
            "replace 1 with 2001 and make sure campuses has least fte ay from degree table .",
            "replace 1 with 2001 and make sure year has least enrollments from degree table .",
            "replace 1 with 2001 and make sure csu fees has least location from degree table .",
            "replace 1 with 2001 and make sure year has least campuses from degree table .",
            "replace 1 with 2001 and make sure faculty has least graduate from degree table .",
            "replace 1 with 2001 and make sure discipline enrollments has least year from degree table .",
            "replace 1 with 2001 and make sure campus has least csu fees from degree table .",
            "replace 1 with 2001 and make sure discipline enrollments has least campus from degree table .",
            "replace 1 with 2001 and make sure undergraduate has least csu fees from degree table .",
            "replace 1 with 2001 and make sure campus fee has least discipline enrollments from degree table .",
            "replace 1 with 2001 and make sure csu fees has least discipline from degree table .",
            "replace 1 with 2001 and make sure campuses has least year from degree table .",
            "replace 1 with 2001 and make sure csu fees has least graduate from degree table .",
            "replace 1 with 2001 and make sure id has least degrees from degree table .",
            "replace 1 with 2001 and make sure discipline enrollments has least location from degree table .",
            "replace 1 with 2001 and make sure graduate has least enrollments from degree table .",
            "replace 1 with 2001 and make sure csu fees has least fte ay from degree table .",
            "replace 1 with 2001 and make sure enrollments has least graduate from degree table .",
            "replace 1 with 2001 and make sure discipline enrollments has least undergraduate from degree table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 2 , additionally make sure that nickname like % s % .",
        "primary_span": [
            [
                4,
                13
            ]
        ],
        "secondary_span": [],
        "positive_example": "Verify that letter's' must be nickname.",
        "negative_examples": [
            "verify that letter 's ' must be address id .",
            "verify that letter 's ' must be line 1 number building .",
            "verify that letter 's ' must be city .",
            "verify that letter 's ' must be zip postcode .",
            "verify that letter 's ' must be state province county .",
            "verify that letter 's ' must be country .",
            "verify that letter 's ' must be staff id .",
            "verify that letter 's ' must be staff address id .",
            "verify that letter 's ' must be first name .",
            "verify that letter 's ' must be middle name .",
            "verify that letter 's ' must be last name .",
            "verify that letter 's ' must be date of birth .",
            "verify that letter 's ' must be date joined staff .",
            "verify that letter 's ' must be date left staff .",
            "verify that letter 's ' must be vehicle id .",
            "verify that letter 's ' must be vehicle details .",
            "verify that letter 's ' must be customer id .",
            "verify that letter 's ' must be customer address id .",
            "verify that letter 's ' must be customer status code .",
            "verify that letter 's ' must be date became customer .",
            "verify that letter 's ' must be amount outstanding .",
            "verify that letter 's ' must be email address .",
            "verify that letter 's ' must be phone number .",
            "verify that letter 's ' must be cell mobile phone number .",
            "verify that letter 's ' must be datetime payment .",
            "verify that letter 's ' must be payment method code .",
            "verify that letter 's ' must be amount payment .",
            "verify that letter 's ' must be lesson id .",
            "verify that letter 's ' must be lesson status code .",
            "verify that letter 's ' must be lesson date .",
            "verify that letter 's ' must be lesson time .",
            "verify that letter 's ' must be price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the degrees 's year equals 2001 and campuses 's campus equals San Francisco State University conditions in place of the faculty 's year equals San Francisco State University and faculty 's campus equals 2001 conditions . find degrees in place of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                36
            ],
            [
                57,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                37,
                56
            ],
            [
                59,
                63
            ]
        ],
        "positive_example": "Find degree instead of graduate and replace year with campus and campus with year .",
        "negative_examples": [
            "find faculty instead of graduate and replace year with discipline and discipline with year .",
            "find csu fees instead of graduate and replace fte ay with campus and campus with fte ay .",
            "find discipline enrollments instead of graduate and replace fte ay with campus and campus with fte ay .",
            "find degree instead of graduate and replace year with discipline and campus with year .",
            "find discipline enrollments instead of graduate and replace year with discipline and discipline with year .",
            "find campuses instead of graduate and replace fte ay with campus and campus with fte ay .",
            "find degree instead of graduate and replace faculty with campus and campus with year .",
            "find discipline enrollments instead of graduate and replace undergraduate with campus and campus with undergraduate .",
            "find campuses instead of campus fee and replace year with campus and campus with year .",
            "find enrollments instead of graduate and replace year with undergraduate and undergraduate with year .",
            "find faculty instead of graduate and replace totalenrollment ay with campus and campus with totalenrollment ay .",
            "find enrollments instead of graduate and replace year with county and county with year .",
            "find enrollments instead of fte ay and replace year with campus and campus with year .",
            "find faculty instead of graduate and replace faculty with campus and campus with faculty .",
            "find enrollments instead of graduate and replace location with campus and campus with location .",
            "find campuses instead of graduate and replace year with faculty and faculty with year .",
            "find enrollments instead of id and replace year with campus and campus with year .",
            "find enrollments instead of graduate and replace discipline with campus and campus with discipline .",
            "find csu fees instead of discipline and replace year with campus and campus with year .",
            "find totalenrollment ay instead of graduate and replace year with campus and campus with year .",
            "find degree instead of totalenrollment ay and replace year with campus and campus with year .",
            "find csu fees instead of graduate and replace faculty with campus and campus with faculty .",
            "find faculty instead of graduate and replace discipline with campus and campus with discipline .",
            "find discipline enrollments instead of discipline and replace year with campus and campus with year .",
            "find csu fees instead of graduate and replace year with totalenrollment ay and totalenrollment ay with year .",
            "find csu fees instead of graduate and replace location with campus and campus with location .",
            "find discipline enrollments instead of graduate and replace faculty with campus and campus with faculty .",
            "find enrollments instead of county and replace year with campus and campus with year .",
            "find faculty instead of graduate and replace year with undergraduate and undergraduate with year .",
            "find csu fees instead of graduate and replace undergraduate with campus and campus with undergraduate .",
            "find degree instead of graduate and replace discipline with campus and campus with year .",
            "find county instead of graduate and replace year with campus and campus with year .",
            "find fte ay instead of graduate and replace year with campus and campus with year .",
            "find enrollments instead of graduate and replace totalenrollment ay with campus and campus with totalenrollment ay .",
            "find discipline enrollments instead of graduate and replace year with campus fee and campus fee with year .",
            "find csu fees instead of graduate and replace discipline with campus and campus with discipline .",
            "find degree instead of fte ay and replace year with campus and campus with year .",
            "find csu fees instead of graduate and replace id with campus and campus with id .",
            "find discipline enrollments instead of graduate and replace year with id and id with year .",
            "find degree instead of graduate and replace location with campus and campus with year .",
            "find csu fees instead of graduate and replace year with fte ay and fte ay with year .",
            "find faculty instead of totalenrollment ay and replace year with campus and campus with year .",
            "find enrollments instead of graduate and replace campus fee with campus and campus with campus fee .",
            "find enrollments instead of graduate and replace year with totalenrollment ay and totalenrollment ay with year .",
            "find faculty instead of location and replace year with campus and campus with year .",
            "find degree instead of graduate and replace id with campus and campus with year .",
            "find enrollments instead of graduate and replace faculty with campus and campus with faculty .",
            "find discipline instead of graduate and replace year with campus and campus with year .",
            "find campuses instead of graduate and replace year with totalenrollment ay and totalenrollment ay with year .",
            "find faculty instead of fte ay and replace year with campus and campus with year ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Minimum one account should be there with every single consumers.",
        "negative_examples": [
            "minimum one customers should be there with every single consumers .",
            "minimum one orders should be there with every single consumers .",
            "minimum one invoices should be there with every single consumers .",
            "minimum one product categories should be there with every single consumers .",
            "minimum one products should be there with every single consumers .",
            "minimum one financial transactions should be there with every single consumers .",
            "minimum one order items should be there with every single consumers .",
            "minimum one invoice line items should be there with every single consumers ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the faculty table . consider the campuses 's campus equals San Francisco State University conditions in place of the faculty 's year equals San Francisco State University conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                23
            ],
            [
                38,
                39
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                24,
                37
            ],
            [
                40,
                46
            ]
        ],
        "positive_example": "You need to make sure that the campus is of San Francisco State University only.",
        "negative_examples": [
            "you need to make sure that the id is of san francisco state university only .",
            "you need to make sure that the location is of san francisco state university only .",
            "you need to make sure that the county is of san francisco state university only .",
            "you need to make sure that the year is of san francisco state university only .",
            "you need to make sure that the campus fee is of san francisco state university only .",
            "you need to make sure that the degrees is of san francisco state university only .",
            "you need to make sure that the discipline is of san francisco state university only .",
            "you need to make sure that the undergraduate is of san francisco state university only .",
            "you need to make sure that the graduate is of san francisco state university only .",
            "you need to make sure that the totalenrollment ay is of san francisco state university only .",
            "you need to make sure that the fte ay is of san francisco state university only .",
            "you need to make sure that the faculty is of san francisco state university only ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find phone number in place of cell mobile phone number .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                10
            ]
        ],
        "positive_example": "Replace cell mobile phone number with phone number .",
        "negative_examples": [
            "replace address id with phone number .",
            "replace line 1 number building with phone number .",
            "replace city with phone number .",
            "replace zip postcode with phone number .",
            "replace state province county with phone number .",
            "replace country with phone number .",
            "replace staff id with phone number .",
            "replace staff address id with phone number .",
            "replace nickname with phone number .",
            "replace first name with phone number .",
            "replace middle name with phone number .",
            "replace last name with phone number .",
            "replace date of birth with phone number .",
            "replace date joined staff with phone number .",
            "replace date left staff with phone number .",
            "replace vehicle id with phone number .",
            "replace vehicle details with phone number .",
            "replace customer id with phone number .",
            "replace customer address id with phone number .",
            "replace customer status code with phone number .",
            "replace date became customer with phone number .",
            "replace amount outstanding with phone number .",
            "replace email address with phone number .",
            "replace phone number with phone number .",
            "replace datetime payment with phone number .",
            "replace payment method code with phone number .",
            "replace amount payment with phone number .",
            "replace lesson id with phone number .",
            "replace lesson status code with phone number .",
            "replace lesson date with phone number .",
            "replace lesson time with phone number .",
            "replace price with phone number ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Find the number of corresponding rows to order items.",
        "negative_examples": [
            "find the number of corresponding rows to customers .",
            "find the number of corresponding rows to orders .",
            "find the number of corresponding rows to invoices .",
            "find the number of corresponding rows to accounts .",
            "find the number of corresponding rows to product categories .",
            "find the number of corresponding rows to products .",
            "find the number of corresponding rows to financial transactions .",
            "find the number of corresponding rows to invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find director . find rating stars in place of maximum rating stars . find minimum rating stars in place of maximum rating stars .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                8,
                10
            ],
            [
                18,
                21
            ]
        ],
        "secondary_span": [
            [
                11,
                17
            ],
            [
                22,
                28
            ]
        ],
        "positive_example": "You need to find directors having minimum start ratings along with the titles.",
        "negative_examples": [
            "you need to find movie id having minimum start ratings along with the titles .",
            "you need to find title having minimum start ratings along with the titles .",
            "you need to find year having minimum start ratings along with the titles .",
            "you need to find reviewer id having minimum start ratings along with the titles .",
            "you need to find name having minimum start ratings along with the titles .",
            "you need to find rating stars having minimum start ratings along with the titles .",
            "you need to find rating date having minimum start ratings along with the titles ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and undergraduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "There should be csu fees rather than undergraduate and campuses rather than csu fees year .",
        "negative_examples": [
            "there should be csu fees rather than undergraduate and id rather than csu fees year .",
            "there should be csu fees rather than undergraduate and location rather than csu fees year .",
            "there should be csu fees rather than undergraduate and county rather than csu fees year .",
            "there should be csu fees rather than undergraduate and campus fee rather than csu fees year .",
            "there should be csu fees rather than undergraduate and degrees rather than csu fees year .",
            "there should be csu fees rather than undergraduate and discipline rather than csu fees year .",
            "there should be csu fees rather than undergraduate and graduate rather than csu fees year .",
            "there should be csu fees rather than undergraduate and totalenrollment ay rather than csu fees year .",
            "there should be csu fees rather than undergraduate and fte ay rather than csu fees year .",
            "there should be csu fees rather than undergraduate and faculty rather than csu fees year .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees id .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees location .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees county .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees campus fee .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees degrees .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees discipline .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees graduate .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees totalenrollment ay .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees fte ay .",
            "there should be csu fees rather than undergraduate and campuses rather than csu fees faculty .",
            "there should be csu fees rather than id and campuses rather than csu fees year .",
            "there should be csu fees rather than location and campuses rather than csu fees year .",
            "there should be csu fees rather than county and campuses rather than csu fees year .",
            "there should be csu fees rather than campus fee and campuses rather than csu fees year .",
            "there should be csu fees rather than degrees and campuses rather than csu fees year .",
            "there should be csu fees rather than discipline and campuses rather than csu fees year .",
            "there should be csu fees rather than graduate and campuses rather than csu fees year .",
            "there should be csu fees rather than totalenrollment ay and campuses rather than csu fees year .",
            "there should be csu fees rather than fte ay and campuses rather than csu fees year .",
            "there should be csu fees rather than faculty and campuses rather than csu fees year ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "Use campus instead of id.",
        "negative_examples": [
            "use id instead of id .",
            "use location instead of id .",
            "use county instead of id .",
            "use year instead of id .",
            "use campus fee instead of id .",
            "use degrees instead of id .",
            "use discipline instead of id .",
            "use undergraduate instead of id .",
            "use graduate instead of id .",
            "use totalenrollment ay instead of id .",
            "use fte ay instead of id .",
            "use faculty instead of id ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2005 and faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "I am looking for campus which is equivalent to CSU in Campuses table.",
        "negative_examples": [
            "i am looking for campus which is equivalent to csu in csu fees table .",
            "i am looking for campus which is equivalent to csu in degrees table .",
            "i am looking for campus which is equivalent to csu in discipline enrollments table .",
            "i am looking for campus which is equivalent to csu in enrollments table .",
            "i am looking for campus which is equivalent to csu in faculty table .",
            "i am looking for campus which is equivalent to csu in id table .",
            "i am looking for campus which is equivalent to csu in campus table .",
            "i am looking for campus which is equivalent to csu in location table .",
            "i am looking for campus which is equivalent to csu in county table .",
            "i am looking for campus which is equivalent to csu in year table .",
            "i am looking for campus which is equivalent to csu in campus fee table .",
            "i am looking for campus which is equivalent to csu in discipline table .",
            "i am looking for campus which is equivalent to csu in undergraduate table .",
            "i am looking for campus which is equivalent to csu in graduate table .",
            "i am looking for campus which is equivalent to csu in totalenrollment ay table .",
            "i am looking for campus which is equivalent to csu in fte ay table ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "remove the year equals 1996 conditions .",
        "primary_span": [
            [
                0,
                6
            ]
        ],
        "secondary_span": [],
        "positive_example": "Delete the phrase \"and year equals 1996\".",
        "negative_examples": [
            "delete the phrase \" and id equals 1996 \" .",
            "delete the phrase \" and campus equals 1996 \" .",
            "delete the phrase \" and location equals 1996 \" .",
            "delete the phrase \" and county equals 1996 \" .",
            "delete the phrase \" and campus fee equals 1996 \" .",
            "delete the phrase \" and degrees equals 1996 \" .",
            "delete the phrase \" and discipline equals 1996 \" .",
            "delete the phrase \" and undergraduate equals 1996 \" .",
            "delete the phrase \" and graduate equals 1996 \" .",
            "delete the phrase \" and totalenrollment ay equals 1996 \" .",
            "delete the phrase \" and fte ay equals 1996 \" .",
            "delete the phrase \" and faculty equals 1996 \" ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 3 , order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                30
            ]
        ],
        "positive_example": "In step 2 find each value of degrees for degrees 's campuses in step 1 's results .",
        "negative_examples": [
            "in step 2 find each value of campuses for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of csu fees for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of discipline enrollments for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of enrollments for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of faculty for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of id for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of campus for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of location for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of county for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of year for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of campus fee for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of discipline for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of undergraduate for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of graduate for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of totalenrollment ay for degrees 's campuses in step 1 's results .",
            "in step 2 find each value of fte ay for degrees 's campuses in step 1 's results ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally find date of birth .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [],
        "positive_example": "You need to use date of birth.",
        "negative_examples": [
            "you need to use address id .",
            "you need to use line 1 number building .",
            "you need to use city .",
            "you need to use zip postcode .",
            "you need to use state province county .",
            "you need to use country .",
            "you need to use staff id .",
            "you need to use staff address id .",
            "you need to use nickname .",
            "you need to use first name .",
            "you need to use middle name .",
            "you need to use last name .",
            "you need to use date joined staff .",
            "you need to use date left staff .",
            "you need to use vehicle id .",
            "you need to use vehicle details .",
            "you need to use customer id .",
            "you need to use customer address id .",
            "you need to use customer status code .",
            "you need to use date became customer .",
            "you need to use amount outstanding .",
            "you need to use email address .",
            "you need to use phone number .",
            "you need to use cell mobile phone number .",
            "you need to use datetime payment .",
            "you need to use payment method code .",
            "you need to use amount payment .",
            "you need to use lesson id .",
            "you need to use lesson status code .",
            "you need to use lesson date .",
            "you need to use lesson time .",
            "you need to use price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table . in step 2 , find degrees 's campus in place of faculty . order the results by summation of degrees in place of average faculty 's year .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                17,
                20
            ],
            [
                26,
                32
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                21,
                25
            ],
            [
                33,
                40
            ]
        ],
        "positive_example": "Exchange faculty table with degrees table , use campus of degrees instead of faculty of faculty table .",
        "negative_examples": [
            "exchange faculty table with csu fees table , use fte ay of degrees instead of faculty of faculty table .",
            "exchange discipline enrollments table with degrees table , use location of degrees instead of faculty of faculty table .",
            "exchange totalenrollment ay table with campuses table , use campus of degrees instead of totalenrollment ay of totalenrollment ay table .",
            "exchange undergraduate table with degrees table , use campus of degrees instead of faculty of faculty table .",
            "exchange faculty table with undergraduate table , use campus of degrees instead of faculty of faculty table .",
            "exchange campuses table with degrees table , use undergraduate of degrees instead of faculty of faculty table .",
            "exchange csu fees table with graduate table , use campus of graduate instead of faculty of faculty table .",
            "exchange discipline enrollments table with discipline table , use campus of discipline instead of faculty of faculty table .",
            "exchange csu fees table with degrees table , use totalenrollment ay of degrees instead of faculty of faculty table .",
            "exchange enrollments table with undergraduate table , use campus of undergraduate instead of faculty of faculty table .",
            "exchange csu fees table with totalenrollment ay table , use campus of totalenrollment ay instead of faculty of faculty table .",
            "exchange faculty table with discipline enrollments table , use location of degrees instead of faculty of faculty table .",
            "exchange faculty table with campuses table , use campus fee of degrees instead of faculty of faculty table .",
            "exchange csu fees table with degrees table , use discipline of degrees instead of faculty of faculty table .",
            "exchange undergraduate table with campuses table , use campus of degrees instead of undergraduate of undergraduate table .",
            "exchange enrollments table with degrees table , use totalenrollment ay of degrees instead of faculty of faculty table .",
            "exchange faculty table with degrees table , use graduate of degrees instead of faculty of faculty table .",
            "exchange campuses table with degrees table , use discipline of degrees instead of faculty of faculty table .",
            "exchange enrollments table with degrees table , use fte ay of degrees instead of faculty of faculty table .",
            "exchange campuses table with discipline table , use campus of discipline instead of faculty of faculty table .",
            "exchange campuses table with degrees table , use totalenrollment ay of degrees instead of faculty of faculty table .",
            "exchange county table with discipline enrollments table , use campus of degrees instead of county of county table .",
            "exchange county table with enrollments table , use campus of degrees instead of county of county table .",
            "exchange faculty table with discipline enrollments table , use graduate of degrees instead of faculty of faculty table .",
            "exchange csu fees table with degrees table , use year of degrees instead of faculty of faculty table .",
            "exchange faculty table with campuses table , use campus of degrees instead of faculty of faculty table .",
            "exchange faculty table with degrees table , use discipline of degrees instead of faculty of faculty table .",
            "exchange campuses table with degrees table , use id of degrees instead of faculty of faculty table .",
            "exchange faculty table with degrees table , use totalenrollment ay of degrees instead of faculty of faculty table .",
            "exchange campuses table with degrees table , use location of degrees instead of faculty of faculty table .",
            "exchange faculty table with discipline enrollments table , use totalenrollment ay of degrees instead of faculty of faculty table .",
            "exchange location table with degrees table , use campus of degrees instead of faculty of faculty table .",
            "exchange discipline enrollments table with county table , use campus of county instead of faculty of faculty table .",
            "exchange discipline enrollments table with location table , use campus of location instead of faculty of faculty table .",
            "exchange graduate table with campuses table , use campus of degrees instead of graduate of graduate table .",
            "exchange campus fee table with degrees table , use campus of degrees instead of faculty of faculty table .",
            "exchange enrollments table with degrees table , use campus of degrees instead of faculty of faculty table .",
            "exchange discipline enrollments table with degrees table , use discipline of degrees instead of faculty of faculty table .",
            "exchange faculty table with campuses table , use undergraduate of degrees instead of faculty of faculty table .",
            "exchange csu fees table with id table , use campus of id instead of faculty of faculty table .",
            "exchange csu fees table with degrees table , use id of degrees instead of faculty of faculty table .",
            "exchange faculty table with enrollments table , use year of degrees instead of faculty of faculty table .",
            "exchange faculty table with degrees table , use county of degrees instead of faculty of faculty table .",
            "exchange csu fees table with degrees table , use graduate of degrees instead of faculty of faculty table .",
            "exchange location table with csu fees table , use campus of degrees instead of location of location table .",
            "exchange campus fee table with campuses table , use campus of degrees instead of campus fee of campus fee table .",
            "exchange year table with degrees table , use campus of degrees instead of faculty of faculty table .",
            "exchange discipline enrollments table with undergraduate table , use campus of undergraduate instead of faculty of faculty table .",
            "exchange undergraduate table with csu fees table , use campus of degrees instead of undergraduate of undergraduate table .",
            "exchange discipline table with enrollments table , use campus of degrees instead of discipline of discipline table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , additionally use the information from the rating table besides the movie table . additionally make sure that rating stars greater than or equals 4 . make sure no repetition in the results . order the results ascending . in step 1 , show me all the results .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                28
            ],
            [
                29,
                36
            ],
            [
                37,
                41
            ],
            [
                46,
                51
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "I want release year of movie in descending order whose rating is 4 or 5.",
        "negative_examples": [
            "i want release year of movie in descending order whose movie is 4 or 5 .",
            "i want release year of movie in descending order whose reviewer is 4 or 5 ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation and chip model equals Graphics conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "Find type in place of chip model and company name in place of type .",
        "negative_examples": [
            "find type in place of chip model and ram mib in place of type .",
            "find slots in place of screen mode and company name in place of slots .",
            "find screen mode in place of screen mode and company name in place of screen mode .",
            "find model name in place of screen mode and company name in place of model name .",
            "find hardware model name in place of chip model and company name in place of type .",
            "find type in place of screen mode and map in place of type .",
            "find pixels in place of screen mode and company name in place of pixels .",
            "find type in place of hardware colours and company name in place of type .",
            "find type in place of screen mode and char cells in place of type .",
            "find type in place of chip model and slots in place of type .",
            "find rom mib in place of screen mode and company name in place of rom mib .",
            "find type in place of chip model and date in place of type .",
            "find type in place of phone and accreditation type in place of type .",
            "find char cells in place of screen mode and company name in place of char cells .",
            "find accreditation level in place of screen mode and company name in place of accreditation level .",
            "find type in place of chip model and accreditation type in place of type .",
            "find type in place of phone and rom mib in place of type .",
            "find type in place of screen mode and hardware colours in place of type .",
            "find accreditation type in place of phone and company name in place of accreditation type .",
            "find type in place of char cells and company name in place of type .",
            "find type in place of phone and date in place of type .",
            "find type in place of launch year and company name in place of type .",
            "find type in place of map and company name in place of type .",
            "find launch year in place of screen mode and company name in place of launch year .",
            "find ram mib in place of screen mode and company name in place of ram mib .",
            "find type in place of phone and map in place of type .",
            "find type in place of phone and hardware colours in place of type .",
            "find type in place of screen mode and slots in place of type .",
            "find type in place of screen mode and accreditation level in place of type .",
            "find type in place of phone and company name in place of type .",
            "find type in place of chip model and accreditation level in place of type .",
            "find type in place of phone and graphics mode in place of type .",
            "find type in place of chip model and used kb in place of type .",
            "find type in place of chip model and char cells in place of type .",
            "find accreditation level in place of chip model and company name in place of type .",
            "find bluetooth in place of screen mode and company name in place of bluetooth .",
            "find ram mib in place of chip model and company name in place of type .",
            "find ram mib in place of phone and company name in place of ram mib .",
            "find type in place of screen mode and pixels in place of type .",
            "find type in place of screen mode and model name in place of type .",
            "find type in place of phone and slots in place of type .",
            "find type in place of chip model and model name in place of type .",
            "find used kb in place of phone and company name in place of used kb .",
            "find rom mib in place of phone and company name in place of rom mib .",
            "find type in place of wifi and company name in place of type .",
            "find pixels in place of phone and company name in place of pixels .",
            "find wifi in place of phone and company name in place of wifi .",
            "find type in place of screen mode and date in place of type .",
            "find graphics mode in place of phone and company name in place of graphics mode .",
            "find type in place of phone and wifi in place of type ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , find for each value of director . additionally find rating stars and minimum rating stars . you should not find the smallest of the results . show me all the results .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                11,
                19
            ],
            [
                20,
                35
            ]
        ],
        "secondary_span": [],
        "positive_example": "Make sure to replace director with rating stars of rating table .",
        "negative_examples": [
            "make sure to replace director with movie id of rating table .",
            "make sure to replace director with title of rating table .",
            "make sure to replace director with year of rating table .",
            "make sure to replace director with reviewer id of rating table .",
            "make sure to replace director with name of rating table .",
            "make sure to replace director with rating date of rating table .",
            "make sure to replace movie id with rating stars of rating table .",
            "make sure to replace title with rating stars of rating table .",
            "make sure to replace year with rating stars of rating table .",
            "make sure to replace reviewer id with rating stars of rating table .",
            "make sure to replace name with rating stars of rating table .",
            "make sure to replace rating date with rating stars of rating table ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "remove the year equals 1996 conditions .",
        "primary_span": [
            [
                0,
                6
            ]
        ],
        "secondary_span": [],
        "positive_example": " remove \"and year as 1996\".",
        "negative_examples": [
            "remove \" and id as 1996 \" .",
            "remove \" and campus as 1996 \" .",
            "remove \" and location as 1996 \" .",
            "remove \" and county as 1996 \" .",
            "remove \" and campus fee as 1996 \" .",
            "remove \" and degrees as 1996 \" .",
            "remove \" and discipline as 1996 \" .",
            "remove \" and undergraduate as 1996 \" .",
            "remove \" and graduate as 1996 \" .",
            "remove \" and totalenrollment ay as 1996 \" .",
            "remove \" and fte ay as 1996 \" .",
            "remove \" and faculty as 1996 \" ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals James Cameron conditions in place of the name equals James Cameron conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "The director's name should be James Cameron.",
        "negative_examples": [
            "the movie id 's name should be james cameron .",
            "the title 's name should be james cameron .",
            "the year 's name should be james cameron .",
            "the reviewer id 's name should be james cameron .",
            "the rating stars 's name should be james cameron .",
            "the rating date 's name should be james cameron .",
            "the director 's movie id should be james cameron .",
            "the director 's title should be james cameron .",
            "the director 's year should be james cameron .",
            "the director 's reviewer id should be james cameron .",
            "the director 's rating stars should be james cameron .",
            "the director 's rating date should be james cameron ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment bookings table . do not find for each value of apartment booking id . in step 2 , additionally make sure that bedroom count greater than 2 . do not return booking end date .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                49
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "There should be building phone in apartments instead of guest first name in apartment bookings table .",
        "negative_examples": [
            "there should be building phone in apartment buildings instead of guest first name in apartment bookings table .",
            "there should be building phone in apartment facilities instead of guest first name in apartment bookings table .",
            "there should be building phone in guests instead of guest first name in apartment bookings table .",
            "there should be building phone in apartment bookings instead of guest first name in apartment bookings table .",
            "there should be building phone in view unit status instead of guest first name in apartment bookings table .",
            "there should be building phone in apartments instead of guest first name in building id table .",
            "there should be building phone in apartments instead of guest first name in building short name table .",
            "there should be building phone in apartments instead of guest first name in building full name table .",
            "there should be building phone in apartments instead of guest first name in building description table .",
            "there should be building phone in apartments instead of guest first name in building address table .",
            "there should be building phone in apartments instead of guest first name in building manager table .",
            "there should be building phone in apartments instead of guest first name in building phone table .",
            "there should be building phone in apartments instead of guest first name in apartment id table .",
            "there should be building phone in apartments instead of guest first name in apartment type code table .",
            "there should be building phone in apartments instead of guest first name in apartment number table .",
            "there should be building phone in apartments instead of guest first name in bathroom count table .",
            "there should be building phone in apartments instead of guest first name in bedroom count table .",
            "there should be building phone in apartments instead of guest first name in room count table .",
            "there should be building phone in apartments instead of guest first name in facility code table .",
            "there should be building phone in apartments instead of guest first name in guest id table .",
            "there should be building phone in apartments instead of guest first name in gender code table .",
            "there should be building phone in apartments instead of guest first name in guest first name table .",
            "there should be building phone in apartments instead of guest first name in guest last name table .",
            "there should be building phone in apartments instead of guest first name in date of birth table .",
            "there should be building phone in apartments instead of guest first name in booking status code table .",
            "there should be building phone in apartments instead of guest first name in booking start date table .",
            "there should be building phone in apartments instead of guest first name in booking end date table .",
            "there should be building phone in apartments instead of guest first name in status date table .",
            "there should be building phone in apartments instead of guest first name in available yes or no table ."
        ],
        "neg_len": 29
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customers table besides the addresses table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Use customers in step 1.",
        "negative_examples": [
            "use addresses in step 1 .",
            "use staff in step 1 .",
            "use vehicles in step 1 .",
            "use customer payments in step 1 .",
            "use lessons in step 1 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the accreditation type equals Graphics and type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "You should use type and company name by swapping them with accreditation type and type respectively in step 2.",
        "negative_examples": [
            "you should use type and company name by swapping them with chip model and type respectively in step 2 .",
            "you should use model name and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and chip model by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with graphics mode and type respectively in step 2 .",
            "you should use type and company name by swapping them with date and type respectively in step 2 .",
            "you should use type and company name by swapping them with used kb and type respectively in step 2 .",
            "you should use type and screen mode by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with screen mode and type respectively in step 2 .",
            "you should use type and company name by swapping them with slots and type respectively in step 2 .",
            "you should use type and slots by swapping them with accreditation type and type respectively in step 2 .",
            "you should use wifi and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and graphics mode by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and map by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and hardware model name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with ram mib and type respectively in step 2 .",
            "you should use type and rom mib by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with map and type respectively in step 2 .",
            "you should use type and hardware colours by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and date by swapping them with accreditation type and type respectively in step 2 .",
            "you should use accreditation level and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use hardware model name and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with char cells and type respectively in step 2 .",
            "you should use type and model name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and ram mib by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and char cells by swapping them with accreditation type and type respectively in step 2 .",
            "you should use screen mode and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with pixels and type respectively in step 2 .",
            "you should use type and company name by swapping them with launch year and type respectively in step 2 .",
            "you should use type and company name by swapping them with hardware model name and type respectively in step 2 .",
            "you should use slots and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use pixels and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use date and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with bluetooth and type respectively in step 2 .",
            "you should use hardware colours and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with wifi and type respectively in step 2 .",
            "you should use type and company name by swapping them with accreditation level and type respectively in step 2 .",
            "you should use type and launch year by swapping them with accreditation type and type respectively in step 2 .",
            "you should use ram mib and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use launch year and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with model name and type respectively in step 2 .",
            "you should use used kb and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use char cells and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and pixels by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with hardware colours and type respectively in step 2 .",
            "you should use type and accreditation level by swapping them with accreditation type and type respectively in step 2 .",
            "you should use type and company name by swapping them with rom mib and type respectively in step 2 .",
            "you should use rom mib and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use map and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use bluetooth and company name by swapping them with accreditation type and type respectively in step 2 .",
            "you should use graphics mode and company name by swapping them with accreditation type and type respectively in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use financial transactions table in place of accounts table . do not find for each value of accounts 's account id .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                21
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "You have to find the equivalent number of rows of each account id of financial transaction table.",
        "negative_examples": [
            "you have to find the equivalent number of rows of each customer id of financial transaction table .",
            "you have to find the equivalent number of rows of each country of orders table .",
            "you have to find the equivalent number of rows of each order id of orders table .",
            "you have to find the equivalent number of rows of each email address of products table .",
            "you have to find the equivalent number of rows of each other order item details of invoices table .",
            "you have to find the equivalent number of rows of each date order placed of product categories table .",
            "you have to find the equivalent number of rows of each transaction id of order items table .",
            "you have to find the equivalent number of rows of each parent product id of product categories table .",
            "you have to find the equivalent number of rows of each date account opened of invoice line items table .",
            "you have to find the equivalent number of rows of each parent product id of products table .",
            "you have to find the equivalent number of rows of each order details of product categories table .",
            "you have to find the equivalent number of rows of each town city of customers table .",
            "you have to find the equivalent number of rows of each account name of orders table .",
            "you have to find the equivalent number of rows of each other transaction details of customers table .",
            "you have to find the equivalent number of rows of each gender of invoices table .",
            "you have to find the equivalent number of rows of each country of customers table .",
            "you have to find the equivalent number of rows of each town city of orders table .",
            "you have to find the equivalent number of rows of each transaction comment of customers table .",
            "you have to find the equivalent number of rows of each account name of product categories table .",
            "you have to find the equivalent number of rows of each order id of product categories table .",
            "you have to find the equivalent number of rows of each order details of invoices table .",
            "you have to find the equivalent number of rows of each other transaction details of product categories table .",
            "you have to find the equivalent number of rows of each customer first name of order items table .",
            "you have to find the equivalent number of rows of each transaction date of accounts table .",
            "you have to find the equivalent number of rows of each transaction comment of products table .",
            "you have to find the equivalent number of rows of each product title of order items table .",
            "you have to find the equivalent number of rows of each invoice date of accounts table .",
            "you have to find the equivalent number of rows of each product title of customers table .",
            "you have to find the equivalent number of rows of each account name of invoices table .",
            "you have to find the equivalent number of rows of each product id of customers table .",
            "you have to find the equivalent number of rows of each other account details of orders table .",
            "you have to find the equivalent number of rows of each order item id of invoice line items table .",
            "you have to find the equivalent number of rows of each order id of customers table .",
            "you have to find the equivalent number of rows of each production type code of customers table .",
            "you have to find the equivalent number of rows of each transaction id of invoices table .",
            "you have to find the equivalent number of rows of each product id of orders table .",
            "you have to find the equivalent number of rows of each order id of financial transaction table .",
            "you have to find the equivalent number of rows of each order details of accounts table .",
            "you have to find the equivalent number of rows of each email address of product categories table .",
            "you have to find the equivalent number of rows of each product size of product categories table .",
            "you have to find the equivalent number of rows of each login password of financial transaction table .",
            "you have to find the equivalent number of rows of each date account opened of accounts table .",
            "you have to find the equivalent number of rows of each product quantity of order items table .",
            "you have to find the equivalent number of rows of each account id of product categories table .",
            "you have to find the equivalent number of rows of each customer first name of accounts table .",
            "you have to find the equivalent number of rows of each gender of orders table .",
            "you have to find the equivalent number of rows of each product quantity of product categories table .",
            "you have to find the equivalent number of rows of each production type code of accounts table .",
            "you have to find the equivalent number of rows of each derived total cost of invoice line items table .",
            "you have to find the equivalent number of rows of each other order item details of customers table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the rating table besides the movie table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Make sure the number of rows is equivalent to each value of movie id of rating table.",
        "negative_examples": [
            "make sure the number of rows is equivalent to each value of movie id of movie table .",
            "make sure the number of rows is equivalent to each value of movie id of reviewer table ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , find average room count in place of average bathroom count .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ]
        ],
        "positive_example": "i want room count from apartments rather than number of apartment.",
        "negative_examples": [
            "i want building id from apartments rather than number of apartment .",
            "i want building short name from apartments rather than number of apartment .",
            "i want building full name from apartments rather than number of apartment .",
            "i want building description from apartments rather than number of apartment .",
            "i want building address from apartments rather than number of apartment .",
            "i want building manager from apartments rather than number of apartment .",
            "i want building phone from apartments rather than number of apartment .",
            "i want apartment id from apartments rather than number of apartment .",
            "i want apartment type code from apartments rather than number of apartment .",
            "i want apartment number from apartments rather than number of apartment .",
            "i want bathroom count from apartments rather than number of apartment .",
            "i want bedroom count from apartments rather than number of apartment .",
            "i want facility code from apartments rather than number of apartment .",
            "i want guest id from apartments rather than number of apartment .",
            "i want gender code from apartments rather than number of apartment .",
            "i want guest first name from apartments rather than number of apartment .",
            "i want guest last name from apartments rather than number of apartment .",
            "i want date of birth from apartments rather than number of apartment .",
            "i want apartment booking id from apartments rather than number of apartment .",
            "i want booking status code from apartments rather than number of apartment .",
            "i want booking start date from apartments rather than number of apartment .",
            "i want booking end date from apartments rather than number of apartment .",
            "i want status date from apartments rather than number of apartment .",
            "i want available yes or no from apartments rather than number of apartment ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , find faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                12
            ]
        ],
        "positive_example": "Make sure to find faculty's faculty not number of rows of faculty table .",
        "negative_examples": [
            "make sure to find campuses 's faculty not number of rows of faculty table .",
            "make sure to find csu fees 's faculty not number of rows of faculty table .",
            "make sure to find degrees 's faculty not number of rows of faculty table .",
            "make sure to find discipline enrollments 's faculty not number of rows of faculty table .",
            "make sure to find enrollments 's faculty not number of rows of faculty table .",
            "make sure to find id 's faculty not number of rows of faculty table .",
            "make sure to find campus 's faculty not number of rows of faculty table .",
            "make sure to find location 's faculty not number of rows of faculty table .",
            "make sure to find county 's faculty not number of rows of faculty table .",
            "make sure to find year 's faculty not number of rows of faculty table .",
            "make sure to find campus fee 's faculty not number of rows of faculty table .",
            "make sure to find discipline 's faculty not number of rows of faculty table .",
            "make sure to find undergraduate 's faculty not number of rows of faculty table .",
            "make sure to find graduate 's faculty not number of rows of faculty table .",
            "make sure to find totalenrollment ay 's faculty not number of rows of faculty table .",
            "make sure to find fte ay 's faculty not number of rows of faculty table ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions . find campuses 's campus in place of county .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ],
            [
                43,
                46
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ],
            [
                47,
                51
            ]
        ],
        "positive_example": "I want campuses details of Los Angeles since 1950.",
        "negative_examples": [
            "i want id details of los angeles since 1950 .",
            "i want location details of los angeles since 1950 .",
            "i want county details of los angeles since 1950 .",
            "i want year details of los angeles since 1950 .",
            "i want campus fee details of los angeles since 1950 .",
            "i want degrees details of los angeles since 1950 .",
            "i want discipline details of los angeles since 1950 .",
            "i want undergraduate details of los angeles since 1950 .",
            "i want graduate details of los angeles since 1950 .",
            "i want totalenrollment ay details of los angeles since 1950 .",
            "i want fte ay details of los angeles since 1950 .",
            "i want faculty details of los angeles since 1950 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the csu fees table . consider the campuses 's campus equals San Jose State University conditions in place of the csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                24
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                25,
                39
            ]
        ],
        "positive_example": "Ensure that campus of campuses's table should be same as San Jose State University.",
        "negative_examples": [
            "ensure that campus fee of csu fees 's table should be same as san jose state university .",
            "ensure that totalenrollment ay of csu fees 's table should be same as san jose state university .",
            "ensure that totalenrollment ay of enrollments 's table should be same as san jose state university .",
            "ensure that undergraduate of campuses 's table should be same as san jose state university .",
            "ensure that undergraduate of enrollments 's table should be same as san jose state university .",
            "ensure that fte ay of campuses 's table should be same as san jose state university .",
            "ensure that degrees of campuses 's table should be same as san jose state university .",
            "ensure that campus fee of discipline enrollments 's table should be same as san jose state university .",
            "ensure that year of degrees 's table should be same as san jose state university .",
            "ensure that year of enrollments 's table should be same as san jose state university .",
            "ensure that year of csu fees 's table should be same as san jose state university .",
            "ensure that totalenrollment ay of degrees 's table should be same as san jose state university .",
            "ensure that discipline of enrollments 's table should be same as san jose state university .",
            "ensure that campus of faculty 's table should be same as san jose state university .",
            "ensure that campus of location 's table should be same as san jose state university .",
            "ensure that totalenrollment ay of faculty 's table should be same as san jose state university .",
            "ensure that totalenrollment ay of campuses 's table should be same as san jose state university .",
            "ensure that year of discipline enrollments 's table should be same as san jose state university .",
            "ensure that id of campuses 's table should be same as san jose state university .",
            "ensure that faculty of enrollments 's table should be same as san jose state university .",
            "ensure that campus of discipline 's table should be same as san jose state university .",
            "ensure that fte ay of discipline enrollments 's table should be same as san jose state university .",
            "ensure that location of campuses 's table should be same as san jose state university .",
            "ensure that campus of graduate 's table should be same as san jose state university .",
            "ensure that discipline of discipline enrollments 's table should be same as san jose state university .",
            "ensure that location of degrees 's table should be same as san jose state university .",
            "ensure that campus fee of enrollments 's table should be same as san jose state university .",
            "ensure that graduate of campuses 's table should be same as san jose state university .",
            "ensure that location of enrollments 's table should be same as san jose state university .",
            "ensure that fte ay of faculty 's table should be same as san jose state university .",
            "ensure that discipline of degrees 's table should be same as san jose state university .",
            "ensure that fte ay of csu fees 's table should be same as san jose state university .",
            "ensure that county of faculty 's table should be same as san jose state university .",
            "ensure that degrees of csu fees 's table should be same as san jose state university .",
            "ensure that discipline of campuses 's table should be same as san jose state university .",
            "ensure that campus of csu fees 's table should be same as san jose state university .",
            "ensure that county of enrollments 's table should be same as san jose state university .",
            "ensure that location of discipline enrollments 's table should be same as san jose state university .",
            "ensure that id of enrollments 's table should be same as san jose state university .",
            "ensure that campus of enrollments 's table should be same as san jose state university .",
            "ensure that undergraduate of csu fees 's table should be same as san jose state university .",
            "ensure that graduate of discipline enrollments 's table should be same as san jose state university .",
            "ensure that campus of campus fee 's table should be same as san jose state university .",
            "ensure that campus of county 's table should be same as san jose state university .",
            "ensure that campus fee of faculty 's table should be same as san jose state university .",
            "ensure that campus of discipline enrollments 's table should be same as san jose state university .",
            "ensure that faculty of degrees 's table should be same as san jose state university .",
            "ensure that faculty of faculty 's table should be same as san jose state university .",
            "ensure that faculty of campuses 's table should be same as san jose state university .",
            "ensure that id of faculty 's table should be same as san jose state university ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 2 , find text of notes in place of notes id .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "In step 2, use text of notes instead of id of notes.",
        "negative_examples": [
            "in step 2 , use address type code instead of id of notes .",
            "in step 2 , use address type description instead of id of notes .",
            "in step 2 , use detention type code instead of id of notes .",
            "in step 2 , use detention type description instead of id of notes .",
            "in step 2 , use incident type code instead of id of notes .",
            "in step 2 , use incident type description instead of id of notes .",
            "in step 2 , use address id instead of id of notes .",
            "in step 2 , use line 1 instead of id of notes .",
            "in step 2 , use line 2 instead of id of notes .",
            "in step 2 , use line 3 instead of id of notes .",
            "in step 2 , use city instead of id of notes .",
            "in step 2 , use zip postcode instead of id of notes .",
            "in step 2 , use state province county instead of id of notes .",
            "in step 2 , use country instead of id of notes .",
            "in step 2 , use other address details instead of id of notes .",
            "in step 2 , use student id instead of id of notes .",
            "in step 2 , use first name instead of id of notes .",
            "in step 2 , use middle name instead of id of notes .",
            "in step 2 , use last name instead of id of notes .",
            "in step 2 , use cell mobile number instead of id of notes .",
            "in step 2 , use email address instead of id of notes .",
            "in step 2 , use date first rental instead of id of notes .",
            "in step 2 , use date left university instead of id of notes .",
            "in step 2 , use other student details instead of id of notes .",
            "in step 2 , use teacher id instead of id of notes .",
            "in step 2 , use gender instead of id of notes .",
            "in step 2 , use other details instead of id of notes .",
            "in step 2 , use notes id instead of id of notes .",
            "in step 2 , use date of notes instead of id of notes .",
            "in step 2 , use incident id instead of id of notes .",
            "in step 2 , use date incident start instead of id of notes .",
            "in step 2 , use date incident end instead of id of notes .",
            "in step 2 , use incident summary instead of id of notes .",
            "in step 2 , use recommendations instead of id of notes .",
            "in step 2 , use detention id instead of id of notes .",
            "in step 2 , use datetime detention start instead of id of notes .",
            "in step 2 , use datetime detention end instead of id of notes .",
            "in step 2 , use detention summary instead of id of notes .",
            "in step 2 , use date address from instead of id of notes .",
            "in step 2 , use date address to instead of id of notes .",
            "in step 2 , use monthly rental instead of id of notes ."
        ],
        "neg_len": 41
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the invoices table besides the orders table . in step 2 , make sure that the corresponding value in step 1 greater than 2 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                33
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "You have to use order id of invoice table.",
        "negative_examples": [
            "you have to use order id of customers table .",
            "you have to use order id of orders table .",
            "you have to use order id of accounts table .",
            "you have to use order id of product categories table .",
            "you have to use order id of products table .",
            "you have to use order id of financial transactions table .",
            "you have to use order id of order items table .",
            "you have to use order id of invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Eliminate and year of the faculty is 2002.",
        "negative_examples": [
            "eliminate and year of the id is 2002 .",
            "eliminate and id of the degrees is 2002 .",
            "eliminate and fte ay of the enrollments is 2002 .",
            "eliminate and graduate of the csu fees is 2002 .",
            "eliminate and year of the undergraduate is 2002 .",
            "eliminate and undergraduate of the degrees is 2002 .",
            "eliminate and county of the csu fees is 2002 .",
            "eliminate and discipline of the csu fees is 2002 .",
            "eliminate and discipline of the degrees is 2002 .",
            "eliminate and fte ay of the faculty is 2002 .",
            "eliminate and year of the county is 2002 .",
            "eliminate and graduate of the degrees is 2002 .",
            "eliminate and degrees of the discipline enrollments is 2002 .",
            "eliminate and undergraduate of the csu fees is 2002 .",
            "eliminate and year of the campus is 2002 .",
            "eliminate and county of the faculty is 2002 .",
            "eliminate and totalenrollment ay of the discipline enrollments is 2002 .",
            "eliminate and degrees of the enrollments is 2002 .",
            "eliminate and campus fee of the csu fees is 2002 .",
            "eliminate and undergraduate of the campuses is 2002 .",
            "eliminate and county of the enrollments is 2002 .",
            "eliminate and county of the degrees is 2002 .",
            "eliminate and id of the campuses is 2002 .",
            "eliminate and fte ay of the csu fees is 2002 .",
            "eliminate and degrees of the degrees is 2002 .",
            "eliminate and location of the csu fees is 2002 .",
            "eliminate and location of the campuses is 2002 .",
            "eliminate and degrees of the faculty is 2002 .",
            "eliminate and county of the discipline enrollments is 2002 .",
            "eliminate and campus of the enrollments is 2002 .",
            "eliminate and id of the csu fees is 2002 .",
            "eliminate and campus of the discipline enrollments is 2002 .",
            "eliminate and county of the campuses is 2002 .",
            "eliminate and discipline of the discipline enrollments is 2002 .",
            "eliminate and totalenrollment ay of the faculty is 2002 .",
            "eliminate and campus of the faculty is 2002 .",
            "eliminate and fte ay of the campuses is 2002 .",
            "eliminate and location of the degrees is 2002 .",
            "eliminate and graduate of the campuses is 2002 .",
            "eliminate and year of the enrollments is 2002 .",
            "eliminate and totalenrollment ay of the campuses is 2002 .",
            "eliminate and discipline of the campuses is 2002 .",
            "eliminate and degrees of the campuses is 2002 .",
            "eliminate and campus of the campuses is 2002 .",
            "eliminate and id of the enrollments is 2002 .",
            "eliminate and campus fee of the discipline enrollments is 2002 .",
            "eliminate and year of the campuses is 2002 .",
            "eliminate and campus fee of the enrollments is 2002 .",
            "eliminate and totalenrollment ay of the degrees is 2002 .",
            "eliminate and location of the discipline enrollments is 2002 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average room count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Replace bathroom count with room count .",
        "negative_examples": [
            "replace building id with room count .",
            "replace building short name with room count .",
            "replace building full name with room count .",
            "replace building description with room count .",
            "replace building address with room count .",
            "replace building manager with room count .",
            "replace building phone with room count .",
            "replace apartment id with room count .",
            "replace apartment type code with room count .",
            "replace apartment number with room count .",
            "replace bedroom count with room count .",
            "replace room count with room count .",
            "replace facility code with room count .",
            "replace guest id with room count .",
            "replace gender code with room count .",
            "replace guest first name with room count .",
            "replace guest last name with room count .",
            "replace date of birth with room count .",
            "replace apartment booking id with room count .",
            "replace booking status code with room count .",
            "replace booking start date with room count .",
            "replace booking end date with room count .",
            "replace status date with room count .",
            "replace available yes or no with room count ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of discipline enrollments table . find for each value of degrees 's year in place of discipline enrollments 's year . in step 2 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                14,
                21
            ],
            [
                34,
                37
            ],
            [
                46,
                52
            ]
        ],
        "secondary_span": [
            [
                7,
                13
            ],
            [
                22,
                29
            ],
            [
                38,
                45
            ],
            [
                53,
                58
            ]
        ],
        "positive_example": "I want you to drop step 1 and use degrees table along with higest specified degrees.",
        "negative_examples": [
            "i want you to drop step 1 and use campuses table along with higest specified degrees .",
            "i want you to drop step 1 and use csu fees table along with higest specified degrees .",
            "i want you to drop step 1 and use discipline enrollments table along with higest specified degrees .",
            "i want you to drop step 1 and use enrollments table along with higest specified degrees .",
            "i want you to drop step 1 and use faculty table along with higest specified degrees .",
            "i want you to drop step 1 and use id table along with higest specified degrees .",
            "i want you to drop step 1 and use campus table along with higest specified degrees .",
            "i want you to drop step 1 and use location table along with higest specified degrees .",
            "i want you to drop step 1 and use county table along with higest specified degrees .",
            "i want you to drop step 1 and use year table along with higest specified degrees .",
            "i want you to drop step 1 and use campus fee table along with higest specified degrees .",
            "i want you to drop step 1 and use discipline table along with higest specified degrees .",
            "i want you to drop step 1 and use undergraduate table along with higest specified degrees .",
            "i want you to drop step 1 and use graduate table along with higest specified degrees .",
            "i want you to drop step 1 and use totalenrollment ay table along with higest specified degrees .",
            "i want you to drop step 1 and use fte ay table along with higest specified degrees ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "order the results by city area in place of city population .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                11
            ]
        ],
        "positive_example": "Make sure to find in descending order of city area instead of city population .",
        "negative_examples": [
            "make sure to find in descending order of city area instead of product id .",
            "make sure to find in descending order of city area instead of product .",
            "make sure to find in descending order of city area instead of dimensions .",
            "make sure to find in descending order of city area instead of dpi .",
            "make sure to find in descending order of city area instead of pages per minute color .",
            "make sure to find in descending order of city area instead of max page size .",
            "make sure to find in descending order of city area instead of interface .",
            "make sure to find in descending order of city area instead of store id .",
            "make sure to find in descending order of city area instead of store name .",
            "make sure to find in descending order of city area instead of type .",
            "make sure to find in descending order of city area instead of area size .",
            "make sure to find in descending order of city area instead of number of product category .",
            "make sure to find in descending order of city area instead of ranking .",
            "make sure to find in descending order of city area instead of district id .",
            "make sure to find in descending order of city area instead of district name .",
            "make sure to find in descending order of city area instead of headquartered city .",
            "make sure to find in descending order of product id instead of city population .",
            "make sure to find in descending order of product instead of city population .",
            "make sure to find in descending order of dimensions instead of city population .",
            "make sure to find in descending order of dpi instead of city population .",
            "make sure to find in descending order of pages per minute color instead of city population .",
            "make sure to find in descending order of max page size instead of city population .",
            "make sure to find in descending order of interface instead of city population .",
            "make sure to find in descending order of store id instead of city population .",
            "make sure to find in descending order of store name instead of city population .",
            "make sure to find in descending order of type instead of city population .",
            "make sure to find in descending order of area size instead of city population .",
            "make sure to find in descending order of number of product category instead of city population .",
            "make sure to find in descending order of ranking instead of city population .",
            "make sure to find in descending order of district id instead of city population .",
            "make sure to find in descending order of district name instead of city population .",
            "make sure to find in descending order of headquartered city instead of city population ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "order the results by room count in place of bathroom count .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                11
            ]
        ],
        "positive_example": "room count would take the place of bathroom count .",
        "negative_examples": [
            "room count would take the place of building id .",
            "room count would take the place of building short name .",
            "room count would take the place of building full name .",
            "room count would take the place of building description .",
            "room count would take the place of building address .",
            "room count would take the place of building manager .",
            "room count would take the place of building phone .",
            "room count would take the place of apartment id .",
            "room count would take the place of apartment type code .",
            "room count would take the place of apartment number .",
            "room count would take the place of bedroom count .",
            "room count would take the place of facility code .",
            "room count would take the place of guest id .",
            "room count would take the place of gender code .",
            "room count would take the place of guest first name .",
            "room count would take the place of guest last name .",
            "room count would take the place of date of birth .",
            "room count would take the place of apartment booking id .",
            "room count would take the place of booking status code .",
            "room count would take the place of booking start date .",
            "room count would take the place of booking end date .",
            "room count would take the place of status date .",
            "room count would take the place of available yes or no .",
            "building id would take the place of bathroom count .",
            "building short name would take the place of bathroom count .",
            "building full name would take the place of bathroom count .",
            "building description would take the place of bathroom count .",
            "building address would take the place of bathroom count .",
            "building manager would take the place of bathroom count .",
            "building phone would take the place of bathroom count .",
            "apartment id would take the place of bathroom count .",
            "apartment type code would take the place of bathroom count .",
            "apartment number would take the place of bathroom count .",
            "bedroom count would take the place of bathroom count .",
            "facility code would take the place of bathroom count .",
            "guest id would take the place of bathroom count .",
            "gender code would take the place of bathroom count .",
            "guest first name would take the place of bathroom count .",
            "guest last name would take the place of bathroom count .",
            "date of birth would take the place of bathroom count .",
            "apartment booking id would take the place of bathroom count .",
            "booking status code would take the place of bathroom count .",
            "booking start date would take the place of bathroom count .",
            "booking end date would take the place of bathroom count .",
            "status date would take the place of bathroom count .",
            "available yes or no would take the place of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the staff table besides the addresses table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Find total rows of staff table in step 1.",
        "negative_examples": [
            "find total rows of addresses table in step 1 .",
            "find total rows of vehicles table in step 1 .",
            "find total rows of customers table in step 1 .",
            "find total rows of customer payments table in step 1 .",
            "find total rows of lessons table in step 1 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , additionally use the information from the reviewer table . in step 2 , consider the name equals Sarah Martinez conditions in place of the rating stars equals Sarah Martinez conditions .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                17,
                23
            ]
        ],
        "secondary_span": [
            [
                24,
                34
            ]
        ],
        "positive_example": "include reviewer table and use name in place of rating for step 1.",
        "negative_examples": [
            "include movie table and use name in place of rating for step 1 .",
            "include rating table and use name in place of rating for step 1 .",
            "include reviewer table and use movie id in place of rating for step 1 .",
            "include reviewer table and use title in place of rating for step 1 .",
            "include reviewer table and use year in place of rating for step 1 .",
            "include reviewer table and use director in place of rating for step 1 .",
            "include reviewer table and use reviewer id in place of rating for step 1 .",
            "include reviewer table and use rating stars in place of rating for step 1 .",
            "include reviewer table and use rating date in place of rating for step 1 .",
            "include movie table and use movie id in place of rating for step 1 .",
            "include movie table and use title in place of rating for step 1 .",
            "include movie table and use year in place of rating for step 1 .",
            "include movie table and use director in place of rating for step 1 .",
            "include movie table and use reviewer id in place of rating for step 1 .",
            "include movie table and use rating stars in place of rating for step 1 .",
            "include movie table and use rating date in place of rating for step 1 .",
            "include rating table and use movie id in place of rating for step 1 .",
            "include rating table and use title in place of rating for step 1 .",
            "include rating table and use year in place of rating for step 1 .",
            "include rating table and use director in place of rating for step 1 .",
            "include rating table and use reviewer id in place of rating for step 1 .",
            "include rating table and use rating stars in place of rating for step 1 .",
            "include rating table and use rating date in place of rating for step 1 ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use reviewer table in place of movie table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Supplant reviewer table in replacement of movie table.",
        "negative_examples": [
            "supplant reviewer table in replacement of rating table .",
            "supplant rating table in replacement of movie table ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and graduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "Replace graduate with year in csu fee table. Also, use campuses of campuse table and not the year of discipline enrollment table.",
        "negative_examples": [
            "replace graduate with year in csu fee table . also , use fte ay of campuse table and not the year of discipline enrollment table .",
            "replace faculty with year in csu fee table . also , use campuses of campuse table and not the year of discipline enrollment table .",
            "replace graduate with discipline in csu fee table . also , use campuses of campuse table and not the year of discipline enrollment table .",
            "replace graduate with county in csu fee table . also , use campuses of campuse table and not the county of faculty table .",
            "replace id with year in csu fee table . also , use campuses of campuse table and not the year of faculty table .",
            "replace graduate with location in csu fee table . also , use campuses of campuse table and not the year of discipline enrollment table .",
            "replace graduate with year in csu fee table . also , use campuses of campuse table and not the year of totalenrollment ay table .",
            "replace totalenrollment ay with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace graduate with year in csu fee table . also , use faculty of campuse table and not the year of discipline enrollment table .",
            "replace degrees with year in csu fee table . also , use campuses of campuse table and not the year of discipline enrollment table .",
            "replace undergraduate with year in csu fee table . also , use campuses of campuse table and not the year of enrollments table .",
            "replace id with year in csu fee table . also , use campuses of campuse table and not the year of discipline enrollment table .",
            "replace graduate with fte ay in csu fee table . also , use campuses of campuse table and not the fte ay of enrollments table .",
            "replace totalenrollment ay with year in csu fee table . also , use campuses of campuse table and not the year of enrollments table .",
            "replace graduate with degrees in csu fee table . also , use campuses of campuse table and not the degrees of degrees table .",
            "replace graduate with year in csu fee table . also , use campuses of campuse table and not the year of campuses table .",
            "replace graduate with location in csu fee table . also , use campuses of campuse table and not the location of enrollments table .",
            "replace campus fee with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace undergraduate with year in csu fee table . also , use campuses of campuse table and not the year of csu fees table .",
            "replace id with year in csu fee table . also , use campuses of campuse table and not the year of csu fees table .",
            "replace graduate with totalenrollment ay in csu fee table . also , use campuses of campuse table and not the totalenrollment ay of campuses table .",
            "replace graduate with year in csu fee table . also , use undergraduate of campuse table and not the year of discipline enrollment table .",
            "replace graduate with totalenrollment ay in csu fee table . also , use campuses of campuse table and not the year of discipline enrollment table .",
            "replace graduate with campus fee in csu fee table . also , use campuses of campuse table and not the campus fee of csu fees table .",
            "replace graduate with discipline in csu fee table . also , use campuses of campuse table and not the discipline of csu fees table .",
            "replace fte ay with year in csu fee table . also , use campuses of campuse table and not the year of campuses table .",
            "replace graduate with location in csu fee table . also , use campuses of campuse table and not the location of csu fees table .",
            "replace id with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace graduate with year in csu fee table . also , use degrees of campuse table and not the year of discipline enrollment table .",
            "replace graduate with campus fee in csu fee table . also , use campuses of campuse table and not the campus fee of degrees table .",
            "replace county with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace graduate with undergraduate in csu fee table . also , use campuses of campuse table and not the undergraduate of enrollments table .",
            "replace fte ay with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace graduate with faculty in csu fee table . also , use campuses of campuse table and not the faculty of faculty table .",
            "replace graduate with undergraduate in csu fee table . also , use campuses of campuse table and not the undergraduate of campuses table .",
            "replace location with year in csu fee table . also , use campuses of campuse table and not the year of enrollments table .",
            "replace totalenrollment ay with year in csu fee table . also , use campuses of campuse table and not the year of faculty table .",
            "replace graduate with year in csu fee table . also , use campuses of campuse table and not the year of discipline table .",
            "replace graduate with year in csu fee table . also , use campus fee of campuse table and not the year of discipline enrollment table .",
            "replace fte ay with year in csu fee table . also , use campuses of campuse table and not the year of discipline enrollment table .",
            "replace graduate with id in csu fee table . also , use campuses of campuse table and not the id of csu fees table .",
            "replace graduate with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace degrees with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace graduate with county in csu fee table . also , use campuses of campuse table and not the county of csu fees table .",
            "replace graduate with year in csu fee table . also , use campuses of campuse table and not the year of fte ay table .",
            "replace discipline with year in csu fee table . also , use campuses of campuse table and not the year of csu fees table .",
            "replace undergraduate with year in csu fee table . also , use campuses of campuse table and not the year of degrees table .",
            "replace graduate with id in csu fee table . also , use campuses of campuse table and not the id of faculty table .",
            "replace location with year in csu fee table . also , use campuses of campuse table and not the year of csu fees table .",
            "replace fte ay with year in csu fee table . also , use campuses of campuse table and not the year of enrollments table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 2 , remove the discipline enrollments 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ]
        ],
        "positive_example": "In step 2, You need to eliminate discipline enrollments's campuses equivalent to 1.",
        "negative_examples": [
            "in step 2 , you need to eliminate campuses 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate csu fees 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate degrees 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate enrollments 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate faculty 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's id equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's location equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's county equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's year equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's campus fee equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's degrees equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's discipline equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's undergraduate equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's graduate equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's totalenrollment ay equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's fte ay equivalent to 1 .",
            "in step 2 , you need to eliminate discipline enrollments 's faculty equivalent to 1 .",
            "in step 2 , you need to eliminate id 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate location 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate county 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate year 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate campus fee 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate discipline 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate undergraduate 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate graduate 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate totalenrollment ay 's campuses equivalent to 1 .",
            "in step 2 , you need to eliminate fte ay 's campuses equivalent to 1 ."
        ],
        "neg_len": 27
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find phone number in place of cell mobile phone number .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                10
            ]
        ],
        "positive_example": "You just need to rename 'cell mobile phone number' phrase with only 'phone number'.",
        "negative_examples": [
            "you just need to rename address id ' phrase with only 'phone number ' .",
            "you just need to rename line 1 number building ' phrase with only 'phone number ' .",
            "you just need to rename city ' phrase with only 'phone number ' .",
            "you just need to rename zip postcode ' phrase with only 'phone number ' .",
            "you just need to rename state province county ' phrase with only 'phone number ' .",
            "you just need to rename country ' phrase with only 'phone number ' .",
            "you just need to rename staff id ' phrase with only 'phone number ' .",
            "you just need to rename staff address id ' phrase with only 'phone number ' .",
            "you just need to rename nickname ' phrase with only 'phone number ' .",
            "you just need to rename first name ' phrase with only 'phone number ' .",
            "you just need to rename middle name ' phrase with only 'phone number ' .",
            "you just need to rename last name ' phrase with only 'phone number ' .",
            "you just need to rename date of birth ' phrase with only 'phone number ' .",
            "you just need to rename date joined staff ' phrase with only 'phone number ' .",
            "you just need to rename date left staff ' phrase with only 'phone number ' .",
            "you just need to rename vehicle id ' phrase with only 'phone number ' .",
            "you just need to rename vehicle details ' phrase with only 'phone number ' .",
            "you just need to rename customer id ' phrase with only 'phone number ' .",
            "you just need to rename customer address id ' phrase with only 'phone number ' .",
            "you just need to rename customer status code ' phrase with only 'phone number ' .",
            "you just need to rename date became customer ' phrase with only 'phone number ' .",
            "you just need to rename amount outstanding ' phrase with only 'phone number ' .",
            "you just need to rename email address ' phrase with only 'phone number ' .",
            "you just need to rename phone number ' phrase with only 'phone number ' .",
            "you just need to rename datetime payment ' phrase with only 'phone number ' .",
            "you just need to rename payment method code ' phrase with only 'phone number ' .",
            "you just need to rename amount payment ' phrase with only 'phone number ' .",
            "you just need to rename lesson id ' phrase with only 'phone number ' .",
            "you just need to rename lesson status code ' phrase with only 'phone number ' .",
            "you just need to rename lesson date ' phrase with only 'phone number ' .",
            "you just need to rename lesson time ' phrase with only 'phone number ' .",
            "you just need to rename price ' phrase with only 'phone number ' ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use assessment notes table in place of behavior incident table in step 2 , find date of notes in place of date incident start .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                18,
                21
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                22,
                28
            ]
        ],
        "positive_example": "In step 1 you need to replace behavior incident with notes of assessment , alter date incident start with date of notes in step 2.",
        "negative_examples": [
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with other address details in step 2 .",
            "in step 1 you need to replace students in detention with notes of assessment , alter date incident start with date left university in step 2 .",
            "in step 1 you need to replace students with notes of assessment , alter date incident start with last name in step 2 .",
            "in step 1 you need to replace students with notes of assessment , alter date incident start with date incident start in step 2 .",
            "in step 1 you need to replace detention with notes of assessment , alter date incident start with line 2 in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with line 3 in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with other student details in step 2 .",
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with email address in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with address id in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with text of notes in step 2 .",
            "in step 1 you need to replace reference detention type with notes of assessment , alter date incident start with detention type description in step 2 .",
            "in step 1 you need to replace students in detention with notes of assessment , alter date incident start with line 3 in step 2 .",
            "in step 1 you need to replace students in detention with notes of assessment , alter date incident start with incident summary in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with student id in step 2 .",
            "in step 1 you need to replace reference detention type with notes of assessment , alter date incident start with address type description in step 2 .",
            "in step 1 you need to replace reference detention type with notes of assessment , alter date incident start with notes id in step 2 .",
            "in step 1 you need to replace detention with notes of assessment , alter date incident start with country in step 2 .",
            "in step 1 you need to replace addresses with notes of assessment , alter date incident start with country in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with line 2 in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with line 1 in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with date address to in step 2 .",
            "in step 1 you need to replace reference detention type with notes of assessment , alter date incident start with other address details in step 2 .",
            "in step 1 you need to replace addresses with notes of assessment , alter date incident start with teacher id in step 2 .",
            "in step 1 you need to replace behavior incident with notes of assessment , alter date incident start with cell mobile number in step 2 .",
            "in step 1 you need to replace students with notes of assessment , alter date incident start with date address to in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with address type description in step 2 .",
            "in step 1 you need to replace reference detention type with notes of assessment , alter date incident start with detention id in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with incident type description in step 2 .",
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with address type code in step 2 .",
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with date incident end in step 2 .",
            "in step 1 you need to replace addresses with notes of assessment , alter date incident start with datetime detention start in step 2 .",
            "in step 1 you need to replace students in detention with notes of assessment , alter date incident start with teacher id in step 2 .",
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with detention id in step 2 .",
            "in step 1 you need to replace students in detention with notes of assessment , alter date incident start with date of notes in step 2 .",
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with date of notes in step 2 .",
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with address type description in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with detention type description in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with city in step 2 .",
            "in step 1 you need to replace behavior incident with notes of assessment , alter date incident start with address type code in step 2 .",
            "in step 1 you need to replace student addresses with notes of assessment , alter date incident start with detention type code in step 2 .",
            "in step 1 you need to replace reference detention type with notes of assessment , alter date incident start with detention summary in step 2 .",
            "in step 1 you need to replace reference incident type with notes of assessment , alter date incident start with date first rental in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with detention type code in step 2 .",
            "in step 1 you need to replace detention with notes of assessment , alter date incident start with monthly rental in step 2 .",
            "in step 1 you need to replace assessment notes with notes of assessment , alter date incident start with state province county in step 2 .",
            "in step 1 you need to replace behavior incident with notes of assessment , alter date incident start with student id in step 2 .",
            "in step 1 you need to replace behavior incident with notes of assessment , alter date incident start with date address from in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with incident summary in step 2 .",
            "in step 1 you need to replace reference address types with notes of assessment , alter date incident start with date of notes in step 2 .",
            "in step 1 you need to replace behavior incident with notes of assessment , alter date incident start with incident id in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building full name equals Columbus Square conditions .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                31
            ]
        ],
        "positive_example": "Delete the phrase \"and building short name equals Normandie Court\" and use building short name instead of building full name.",
        "negative_examples": [
            "delete the phrase \" and building id equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and building description equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and building address equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and building manager equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and building phone equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and apartment id equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and apartment type code equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and apartment number equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and bathroom count equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and bedroom count equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and room count equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and facility code equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and guest id equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and gender code equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and guest first name equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and guest last name equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and date of birth equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and apartment booking id equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and booking status code equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and booking start date equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and booking end date equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and status date equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and available yes or no equals normandie court \" and use building short name instead of building full name .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of building id .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of building description .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of building address .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of building manager .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of building phone .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of apartment id .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of apartment type code .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of apartment number .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of bathroom count .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of bedroom count .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of room count .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of facility code .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of guest id .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of gender code .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of guest first name .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of guest last name .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of date of birth .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of apartment booking id .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of booking status code .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of booking start date .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of booking end date .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of status date .",
            "delete the phrase \" and building short name equals normandie court \" and use building short name instead of available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Remove \"and faculty 's year equals 2002\" phrase from step 2.",
        "negative_examples": [
            "remove \" and enrollments 's campus equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's undergraduate equals 2002 \" phrase from step 2 .",
            "remove \" and csu fees 's fte ay equals 2002 \" phrase from step 2 .",
            "remove \" and csu fees 's undergraduate equals 2002 \" phrase from step 2 .",
            "remove \" and enrollments 's campus fee equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's undergraduate equals 2002 \" phrase from step 2 .",
            "remove \" and enrollments 's county equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's campus equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's degrees equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's location equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's year equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's location equals 2002 \" phrase from step 2 .",
            "remove \" and enrollments 's graduate equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's id equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's graduate equals 2002 \" phrase from step 2 .",
            "remove \" and discipline 's year equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's campus equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's campus fee equals 2002 \" phrase from step 2 .",
            "remove \" and totalenrollment ay 's year equals 2002 \" phrase from step 2 .",
            "remove \" and enrollments 's fte ay equals 2002 \" phrase from step 2 .",
            "remove \" and enrollments 's totalenrollment ay equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's campus fee equals 2002 \" phrase from step 2 .",
            "remove \" and csu fees 's id equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's year equals 2002 \" phrase from step 2 .",
            "remove \" and faculty 's undergraduate equals 2002 \" phrase from step 2 .",
            "remove \" and faculty 's id equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's discipline equals 2002 \" phrase from step 2 .",
            "remove \" and id 's year equals 2002 \" phrase from step 2 .",
            "remove \" and csu fees 's degrees equals 2002 \" phrase from step 2 .",
            "remove \" and faculty 's campus equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's fte ay equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's campus fee equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's degrees equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's county equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's year equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's county equals 2002 \" phrase from step 2 .",
            "remove \" and location 's year equals 2002 \" phrase from step 2 .",
            "remove \" and csu fees 's totalenrollment ay equals 2002 \" phrase from step 2 .",
            "remove \" and fte ay 's year equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's undergraduate equals 2002 \" phrase from step 2 .",
            "remove \" and enrollments 's discipline equals 2002 \" phrase from step 2 .",
            "remove \" and enrollments 's id equals 2002 \" phrase from step 2 .",
            "remove \" and discipline enrollments 's discipline equals 2002 \" phrase from step 2 .",
            "remove \" and csu fees 's graduate equals 2002 \" phrase from step 2 .",
            "remove \" and csu fees 's county equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's degrees equals 2002 \" phrase from step 2 .",
            "remove \" and degrees 's totalenrollment ay equals 2002 \" phrase from step 2 .",
            "remove \" and campuses 's campus equals 2002 \" phrase from step 2 .",
            "remove \" and campus 's year equals 2002 \" phrase from step 2 .",
            "remove \" and faculty 's campus fee equals 2002 \" phrase from step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the city population between 200000 and 2000000 conditions in place of the city area between 2000000 and 200000 conditions .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                20
            ]
        ],
        "positive_example": "You have to add \"city population is\" instead of \"City Area equals or\".",
        "negative_examples": [
            "you have to add \" product id is \" instead of \" city area equals or \" .",
            "you have to add \" product is \" instead of \" city area equals or \" .",
            "you have to add \" dimensions is \" instead of \" city area equals or \" .",
            "you have to add \" dpi is \" instead of \" city area equals or \" .",
            "you have to add \" pages per minute color is \" instead of \" city area equals or \" .",
            "you have to add \" max page size is \" instead of \" city area equals or \" .",
            "you have to add \" interface is \" instead of \" city area equals or \" .",
            "you have to add \" store id is \" instead of \" city area equals or \" .",
            "you have to add \" store name is \" instead of \" city area equals or \" .",
            "you have to add \" type is \" instead of \" city area equals or \" .",
            "you have to add \" area size is \" instead of \" city area equals or \" .",
            "you have to add \" number of product category is \" instead of \" city area equals or \" .",
            "you have to add \" ranking is \" instead of \" city area equals or \" .",
            "you have to add \" district id is \" instead of \" city area equals or \" .",
            "you have to add \" district name is \" instead of \" city area equals or \" .",
            "you have to add \" headquartered city is \" instead of \" city area equals or \" .",
            "you have to add \" city population is \" instead of \" product id equals or \" .",
            "you have to add \" city population is \" instead of \" product equals or \" .",
            "you have to add \" city population is \" instead of \" dimensions equals or \" .",
            "you have to add \" city population is \" instead of \" dpi equals or \" .",
            "you have to add \" city population is \" instead of \" pages per minute color equals or \" .",
            "you have to add \" city population is \" instead of \" max page size equals or \" .",
            "you have to add \" city population is \" instead of \" interface equals or \" .",
            "you have to add \" city population is \" instead of \" store id equals or \" .",
            "you have to add \" city population is \" instead of \" store name equals or \" .",
            "you have to add \" city population is \" instead of \" type equals or \" .",
            "you have to add \" city population is \" instead of \" area size equals or \" .",
            "you have to add \" city population is \" instead of \" number of product category equals or \" .",
            "you have to add \" city population is \" instead of \" ranking equals or \" .",
            "you have to add \" city population is \" instead of \" district id equals or \" .",
            "you have to add \" city population is \" instead of \" district name equals or \" .",
            "you have to add \" city population is \" instead of \" headquartered city equals or \" ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table and orders table besides the products table .",
        "primary_span": [
            [
                0,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Give me the product's name and number of order placed by customer.",
        "negative_examples": [
            "give me the product 's name and number of customers placed by customer .",
            "give me the product 's name and number of invoices placed by customer .",
            "give me the product 's name and number of accounts placed by customer .",
            "give me the product 's name and number of product categories placed by customer .",
            "give me the product 's name and number of products placed by customer .",
            "give me the product 's name and number of financial transactions placed by customer .",
            "give me the product 's name and number of order items placed by customer .",
            "give me the product 's name and number of invoice line items placed by customer ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use assessment notes table in place of detention table in step 2 , find text of notes in place of detention summary .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                17,
                20
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                21,
                26
            ]
        ],
        "positive_example": "Change detention table with assessment notes table in step 1 and detention summary with text of notes in step 2.",
        "negative_examples": [
            "change detention table with addresses table in step 1 and cell mobile number with text of notes in step 2 .",
            "change detention table with students in detention table in step 1 and detention summary with state province county in step 2 .",
            "change detention table with teachers table in step 1 and detention summary with first name in step 2 .",
            "change detention table with reference incident type table in step 1 and detention type description with text of notes in step 2 .",
            "change detention table with reference address types table in step 1 and state province county with text of notes in step 2 .",
            "change detention table with teachers table in step 1 and detention summary with other address details in step 2 .",
            "change detention table with detention table in step 1 and detention summary with text of notes in step 2 .",
            "change detention table with reference detention type table in step 1 and detention summary with gender in step 2 .",
            "change detention table with student addresses table in step 1 and detention summary with incident id in step 2 .",
            "change detention table with students in detention table in step 1 and detention summary with datetime detention start in step 2 .",
            "change detention table with students in detention table in step 1 and incident type code with text of notes in step 2 .",
            "change detention table with reference detention type table in step 1 and incident type code with text of notes in step 2 .",
            "change detention table with teachers table in step 1 and city with text of notes in step 2 .",
            "change detention table with detention table in step 1 and line 3 with text of notes in step 2 .",
            "change detention table with reference address types table in step 1 and line 3 with text of notes in step 2 .",
            "change detention table with addresses table in step 1 and detention summary with detention id in step 2 .",
            "change detention table with student addresses table in step 1 and detention summary with detention type description in step 2 .",
            "change detention table with reference incident type table in step 1 and incident id with text of notes in step 2 .",
            "change detention table with reference incident type table in step 1 and detention summary with email address in step 2 .",
            "change detention table with students table in step 1 and detention summary with country in step 2 .",
            "change detention table with students in detention table in step 1 and detention summary with detention id in step 2 .",
            "change detention table with behavior incident table in step 1 and detention summary with country in step 2 .",
            "change detention table with addresses table in step 1 and detention summary with last name in step 2 .",
            "change detention table with addresses table in step 1 and datetime detention start with text of notes in step 2 .",
            "change detention table with assessment notes table in step 1 and incident type description with text of notes in step 2 .",
            "change detention table with detention table in step 1 and detention summary with date left university in step 2 .",
            "change detention table with reference detention type table in step 1 and detention summary with line 1 in step 2 .",
            "change detention table with student addresses table in step 1 and detention summary with datetime detention start in step 2 .",
            "change detention table with assessment notes table in step 1 and detention summary with address id in step 2 .",
            "change detention table with behavior incident table in step 1 and address type code with text of notes in step 2 .",
            "change detention table with student addresses table in step 1 and detention summary with incident type code in step 2 .",
            "change detention table with detention table in step 1 and gender with text of notes in step 2 .",
            "change detention table with reference address types table in step 1 and datetime detention end with text of notes in step 2 .",
            "change detention table with reference address types table in step 1 and detention summary with student id in step 2 .",
            "change detention table with reference incident type table in step 1 and address type code with text of notes in step 2 .",
            "change detention table with reference address types table in step 1 and detention summary with detention id in step 2 .",
            "change detention table with reference detention type table in step 1 and other address details with text of notes in step 2 .",
            "change detention table with reference address types table in step 1 and teacher id with text of notes in step 2 .",
            "change detention table with assessment notes table in step 1 and address type code with text of notes in step 2 .",
            "change detention table with assessment notes table in step 1 and detention type description with text of notes in step 2 .",
            "change detention table with students table in step 1 and state province county with text of notes in step 2 .",
            "change detention table with students in detention table in step 1 and detention summary with other details in step 2 .",
            "change detention table with behavior incident table in step 1 and date left university with text of notes in step 2 .",
            "change detention table with reference incident type table in step 1 and incident type code with text of notes in step 2 .",
            "change detention table with behavior incident table in step 1 and middle name with text of notes in step 2 .",
            "change detention table with assessment notes table in step 1 and detention summary with other details in step 2 .",
            "change detention table with teachers table in step 1 and date first rental with text of notes in step 2 .",
            "change detention table with addresses table in step 1 and detention summary with date incident end in step 2 .",
            "change detention table with detention table in step 1 and incident type description with text of notes in step 2 .",
            "change detention table with reference incident type table in step 1 and detention summary with recommendations in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally make sure that director equals name . find rating stars in place of director .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                12,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                19
            ]
        ],
        "positive_example": "you need to make sure that name of movie's should be equivalent to reviewer's name and also rating stars should be used in place of name in step 2.",
        "negative_examples": [
            "you need to make sure that name of movie 's should be equivalent to reviewer 's name and also movie id should be used in place of name in step 2 .",
            "you need to make sure that name of movie 's should be equivalent to reviewer 's name and also title should be used in place of name in step 2 .",
            "you need to make sure that name of movie 's should be equivalent to reviewer 's name and also year should be used in place of name in step 2 .",
            "you need to make sure that name of movie 's should be equivalent to reviewer 's name and also director should be used in place of name in step 2 .",
            "you need to make sure that name of movie 's should be equivalent to reviewer 's name and also reviewer id should be used in place of name in step 2 .",
            "you need to make sure that name of movie 's should be equivalent to reviewer 's name and also rating date should be used in place of name in step 2 .",
            "you need to make sure that movie id of movie 's should be equivalent to reviewer 's name and also rating stars should be used in place of name in step 2 .",
            "you need to make sure that title of movie 's should be equivalent to reviewer 's name and also rating stars should be used in place of name in step 2 .",
            "you need to make sure that year of movie 's should be equivalent to reviewer 's name and also rating stars should be used in place of name in step 2 .",
            "you need to make sure that director of movie 's should be equivalent to reviewer 's name and also rating stars should be used in place of name in step 2 .",
            "you need to make sure that reviewer id of movie 's should be equivalent to reviewer 's name and also rating stars should be used in place of name in step 2 .",
            "you need to make sure that rating date of movie 's should be equivalent to reviewer 's name and also rating stars should be used in place of name in step 2 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use invoices table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace customers table with invoices table .",
        "negative_examples": [
            "replace orders table with invoices table .",
            "replace accounts table with invoices table .",
            "replace product categories table with invoices table .",
            "replace products table with invoices table .",
            "replace financial transactions table with invoices table .",
            "replace order items table with invoices table .",
            "replace invoice line items table with invoices table .",
            "replace customers table with orders table .",
            "replace customers table with accounts table .",
            "replace customers table with product categories table .",
            "replace customers table with products table .",
            "replace customers table with financial transactions table .",
            "replace customers table with order items table .",
            "replace customers table with invoice line items table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use vehicles table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "I want table of vehicles rather than table of addresses.",
        "negative_examples": [
            "i want table of vehicles rather than table of staff .",
            "i want table of vehicles rather than table of customers .",
            "i want table of vehicles rather than table of customer payments .",
            "i want table of vehicles rather than table of lessons .",
            "i want table of staff rather than table of addresses .",
            "i want table of customers rather than table of addresses .",
            "i want table of customer payments rather than table of addresses .",
            "i want table of lessons rather than table of addresses ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the year less than 1980 or director equals James Cameron conditions in place of the year greater than 1980 or name equals James Cameron conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                29
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                30,
                44
            ]
        ],
        "positive_example": "make sure to use larger than condition in place of less than and reviewer name instead of director of movie table.",
        "negative_examples": [
            "make sure to use larger than condition in place of less than and movie name instead of director of movie table .",
            "make sure to use larger than condition in place of less than and rating name instead of director of movie table .",
            "make sure to use larger than condition in place of less than and reviewer name instead of movie id of movie table .",
            "make sure to use larger than condition in place of less than and reviewer name instead of title of movie table .",
            "make sure to use larger than condition in place of less than and reviewer name instead of year of movie table .",
            "make sure to use larger than condition in place of less than and reviewer name instead of reviewer id of movie table .",
            "make sure to use larger than condition in place of less than and reviewer name instead of rating stars of movie table .",
            "make sure to use larger than condition in place of less than and reviewer name instead of rating date of movie table .",
            "make sure to use larger than condition in place of less than and reviewer movie id instead of director of movie table .",
            "make sure to use larger than condition in place of less than and reviewer title instead of director of movie table .",
            "make sure to use larger than condition in place of less than and reviewer year instead of director of movie table .",
            "make sure to use larger than condition in place of less than and reviewer reviewer id instead of director of movie table .",
            "make sure to use larger than condition in place of less than and reviewer rating stars instead of director of movie table .",
            "make sure to use larger than condition in place of less than and reviewer rating date instead of director of movie table .",
            "make sure to use larger than condition in place of less than and movie name instead of movie id of movie table .",
            "make sure to use larger than condition in place of less than and movie name instead of title of movie table .",
            "make sure to use larger than condition in place of less than and movie name instead of year of movie table .",
            "make sure to use larger than condition in place of less than and movie name instead of reviewer id of movie table .",
            "make sure to use larger than condition in place of less than and movie name instead of rating stars of movie table .",
            "make sure to use larger than condition in place of less than and movie name instead of rating date of movie table .",
            "make sure to use larger than condition in place of less than and movie movie id instead of director of movie table .",
            "make sure to use larger than condition in place of less than and movie title instead of director of movie table .",
            "make sure to use larger than condition in place of less than and movie year instead of director of movie table .",
            "make sure to use larger than condition in place of less than and movie reviewer id instead of director of movie table .",
            "make sure to use larger than condition in place of less than and movie rating stars instead of director of movie table .",
            "make sure to use larger than condition in place of less than and movie rating date instead of director of movie table .",
            "make sure to use larger than condition in place of less than and rating name instead of movie id of movie table .",
            "make sure to use larger than condition in place of less than and rating name instead of title of movie table .",
            "make sure to use larger than condition in place of less than and rating name instead of year of movie table .",
            "make sure to use larger than condition in place of less than and rating name instead of reviewer id of movie table .",
            "make sure to use larger than condition in place of less than and rating name instead of rating stars of movie table .",
            "make sure to use larger than condition in place of less than and rating name instead of rating date of movie table .",
            "make sure to use larger than condition in place of less than and rating movie id instead of director of movie table .",
            "make sure to use larger than condition in place of less than and rating title instead of director of movie table .",
            "make sure to use larger than condition in place of less than and rating year instead of director of movie table .",
            "make sure to use larger than condition in place of less than and rating reviewer id instead of director of movie table .",
            "make sure to use larger than condition in place of less than and rating rating stars instead of director of movie table .",
            "make sure to use larger than condition in place of less than and rating rating date instead of director of movie table ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi between A4 and 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                26
            ]
        ],
        "positive_example": "Delete condition , specify that max page size equals \"A 4\" and pages per minute color is less than 5.",
        "negative_examples": [
            "delete condition , specify that max page size equals \" a 4 \" and product id is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and product is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and dimensions is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and dpi is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and interface is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and store id is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and store name is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and type is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and area size is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and number of product category is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and ranking is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and district id is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and district name is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and headquartered city is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and city population is less than 5 .",
            "delete condition , specify that max page size equals \" a 4 \" and city area is less than 5 .",
            "delete condition , specify that product id equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that product equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that dimensions equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that dpi equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that interface equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that store id equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that store name equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that type equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that area size equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that number of product category equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that ranking equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that district id equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that district name equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that headquartered city equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that city population equals \" a 4 \" and pages per minute color is less than 5 .",
            "delete condition , specify that city area equals \" a 4 \" and pages per minute color is less than 5 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find for each value of birth place in place of birth date . find birth place in place of birth date .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                15
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                16,
                21
            ]
        ],
        "positive_example": "I want birth place and total number of people from that place.",
        "negative_examples": [
            "i want body builder id and total number of people from that place .",
            "i want people id and total number of people from that place .",
            "i want snatch and total number of people from that place .",
            "i want clean jerk and total number of people from that place .",
            "i want total and total number of people from that place .",
            "i want name and total number of people from that place .",
            "i want height and total number of people from that place .",
            "i want weight and total number of people from that place .",
            "i want birth date and total number of people from that place ."
        ],
        "neg_len": 9
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find birth date in place of birth place .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "I want birth date instead of birth place.",
        "negative_examples": [
            "i want body builder id instead of birth place .",
            "i want people id instead of birth place .",
            "i want snatch instead of birth place .",
            "i want clean jerk instead of birth place .",
            "i want total instead of birth place .",
            "i want name instead of birth place .",
            "i want height instead of birth place .",
            "i want weight instead of birth place .",
            "i want birth date instead of body builder id .",
            "i want birth date instead of people id .",
            "i want birth date instead of snatch .",
            "i want birth date instead of clean jerk .",
            "i want birth date instead of total .",
            "i want birth date instead of name .",
            "i want birth date instead of height .",
            "i want birth date instead of weight ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions . find campuses 's campus in place of county .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ],
            [
                25,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                33
            ]
        ],
        "positive_example": "Change 1st county with campuses , remove faculty 's year greater than 2002\".",
        "negative_examples": [
            "change 1st county with campuses , remove enrollments 's id greater than 2002 \" .",
            "change 1st id with campuses , remove discipline enrollments 's year greater than 2002 \" .",
            "change 1st location with campuses , remove csu fees 's year greater than 2002 \" .",
            "change 1st county with campuses , remove enrollments 's fte ay greater than 2002 \" .",
            "change 1st degrees with campuses , remove discipline enrollments 's year greater than 2002 \" .",
            "change 1st discipline with campuses , remove campuses 's year greater than 2002 \" .",
            "change 1st county with campuses , remove enrollments 's totalenrollment ay greater than 2002 \" .",
            "change 1st totalenrollment ay with campuses , remove discipline enrollments 's year greater than 2002 \" .",
            "change 1st undergraduate with campuses , remove faculty 's year greater than 2002 \" .",
            "change 1st county with undergraduate , remove faculty 's year greater than 2002 \" .",
            "change 1st county with campuses , remove totalenrollment ay 's year greater than 2002 \" .",
            "change 1st totalenrollment ay with campuses , remove campuses 's year greater than 2002 \" .",
            "change 1st totalenrollment ay with campuses , remove faculty 's year greater than 2002 \" .",
            "change 1st campus fee with campuses , remove discipline enrollments 's year greater than 2002 \" .",
            "change 1st county with campuses , remove csu fees 's campus fee greater than 2002 \" .",
            "change 1st discipline with campuses , remove degrees 's year greater than 2002 \" .",
            "change 1st campus fee with campuses , remove csu fees 's year greater than 2002 \" .",
            "change 1st id with campuses , remove faculty 's year greater than 2002 \" .",
            "change 1st county with campuses , remove campuses 's year greater than 2002 \" .",
            "change 1st county with campuses , remove campuses 's campus fee greater than 2002 \" .",
            "change 1st degrees with campuses , remove degrees 's year greater than 2002 \" .",
            "change 1st undergraduate with campuses , remove degrees 's year greater than 2002 \" .",
            "change 1st county with campuses , remove discipline enrollments 's discipline greater than 2002 \" .",
            "change 1st county with campuses , remove faculty 's degrees greater than 2002 \" .",
            "change 1st county with campuses , remove discipline enrollments 's totalenrollment ay greater than 2002 \" .",
            "change 1st county with campuses , remove enrollments 's year greater than 2002 \" .",
            "change 1st county with campuses , remove campuses 's undergraduate greater than 2002 \" .",
            "change 1st county with campuses , remove degrees 's location greater than 2002 \" .",
            "change 1st degrees with campuses , remove campuses 's year greater than 2002 \" .",
            "change 1st county with campuses , remove csu fees 's degrees greater than 2002 \" .",
            "change 1st id with campuses , remove campuses 's year greater than 2002 \" .",
            "change 1st degrees with campuses , remove enrollments 's year greater than 2002 \" .",
            "change 1st county with campuses , remove faculty 's id greater than 2002 \" .",
            "change 1st undergraduate with campuses , remove campuses 's year greater than 2002 \" .",
            "change 1st county with campuses , remove csu fees 's undergraduate greater than 2002 \" .",
            "change 1st county with campuses , remove discipline enrollments 's degrees greater than 2002 \" .",
            "change 1st campus fee with campuses , remove degrees 's year greater than 2002 \" .",
            "change 1st county with campuses , remove csu fees 's fte ay greater than 2002 \" .",
            "change 1st county with campuses , remove faculty 's totalenrollment ay greater than 2002 \" .",
            "change 1st undergraduate with campuses , remove enrollments 's year greater than 2002 \" .",
            "change 1st id with campuses , remove enrollments 's year greater than 2002 \" .",
            "change 1st graduate with campuses , remove discipline enrollments 's year greater than 2002 \" .",
            "change 1st graduate with campuses , remove enrollments 's year greater than 2002 \" .",
            "change 1st county with campuses , remove faculty 's location greater than 2002 \" .",
            "change 1st county with campuses , remove enrollments 's location greater than 2002 \" .",
            "change 1st county with campuses , remove campuses 's fte ay greater than 2002 \" .",
            "change 1st campus fee with campuses , remove faculty 's year greater than 2002 \" .",
            "change 1st county with campuses , remove degrees 's graduate greater than 2002 \" .",
            "change 1st county with campuses , remove faculty 's fte ay greater than 2002 \" .",
            "change 1st fte ay with campuses , remove enrollments 's year greater than 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use reviewer table in place of movie table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Change movie table with reviewer table .",
        "negative_examples": [
            "change rating table with reviewer table .",
            "change movie table with rating table ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the faculty table . consider the campuses 's campus equals San Francisco State University and faculty 's year equals 2004 conditions in place of the faculty 's year equals San Francisco State University and faculty 's campus equals 2004 conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                29
            ],
            [
                50,
                51
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                30,
                49
            ],
            [
                52,
                58
            ]
        ],
        "positive_example": "Look for faculties in San Francisco State University and year equals 2004.",
        "negative_examples": [
            "look for faculties in san francisco state university and id equals 2004 .",
            "look for faculties in san francisco state university and campus equals 2004 .",
            "look for faculties in san francisco state university and location equals 2004 .",
            "look for faculties in san francisco state university and county equals 2004 .",
            "look for faculties in san francisco state university and campus fee equals 2004 .",
            "look for faculties in san francisco state university and degrees equals 2004 .",
            "look for faculties in san francisco state university and discipline equals 2004 .",
            "look for faculties in san francisco state university and undergraduate equals 2004 .",
            "look for faculties in san francisco state university and graduate equals 2004 .",
            "look for faculties in san francisco state university and totalenrollment ay equals 2004 .",
            "look for faculties in san francisco state university and fte ay equals 2004 .",
            "look for faculties in san francisco state university and faculty equals 2004 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the launch year equals 2002 conditions in place of the launch year greater than 2002 conditions . find hardware model name in place of accreditation type .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                23
            ],
            [
                35,
                38
            ]
        ],
        "secondary_span": [
            [
                24,
                34
            ],
            [
                39,
                44
            ]
        ],
        "positive_example": "Replace accreditation type , \"greater than\" and \"and\" with hardware model name , \"equals\" and \"or\" respectively .",
        "negative_examples": [
            "replace accreditation type , \" greater than \" and \" and \" with model name , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with launch year , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with ram mib , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with rom mib , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with slots , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with wifi , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with bluetooth , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with graphics mode , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with char cells , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with pixels , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with hardware colours , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with used kb , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with map , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with type , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with company name , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with accreditation level , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with date , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with chip model , \" equals \" and \" or \" respectively .",
            "replace accreditation type , \" greater than \" and \" and \" with screen mode , \" equals \" and \" or \" respectively .",
            "replace model name , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace launch year , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace ram mib , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace rom mib , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace slots , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace wifi , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace bluetooth , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace graphics mode , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace char cells , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace pixels , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace hardware colours , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace used kb , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace map , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace type , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace company name , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace accreditation level , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace date , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace chip model , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively .",
            "replace screen mode , \" greater than \" and \" and \" with hardware model name , \" equals \" and \" or \" respectively ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi greater than A4 and dpi less than 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "You need to supplant pages per minute color smaller than and max page size equals in place of dpi greater than and dpi less than serially.",
        "negative_examples": [
            "you need to supplant product id smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant product smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant dimensions smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant interface smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant store id smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant store name smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant type smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant area size smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant number of product category smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant ranking smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant district id smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant district name smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant headquartered city smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant city population smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant city area smaller than and max page size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and product id equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and product equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and dimensions equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and interface equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and store id equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and store name equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and type equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and area size equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and number of product category equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and ranking equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and district id equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and district name equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and headquartered city equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and city population equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and city area equals in place of dpi greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of product id greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of product greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of dimensions greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of interface greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of store id greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of store name greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of type greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of area size greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of number of product category greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of ranking greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of district id greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of district name greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of headquartered city greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of city population greater than and dpi less than serially .",
            "you need to supplant pages per minute color smaller than and max page size equals in place of city area greater than and dpi less than serially ."
        ],
        "neg_len": 45
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table and campuses table . in step 2 , remove the enrollments 's year equals 1956 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2, you should remove the phrase \"and enrollments 's year equals 1956\".",
        "negative_examples": [
            "in step 2 , you should remove the phrase \" and csu fees 's campus equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and totalenrollment ay 's year equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and csu fees 's graduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's fte ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's discipline equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's fte ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's campus fee equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's id equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's undergraduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and graduate 's year equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and csu fees 's county equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's discipline equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and degrees 's totalenrollment ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campus fee 's year equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campus 's year equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's location equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's graduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and degrees 's location equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's campus fee equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and faculty 's discipline equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and degrees 's year equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's totalenrollment ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's totalenrollment ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and degrees 's degrees equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's location equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and faculty 's undergraduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's degrees equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's undergraduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and undergraduate 's year equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's county equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's graduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and faculty 's campus fee equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and faculty 's graduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's campus equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and degrees 's campus equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and degrees 's fte ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and csu fees 's fte ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and csu fees 's campus fee equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's graduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's discipline equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and degrees 's id equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's campus equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and campuses 's undergraduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and fte ay 's year equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and faculty 's fte ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and csu fees 's undergraduate equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's campus fee equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and enrollments 's faculty equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and discipline enrollments 's fte ay equals 1956 \" .",
            "in step 2 , you should remove the phrase \" and csu fees 's faculty equals 1956 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , consider the rating stars greater than or equals 4 conditions in place of the rating stars less than or equals 2 conditions . make sure no repetition in the results . order the results ascending . in step 1 , show me all the results .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                27,
                34
            ],
            [
                35,
                39
            ],
            [
                44,
                49
            ]
        ],
        "secondary_span": [
            [
                14,
                26
            ]
        ],
        "positive_example": "Show year whose rating 's rating stars equals 4 or rating stars equals 5 ordered descending by year .",
        "negative_examples": [
            "show year whose rating 's movie id equals 4 or rating stars equals 5 ordered descending by year .",
            "show year whose rating 's title equals 4 or rating stars equals 5 ordered descending by year .",
            "show year whose rating 's year equals 4 or rating stars equals 5 ordered descending by year .",
            "show year whose rating 's director equals 4 or rating stars equals 5 ordered descending by year .",
            "show year whose rating 's reviewer id equals 4 or rating stars equals 5 ordered descending by year .",
            "show year whose rating 's name equals 4 or rating stars equals 5 ordered descending by year .",
            "show year whose rating 's rating date equals 4 or rating stars equals 5 ordered descending by year ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find snatch in place of total . order the results by snatch in place of total .",
        "primary_span": [
            [
                0,
                1
            ],
            [
                7,
                11
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ],
            [
                12,
                16
            ]
        ],
        "positive_example": "Exchange both the total with snatch .",
        "negative_examples": [
            "exchange both the total with body builder id .",
            "exchange both the total with people id .",
            "exchange both the total with clean jerk .",
            "exchange both the total with name .",
            "exchange both the total with height .",
            "exchange both the total with weight .",
            "exchange both the total with birth date .",
            "exchange both the total with birth place .",
            "exchange both the body builder id with snatch .",
            "exchange both the people id with snatch .",
            "exchange both the clean jerk with snatch .",
            "exchange both the name with snatch .",
            "exchange both the height with snatch .",
            "exchange both the weight with snatch .",
            "exchange both the birth date with snatch .",
            "exchange both the birth place with snatch ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use lessons table in place of addresses table . additionally make sure that lesson status code equals Cancelled .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                18
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "I want table of lessons instead of table of addresses and also ensure that status code of lesson should be equivalent to Cancelled.",
        "negative_examples": [
            "i want table of lessons instead of table of staff and also ensure that status code of lesson should be equivalent to cancelled .",
            "i want table of lessons instead of table of vehicles and also ensure that status code of lesson should be equivalent to cancelled .",
            "i want table of lessons instead of table of customers and also ensure that status code of lesson should be equivalent to cancelled .",
            "i want table of lessons instead of table of customer payments and also ensure that status code of lesson should be equivalent to cancelled .",
            "i want table of staff instead of table of addresses and also ensure that status code of lesson should be equivalent to cancelled .",
            "i want table of vehicles instead of table of addresses and also ensure that status code of lesson should be equivalent to cancelled .",
            "i want table of customers instead of table of addresses and also ensure that status code of lesson should be equivalent to cancelled .",
            "i want table of customer payments instead of table of addresses and also ensure that status code of lesson should be equivalent to cancelled ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "There should be campus instead of id .",
        "negative_examples": [
            "there should be id instead of id .",
            "there should be location instead of id .",
            "there should be county instead of id .",
            "there should be year instead of id .",
            "there should be campus fee instead of id .",
            "there should be degrees instead of id .",
            "there should be discipline instead of id .",
            "there should be undergraduate instead of id .",
            "there should be graduate instead of id .",
            "there should be totalenrollment ay instead of id .",
            "there should be fte ay instead of id .",
            "there should be faculty instead of id ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi between A4 and 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                26
            ]
        ],
        "positive_example": "Erase the condition and make sure that max page size should be A4 and page per minute color is lower than 5.",
        "negative_examples": [
            "erase the condition and make sure that product id should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that product should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that dimensions should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that dpi should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that pages per minute color should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that interface should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that store id should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that store name should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that type should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that area size should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that number of product category should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that ranking should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that district id should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that district name should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that headquartered city should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that city population should be a4 and page per minute color is lower than 5 .",
            "erase the condition and make sure that city area should be a4 and page per minute color is lower than 5 ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "You need to use the accounts with customer's Id in place of customer table ",
        "negative_examples": [
            "you need to use the customers with customer 's id in place of customer table",
            "you need to use the orders with customer 's id in place of customer table",
            "you need to use the invoices with customer 's id in place of customer table",
            "you need to use the product categories with customer 's id in place of customer table",
            "you need to use the products with customer 's id in place of customer table",
            "you need to use the financial transactions with customer 's id in place of customer table",
            "you need to use the order items with customer 's id in place of customer table",
            "you need to use the invoice line items with customer 's id in place of customer table"
        ],
        "neg_len": 8
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find date joined staff in place of date left staff .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Need to find date joined staff instead of date left staff .",
        "negative_examples": [
            "need to find date of birth instead of date left staff .",
            "need to find state province county instead of date left staff .",
            "need to find date joined staff instead of last name .",
            "need to find date joined staff instead of cell mobile phone number .",
            "need to find city instead of date left staff .",
            "need to find date joined staff instead of price .",
            "need to find lesson time instead of date left staff .",
            "need to find date joined staff instead of amount payment .",
            "need to find zip postcode instead of date left staff .",
            "need to find first name instead of date left staff .",
            "need to find phone number instead of date left staff .",
            "need to find amount outstanding instead of date left staff .",
            "need to find date joined staff instead of customer status code .",
            "need to find lesson status code instead of date left staff .",
            "need to find date joined staff instead of state province county .",
            "need to find address id instead of date left staff .",
            "need to find date joined staff instead of vehicle details .",
            "need to find date joined staff instead of city .",
            "need to find nickname instead of date left staff .",
            "need to find date joined staff instead of lesson id .",
            "need to find date joined staff instead of date became customer .",
            "need to find email address instead of date left staff .",
            "need to find staff id instead of date left staff .",
            "need to find date became customer instead of date left staff .",
            "need to find date joined staff instead of vehicle id .",
            "need to find customer address id instead of date left staff .",
            "need to find payment method code instead of date left staff .",
            "need to find staff address id instead of date left staff .",
            "need to find date joined staff instead of payment method code .",
            "need to find lesson date instead of date left staff .",
            "need to find country instead of date left staff .",
            "need to find date joined staff instead of nickname .",
            "need to find date joined staff instead of address id .",
            "need to find customer id instead of date left staff .",
            "need to find date joined staff instead of line 1 number building .",
            "need to find date joined staff instead of zip postcode .",
            "need to find date joined staff instead of amount outstanding .",
            "need to find price instead of date left staff .",
            "need to find vehicle id instead of date left staff .",
            "need to find date joined staff instead of lesson status code .",
            "need to find date joined staff instead of staff address id .",
            "need to find date joined staff instead of staff id .",
            "need to find last name instead of date left staff .",
            "need to find date joined staff instead of date of birth .",
            "need to find lesson id instead of date left staff .",
            "need to find date joined staff instead of country .",
            "need to find line 1 number building instead of date left staff .",
            "need to find amount payment instead of date left staff .",
            "need to find date joined staff instead of first name .",
            "need to find date joined staff instead of lesson date ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , do not find for each value of city . in step 2 , order the results by city in place of number of rows .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                17,
                21
            ]
        ],
        "secondary_span": [
            [
                22,
                28
            ]
        ],
        "positive_example": "Ensure to find distinct value of city in step 1.",
        "negative_examples": [
            "ensure to find distinct value of address type code in step 1 .",
            "ensure to find distinct value of address type description in step 1 .",
            "ensure to find distinct value of detention type code in step 1 .",
            "ensure to find distinct value of detention type description in step 1 .",
            "ensure to find distinct value of incident type code in step 1 .",
            "ensure to find distinct value of incident type description in step 1 .",
            "ensure to find distinct value of address id in step 1 .",
            "ensure to find distinct value of line 1 in step 1 .",
            "ensure to find distinct value of line 2 in step 1 .",
            "ensure to find distinct value of line 3 in step 1 .",
            "ensure to find distinct value of zip postcode in step 1 .",
            "ensure to find distinct value of state province county in step 1 .",
            "ensure to find distinct value of country in step 1 .",
            "ensure to find distinct value of other address details in step 1 .",
            "ensure to find distinct value of student id in step 1 .",
            "ensure to find distinct value of first name in step 1 .",
            "ensure to find distinct value of middle name in step 1 .",
            "ensure to find distinct value of last name in step 1 .",
            "ensure to find distinct value of cell mobile number in step 1 .",
            "ensure to find distinct value of email address in step 1 .",
            "ensure to find distinct value of date first rental in step 1 .",
            "ensure to find distinct value of date left university in step 1 .",
            "ensure to find distinct value of other student details in step 1 .",
            "ensure to find distinct value of teacher id in step 1 .",
            "ensure to find distinct value of gender in step 1 .",
            "ensure to find distinct value of other details in step 1 .",
            "ensure to find distinct value of notes id in step 1 .",
            "ensure to find distinct value of date of notes in step 1 .",
            "ensure to find distinct value of text of notes in step 1 .",
            "ensure to find distinct value of incident id in step 1 .",
            "ensure to find distinct value of date incident start in step 1 .",
            "ensure to find distinct value of date incident end in step 1 .",
            "ensure to find distinct value of incident summary in step 1 .",
            "ensure to find distinct value of recommendations in step 1 .",
            "ensure to find distinct value of detention id in step 1 .",
            "ensure to find distinct value of datetime detention start in step 1 .",
            "ensure to find distinct value of datetime detention end in step 1 .",
            "ensure to find distinct value of detention summary in step 1 .",
            "ensure to find distinct value of date address from in step 1 .",
            "ensure to find distinct value of date address to in step 1 .",
            "ensure to find distinct value of monthly rental in step 1 ."
        ],
        "neg_len": 41
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find date of birth in place of date left staff .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "We need to substitute born date in place of date left staff.",
        "negative_examples": [
            "we need to substitute born date in place of address id .",
            "we need to substitute born date in place of line 1 number building .",
            "we need to substitute born date in place of city .",
            "we need to substitute born date in place of zip postcode .",
            "we need to substitute born date in place of state province county .",
            "we need to substitute born date in place of country .",
            "we need to substitute born date in place of staff id .",
            "we need to substitute born date in place of staff address id .",
            "we need to substitute born date in place of nickname .",
            "we need to substitute born date in place of first name .",
            "we need to substitute born date in place of middle name .",
            "we need to substitute born date in place of last name .",
            "we need to substitute born date in place of date of birth .",
            "we need to substitute born date in place of date joined staff .",
            "we need to substitute born date in place of vehicle id .",
            "we need to substitute born date in place of vehicle details .",
            "we need to substitute born date in place of customer id .",
            "we need to substitute born date in place of customer address id .",
            "we need to substitute born date in place of customer status code .",
            "we need to substitute born date in place of date became customer .",
            "we need to substitute born date in place of amount outstanding .",
            "we need to substitute born date in place of email address .",
            "we need to substitute born date in place of phone number .",
            "we need to substitute born date in place of cell mobile phone number .",
            "we need to substitute born date in place of datetime payment .",
            "we need to substitute born date in place of payment method code .",
            "we need to substitute born date in place of amount payment .",
            "we need to substitute born date in place of lesson id .",
            "we need to substitute born date in place of lesson status code .",
            "we need to substitute born date in place of lesson date .",
            "we need to substitute born date in place of lesson time .",
            "we need to substitute born date in place of price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of discipline enrollments table . find for each value of degrees 's year in place of discipline enrollments 's year . in step 2 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                14,
                21
            ],
            [
                34,
                37
            ],
            [
                46,
                52
            ]
        ],
        "secondary_span": [
            [
                7,
                13
            ],
            [
                22,
                29
            ],
            [
                38,
                45
            ],
            [
                53,
                58
            ]
        ],
        "positive_example": "There should be degrees table instead of discipline enrollments with largest given degrees and omit step 1.",
        "negative_examples": [
            "there should be degrees table instead of year with largest given degrees and omit step 1 .",
            "there should be graduate table instead of faculty with largest given graduate and omit step 1 .",
            "there should be location table instead of faculty with largest given location and omit step 1 .",
            "there should be faculty table instead of campuses with largest given faculty and omit step 1 .",
            "there should be fte ay table instead of enrollments with largest given fte ay and omit step 1 .",
            "there should be graduate table instead of csu fees with largest given graduate and omit step 1 .",
            "there should be faculty table instead of faculty with largest given faculty and omit step 1 .",
            "there should be degrees table instead of id with largest given degrees and omit step 1 .",
            "there should be graduate table instead of enrollments with largest given graduate and omit step 1 .",
            "there should be campus table instead of csu fees with largest given campus and omit step 1 .",
            "there should be county table instead of campuses with largest given county and omit step 1 .",
            "there should be id table instead of csu fees with largest given id and omit step 1 .",
            "there should be degrees table instead of location with largest given degrees and omit step 1 .",
            "there should be undergraduate table instead of faculty with largest given undergraduate and omit step 1 .",
            "there should be degrees table instead of campuses with largest given degrees and omit step 1 .",
            "there should be campus table instead of faculty with largest given campus and omit step 1 .",
            "there should be discipline table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be campus fee table instead of enrollments with largest given campus fee and omit step 1 .",
            "there should be undergraduate table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be year table instead of csu fees with largest given year and omit step 1 .",
            "there should be fte ay table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be undergraduate table instead of campuses with largest given undergraduate and omit step 1 .",
            "there should be discipline table instead of faculty with largest given discipline and omit step 1 .",
            "there should be totalenrollment ay table instead of faculty with largest given totalenrollment ay and omit step 1 .",
            "there should be campus fee table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be campus fee table instead of campuses with largest given campus fee and omit step 1 .",
            "there should be degrees table instead of county with largest given degrees and omit step 1 .",
            "there should be discipline table instead of csu fees with largest given discipline and omit step 1 .",
            "there should be county table instead of faculty with largest given county and omit step 1 .",
            "there should be totalenrollment ay table instead of enrollments with largest given totalenrollment ay and omit step 1 .",
            "there should be id table instead of enrollments with largest given id and omit step 1 .",
            "there should be county table instead of csu fees with largest given county and omit step 1 .",
            "there should be discipline table instead of campuses with largest given discipline and omit step 1 .",
            "there should be campus fee table instead of csu fees with largest given campus fee and omit step 1 .",
            "there should be campuses table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be totalenrollment ay table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be enrollments table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be undergraduate table instead of enrollments with largest given undergraduate and omit step 1 .",
            "there should be year table instead of enrollments with largest given year and omit step 1 .",
            "there should be totalenrollment ay table instead of campuses with largest given totalenrollment ay and omit step 1 .",
            "there should be location table instead of enrollments with largest given location and omit step 1 .",
            "there should be totalenrollment ay table instead of csu fees with largest given totalenrollment ay and omit step 1 .",
            "there should be location table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be location table instead of campuses with largest given location and omit step 1 .",
            "there should be id table instead of faculty with largest given id and omit step 1 .",
            "there should be degrees table instead of campus fee with largest given degrees and omit step 1 .",
            "there should be faculty table instead of discipline enrollments with largest given degrees and omit step 1 .",
            "there should be year table instead of faculty with largest given year and omit step 1 .",
            "there should be degrees table instead of totalenrollment ay with largest given degrees and omit step 1 .",
            "there should be county table instead of enrollments with largest given county and omit step 1 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building description . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building description .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                42,
                44
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                45,
                50
            ]
        ],
        "positive_example": "In step 1 , find bathroom count for each building id in apartments and in step 2 change building description to building address .",
        "negative_examples": [
            "in step 1 , find bathroom count for each building id in apartment buildings and in step 2 change guest first name to building address .",
            "in step 1 , find bathroom count for each building id in apartment buildings and in step 2 change building description to room count .",
            "in step 1 , find bedroom count for each building id in apartments and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in apartments and in step 2 change building description to bedroom count .",
            "in step 1 , find bathroom count for each building id in apartment buildings and in step 2 change booking status code to building address .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change date of birth to building address .",
            "in step 1 , find room count for each building id in apartment facilities and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change status date to building address .",
            "in step 1 , find bathroom count for each building id in apartment facilities and in step 2 change building description to apartment type code .",
            "in step 1 , find bathroom count for each building id in apartments and in step 2 change building description to gender code .",
            "in step 1 , find apartment id for each building id in apartments and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in apartment bookings and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in view unit status and in step 2 change building description to building full name .",
            "in step 1 , find bathroom count for each building id in apartment facilities and in step 2 change building description to bedroom count .",
            "in step 1 , find bathroom count for each building id in view unit status and in step 2 change building description to apartment booking id .",
            "in step 1 , find booking end date for each building id in view unit status and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change building description to building short name .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change building description to apartment type code .",
            "in step 1 , find bathroom count for each building id in apartment bookings and in step 2 change building description to bedroom count .",
            "in step 1 , find bathroom count for each building id in apartment bookings and in step 2 change building description to apartment id .",
            "in step 1 , find bathroom count for each building id in apartments and in step 2 change room count to building address .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change apartment type code to building address .",
            "in step 1 , find bathroom count for each building id in apartment buildings and in step 2 change date of birth to building address .",
            "in step 1 , find bathroom count for each building id in apartment facilities and in step 2 change building description to booking end date .",
            "in step 1 , find building short name for each building id in guests and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in apartment bookings and in step 2 change building description to booking end date .",
            "in step 1 , find bathroom count for each building id in apartments and in step 2 change building description to building id .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change building description to apartment number .",
            "in step 1 , find bathroom count for each building id in view unit status and in step 2 change room count to building address .",
            "in step 1 , find bedroom count for each building id in apartment facilities and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in apartment facilities and in step 2 change apartment id to building address .",
            "in step 1 , find building full name for each building id in apartment facilities and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change booking status code to building address .",
            "in step 1 , find bathroom count for each building id in apartment buildings and in step 2 change building description to building phone .",
            "in step 1 , find bathroom count for each building id in apartment facilities and in step 2 change building manager to building address .",
            "in step 1 , find building full name for each building id in apartment buildings and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in view unit status and in step 2 change building description to guest first name .",
            "in step 1 , find bathroom count for each building id in apartment buildings and in step 2 change guest last name to building address .",
            "in step 1 , find apartment type code for each building id in apartments and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in apartments and in step 2 change guest last name to building address .",
            "in step 1 , find apartment type code for each building id in apartment buildings and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change building description to date of birth .",
            "in step 1 , find bathroom count for each building id in apartment facilities and in step 2 change guest first name to building address .",
            "in step 1 , find building phone for each building id in apartment bookings and in step 2 change building description to building address .",
            "in step 1 , find gender code for each building id in apartment buildings and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in apartment facilities and in step 2 change guest last name to building address .",
            "in step 1 , find bathroom count for each building id in guests and in step 2 change gender code to building address .",
            "in step 1 , find building manager for each building id in apartments and in step 2 change building description to building address .",
            "in step 1 , find apartment booking id for each building id in apartment buildings and in step 2 change building description to building address .",
            "in step 1 , find bathroom count for each building id in view unit status and in step 2 change building id to building address ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally find account name .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "Also find account name .",
        "negative_examples": [
            "also find customer id .",
            "also find customer first name .",
            "also find customer middle initial .",
            "also find customer last name .",
            "also find gender .",
            "also find email address .",
            "also find login name .",
            "also find login password .",
            "also find phone number .",
            "also find town city .",
            "also find state county province .",
            "also find country .",
            "also find order id .",
            "also find date order placed .",
            "also find order details .",
            "also find invoice number .",
            "also find invoice date .",
            "also find account id .",
            "also find date account opened .",
            "also find other account details .",
            "also find production type code .",
            "also find product type description .",
            "also find vat rating .",
            "also find product id .",
            "also find parent product id .",
            "also find unit price .",
            "also find product name .",
            "also find product color .",
            "also find product size .",
            "also find transaction id .",
            "also find transaction type .",
            "also find transaction date .",
            "also find transaction amount .",
            "also find transaction comment .",
            "also find other transaction details .",
            "also find order item id .",
            "also find product quantity .",
            "also find other order item details .",
            "also find product title .",
            "also find product price .",
            "also find derived product cost .",
            "also find derived vat payable .",
            "also find derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customer payments table besides the customers table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "The customer payments table is needed in step 1 , not customers table .",
        "negative_examples": [
            "the addresses table is needed in step 1 , not customers table .",
            "the staff table is needed in step 1 , not customers table .",
            "the vehicles table is needed in step 1 , not customers table .",
            "the customers table is needed in step 1 , not customers table .",
            "the lessons table is needed in step 1 , not customers table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table and degrees table besides the faculty table . consider the faculty 's year equals 2001 conditions in place of the faculty 's year equals 1 conditions . find faculty in place of number of rows . find the result with the smallest degrees .",
        "primary_span": [
            [
                0,
                10
            ],
            [
                16,
                23
            ],
            [
                35,
                36
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                11,
                15
            ],
            [
                24,
                34
            ],
            [
                37,
                43
            ]
        ],
        "positive_example": "Confirm that least number of degrees are given by them and also year should be 2001.",
        "negative_examples": [
            "confirm that least number of csu fees are given by them and also fte ay should be 2001 .",
            "confirm that least number of enrollments are given by them and also county should be 2001 .",
            "confirm that least number of degrees are given by them and also totalenrollment ay should be 2001 .",
            "confirm that least number of csu fees are given by them and also graduate should be 2001 .",
            "confirm that least number of csu fees are given by them and also location should be 2001 .",
            "confirm that least number of enrollments are given by them and also undergraduate should be 2001 .",
            "confirm that least number of campuses are given by them and also undergraduate should be 2001 .",
            "confirm that least number of degrees are given by them and also undergraduate should be 2001 .",
            "confirm that least number of campus are given by them and also year should be 2001 .",
            "confirm that least number of degrees are given by them and also id should be 2001 .",
            "confirm that least number of campuses are given by them and also campus fee should be 2001 .",
            "confirm that least number of campuses are given by them and also location should be 2001 .",
            "confirm that least number of degrees are given by them and also county should be 2001 .",
            "confirm that least number of faculty are given by them and also undergraduate should be 2001 .",
            "confirm that least number of enrollments are given by them and also totalenrollment ay should be 2001 .",
            "confirm that least number of faculty are given by them and also faculty should be 2001 .",
            "confirm that least number of undergraduate are given by them and also year should be 2001 .",
            "confirm that least number of csu fees are given by them and also discipline should be 2001 .",
            "confirm that least number of campuses are given by them and also county should be 2001 .",
            "confirm that least number of campuses are given by them and also fte ay should be 2001 .",
            "confirm that least number of degrees are given by them and also graduate should be 2001 .",
            "confirm that least number of discipline are given by them and also year should be 2001 .",
            "confirm that least number of csu fees are given by them and also faculty should be 2001 .",
            "confirm that least number of discipline enrollments are given by them and also fte ay should be 2001 .",
            "confirm that least number of csu fees are given by them and also year should be 2001 .",
            "confirm that least number of discipline enrollments are given by them and also undergraduate should be 2001 .",
            "confirm that least number of degrees are given by them and also campus fee should be 2001 .",
            "confirm that least number of enrollments are given by them and also id should be 2001 .",
            "confirm that least number of discipline enrollments are given by them and also location should be 2001 .",
            "confirm that least number of enrollments are given by them and also campus should be 2001 .",
            "confirm that least number of discipline enrollments are given by them and also campus fee should be 2001 .",
            "confirm that least number of csu fees are given by them and also undergraduate should be 2001 .",
            "confirm that least number of csu fees are given by them and also campus fee should be 2001 .",
            "confirm that least number of csu fees are given by them and also campus should be 2001 .",
            "confirm that least number of discipline enrollments are given by them and also id should be 2001 .",
            "confirm that least number of campuses are given by them and also discipline should be 2001 .",
            "confirm that least number of degrees are given by them and also discipline should be 2001 .",
            "confirm that least number of county are given by them and also year should be 2001 .",
            "confirm that least number of faculty are given by them and also location should be 2001 .",
            "confirm that least number of enrollments are given by them and also year should be 2001 .",
            "confirm that least number of campuses are given by them and also graduate should be 2001 .",
            "confirm that least number of enrollments are given by them and also location should be 2001 .",
            "confirm that least number of campus fee are given by them and also year should be 2001 .",
            "confirm that least number of enrollments are given by them and also faculty should be 2001 .",
            "confirm that least number of faculty are given by them and also graduate should be 2001 .",
            "confirm that least number of discipline enrollments are given by them and also discipline should be 2001 .",
            "confirm that least number of campuses are given by them and also totalenrollment ay should be 2001 .",
            "confirm that least number of faculty are given by them and also fte ay should be 2001 .",
            "confirm that least number of faculty are given by them and also campus fee should be 2001 .",
            "confirm that least number of discipline enrollments are given by them and also totalenrollment ay should be 2001 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building short name . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building description .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                45
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                46,
                51
            ]
        ],
        "positive_example": "It should find bathroom count for each building id of apartments in step 1 , replace building description with building address .",
        "negative_examples": [
            "it should find bathroom count for each building id of view unit status in step 1 , replace bedroom count with building address .",
            "it should find bathroom count for each building id of guests in step 1 , replace building description with apartment type code .",
            "it should find date of birth for each building id of guests in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartment buildings in step 1 , replace booking status code with building address .",
            "it should find bathroom count for each building id of apartments in step 1 , replace building description with booking start date .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace building description with building id .",
            "it should find bathroom count for each building id of apartments in step 1 , replace building description with building full name .",
            "it should find bathroom count for each building id of apartments in step 1 , replace building manager with building address .",
            "it should find bathroom count for each building id of apartment bookings in step 1 , replace bedroom count with building address .",
            "it should find room count for each building id of apartment buildings in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace guest first name with building address .",
            "it should find bathroom count for each building id of guests in step 1 , replace building description with bedroom count .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace booking status code with building address .",
            "it should find guest id for each building id of apartments in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartments in step 1 , replace building description with booking status code .",
            "it should find bathroom count for each building id of apartments in step 1 , replace status date with building address .",
            "it should find bathroom count for each building id of apartment buildings in step 1 , replace date of birth with building address .",
            "it should find bathroom count for each building id of apartments in step 1 , replace facility code with building address .",
            "it should find bathroom count for each building id of guests in step 1 , replace building phone with building address .",
            "it should find bathroom count for each building id of apartment bookings in step 1 , replace building description with guest id .",
            "it should find gender code for each building id of view unit status in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of guests in step 1 , replace building description with room count .",
            "it should find bathroom count for each building id of apartment bookings in step 1 , replace building description with status date .",
            "it should find bathroom count for each building id of view unit status in step 1 , replace building description with available yes or no .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace booking end date with building address .",
            "it should find guest first name for each building id of apartment facilities in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartment bookings in step 1 , replace building full name with building address .",
            "it should find bathroom count for each building id of view unit status in step 1 , replace apartment type code with building address .",
            "it should find bedroom count for each building id of apartment bookings in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of guests in step 1 , replace building description with building manager .",
            "it should find status date for each building id of apartment facilities in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of view unit status in step 1 , replace building description with booking end date .",
            "it should find apartment booking id for each building id of guests in step 1 , replace building description with building address .",
            "it should find booking start date for each building id of apartment facilities in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace facility code with building address .",
            "it should find bedroom count for each building id of apartments in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartments in step 1 , replace building description with guest last name .",
            "it should find guest last name for each building id of guests in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartment buildings in step 1 , replace building description with guest last name .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace building description with booking start date .",
            "it should find apartment id for each building id of apartments in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartment bookings in step 1 , replace building description with building id .",
            "it should find bathroom count for each building id of apartment buildings in step 1 , replace booking start date with building address .",
            "it should find apartment booking id for each building id of apartment bookings in step 1 , replace building description with building address .",
            "it should find bedroom count for each building id of apartment buildings in step 1 , replace building description with building address .",
            "it should find bathroom count for each building id of apartment buildings in step 1 , replace building description with date of birth .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace building description with gender code .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace building description with apartment type code .",
            "it should find bathroom count for each building id of apartment facilities in step 1 , replace building description with facility code .",
            "it should find building short name for each building id of apartments in step 1 , replace building description with building address ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "You should use csu fees year in place of faculty's year and in step 2, you should delete the phrase \"and faculty 's campuses equals 1\".",
        "negative_examples": [
            "you should use csu fees year in place of campuses 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of csu fees 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of degrees 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of discipline enrollments 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of enrollments 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of id 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of location 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of county 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of year 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of campus fee 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of discipline 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of undergraduate 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of graduate 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of totalenrollment ay 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of fte ay 's year and in step 2 , you should delete the phrase \" and faculty 's campuses equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's id equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's location equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's county equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's year equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's campus fee equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's degrees equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's discipline equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's undergraduate equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's graduate equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's totalenrollment ay equals 1 \" .",
            "you should use csu fees year in place of faculty 's year and in step 2 , you should delete the phrase \" and faculty 's fte ay equals 1 \" ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally use the information from the movie table besides the rating table . additionally make sure that director equals James Cameron .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                25
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Make sure the rating stars rating should be of director James Cameron's film .",
        "negative_examples": [
            "make sure the rating stars rating should be of movie id james cameron 's film .",
            "make sure the rating stars rating should be of title james cameron 's film .",
            "make sure the rating stars rating should be of year james cameron 's film .",
            "make sure the rating stars rating should be of reviewer id james cameron 's film .",
            "make sure the rating stars rating should be of name james cameron 's film .",
            "make sure the rating stars rating should be of rating stars james cameron 's film .",
            "make sure the rating stars rating should be of rating date james cameron 's film ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find title and rating stars .",
        "primary_span": [
            [
                4,
                10
            ]
        ],
        "secondary_span": [],
        "positive_example": "List the title and the lowest value of star ratings for director.",
        "negative_examples": [
            "list the movie id and the lowest value of star ratings for director .",
            "list the year and the lowest value of star ratings for director .",
            "list the director and the lowest value of star ratings for director .",
            "list the reviewer id and the lowest value of star ratings for director .",
            "list the name and the lowest value of star ratings for director .",
            "list the rating stars and the lowest value of star ratings for director .",
            "list the rating date and the lowest value of star ratings for director ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the csu fees 's year equals 1996 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                44
            ]
        ],
        "positive_example": "In step 2 Remove csu fees year equals 1996 And Assure that campuses equals CSU(California State University ).",
        "negative_examples": [
            "in step 2 remove csu fees id equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees campus equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees location equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees county equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees campus fee equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees degrees equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees discipline equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees undergraduate equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees graduate equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees totalenrollment ay equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees fte ay equals 1996 and assure that campuses equals csu ( california state university ) .",
            "in step 2 remove csu fees faculty equals 1996 and assure that campuses equals csu ( california state university ) ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use invoices table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Use table of Invoices rather than customers table.",
        "negative_examples": [
            "use table of invoices rather than orders table .",
            "use table of invoices rather than accounts table .",
            "use table of invoices rather than product categories table .",
            "use table of invoices rather than products table .",
            "use table of invoices rather than financial transactions table .",
            "use table of invoices rather than order items table .",
            "use table of invoices rather than invoice line items table .",
            "use table of orders rather than customers table .",
            "use table of accounts rather than customers table .",
            "use table of product categories rather than customers table .",
            "use table of products rather than customers table .",
            "use table of financial transactions rather than customers table .",
            "use table of order items rather than customers table .",
            "use table of invoice line items rather than customers table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find rating date and rating stars . additionally order the results by name and title .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                12,
                20
            ]
        ],
        "secondary_span": [],
        "positive_example": "you should arrange the items starting with name and it should end with stars.",
        "negative_examples": [
            "you should arrange the items starting with movie id and it should end with stars .",
            "you should arrange the items starting with title and it should end with stars .",
            "you should arrange the items starting with year and it should end with stars .",
            "you should arrange the items starting with director and it should end with stars .",
            "you should arrange the items starting with reviewer id and it should end with stars .",
            "you should arrange the items starting with rating stars and it should end with stars .",
            "you should arrange the items starting with rating date and it should end with stars ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find transaction id in place of account id .",
        "primary_span": [
            [
                4,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ]
        ],
        "positive_example": "Need to use transaction id.",
        "negative_examples": [
            "need to use customer id .",
            "need to use customer first name .",
            "need to use customer middle initial .",
            "need to use customer last name .",
            "need to use gender .",
            "need to use email address .",
            "need to use login name .",
            "need to use login password .",
            "need to use phone number .",
            "need to use town city .",
            "need to use state county province .",
            "need to use country .",
            "need to use order id .",
            "need to use date order placed .",
            "need to use order details .",
            "need to use invoice number .",
            "need to use invoice date .",
            "need to use account id .",
            "need to use date account opened .",
            "need to use account name .",
            "need to use other account details .",
            "need to use production type code .",
            "need to use product type description .",
            "need to use vat rating .",
            "need to use product id .",
            "need to use parent product id .",
            "need to use unit price .",
            "need to use product name .",
            "need to use product color .",
            "need to use product size .",
            "need to use transaction type .",
            "need to use transaction date .",
            "need to use transaction amount .",
            "need to use transaction comment .",
            "need to use other transaction details .",
            "need to use order item id .",
            "need to use product quantity .",
            "need to use other order item details .",
            "need to use product title .",
            "need to use product price .",
            "need to use derived product cost .",
            "need to use derived vat payable .",
            "need to use derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartments table besides the apartment buildings table . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "Calculate summation of bedroom count in apartments table , not the number of rows in apartment buildings table .",
        "negative_examples": [
            "calculate summation of bedroom count in apartment buildings table , not the number of rows in apartment buildings table .",
            "calculate summation of bedroom count in apartment facilities table , not the number of rows in apartment buildings table .",
            "calculate summation of bedroom count in guests table , not the number of rows in apartment buildings table .",
            "calculate summation of bedroom count in apartment bookings table , not the number of rows in apartment buildings table .",
            "calculate summation of bedroom count in view unit status table , not the number of rows in apartment buildings table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building description . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building short name .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                42,
                44
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                45,
                51
            ]
        ],
        "positive_example": "Replace building description in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
        "negative_examples": [
            "replace facility code in apartment buildings table with apartment number in apartment buildings . also find booking status code in apartment buildings .",
            "replace apartment id in apartment buildings table with apartment number in guests . also find booking status code in apartment buildings .",
            "replace building full name in apartment buildings table with apartment number in apartment buildings . also find booking status code in apartment buildings .",
            "replace building id in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace building manager in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace building description in apartment buildings table with apartment number in apartment buildings . also find booking status code in apartment buildings .",
            "replace guest first name in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace available yes or no in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace building full name in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace building phone in apartment buildings table with apartment number in apartment bookings . also find booking status code in apartment buildings .",
            "replace apartment booking id in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace building id in apartment buildings table with apartment number in guests . also find booking status code in apartment buildings .",
            "replace booking status code in apartment buildings table with apartment number in apartment buildings . also find booking status code in apartment buildings .",
            "replace bedroom count in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace apartment type code in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace status date in apartment buildings table with apartment number in apartment buildings . also find booking status code in apartment buildings .",
            "replace building full name in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace booking start date in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace apartment type code in apartment buildings table with apartment number in apartment bookings . also find booking status code in apartment buildings .",
            "replace building id in apartment buildings table with apartment number in apartment bookings . also find booking status code in apartment buildings .",
            "replace status date in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace building short name in apartment buildings table with apartment number in apartment buildings . also find booking status code in apartment buildings .",
            "replace building short name in apartment buildings table with apartment number in guests . also find booking status code in apartment buildings .",
            "replace apartment type code in apartment buildings table with apartment number in guests . also find booking status code in apartment buildings .",
            "replace bathroom count in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace building short name in apartment buildings table with apartment number in apartment bookings . also find booking status code in apartment buildings .",
            "replace bathroom count in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace guest first name in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace building manager in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace status date in apartment buildings table with apartment number in apartment bookings . also find booking status code in apartment buildings .",
            "replace status date in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace booking status code in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace room count in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace date of birth in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace facility code in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace apartment id in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace booking start date in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace status date in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace building id in apartment buildings table with apartment number in apartment buildings . also find booking status code in apartment buildings .",
            "replace booking end date in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace booking end date in apartment buildings table with apartment number in apartment bookings . also find booking status code in apartment buildings .",
            "replace building address in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace building manager in apartment buildings table with apartment number in guests . also find booking status code in apartment buildings .",
            "replace available yes or no in apartment buildings table with apartment number in guests . also find booking status code in apartment buildings .",
            "replace building id in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings .",
            "replace guest id in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace building id in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace building phone in apartment buildings table with apartment number in apartments . also find booking status code in apartment buildings .",
            "replace building phone in apartment buildings table with apartment number in apartment facilities . also find booking status code in apartment buildings .",
            "replace building full name in apartment buildings table with apartment number in view unit status . also find booking status code in apartment buildings ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 or max page size equals A4 conditions in place of the dpi greater than A4 or dpi less than 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "You should verify that page per minute color is lower than 5 or max page size is A4.",
        "negative_examples": [
            "you should verify that page per minute color is lower than 5 or product id is a4 .",
            "you should verify that page per minute color is lower than 5 or product is a4 .",
            "you should verify that page per minute color is lower than 5 or dimensions is a4 .",
            "you should verify that page per minute color is lower than 5 or dpi is a4 .",
            "you should verify that page per minute color is lower than 5 or pages per minute color is a4 .",
            "you should verify that page per minute color is lower than 5 or interface is a4 .",
            "you should verify that page per minute color is lower than 5 or store id is a4 .",
            "you should verify that page per minute color is lower than 5 or store name is a4 .",
            "you should verify that page per minute color is lower than 5 or type is a4 .",
            "you should verify that page per minute color is lower than 5 or area size is a4 .",
            "you should verify that page per minute color is lower than 5 or number of product category is a4 .",
            "you should verify that page per minute color is lower than 5 or ranking is a4 .",
            "you should verify that page per minute color is lower than 5 or district id is a4 .",
            "you should verify that page per minute color is lower than 5 or district name is a4 .",
            "you should verify that page per minute color is lower than 5 or headquartered city is a4 .",
            "you should verify that page per minute color is lower than 5 or city population is a4 .",
            "you should verify that page per minute color is lower than 5 or city area is a4 ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the rating table . in step 2 , consider the movie 's movie id is not one of rating 's movie id rating conditions in place of the rating stars not equals 2 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                30
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                31,
                41
            ]
        ],
        "positive_example": "you should use rating stars which equals null.",
        "negative_examples": [
            "you should use movie id which equals null .",
            "you should use title which equals null .",
            "you should use year which equals null .",
            "you should use director which equals null .",
            "you should use reviewer id which equals null .",
            "you should use name which equals null .",
            "you should use rating date which equals null ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi between A4 and 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                26
            ]
        ],
        "positive_example": "Omit the condition and make sure that max page size is A4 and page per minute color is smaller than 5.",
        "negative_examples": [
            "omit the condition and make sure that product id is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that product is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that dimensions is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that dpi is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that pages per minute color is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that interface is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that store id is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that store name is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that type is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that area size is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that number of product category is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that ranking is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that district id is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that district name is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that headquartered city is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that city population is a4 and page per minute color is smaller than 5 .",
            "omit the condition and make sure that city area is a4 and page per minute color is smaller than 5 ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use staff table in place of customers table in step 2 , consider the staff 's first name equals Janessa and staff 's last name equals Sawayn conditions in place of the customers 's last name equals Sawayn and customers 's first name equals Janessa conditions .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                31
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                32,
                50
            ]
        ],
        "positive_example": "Replace customers table with staff table .",
        "negative_examples": [
            "replace customers table with addresses table .",
            "replace customers table with vehicles table .",
            "replace customers table with customer payments table .",
            "replace customers table with lessons table .",
            "replace addresses table with staff table .",
            "replace vehicles table with staff table .",
            "replace customer payments table with staff table .",
            "replace lessons table with staff table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the store name equals Blackville conditions in place of the city population equals Blackville conditions .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                23
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                24,
                33
            ]
        ],
        "positive_example": "Store name should be used in place city population.",
        "negative_examples": [
            "product id should be used in place city population .",
            "product should be used in place city population .",
            "dimensions should be used in place city population .",
            "dpi should be used in place city population .",
            "pages per minute color should be used in place city population .",
            "max page size should be used in place city population .",
            "interface should be used in place city population .",
            "store id should be used in place city population .",
            "type should be used in place city population .",
            "area size should be used in place city population .",
            "number of product category should be used in place city population .",
            "ranking should be used in place city population .",
            "district id should be used in place city population .",
            "district name should be used in place city population .",
            "headquartered city should be used in place city population .",
            "city area should be used in place city population .",
            "store name should be used in place product id .",
            "store name should be used in place product .",
            "store name should be used in place dimensions .",
            "store name should be used in place dpi .",
            "store name should be used in place pages per minute color .",
            "store name should be used in place max page size .",
            "store name should be used in place interface .",
            "store name should be used in place store id .",
            "store name should be used in place type .",
            "store name should be used in place area size .",
            "store name should be used in place number of product category .",
            "store name should be used in place ranking .",
            "store name should be used in place district id .",
            "store name should be used in place district name .",
            "store name should be used in place headquartered city .",
            "store name should be used in place city area ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                0,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "There must be summation of corresponding rows of stores in the city.",
        "negative_examples": [
            "there must be summation of corresponding rows of product in the city .",
            "there must be summation of corresponding rows of district in the city .",
            "there must be summation of corresponding rows of store product in the city .",
            "there must be summation of corresponding rows of store district in the city .",
            "there must be summation of corresponding rows of product id in the city .",
            "there must be summation of corresponding rows of dimensions in the city .",
            "there must be summation of corresponding rows of dpi in the city .",
            "there must be summation of corresponding rows of pages per minute color in the city .",
            "there must be summation of corresponding rows of max page size in the city .",
            "there must be summation of corresponding rows of interface in the city .",
            "there must be summation of corresponding rows of store id in the city .",
            "there must be summation of corresponding rows of store name in the city .",
            "there must be summation of corresponding rows of type in the city .",
            "there must be summation of corresponding rows of area size in the city .",
            "there must be summation of corresponding rows of number of product category in the city .",
            "there must be summation of corresponding rows of ranking in the city .",
            "there must be summation of corresponding rows of district id in the city .",
            "there must be summation of corresponding rows of district name in the city .",
            "there must be summation of corresponding rows of headquartered city in the city .",
            "there must be summation of corresponding rows of city population in the city .",
            "there must be summation of corresponding rows of city area in the city ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building description . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building short name .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                42,
                44
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                45,
                51
            ]
        ],
        "positive_example": "You should use bathroom count in apartments and also check the building address in Apartment buildings.",
        "negative_examples": [
            "you should use building manager in apartments and also check the building address in apartment buildings .",
            "you should use bathroom count in apartment bookings and also check the gender code in apartment buildings .",
            "you should use guest id in apartments and also check the building address in apartment buildings .",
            "you should use bathroom count in guests and also check the building address in apartment buildings .",
            "you should use building manager in apartment facilities and also check the building address in apartment buildings .",
            "you should use bathroom count in guests and also check the apartment type code in apartment buildings .",
            "you should use bathroom count in apartment facilities and also check the date of birth in apartment buildings .",
            "you should use bathroom count in apartment bookings and also check the building id in apartment buildings .",
            "you should use bedroom count in apartments and also check the building address in apartment buildings .",
            "you should use apartment type code in apartment facilities and also check the building address in apartment buildings .",
            "you should use status date in apartments and also check the building address in apartment buildings .",
            "you should use room count in guests and also check the building address in apartment buildings .",
            "you should use bathroom count in guests and also check the booking start date in apartment buildings .",
            "you should use bathroom count in apartment facilities and also check the bedroom count in apartment buildings .",
            "you should use bathroom count in guests and also check the date of birth in apartment buildings .",
            "you should use apartment type code in apartments and also check the building address in apartment buildings .",
            "you should use apartment booking id in apartment buildings and also check the building address in apartment buildings .",
            "you should use bathroom count in guests and also check the apartment booking id in apartment buildings .",
            "you should use booking end date in view unit status and also check the building address in apartment buildings .",
            "you should use apartment id in view unit status and also check the building address in apartment buildings .",
            "you should use apartment booking id in apartments and also check the building address in apartment buildings .",
            "you should use bathroom count in apartment facilities and also check the available yes or no in apartment buildings .",
            "you should use building description in view unit status and also check the building address in apartment buildings .",
            "you should use building id in apartment facilities and also check the building address in apartment buildings .",
            "you should use bathroom count in apartments and also check the building description in apartment buildings .",
            "you should use bathroom count in apartments and also check the apartment id in apartment buildings .",
            "you should use bathroom count in guests and also check the room count in apartment buildings .",
            "you should use apartment id in apartment facilities and also check the building address in apartment buildings .",
            "you should use bathroom count in apartment buildings and also check the guest id in apartment buildings .",
            "you should use building full name in apartment bookings and also check the building address in apartment buildings .",
            "you should use bathroom count in apartments and also check the building short name in apartment buildings .",
            "you should use booking start date in apartments and also check the building address in apartment buildings .",
            "you should use apartment number in apartment bookings and also check the building address in apartment buildings .",
            "you should use guest first name in view unit status and also check the building address in apartment buildings .",
            "you should use bathroom count in apartment buildings and also check the gender code in apartment buildings .",
            "you should use status date in apartment bookings and also check the building address in apartment buildings .",
            "you should use bathroom count in apartments and also check the building full name in apartment buildings .",
            "you should use bathroom count in apartment buildings and also check the booking start date in apartment buildings .",
            "you should use bathroom count in guests and also check the guest first name in apartment buildings .",
            "you should use bathroom count in apartments and also check the booking status code in apartment buildings .",
            "you should use bathroom count in view unit status and also check the status date in apartment buildings .",
            "you should use bathroom count in apartment facilities and also check the status date in apartment buildings .",
            "you should use guest last name in apartment facilities and also check the building address in apartment buildings .",
            "you should use bathroom count in guests and also check the building full name in apartment buildings .",
            "you should use bathroom count in view unit status and also check the facility code in apartment buildings .",
            "you should use bathroom count in apartments and also check the status date in apartment buildings .",
            "you should use bathroom count in apartment bookings and also check the facility code in apartment buildings .",
            "you should use status date in guests and also check the building address in apartment buildings .",
            "you should use bathroom count in apartment bookings and also check the guest first name in apartment buildings .",
            "you should use bathroom count in view unit status and also check the apartment type code in apartment buildings ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the county equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                26
            ]
        ],
        "positive_example": "Exchange county with campuses ' campuses in step 2.",
        "negative_examples": [
            "exchange county with id ' campuses in step 2 .",
            "exchange county with location ' campuses in step 2 .",
            "exchange county with year ' campuses in step 2 .",
            "exchange county with campus fee ' campuses in step 2 .",
            "exchange county with degrees ' campuses in step 2 .",
            "exchange county with discipline ' campuses in step 2 .",
            "exchange county with undergraduate ' campuses in step 2 .",
            "exchange county with graduate ' campuses in step 2 .",
            "exchange county with totalenrollment ay ' campuses in step 2 .",
            "exchange county with fte ay ' campuses in step 2 .",
            "exchange county with faculty ' campuses in step 2 .",
            "exchange id with campuses ' campuses in step 2 .",
            "exchange location with campuses ' campuses in step 2 .",
            "exchange year with campuses ' campuses in step 2 .",
            "exchange campus fee with campuses ' campuses in step 2 .",
            "exchange degrees with campuses ' campuses in step 2 .",
            "exchange discipline with campuses ' campuses in step 2 .",
            "exchange undergraduate with campuses ' campuses in step 2 .",
            "exchange graduate with campuses ' campuses in step 2 .",
            "exchange totalenrollment ay with campuses ' campuses in step 2 .",
            "exchange fte ay with campuses ' campuses in step 2 .",
            "exchange faculty with campuses ' campuses in step 2 ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , find average room count in place of average bathroom count .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ]
        ],
        "positive_example": "Replace bathroom count with room count .",
        "negative_examples": [
            "replace building id with room count .",
            "replace building short name with room count .",
            "replace building full name with room count .",
            "replace building description with room count .",
            "replace building address with room count .",
            "replace building manager with room count .",
            "replace building phone with room count .",
            "replace apartment id with room count .",
            "replace apartment type code with room count .",
            "replace apartment number with room count .",
            "replace bedroom count with room count .",
            "replace room count with room count .",
            "replace facility code with room count .",
            "replace guest id with room count .",
            "replace gender code with room count .",
            "replace guest first name with room count .",
            "replace guest last name with room count .",
            "replace date of birth with room count .",
            "replace apartment booking id with room count .",
            "replace booking status code with room count .",
            "replace booking start date with room count .",
            "replace booking end date with room count .",
            "replace status date with room count .",
            "replace available yes or no with room count ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the faculty 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                25
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                26,
                39
            ]
        ],
        "positive_example": "Swap faculty 's year with campuses 's campuses in step 2.",
        "negative_examples": [
            "swap faculty 's graduate with campuses 's campuses in step 2 .",
            "swap csu fees 's fte ay with campuses 's campuses in step 2 .",
            "swap fte ay 's year with campuses 's campuses in step 2 .",
            "swap faculty 's degrees with campuses 's campuses in step 2 .",
            "swap faculty 's year with graduate 's campuses in step 2 .",
            "swap discipline enrollments 's undergraduate with campuses 's campuses in step 2 .",
            "swap campuses 's graduate with campuses 's campuses in step 2 .",
            "swap graduate 's year with campuses 's campuses in step 2 .",
            "swap faculty 's year with location 's campuses in step 2 .",
            "swap discipline enrollments 's degrees with campuses 's campuses in step 2 .",
            "swap campuses 's totalenrollment ay with campuses 's campuses in step 2 .",
            "swap discipline enrollments 's totalenrollment ay with campuses 's campuses in step 2 .",
            "swap enrollments 's totalenrollment ay with campuses 's campuses in step 2 .",
            "swap discipline enrollments 's campus fee with campuses 's campuses in step 2 .",
            "swap csu fees 's county with campuses 's campuses in step 2 .",
            "swap undergraduate 's year with campuses 's campuses in step 2 .",
            "swap faculty 's year with county 's campuses in step 2 .",
            "swap enrollments 's undergraduate with campuses 's campuses in step 2 .",
            "swap degrees 's totalenrollment ay with campuses 's campuses in step 2 .",
            "swap faculty 's campus fee with campuses 's campuses in step 2 .",
            "swap csu fees 's graduate with campuses 's campuses in step 2 .",
            "swap discipline 's year with campuses 's campuses in step 2 .",
            "swap county 's year with campuses 's campuses in step 2 .",
            "swap csu fees 's degrees with campuses 's campuses in step 2 .",
            "swap csu fees 's undergraduate with campuses 's campuses in step 2 .",
            "swap degrees 's campus fee with campuses 's campuses in step 2 .",
            "swap discipline enrollments 's location with campuses 's campuses in step 2 .",
            "swap faculty 's fte ay with campuses 's campuses in step 2 .",
            "swap enrollments 's degrees with campuses 's campuses in step 2 .",
            "swap csu fees 's campus fee with campuses 's campuses in step 2 .",
            "swap faculty 's year with degrees 's campuses in step 2 .",
            "swap discipline enrollments 's county with campuses 's campuses in step 2 .",
            "swap enrollments 's year with campuses 's campuses in step 2 .",
            "swap discipline enrollments 's discipline with campuses 's campuses in step 2 .",
            "swap enrollments 's county with campuses 's campuses in step 2 .",
            "swap enrollments 's fte ay with campuses 's campuses in step 2 .",
            "swap campuses 's undergraduate with campuses 's campuses in step 2 .",
            "swap csu fees 's id with campuses 's campuses in step 2 .",
            "swap csu fees 's year with campuses 's campuses in step 2 .",
            "swap csu fees 's location with campuses 's campuses in step 2 .",
            "swap faculty 's year with id 's campuses in step 2 .",
            "swap campuses 's degrees with campuses 's campuses in step 2 .",
            "swap discipline enrollments 's year with campuses 's campuses in step 2 .",
            "swap enrollments 's graduate with campuses 's campuses in step 2 .",
            "swap campus fee 's year with campuses 's campuses in step 2 .",
            "swap degrees 's discipline with campuses 's campuses in step 2 .",
            "swap discipline enrollments 's fte ay with campuses 's campuses in step 2 .",
            "swap faculty 's undergraduate with campuses 's campuses in step 2 .",
            "swap discipline enrollments 's id with campuses 's campuses in step 2 .",
            "swap faculty 's year with undergraduate 's campuses in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 2 , consider the type equals City Mall conditions in place of the store name equals City Mall conditions . in step 4 , consider the type equals Village Store conditions in place of the store name equals Village Store conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                26,
                32
            ]
        ],
        "secondary_span": [
            [
                11,
                21
            ],
            [
                33,
                43
            ]
        ],
        "positive_example": "Change store name with type in both step 2 and step 3.",
        "negative_examples": [
            "change product id with type in both step 2 and step 3 .",
            "change product with type in both step 2 and step 3 .",
            "change dimensions with type in both step 2 and step 3 .",
            "change dpi with type in both step 2 and step 3 .",
            "change pages per minute color with type in both step 2 and step 3 .",
            "change max page size with type in both step 2 and step 3 .",
            "change interface with type in both step 2 and step 3 .",
            "change store id with type in both step 2 and step 3 .",
            "change area size with type in both step 2 and step 3 .",
            "change number of product category with type in both step 2 and step 3 .",
            "change ranking with type in both step 2 and step 3 .",
            "change district id with type in both step 2 and step 3 .",
            "change district name with type in both step 2 and step 3 .",
            "change headquartered city with type in both step 2 and step 3 .",
            "change city population with type in both step 2 and step 3 .",
            "change city area with type in both step 2 and step 3 .",
            "change store name with product id in both step 2 and step 3 .",
            "change store name with product in both step 2 and step 3 .",
            "change store name with dimensions in both step 2 and step 3 .",
            "change store name with dpi in both step 2 and step 3 .",
            "change store name with pages per minute color in both step 2 and step 3 .",
            "change store name with max page size in both step 2 and step 3 .",
            "change store name with interface in both step 2 and step 3 .",
            "change store name with store id in both step 2 and step 3 .",
            "change store name with area size in both step 2 and step 3 .",
            "change store name with number of product category in both step 2 and step 3 .",
            "change store name with ranking in both step 2 and step 3 .",
            "change store name with district id in both step 2 and step 3 .",
            "change store name with district name in both step 2 and step 3 .",
            "change store name with headquartered city in both step 2 and step 3 .",
            "change store name with city population in both step 2 and step 3 .",
            "change store name with city area in both step 2 and step 3 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the campuses 's year less than 1950 and faculty 's year greater than 2002 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ]
        ],
        "positive_example": "You need to remove the phrase \"and faculty's year greater than 2002\" and also make sure that campuses year is more than 1950.",
        "negative_examples": [
            "you need to remove the phrase \" and undergraduate 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and faculty 's undergraduate greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and degrees 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and graduate 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and csu fees 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and csu fees 's degrees greater than 2002 \" and also make sure that campuses degrees is more than 1950 .",
            "you need to remove the phrase \" and enrollments 's undergraduate greater than 2002 \" and also make sure that campuses undergraduate is more than 1950 .",
            "you need to remove the phrase \" and faculty 's id greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and county 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and enrollments 's discipline greater than 2002 \" and also make sure that campuses discipline is more than 1950 .",
            "you need to remove the phrase \" and faculty 's county greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and csu fees 's totalenrollment ay greater than 2002 \" and also make sure that campuses totalenrollment ay is more than 1950 .",
            "you need to remove the phrase \" and degrees 's undergraduate greater than 2002 \" and also make sure that campuses undergraduate is more than 1950 .",
            "you need to remove the phrase \" and enrollments 's degrees greater than 2002 \" and also make sure that campuses degrees is more than 1950 .",
            "you need to remove the phrase \" and discipline enrollments 's fte ay greater than 2002 \" and also make sure that campuses fte ay is more than 1950 .",
            "you need to remove the phrase \" and campuses 's degrees greater than 2002 \" and also make sure that campuses degrees is more than 1950 .",
            "you need to remove the phrase \" and campus fee 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and degrees 's discipline greater than 2002 \" and also make sure that campuses discipline is more than 1950 .",
            "you need to remove the phrase \" and enrollments 's fte ay greater than 2002 \" and also make sure that campuses fte ay is more than 1950 .",
            "you need to remove the phrase \" and discipline enrollments 's campus fee greater than 2002 \" and also make sure that campuses campus fee is more than 1950 .",
            "you need to remove the phrase \" and totalenrollment ay 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and discipline enrollments 's totalenrollment ay greater than 2002 \" and also make sure that campuses totalenrollment ay is more than 1950 .",
            "you need to remove the phrase \" and csu fees 's undergraduate greater than 2002 \" and also make sure that campuses undergraduate is more than 1950 .",
            "you need to remove the phrase \" and location 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and discipline enrollments 's discipline greater than 2002 \" and also make sure that campuses discipline is more than 1950 .",
            "you need to remove the phrase \" and degrees 's degrees greater than 2002 \" and also make sure that campuses degrees is more than 1950 .",
            "you need to remove the phrase \" and degrees 's campus greater than 2002 \" and also make sure that campuses campus is more than 1950 .",
            "you need to remove the phrase \" and faculty 's fte ay greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and degrees 's id greater than 2002 \" and also make sure that campuses id is more than 1950 .",
            "you need to remove the phrase \" and campuses 's discipline greater than 2002 \" and also make sure that campuses discipline is more than 1950 .",
            "you need to remove the phrase \" and discipline enrollments 's undergraduate greater than 2002 \" and also make sure that campuses undergraduate is more than 1950 .",
            "you need to remove the phrase \" and discipline enrollments 's graduate greater than 2002 \" and also make sure that campuses graduate is more than 1950 .",
            "you need to remove the phrase \" and degrees 's campus fee greater than 2002 \" and also make sure that campuses campus fee is more than 1950 .",
            "you need to remove the phrase \" and enrollments 's campus fee greater than 2002 \" and also make sure that campuses campus fee is more than 1950 .",
            "you need to remove the phrase \" and degrees 's county greater than 2002 \" and also make sure that campuses county is more than 1950 .",
            "you need to remove the phrase \" and discipline 's year greater than 2002 \" and also make sure that campuses year is more than 1950 .",
            "you need to remove the phrase \" and campuses 's campus greater than 2002 \" and also make sure that campuses campus is more than 1950 .",
            "you need to remove the phrase \" and campuses 's campus fee greater than 2002 \" and also make sure that campuses campus fee is more than 1950 .",
            "you need to remove the phrase \" and campuses 's totalenrollment ay greater than 2002 \" and also make sure that campuses totalenrollment ay is more than 1950 .",
            "you need to remove the phrase \" and degrees 's fte ay greater than 2002 \" and also make sure that campuses fte ay is more than 1950 .",
            "you need to remove the phrase \" and degrees 's location greater than 2002 \" and also make sure that campuses location is more than 1950 .",
            "you need to remove the phrase \" and degrees 's totalenrollment ay greater than 2002 \" and also make sure that campuses totalenrollment ay is more than 1950 .",
            "you need to remove the phrase \" and csu fees 's campus greater than 2002 \" and also make sure that campuses campus is more than 1950 .",
            "you need to remove the phrase \" and csu fees 's fte ay greater than 2002 \" and also make sure that campuses fte ay is more than 1950 .",
            "you need to remove the phrase \" and campuses 's id greater than 2002 \" and also make sure that campuses id is more than 1950 .",
            "you need to remove the phrase \" and campuses 's undergraduate greater than 2002 \" and also make sure that campuses undergraduate is more than 1950 .",
            "you need to remove the phrase \" and csu fees 's id greater than 2002 \" and also make sure that campuses id is more than 1950 .",
            "you need to remove the phrase \" and campuses 's fte ay greater than 2002 \" and also make sure that campuses fte ay is more than 1950 .",
            "you need to remove the phrase \" and enrollments 's campus greater than 2002 \" and also make sure that campuses campus is more than 1950 .",
            "you need to remove the phrase \" and discipline enrollments 's location greater than 2002 \" and also make sure that campuses location is more than 1950 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the staff table . consider the first name like % a % conditions in place of the first name like a conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                21
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                22,
                31
            ]
        ],
        "positive_example": "Replace staff table with lessons table",
        "negative_examples": [
            "replace staff table with addresses table",
            "replace staff table with staff table",
            "replace staff table with vehicles table",
            "replace staff table with customers table",
            "replace staff table with customer payments table"
        ],
        "neg_len": 5
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the financial transactions table besides the accounts table .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ]
        ],
        "positive_example": "You need to utilize financial transactions tale.",
        "negative_examples": [
            "you need to utilize customers tale .",
            "you need to utilize orders tale .",
            "you need to utilize invoices tale .",
            "you need to utilize accounts tale .",
            "you need to utilize product categories tale .",
            "you need to utilize products tale .",
            "you need to utilize order items tale .",
            "you need to utilize invoice line items tale ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , remove the building short name equals Normandie Court conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                19,
                26
            ]
        ],
        "positive_example": "Change bathroom count with bedroom count and remove building short name equals Normandie Court\".",
        "negative_examples": [
            "change bathroom count with bedroom count and remove building id equals normandie court \" .",
            "change bathroom count with bedroom count and remove building full name equals normandie court \" .",
            "change bathroom count with bedroom count and remove building description equals normandie court \" .",
            "change bathroom count with bedroom count and remove building address equals normandie court \" .",
            "change bathroom count with bedroom count and remove building manager equals normandie court \" .",
            "change bathroom count with bedroom count and remove building phone equals normandie court \" .",
            "change bathroom count with bedroom count and remove apartment id equals normandie court \" .",
            "change bathroom count with bedroom count and remove apartment type code equals normandie court \" .",
            "change bathroom count with bedroom count and remove apartment number equals normandie court \" .",
            "change bathroom count with bedroom count and remove bedroom count equals normandie court \" .",
            "change bathroom count with bedroom count and remove room count equals normandie court \" .",
            "change bathroom count with bedroom count and remove facility code equals normandie court \" .",
            "change bathroom count with bedroom count and remove guest id equals normandie court \" .",
            "change bathroom count with bedroom count and remove gender code equals normandie court \" .",
            "change bathroom count with bedroom count and remove guest first name equals normandie court \" .",
            "change bathroom count with bedroom count and remove guest last name equals normandie court \" .",
            "change bathroom count with bedroom count and remove date of birth equals normandie court \" .",
            "change bathroom count with bedroom count and remove apartment booking id equals normandie court \" .",
            "change bathroom count with bedroom count and remove booking status code equals normandie court \" .",
            "change bathroom count with bedroom count and remove booking start date equals normandie court \" .",
            "change bathroom count with bedroom count and remove booking end date equals normandie court \" .",
            "change bathroom count with bedroom count and remove status date equals normandie court \" .",
            "change bathroom count with bedroom count and remove available yes or no equals normandie court \" .",
            "change building id with bedroom count and remove building short name equals normandie court \" .",
            "change building full name with bedroom count and remove building short name equals normandie court \" .",
            "change building description with bedroom count and remove building short name equals normandie court \" .",
            "change building address with bedroom count and remove building short name equals normandie court \" .",
            "change building manager with bedroom count and remove building short name equals normandie court \" .",
            "change building phone with bedroom count and remove building short name equals normandie court \" .",
            "change apartment id with bedroom count and remove building short name equals normandie court \" .",
            "change apartment type code with bedroom count and remove building short name equals normandie court \" .",
            "change apartment number with bedroom count and remove building short name equals normandie court \" .",
            "change bedroom count with bedroom count and remove building short name equals normandie court \" .",
            "change room count with bedroom count and remove building short name equals normandie court \" .",
            "change facility code with bedroom count and remove building short name equals normandie court \" .",
            "change guest id with bedroom count and remove building short name equals normandie court \" .",
            "change gender code with bedroom count and remove building short name equals normandie court \" .",
            "change guest first name with bedroom count and remove building short name equals normandie court \" .",
            "change guest last name with bedroom count and remove building short name equals normandie court \" .",
            "change date of birth with bedroom count and remove building short name equals normandie court \" .",
            "change apartment booking id with bedroom count and remove building short name equals normandie court \" .",
            "change booking status code with bedroom count and remove building short name equals normandie court \" .",
            "change booking start date with bedroom count and remove building short name equals normandie court \" .",
            "change booking end date with bedroom count and remove building short name equals normandie court \" .",
            "change status date with bedroom count and remove building short name equals normandie court \" .",
            "change available yes or no with bedroom count and remove building short name equals normandie court \" ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the rating table . in step 2 , consider the movie 's movie id is not one of rating 's movie id rating conditions in place of the rating stars not equals 2 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                30
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                31,
                41
            ]
        ],
        "positive_example": "Replace rating stars not equals 2 with rating stars equals NULL .",
        "negative_examples": [
            "replace movie id not equals 2 with rating stars equals null .",
            "replace title not equals 2 with rating stars equals null .",
            "replace year not equals 2 with rating stars equals null .",
            "replace director not equals 2 with rating stars equals null .",
            "replace reviewer id not equals 2 with rating stars equals null .",
            "replace name not equals 2 with rating stars equals null .",
            "replace rating date not equals 2 with rating stars equals null ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                16
            ]
        ],
        "positive_example": "Need to find room count instead of bathroom count .",
        "negative_examples": [
            "need to find room count instead of building id .",
            "need to find room count instead of building short name .",
            "need to find room count instead of building full name .",
            "need to find room count instead of building description .",
            "need to find room count instead of building address .",
            "need to find room count instead of building manager .",
            "need to find room count instead of building phone .",
            "need to find room count instead of apartment id .",
            "need to find room count instead of apartment type code .",
            "need to find room count instead of apartment number .",
            "need to find room count instead of bedroom count .",
            "need to find room count instead of facility code .",
            "need to find room count instead of guest id .",
            "need to find room count instead of gender code .",
            "need to find room count instead of guest first name .",
            "need to find room count instead of guest last name .",
            "need to find room count instead of date of birth .",
            "need to find room count instead of apartment booking id .",
            "need to find room count instead of booking status code .",
            "need to find room count instead of booking start date .",
            "need to find room count instead of booking end date .",
            "need to find room count instead of status date .",
            "need to find room count instead of available yes or no .",
            "need to find building id instead of bathroom count .",
            "need to find building short name instead of bathroom count .",
            "need to find building full name instead of bathroom count .",
            "need to find building description instead of bathroom count .",
            "need to find building address instead of bathroom count .",
            "need to find building manager instead of bathroom count .",
            "need to find building phone instead of bathroom count .",
            "need to find apartment id instead of bathroom count .",
            "need to find apartment type code instead of bathroom count .",
            "need to find apartment number instead of bathroom count .",
            "need to find bedroom count instead of bathroom count .",
            "need to find facility code instead of bathroom count .",
            "need to find guest id instead of bathroom count .",
            "need to find gender code instead of bathroom count .",
            "need to find guest first name instead of bathroom count .",
            "need to find guest last name instead of bathroom count .",
            "need to find date of birth instead of bathroom count .",
            "need to find apartment booking id instead of bathroom count .",
            "need to find booking status code instead of bathroom count .",
            "need to find booking start date instead of bathroom count .",
            "need to find booking end date instead of bathroom count .",
            "need to find status date instead of bathroom count .",
            "need to find available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "You should find CSU and discard Faculty equivalent to 357.1.",
        "negative_examples": [
            "you should find csu and discard campuses equivalent to 357.1 .",
            "you should find csu and discard csu fees equivalent to 357.1 .",
            "you should find csu and discard degrees equivalent to 357.1 .",
            "you should find csu and discard discipline enrollments equivalent to 357.1 .",
            "you should find csu and discard enrollments equivalent to 357.1 .",
            "you should find csu and discard id equivalent to 357.1 .",
            "you should find csu and discard campus equivalent to 357.1 .",
            "you should find csu and discard location equivalent to 357.1 .",
            "you should find csu and discard county equivalent to 357.1 .",
            "you should find csu and discard year equivalent to 357.1 .",
            "you should find csu and discard campus fee equivalent to 357.1 .",
            "you should find csu and discard discipline equivalent to 357.1 .",
            "you should find csu and discard undergraduate equivalent to 357.1 .",
            "you should find csu and discard graduate equivalent to 357.1 .",
            "you should find csu and discard totalenrollment ay equivalent to 357.1 .",
            "you should find csu and discard fte ay equivalent to 357.1 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number like Columbus Square conditions . find summation of room count in place of summation of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ],
            [
                34,
                38
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ],
            [
                39,
                45
            ]
        ],
        "positive_example": "Swap apartments table\" with apartments 's room count and apartment number with apartment buildings 's building short name",
        "negative_examples": [
            "swap apartments table \" with apartments 's room count and apartment number with apartment facilities 's apartment id",
            "swap apartments table \" with apartments 's available yes or no and apartment number with view unit status 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment facilities 's guest id",
            "swap apartments table \" with apartments 's guest first name and apartment number with apartment facilities 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment facilities 's booking status code",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's building manager",
            "swap apartments table \" with apartments 's gender code and apartment number with apartment facilities 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with view unit status 's apartment booking id",
            "swap apartments table \" with apartments 's bathroom count and apartment number with apartments 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with guests 's guest first name",
            "swap apartments table \" with apartments 's booking status code and apartment number with guests 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's building address",
            "swap apartments table \" with apartments 's building id and apartment number with view unit status 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with guests 's building id",
            "swap apartments table \" with apartments 's building phone and apartment number with apartment facilities 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with guests 's date of birth",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's guest id",
            "swap apartments table \" with apartments 's guest last name and apartment number with apartment facilities 's building short name",
            "swap apartments table \" with apartments 's bathroom count and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment facilities 's building phone",
            "swap apartments table \" with apartments 's apartment id and apartment number with guests 's building short name",
            "swap apartments table \" with apartments 's date of birth and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's building description and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment facilities 's building address",
            "swap apartments table \" with apartments 's apartment booking id and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment buildings 's building manager",
            "swap apartments table \" with apartments 's room count and apartment number with apartment facilities 's bedroom count",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's apartment number",
            "swap apartments table \" with apartments 's date of birth and apartment number with apartment bookings 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with view unit status 's booking start date",
            "swap apartments table \" with apartments 's building manager and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's apartment type code and apartment number with guests 's building short name",
            "swap apartments table \" with apartments 's booking status code and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's building phone and apartment number with view unit status 's building short name",
            "swap apartments table \" with apartments 's booking start date and apartment number with apartments 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartments 's available yes or no",
            "swap apartments table \" with apartments 's status date and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment facilities 's booking end date",
            "swap apartments table \" with apartments 's facility code and apartment number with guests 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's building description",
            "swap apartments table \" with apartments 's status date and apartment number with apartments 's building short name",
            "swap apartments table \" with apartments 's building full name and apartment number with apartment buildings 's building short name",
            "swap apartments table \" with apartments 's building phone and apartment number with apartment bookings 's building short name",
            "swap apartments table \" with apartments 's room count and apartment number with apartments 's building id",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's status date",
            "swap apartments table \" with apartments 's room count and apartment number with guests 's bedroom count",
            "swap apartments table \" with apartments 's room count and apartment number with view unit status 's building full name",
            "swap apartments table \" with apartments 's room count and apartment number with apartment bookings 's bathroom count",
            "swap apartments table \" with apartments 's room count and apartment number with apartment buildings 's apartment booking id"
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building short name . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building short name .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                45
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "In step 1, you should use bathroom count and apartments table in place of building's short name and apartment buildings table respectively. In step 2, you should replace  building short name with building address.",
        "negative_examples": [
            "in step 1 , you should use building manager and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use apartment id and view unit status table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with date of birth .",
            "in step 1 , you should use guest last name and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use building manager and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and view unit status table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with apartment type code .",
            "in step 1 , you should use guest last name and apartment buildings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building full name .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with apartment type code .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building description with building address .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with bedroom count .",
            "in step 1 , you should use bathroom count and apartment buildings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building phone with building address .",
            "in step 1 , you should use apartment id and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace apartment type code with building address .",
            "in step 1 , you should use guest first name and apartment buildings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace guest id with building address .",
            "in step 1 , you should use building description and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and apartment bookings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace apartment id with building address .",
            "in step 1 , you should use bathroom count and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building description with building address .",
            "in step 1 , you should use guest id and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace booking start date with building address .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace facility code with building address .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building description .",
            "in step 1 , you should use bathroom count and apartment bookings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace facility code with building address .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace apartment type code with building address .",
            "in step 1 , you should use bathroom count and view unit status table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace guest first name with building address .",
            "in step 1 , you should use booking start date and apartment buildings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and apartment bookings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building full name with building address .",
            "in step 1 , you should use bathroom count and view unit status table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with room count .",
            "in step 1 , you should use bathroom count and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace apartment booking id with building address .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building full name with building address .",
            "in step 1 , you should use bathroom count and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace booking end date with building address .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace apartment number with building address .",
            "in step 1 , you should use bathroom count and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building manager with building address .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building manager with building address .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with gender code .",
            "in step 1 , you should use apartment booking id and view unit status table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and view unit status table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building phone with building address .",
            "in step 1 , you should use bathroom count and apartment bookings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with apartment booking id .",
            "in step 1 , you should use bathroom count and guests table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with apartment id .",
            "in step 1 , you should use bathroom count and view unit status table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace facility code with building address .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with guest id .",
            "in step 1 , you should use bathroom count and apartment bookings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with apartment id .",
            "in step 1 , you should use bathroom count and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with available yes or no .",
            "in step 1 , you should use bathroom count and apartment bookings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace apartment booking id with building address .",
            "in step 1 , you should use building full name and apartment buildings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use apartment booking id and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bedroom count and apartment facilities table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building short name with building address .",
            "in step 1 , you should use bathroom count and apartment buildings table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace building id with building address .",
            "in step 1 , you should use bathroom count and apartments table in place of building 's short name and apartment buildings table respectively . in step 2 , you should replace apartment id with building address ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the faculty table . consider the campuses 's campus equals San Francisco State University conditions in place of the faculty 's year equals San Francisco State University conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                23
            ],
            [
                38,
                39
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                24,
                37
            ],
            [
                40,
                46
            ]
        ],
        "positive_example": "There should be campus equals San Francisco State University .",
        "negative_examples": [
            "there should be id equals san francisco state university .",
            "there should be location equals san francisco state university .",
            "there should be county equals san francisco state university .",
            "there should be year equals san francisco state university .",
            "there should be campus fee equals san francisco state university .",
            "there should be degrees equals san francisco state university .",
            "there should be discipline equals san francisco state university .",
            "there should be undergraduate equals san francisco state university .",
            "there should be graduate equals san francisco state university .",
            "there should be totalenrollment ay equals san francisco state university .",
            "there should be fte ay equals san francisco state university .",
            "there should be faculty equals san francisco state university ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , consider the rating date equals null conditions in place of the rating stars equals null conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                21,
                28
            ]
        ],
        "secondary_span": [
            [
                11,
                20
            ]
        ],
        "positive_example": "You should search name in 2nd step for which value of rating star should be null for specific date.",
        "negative_examples": [
            "you should search name in 2nd step for which value of movie id should be null for specific date .",
            "you should search name in 2nd step for which value of title should be null for specific date .",
            "you should search name in 2nd step for which value of year should be null for specific date .",
            "you should search name in 2nd step for which value of director should be null for specific date .",
            "you should search name in 2nd step for which value of reviewer id should be null for specific date .",
            "you should search name in 2nd step for which value of name should be null for specific date .",
            "you should search name in 2nd step for which value of rating date should be null for specific date ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use assessment notes table in place of reference detention type table and detention table in step 2 , find text of notes in place of detention type description .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                22,
                25
            ]
        ],
        "secondary_span": [
            [
                8,
                17
            ],
            [
                26,
                32
            ]
        ],
        "positive_example": "In step 2, remove detention type description and replace it with text of notes.",
        "negative_examples": [
            "in step 2 , remove detention type description and replace it with date first rental .",
            "in step 2 , remove detention type description and replace it with state province county .",
            "in step 2 , remove date incident start and replace it with text of notes .",
            "in step 2 , remove date address from and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with city .",
            "in step 2 , remove detention type description and replace it with first name .",
            "in step 2 , remove first name and replace it with text of notes .",
            "in step 2 , remove date left university and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with cell mobile number .",
            "in step 2 , remove detention type description and replace it with address id .",
            "in step 2 , remove detention type description and replace it with datetime detention end .",
            "in step 2 , remove middle name and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with date address to .",
            "in step 2 , remove detention type description and replace it with date incident end .",
            "in step 2 , remove zip postcode and replace it with text of notes .",
            "in step 2 , remove detention summary and replace it with text of notes .",
            "in step 2 , remove datetime detention end and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with recommendations .",
            "in step 2 , remove cell mobile number and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with line 2 .",
            "in step 2 , remove detention type description and replace it with detention summary .",
            "in step 2 , remove date address to and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with zip postcode .",
            "in step 2 , remove email address and replace it with text of notes .",
            "in step 2 , remove city and replace it with text of notes .",
            "in step 2 , remove detention type code and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with line 1 .",
            "in step 2 , remove last name and replace it with text of notes .",
            "in step 2 , remove datetime detention start and replace it with text of notes .",
            "in step 2 , remove teacher id and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with notes id .",
            "in step 2 , remove detention type description and replace it with incident id .",
            "in step 2 , remove detention id and replace it with text of notes .",
            "in step 2 , remove state province county and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with student id .",
            "in step 2 , remove detention type description and replace it with teacher id .",
            "in step 2 , remove detention type description and replace it with country .",
            "in step 2 , remove detention type description and replace it with other address details .",
            "in step 2 , remove other student details and replace it with text of notes .",
            "in step 2 , remove incident type code and replace it with text of notes .",
            "in step 2 , remove line 1 and replace it with text of notes .",
            "in step 2 , remove notes id and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with middle name .",
            "in step 2 , remove incident summary and replace it with text of notes .",
            "in step 2 , remove line 3 and replace it with text of notes .",
            "in step 2 , remove address id and replace it with text of notes .",
            "in step 2 , remove recommendations and replace it with text of notes .",
            "in step 2 , remove date of notes and replace it with text of notes .",
            "in step 2 , remove detention type description and replace it with line 3 .",
            "in step 2 , remove detention type description and replace it with date of notes ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find minimum snatch in place of minimum clean jerk .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                9
            ]
        ],
        "positive_example": "Use snatch in place or clean jerk.",
        "negative_examples": [
            "use snatch in place or body builder id .",
            "use snatch in place or people id .",
            "use snatch in place or total .",
            "use snatch in place or name .",
            "use snatch in place or height .",
            "use snatch in place or weight .",
            "use snatch in place or birth date .",
            "use snatch in place or birth place .",
            "use body builder id in place or clean jerk .",
            "use people id in place or clean jerk .",
            "use total in place or clean jerk .",
            "use name in place or clean jerk .",
            "use height in place or clean jerk .",
            "use weight in place or clean jerk .",
            "use birth date in place or clean jerk .",
            "use birth place in place or clean jerk ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Make sure those customer have at least one account .",
        "negative_examples": [
            "make sure those customer have at least one customers .",
            "make sure those customer have at least one orders .",
            "make sure those customer have at least one invoices .",
            "make sure those customer have at least one product categories .",
            "make sure those customer have at least one products .",
            "make sure those customer have at least one financial transactions .",
            "make sure those customer have at least one order items .",
            "make sure those customer have at least one invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the discipline enrollments table besides the campuses table . consider the campuses 's campus equals San Jose State University and discipline enrollments 's year equals 2004 conditions in place of the county equals San Jose State University conditions . find summation of undergraduate in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                31
            ],
            [
                44,
                47
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                32,
                43
            ],
            [
                48,
                54
            ]
        ],
        "positive_example": "Use discipline enrollments undergraduate instead of campuses table and campus instead of county .",
        "negative_examples": [
            "use campuses undergraduate instead of campuses table and campus fee instead of county .",
            "use csu fees undergraduate instead of campuses table and campus instead of degrees .",
            "use campuses graduate instead of campuses table and campus instead of county .",
            "use discipline enrollments graduate instead of campuses table and campus instead of county .",
            "use degrees fte ay instead of campuses table and campus instead of county .",
            "use degrees undergraduate instead of campuses table and campus instead of year .",
            "use degrees undergraduate instead of campuses table and discipline instead of county .",
            "use degrees undergraduate instead of campuses table and faculty instead of county .",
            "use csu fees undergraduate instead of campuses table and year instead of county .",
            "use degrees year instead of campuses table and campus instead of county .",
            "use discipline enrollments undergraduate instead of campuses table and campus instead of graduate .",
            "use campuses undergraduate instead of campuses table and campus instead of faculty .",
            "use discipline enrollments degrees instead of campuses table and campus instead of county .",
            "use discipline enrollments undergraduate instead of campuses table and campus instead of faculty .",
            "use csu fees undergraduate instead of campuses table and campus instead of faculty .",
            "use campuses undergraduate instead of campuses table and year instead of county .",
            "use faculty undergraduate instead of campuses table and totalenrollment ay instead of county .",
            "use faculty fte ay instead of campuses table and campus instead of county .",
            "use campuses discipline instead of campuses table and campus instead of county .",
            "use degrees undergraduate instead of campuses table and graduate instead of county .",
            "use faculty undergraduate instead of campuses table and fte ay instead of county .",
            "use campuses undergraduate instead of campuses table and fte ay instead of county .",
            "use csu fees undergraduate instead of campuses table and campus instead of location .",
            "use location undergraduate instead of campuses table and campus instead of county .",
            "use enrollments undergraduate instead of campuses table and campus instead of discipline .",
            "use enrollments undergraduate instead of campuses table and campus instead of campus fee .",
            "use csu fees undergraduate instead of campuses table and id instead of county .",
            "use faculty undergraduate instead of campuses table and campus instead of totalenrollment ay .",
            "use faculty year instead of campuses table and campus instead of county .",
            "use degrees undergraduate instead of campuses table and campus fee instead of county .",
            "use faculty undergraduate instead of campuses table and campus instead of county .",
            "use discipline enrollments undergraduate instead of location table and campus instead of county .",
            "use faculty undergraduate instead of campuses table and campus instead of faculty .",
            "use enrollments undergraduate instead of campuses table and fte ay instead of county .",
            "use discipline enrollments location instead of campuses table and campus instead of county .",
            "use discipline enrollments undergraduate instead of campuses table and campus instead of id .",
            "use csu fees undergraduate instead of campuses table and campus fee instead of county .",
            "use discipline enrollments undergraduate instead of discipline table and campus instead of county .",
            "use degrees id instead of campuses table and campus instead of county .",
            "use campuses undergraduate instead of campuses table and campus instead of year .",
            "use campuses undergraduate instead of campuses table and totalenrollment ay instead of county .",
            "use campuses id instead of campuses table and campus instead of county .",
            "use enrollments undergraduate instead of campuses table and id instead of county .",
            "use degrees undergraduate instead of campuses table and campus instead of id .",
            "use enrollments undergraduate instead of campuses table and campus instead of totalenrollment ay .",
            "use fte ay undergraduate instead of campuses table and campus instead of county .",
            "use enrollments undergraduate instead of campuses table and campus instead of county .",
            "use enrollments undergraduate instead of campuses table and discipline instead of county .",
            "use csu fees faculty instead of campuses table and campus instead of county .",
            "use degrees undergraduate instead of campuses table and id instead of county ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi greater than 5 and dpi less than A4 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "From product table display the product for which max page size is A 4 and pages per minute color is lesser than 5.",
        "negative_examples": [
            "from product table display the product for which max page size is a 4 and product id is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and product is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and dimensions is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and dpi is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and interface is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and store id is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and store name is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and type is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and area size is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and number of product category is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and ranking is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and district id is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and district name is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and headquartered city is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and city population is lesser than 5 .",
            "from product table display the product for which max page size is a 4 and city area is lesser than 5 .",
            "from product table display the product for which product id is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which product is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which dimensions is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which dpi is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which interface is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which store id is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which store name is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which type is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which area size is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which number of product category is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which ranking is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which district id is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which district name is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which headquartered city is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which city population is a 4 and pages per minute color is lesser than 5 .",
            "from product table display the product for which city area is a 4 and pages per minute color is lesser than 5 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Normandie Court and building full name equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                32,
                36
            ]
        ],
        "secondary_span": [
            [
                13,
                31
            ],
            [
                37,
                44
            ]
        ],
        "positive_example": "In step 2, you need to use bedroom count and building short name in place of bathroom count and building full name respectively. Also remove the buildings short name that has Normandie Court.",
        "negative_examples": [
            "in step 2 , you need to use bedroom count and status date in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and guest last name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of facility code and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building description in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and gender code respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of building address and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and room count in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and apartment type code respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and guest id in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and apartment number respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of apartment number and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of date of birth and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of room count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of building manager and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and booking end date in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and guest first name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and building address respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and date of birth respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of status date and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of booking start date and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and apartment type code in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of guest last name and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bedroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and status date respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of available yes or no and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and facility code in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and apartment booking id in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and booking start date in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of booking end date and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and date of birth in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and building phone respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and booking status code respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building phone in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building id in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and apartment booking id respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and apartment number in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and apartment id respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and facility code respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and apartment id in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of apartment id and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and building manager respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of building description and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and building description respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building address in place of bathroom count and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of apartment booking id and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of guest id and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of guest first name and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of bathroom count and building id respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of booking status code and building full name respectively . also remove the buildings short name that has normandie court .",
            "in step 2 , you need to use bedroom count and building short name in place of gender code and building full name respectively . also remove the buildings short name that has normandie court ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the store table and store district table besides the district table . consider the type equals City Mall conditions in place of the headquartered city equals City Mall conditions .",
        "primary_span": [
            [
                4,
                15
            ],
            [
                21,
                27
            ]
        ],
        "secondary_span": [
            [
                16,
                20
            ],
            [
                28,
                38
            ]
        ],
        "positive_example": "In step 1 replace headquartered city with corresponding store's type .",
        "negative_examples": [
            "in step 1 replace headquartered city with corresponding store 's store id .",
            "in step 1 replace headquartered city with corresponding product 's store name .",
            "in step 1 replace area size with corresponding store 's type .",
            "in step 1 replace headquartered city with corresponding store 's dimensions .",
            "in step 1 replace store id with corresponding store 's type .",
            "in step 1 replace district id with corresponding store district 's type .",
            "in step 1 replace headquartered city with corresponding store product 's district id .",
            "in step 1 replace headquartered city with corresponding product 's city area .",
            "in step 1 replace product with corresponding product 's type .",
            "in step 1 replace interface with corresponding district 's type .",
            "in step 1 replace interface with corresponding store district 's type .",
            "in step 1 replace district id with corresponding store product 's type .",
            "in step 1 replace product with corresponding store district 's type .",
            "in step 1 replace headquartered city with corresponding store district 's city area .",
            "in step 1 replace headquartered city with corresponding district 's pages per minute color .",
            "in step 1 replace ranking with corresponding district 's type .",
            "in step 1 replace headquartered city with corresponding store 's district id .",
            "in step 1 replace headquartered city with corresponding store product 's product id .",
            "in step 1 replace headquartered city with corresponding district 's dimensions .",
            "in step 1 replace headquartered city with corresponding interface 's type .",
            "in step 1 replace dimensions with corresponding district 's type .",
            "in step 1 replace headquartered city with corresponding area size 's type .",
            "in step 1 replace district id with corresponding district 's type .",
            "in step 1 replace headquartered city with corresponding store district 's district id .",
            "in step 1 replace headquartered city with corresponding district 's max page size .",
            "in step 1 replace headquartered city with corresponding store product 's city area .",
            "in step 1 replace area size with corresponding district 's type .",
            "in step 1 replace headquartered city with corresponding product 's product id .",
            "in step 1 replace dpi with corresponding product 's type .",
            "in step 1 replace city population with corresponding store product 's type .",
            "in step 1 replace headquartered city with corresponding store 's district name .",
            "in step 1 replace pages per minute color with corresponding store district 's type .",
            "in step 1 replace headquartered city with corresponding store 's store name .",
            "in step 1 replace headquartered city with corresponding store district 's city population .",
            "in step 1 replace headquartered city with corresponding product 's district name .",
            "in step 1 replace headquartered city with corresponding store product 's ranking .",
            "in step 1 replace headquartered city with corresponding store district 's type .",
            "in step 1 replace number of product category with corresponding district 's type .",
            "in step 1 replace headquartered city with corresponding store district 's dimensions .",
            "in step 1 replace headquartered city with corresponding product 's number of product category .",
            "in step 1 replace headquartered city with corresponding store product 's product .",
            "in step 1 replace headquartered city with corresponding store 's ranking .",
            "in step 1 replace headquartered city with corresponding district 's number of product category .",
            "in step 1 replace product id with corresponding store 's type .",
            "in step 1 replace city population with corresponding store 's type .",
            "in step 1 replace headquartered city with corresponding city population 's type .",
            "in step 1 replace district name with corresponding store district 's type .",
            "in step 1 replace ranking with corresponding store district 's type .",
            "in step 1 replace headquartered city with corresponding district 's ranking .",
            "in step 1 replace headquartered city with corresponding store name 's type ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , use order items table in place of product categories table in step 2 , find summation of product quantity in place of summation of vat rating .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                18,
                22
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                23,
                30
            ]
        ],
        "positive_example": "I want order items of product quantity instead of vat rating.",
        "negative_examples": [
            "i want products of product quantity instead of transaction amount .",
            "i want order items of other account details instead of vat rating .",
            "i want order items of customer id instead of vat rating .",
            "i want invoices of date account opened instead of vat rating .",
            "i want order items of product type description instead of vat rating .",
            "i want product categories of product quantity instead of customer middle initial .",
            "i want products of order id instead of vat rating .",
            "i want invoices of product quantity instead of vat rating .",
            "i want customers of other order item details instead of vat rating .",
            "i want product categories of product quantity instead of production type code .",
            "i want financial transactions of product quantity instead of customer first name .",
            "i want financial transactions of email address instead of vat rating .",
            "i want orders of transaction type instead of vat rating .",
            "i want product categories of email address instead of vat rating .",
            "i want products of product quantity instead of account id .",
            "i want invoice line items of product quantity instead of order item id .",
            "i want accounts of derived product cost instead of vat rating .",
            "i want products of transaction id instead of vat rating .",
            "i want invoices of product quantity instead of order details .",
            "i want financial transactions of product quantity instead of invoice date .",
            "i want accounts of product quantity instead of transaction comment .",
            "i want product categories of product quantity instead of parent product id .",
            "i want product categories of transaction type instead of vat rating .",
            "i want products of date order placed instead of vat rating .",
            "i want order items of customer middle initial instead of vat rating .",
            "i want invoice line items of parent product id instead of vat rating .",
            "i want orders of other account details instead of vat rating .",
            "i want invoice line items of derived product cost instead of vat rating .",
            "i want customers of unit price instead of vat rating .",
            "i want invoices of transaction amount instead of vat rating .",
            "i want financial transactions of customer middle initial instead of vat rating .",
            "i want order items of product quantity instead of parent product id .",
            "i want orders of product quantity instead of account id .",
            "i want accounts of login password instead of vat rating .",
            "i want financial transactions of unit price instead of vat rating .",
            "i want order items of product quantity instead of phone number .",
            "i want orders of state county province instead of vat rating .",
            "i want orders of product quantity instead of date account opened .",
            "i want product categories of order details instead of vat rating .",
            "i want order items of product quantity instead of transaction comment .",
            "i want product categories of product quantity instead of email address .",
            "i want customers of product price instead of vat rating .",
            "i want financial transactions of product type description instead of vat rating .",
            "i want invoices of product quantity instead of derived vat payable .",
            "i want invoice line items of product quantity instead of customer first name .",
            "i want customers of product quantity instead of production type code .",
            "i want product categories of transaction amount instead of vat rating .",
            "i want accounts of product quantity instead of customer first name .",
            "i want product categories of product quantity instead of product size .",
            "i want product categories of unit price instead of vat rating ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table and campuses table . in step 2 , remove the enrollments 's year equals 1956 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Delete \"and enrollments 's year equals 1956\" phrase from step 2.",
        "negative_examples": [
            "delete \" and discipline enrollments 's totalenrollment ay equals 1956 \" phrase from step 2 .",
            "delete \" and faculty 's year equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's undergraduate equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's county equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's fte ay equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's graduate equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's campus equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's totalenrollment ay equals 1956 \" phrase from step 2 .",
            "delete \" and faculty 's undergraduate equals 1956 \" phrase from step 2 .",
            "delete \" and degrees 's campus fee equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's location equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's id equals 1956 \" phrase from step 2 .",
            "delete \" and faculty 's id equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's undergraduate equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's degrees equals 1956 \" phrase from step 2 .",
            "delete \" and faculty 's totalenrollment ay equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's faculty equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's faculty equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's undergraduate equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's faculty equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's degrees equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's fte ay equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's county equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's campus fee equals 1956 \" phrase from step 2 .",
            "delete \" and faculty 's discipline equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's graduate equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's id equals 1956 \" phrase from step 2 .",
            "delete \" and discipline 's year equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's location equals 1956 \" phrase from step 2 .",
            "delete \" and fte ay 's year equals 1956 \" phrase from step 2 .",
            "delete \" and graduate 's year equals 1956 \" phrase from step 2 .",
            "delete \" and campus 's year equals 1956 \" phrase from step 2 .",
            "delete \" and id 's year equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's faculty equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's id equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's id equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's county equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's discipline equals 1956 \" phrase from step 2 .",
            "delete \" and campuses 's degrees equals 1956 \" phrase from step 2 .",
            "delete \" and degrees 's graduate equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's campus fee equals 1956 \" phrase from step 2 .",
            "delete \" and enrollments 's discipline equals 1956 \" phrase from step 2 .",
            "delete \" and degrees 's totalenrollment ay equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's graduate equals 1956 \" phrase from step 2 .",
            "delete \" and faculty 's degrees equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's undergraduate equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's campus equals 1956 \" phrase from step 2 .",
            "delete \" and discipline enrollments 's campus fee equals 1956 \" phrase from step 2 .",
            "delete \" and county 's year equals 1956 \" phrase from step 2 .",
            "delete \" and csu fees 's degrees equals 1956 \" phrase from step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment bookings table . do not find for each value of apartment booking id . in step 2 , additionally make sure that bedroom count greater than 2 . do not return booking end date .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                49
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "In apartment bookings table, you have to omit the apartment booking id of guest and add bedroom count of building.",
        "negative_examples": [
            "in apartment bookings table , you have to omit the building id of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the building short name of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the building full name of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the building description of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the building address of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the building manager of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the building phone of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the apartment id of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the apartment type code of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the apartment number of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the bathroom count of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the room count of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the facility code of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the guest id of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the gender code of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the guest first name of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the guest last name of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the date of birth of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the booking status code of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the booking start date of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the booking end date of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the status date of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the available yes or no of guest and add bedroom count of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add building id of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add building short name of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add building full name of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add building description of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add building address of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add building manager of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add building phone of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add apartment id of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add apartment type code of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add apartment number of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add bathroom count of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add room count of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add facility code of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add guest id of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add gender code of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add guest first name of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add guest last name of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add date of birth of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add booking status code of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add booking start date of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add booking end date of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add status date of building .",
            "in apartment bookings table , you have to omit the apartment booking id of guest and add available yes or no of building ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the csu fees table and campuses table . in step 2 , find for each value of degrees 's year in place of csu fees 's year . in step 3 , find degrees 's year in place of csu fees 's year . order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                26
            ],
            [
                39,
                42
            ],
            [
                51,
                57
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                27,
                34
            ],
            [
                43,
                50
            ],
            [
                58,
                63
            ]
        ],
        "positive_example": "Do not find the average value of degrees in step 2.",
        "negative_examples": [
            "do not find the average value of campuses in step 2 .",
            "do not find the average value of csu fees in step 2 .",
            "do not find the average value of discipline enrollments in step 2 .",
            "do not find the average value of enrollments in step 2 .",
            "do not find the average value of faculty in step 2 .",
            "do not find the average value of id in step 2 .",
            "do not find the average value of campus in step 2 .",
            "do not find the average value of location in step 2 .",
            "do not find the average value of county in step 2 .",
            "do not find the average value of year in step 2 .",
            "do not find the average value of campus fee in step 2 .",
            "do not find the average value of discipline in step 2 .",
            "do not find the average value of undergraduate in step 2 .",
            "do not find the average value of graduate in step 2 .",
            "do not find the average value of totalenrollment ay in step 2 .",
            "do not find the average value of fte ay in step 2 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use enrollments table in place of faculty table and discipline enrollments table in step 2 , consider the enrollments 's year equals 1956 and totalenrollment ay greater than 400 and fte ay greater than 200 conditions in place of the discipline enrollments 's year equals 400 and undergraduate greater than 1956 conditions . find campuses 's campus in place of faculty .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                39
            ],
            [
                57,
                60
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                40,
                56
            ],
            [
                61,
                65
            ]
        ],
        "positive_example": "You have to look for campus, ensure 1956 should be fte ay and totalenrollment ay is greater than 400.",
        "negative_examples": [
            "you have to look for campus , ensure 1956 should be fte ay and id is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and location is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and county is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and year is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and campus fee is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and degrees is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and discipline is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and undergraduate is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and graduate is greater than 400 .",
            "you have to look for campus , ensure 1956 should be fte ay and faculty is greater than 400 .",
            "you have to look for campus , ensure 1956 should be id and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be location and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be county and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be year and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be campus fee and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be degrees and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be discipline and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be undergraduate and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be graduate and totalenrollment ay is greater than 400 .",
            "you have to look for campus , ensure 1956 should be faculty and totalenrollment ay is greater than 400 .",
            "you have to look for id , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for location , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for county , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for year , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for campus fee , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for degrees , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for discipline , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for undergraduate , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for graduate , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 .",
            "you have to look for faculty , ensure 1956 should be fte ay and totalenrollment ay is greater than 400 ."
        ],
        "neg_len": 30
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table besides the products table . find summation of product quantity in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "It should search summation of product quantity for each product id in order items table .",
        "negative_examples": [
            "it should search summation of transaction id for each product id in orders table .",
            "it should search summation of parent product id for each product id in products table .",
            "it should search summation of login name for each product id in order items table .",
            "it should search summation of account id for each product id in financial transactions table .",
            "it should search summation of customer first name for each product id in order items table .",
            "it should search summation of unit price for each product id in products table .",
            "it should search summation of transaction type for each product id in product categories table .",
            "it should search summation of state county province for each product id in customers table .",
            "it should search summation of product quantity for each product id in invoice line items table .",
            "it should search summation of account name for each product id in accounts table .",
            "it should search summation of transaction type for each product id in financial transactions table .",
            "it should search summation of derived product cost for each product id in customers table .",
            "it should search summation of product price for each product id in products table .",
            "it should search summation of product type description for each product id in invoice line items table .",
            "it should search summation of other account details for each product id in invoice line items table .",
            "it should search summation of order id for each product id in financial transactions table .",
            "it should search summation of transaction amount for each product id in invoice line items table .",
            "it should search summation of other order item details for each product id in financial transactions table .",
            "it should search summation of login name for each product id in products table .",
            "it should search summation of order details for each product id in invoices table .",
            "it should search summation of product quantity for each product id in financial transactions table .",
            "it should search summation of other account details for each product id in orders table .",
            "it should search summation of gender for each product id in invoice line items table .",
            "it should search summation of transaction id for each product id in customers table .",
            "it should search summation of other order item details for each product id in order items table .",
            "it should search summation of product price for each product id in accounts table .",
            "it should search summation of product id for each product id in accounts table .",
            "it should search summation of transaction amount for each product id in products table .",
            "it should search summation of customer id for each product id in customers table .",
            "it should search summation of product type description for each product id in products table .",
            "it should search summation of date order placed for each product id in orders table .",
            "it should search summation of date order placed for each product id in invoices table .",
            "it should search summation of gender for each product id in products table .",
            "it should search summation of order item id for each product id in product categories table .",
            "it should search summation of parent product id for each product id in customers table .",
            "it should search summation of order details for each product id in customers table .",
            "it should search summation of vat rating for each product id in product categories table .",
            "it should search summation of customer last name for each product id in orders table .",
            "it should search summation of customer first name for each product id in orders table .",
            "it should search summation of production type code for each product id in financial transactions table .",
            "it should search summation of product type description for each product id in accounts table .",
            "it should search summation of transaction comment for each product id in products table .",
            "it should search summation of product id for each product id in products table .",
            "it should search summation of gender for each product id in accounts table .",
            "it should search summation of country for each product id in financial transactions table .",
            "it should search summation of account id for each product id in products table .",
            "it should search summation of account id for each product id in order items table .",
            "it should search summation of product size for each product id in accounts table .",
            "it should search summation of customer middle initial for each product id in invoices table .",
            "it should search summation of product quantity for each product id in orders table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Make sure number of the corresponding rows to order items 's product id .",
        "negative_examples": [
            "make sure number of the corresponding rows to customers 's product id .",
            "make sure number of the corresponding rows to orders 's product id .",
            "make sure number of the corresponding rows to invoices 's product id .",
            "make sure number of the corresponding rows to accounts 's product id .",
            "make sure number of the corresponding rows to product categories 's product id .",
            "make sure number of the corresponding rows to products 's product id .",
            "make sure number of the corresponding rows to financial transactions 's product id .",
            "make sure number of the corresponding rows to invoice line items 's product id ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the store name equals Blackville conditions in place of the district name equals Blackville conditions . find headquartered city in place of city population .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                23
            ],
            [
                34,
                36
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                24,
                33
            ],
            [
                37,
                42
            ]
        ],
        "positive_example": "You have to put headquartered city and store name, omit city population and district name.",
        "negative_examples": [
            "you have to put headquartered city and store name , omit product and district name .",
            "you have to put product and store name , omit city population and district name .",
            "you have to put area size and store name , omit city population and district name .",
            "you have to put max page size and store name , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and product id .",
            "you have to put ranking and store name , omit city population and district name .",
            "you have to put headquartered city and store name , omit area size and district name .",
            "you have to put headquartered city and store name , omit number of product category and district name .",
            "you have to put headquartered city and store name , omit city population and product .",
            "you have to put headquartered city and store name , omit product id and district name .",
            "you have to put headquartered city and store name , omit city area and district name .",
            "you have to put headquartered city and city area , omit city population and district name .",
            "you have to put headquartered city and store name , omit interface and district name .",
            "you have to put headquartered city and pages per minute color , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and area size .",
            "you have to put headquartered city and product id , omit city population and district name .",
            "you have to put product id and store name , omit city population and district name .",
            "you have to put headquartered city and number of product category , omit city population and district name .",
            "you have to put dimensions and store name , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and district id .",
            "you have to put headquartered city and store name , omit max page size and district name .",
            "you have to put headquartered city and store name , omit store id and district name .",
            "you have to put type and store name , omit city population and district name .",
            "you have to put store id and store name , omit city population and district name .",
            "you have to put headquartered city and dimensions , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and pages per minute color .",
            "you have to put headquartered city and store name , omit dimensions and district name .",
            "you have to put city area and store name , omit city population and district name .",
            "you have to put headquartered city and interface , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and dimensions .",
            "you have to put headquartered city and store name , omit district id and district name .",
            "you have to put headquartered city and store name , omit city population and max page size .",
            "you have to put headquartered city and type , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and interface .",
            "you have to put headquartered city and store name , omit ranking and district name .",
            "you have to put headquartered city and dpi , omit city population and district name .",
            "you have to put headquartered city and product , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and type .",
            "you have to put district id and store name , omit city population and district name .",
            "you have to put pages per minute color and store name , omit city population and district name .",
            "you have to put headquartered city and store name , omit dpi and district name .",
            "you have to put headquartered city and max page size , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and ranking .",
            "you have to put number of product category and store name , omit city population and district name .",
            "you have to put headquartered city and district id , omit city population and district name .",
            "you have to put headquartered city and store name , omit city population and dpi .",
            "you have to put headquartered city and store name , omit city population and city area .",
            "you have to put interface and store name , omit city population and district name .",
            "you have to put headquartered city and store name , omit pages per minute color and district name .",
            "you have to put headquartered city and area size , omit city population and district name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the store name equals Blackville conditions in place of the district name equals Blackville conditions .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                23
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                24,
                33
            ]
        ],
        "positive_example": "Replace district name with store name of store table .",
        "negative_examples": [
            "replace district name with product id of store table .",
            "replace district name with product of store table .",
            "replace district name with dimensions of store table .",
            "replace district name with dpi of store table .",
            "replace district name with pages per minute color of store table .",
            "replace district name with max page size of store table .",
            "replace district name with interface of store table .",
            "replace district name with store id of store table .",
            "replace district name with type of store table .",
            "replace district name with area size of store table .",
            "replace district name with number of product category of store table .",
            "replace district name with ranking of store table .",
            "replace district name with district id of store table .",
            "replace district name with headquartered city of store table .",
            "replace district name with city population of store table .",
            "replace district name with city area of store table .",
            "replace product id with store name of store table .",
            "replace product with store name of store table .",
            "replace dimensions with store name of store table .",
            "replace dpi with store name of store table .",
            "replace pages per minute color with store name of store table .",
            "replace max page size with store name of store table .",
            "replace interface with store name of store table .",
            "replace store id with store name of store table .",
            "replace type with store name of store table .",
            "replace area size with store name of store table .",
            "replace number of product category with store name of store table .",
            "replace ranking with store name of store table .",
            "replace district id with store name of store table .",
            "replace headquartered city with store name of store table .",
            "replace city population with store name of store table .",
            "replace city area with store name of store table ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building description equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "Look for bedroom count and building short name instead of bathroom count and building description respectively. Also, ensure that building short name should not be Normandie Court.",
        "negative_examples": [
            "look for bedroom count and building short name instead of booking end date and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and apartment type code instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and status date instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of building manager and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and booking end date instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and building manager respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and apartment id respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and date of birth instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and booking status code respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of building phone and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of building full name and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and building phone respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building address instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and booking start date respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of apartment number and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and available yes or no respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of facility code and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and building address respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and apartment id instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of apartment type code and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and bedroom count respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and guest id respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of building id and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building id instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and guest first name instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of booking start date and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and guest last name respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building phone instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of room count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and status date respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and apartment number instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of guest first name and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of apartment booking id and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of apartment id and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of guest id and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building full name instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and guest id instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of booking status code and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of guest last name and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and facility code instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of gender code and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and room count respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building manager instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and booking end date respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and available yes or no instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and apartment type code respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of building address and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and gender code instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and booking start date instead of bathroom count and building description respectively . also , ensure that building short name should not be normandie court .",
            "look for bedroom count and building short name instead of bathroom count and apartment number respectively . also , ensure that building short name should not be normandie court ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director not equals null conditions in place of the title equals null conditions . find for each value of director whose number of rows equals 1 . find director in place of name .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ],
            [
                34,
                46
            ],
            [
                47,
                48
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                33
            ],
            [
                49,
                53
            ]
        ],
        "positive_example": "i want director instead of name and also make sure that director should be equivalent to zero and in addition it should made only one film. ",
        "negative_examples": [
            "i want movie id instead of name and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want title instead of name and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want year instead of name and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want reviewer id instead of name and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want rating stars instead of name and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want rating date instead of name and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want director instead of movie id and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want director instead of title and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want director instead of year and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want director instead of reviewer id and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want director instead of rating stars and also make sure that director should be equivalent to zero and in addition it should made only one film .",
            "i want director instead of rating date and also make sure that director should be equivalent to zero and in addition it should made only one film ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building full name . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building short name .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                45
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "In step 1 Find only bathroom count of apartments table , Step 2 Exchange building short name with building address .",
        "negative_examples": [
            "in step 1 find only bathroom count of apartment buildings table , step 2 exchange building short name with apartment number .",
            "in step 1 find only bathroom count of view unit status table , step 2 exchange building short name with status date .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange building phone with building address .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange booking end date with building address .",
            "in step 1 find only bathroom count of view unit status table , step 2 exchange building short name with room count .",
            "in step 1 find only guest id of apartment bookings table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of view unit status table , step 2 exchange building full name with building address .",
            "in step 1 find only bathroom count of apartment bookings table , step 2 exchange guest last name with building address .",
            "in step 1 find only booking status code of apartment buildings table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange building short name with available yes or no .",
            "in step 1 find only bathroom count of guests table , step 2 exchange guest first name with building address .",
            "in step 1 find only bathroom count of apartments table , step 2 exchange building full name with building address .",
            "in step 1 find only facility code of apartments table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartments table , step 2 exchange building short name with apartment id .",
            "in step 1 find only bathroom count of apartment buildings table , step 2 exchange building short name with apartment type code .",
            "in step 1 find only bathroom count of apartment buildings table , step 2 exchange building short name with room count .",
            "in step 1 find only bathroom count of view unit status table , step 2 exchange gender code with building address .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange apartment booking id with building address .",
            "in step 1 find only status date of apartments table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of guests table , step 2 exchange building short name with building description .",
            "in step 1 find only booking start date of apartment buildings table , step 2 exchange building short name with building address .",
            "in step 1 find only apartment type code of apartment bookings table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartments table , step 2 exchange bedroom count with building address .",
            "in step 1 find only apartment number of apartment bookings table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of guests table , step 2 exchange bedroom count with building address .",
            "in step 1 find only apartment id of view unit status table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of guests table , step 2 exchange building short name with building phone .",
            "in step 1 find only apartment number of guests table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of guests table , step 2 exchange apartment number with building address .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange guest last name with building address .",
            "in step 1 find only apartment type code of guests table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange building full name with building address .",
            "in step 1 find only bathroom count of guests table , step 2 exchange status date with building address .",
            "in step 1 find only date of birth of apartment bookings table , step 2 exchange building short name with building address .",
            "in step 1 find only booking start date of apartment bookings table , step 2 exchange building short name with building address .",
            "in step 1 find only building manager of apartment buildings table , step 2 exchange building short name with building address .",
            "in step 1 find only guest id of apartments table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartment buildings table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange bedroom count with building address .",
            "in step 1 find only bathroom count of guests table , step 2 exchange building short name with apartment type code .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange building short name with building address .",
            "in step 1 find only room count of guests table , step 2 exchange building short name with building address .",
            "in step 1 find only guest first name of apartment facilities table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartment buildings table , step 2 exchange building short name with booking end date .",
            "in step 1 find only date of birth of apartments table , step 2 exchange building short name with building address .",
            "in step 1 find only building full name of apartment facilities table , step 2 exchange building short name with building address .",
            "in step 1 find only room count of apartments table , step 2 exchange building short name with building address .",
            "in step 1 find only bathroom count of apartments table , step 2 exchange guest last name with building address .",
            "in step 1 find only bathroom count of apartment buildings table , step 2 exchange facility code with building address .",
            "in step 1 find only bathroom count of apartment facilities table , step 2 exchange building short name with apartment number ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally make sure that director not equals null . find for each value of director . additionally find maximum rating stars and director .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                13,
                19
            ],
            [
                20,
                27
            ]
        ],
        "secondary_span": [],
        "positive_example": "Ensure that each director has reviewed the movie .",
        "negative_examples": [
            "ensure that each movie id has reviewed the movie .",
            "ensure that each title has reviewed the movie .",
            "ensure that each year has reviewed the movie .",
            "ensure that each reviewer id has reviewed the movie .",
            "ensure that each name has reviewed the movie .",
            "ensure that each rating stars has reviewed the movie .",
            "ensure that each rating date has reviewed the movie ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the orders table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "You need to use Id of customer in table of orders.",
        "negative_examples": [
            "you need to use id of customer in table of customers .",
            "you need to use id of customer in table of invoices .",
            "you need to use id of customer in table of accounts .",
            "you need to use id of customer in table of product categories .",
            "you need to use id of customer in table of products .",
            "you need to use id of customer in table of financial transactions .",
            "you need to use id of customer in table of order items .",
            "you need to use id of customer in table of invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , use apartment buildings table in place of apartment bookings table and guests table in step 2 , consider the building manager equals Kyle conditions in place of the guest first name equals Kyle conditions .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                21,
                27
            ]
        ],
        "secondary_span": [
            [
                8,
                16
            ],
            [
                28,
                38
            ]
        ],
        "positive_example": "Need to replace guest first name with building manager .",
        "negative_examples": [
            "need to replace building id with building manager .",
            "need to replace building short name with building manager .",
            "need to replace building full name with building manager .",
            "need to replace building description with building manager .",
            "need to replace building address with building manager .",
            "need to replace building phone with building manager .",
            "need to replace apartment id with building manager .",
            "need to replace apartment type code with building manager .",
            "need to replace apartment number with building manager .",
            "need to replace bathroom count with building manager .",
            "need to replace bedroom count with building manager .",
            "need to replace room count with building manager .",
            "need to replace facility code with building manager .",
            "need to replace guest id with building manager .",
            "need to replace gender code with building manager .",
            "need to replace guest last name with building manager .",
            "need to replace date of birth with building manager .",
            "need to replace apartment booking id with building manager .",
            "need to replace booking status code with building manager .",
            "need to replace booking start date with building manager .",
            "need to replace booking end date with building manager .",
            "need to replace status date with building manager .",
            "need to replace available yes or no with building manager .",
            "need to replace guest first name with building id .",
            "need to replace guest first name with building short name .",
            "need to replace guest first name with building full name .",
            "need to replace guest first name with building description .",
            "need to replace guest first name with building address .",
            "need to replace guest first name with building phone .",
            "need to replace guest first name with apartment id .",
            "need to replace guest first name with apartment type code .",
            "need to replace guest first name with apartment number .",
            "need to replace guest first name with bathroom count .",
            "need to replace guest first name with bedroom count .",
            "need to replace guest first name with room count .",
            "need to replace guest first name with facility code .",
            "need to replace guest first name with guest id .",
            "need to replace guest first name with gender code .",
            "need to replace guest first name with guest last name .",
            "need to replace guest first name with date of birth .",
            "need to replace guest first name with apartment booking id .",
            "need to replace guest first name with booking status code .",
            "need to replace guest first name with booking start date .",
            "need to replace guest first name with booking end date .",
            "need to replace guest first name with status date .",
            "need to replace guest first name with available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "order the results by room count in place of bathroom count .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                11
            ]
        ],
        "positive_example": "It should be bedroom count in place of bathroom count .",
        "negative_examples": [
            "it should be bedroom count in place of building id .",
            "it should be bedroom count in place of building short name .",
            "it should be bedroom count in place of building full name .",
            "it should be bedroom count in place of building description .",
            "it should be bedroom count in place of building address .",
            "it should be bedroom count in place of building manager .",
            "it should be bedroom count in place of building phone .",
            "it should be bedroom count in place of apartment id .",
            "it should be bedroom count in place of apartment type code .",
            "it should be bedroom count in place of apartment number .",
            "it should be bedroom count in place of bedroom count .",
            "it should be bedroom count in place of room count .",
            "it should be bedroom count in place of facility code .",
            "it should be bedroom count in place of guest id .",
            "it should be bedroom count in place of gender code .",
            "it should be bedroom count in place of guest first name .",
            "it should be bedroom count in place of guest last name .",
            "it should be bedroom count in place of date of birth .",
            "it should be bedroom count in place of apartment booking id .",
            "it should be bedroom count in place of booking status code .",
            "it should be bedroom count in place of booking start date .",
            "it should be bedroom count in place of booking end date .",
            "it should be bedroom count in place of status date .",
            "it should be bedroom count in place of available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "remove the year equals 1996 conditions .",
        "primary_span": [
            [
                0,
                6
            ]
        ],
        "secondary_span": [],
        "positive_example": "Delete the year which has 1996.",
        "negative_examples": [
            "delete the id which has 1996 .",
            "delete the campus which has 1996 .",
            "delete the location which has 1996 .",
            "delete the county which has 1996 .",
            "delete the campus fee which has 1996 .",
            "delete the degrees which has 1996 .",
            "delete the discipline which has 1996 .",
            "delete the undergraduate which has 1996 .",
            "delete the graduate which has 1996 .",
            "delete the totalenrollment ay which has 1996 .",
            "delete the fte ay which has 1996 .",
            "delete the faculty which has 1996 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average bedroom count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Shift bedroom count instead of bathroom count .",
        "negative_examples": [
            "shift bedroom count instead of building id .",
            "shift bedroom count instead of building short name .",
            "shift bedroom count instead of building full name .",
            "shift bedroom count instead of building description .",
            "shift bedroom count instead of building address .",
            "shift bedroom count instead of building manager .",
            "shift bedroom count instead of building phone .",
            "shift bedroom count instead of apartment id .",
            "shift bedroom count instead of apartment type code .",
            "shift bedroom count instead of apartment number .",
            "shift bedroom count instead of room count .",
            "shift bedroom count instead of facility code .",
            "shift bedroom count instead of guest id .",
            "shift bedroom count instead of gender code .",
            "shift bedroom count instead of guest first name .",
            "shift bedroom count instead of guest last name .",
            "shift bedroom count instead of date of birth .",
            "shift bedroom count instead of apartment booking id .",
            "shift bedroom count instead of booking status code .",
            "shift bedroom count instead of booking start date .",
            "shift bedroom count instead of booking end date .",
            "shift bedroom count instead of status date .",
            "shift bedroom count instead of available yes or no .",
            "shift building id instead of bathroom count .",
            "shift building short name instead of bathroom count .",
            "shift building full name instead of bathroom count .",
            "shift building description instead of bathroom count .",
            "shift building address instead of bathroom count .",
            "shift building manager instead of bathroom count .",
            "shift building phone instead of bathroom count .",
            "shift apartment id instead of bathroom count .",
            "shift apartment type code instead of bathroom count .",
            "shift apartment number instead of bathroom count .",
            "shift room count instead of bathroom count .",
            "shift facility code instead of bathroom count .",
            "shift guest id instead of bathroom count .",
            "shift gender code instead of bathroom count .",
            "shift guest first name instead of bathroom count .",
            "shift guest last name instead of bathroom count .",
            "shift date of birth instead of bathroom count .",
            "shift apartment booking id instead of bathroom count .",
            "shift booking status code instead of bathroom count .",
            "shift booking start date instead of bathroom count .",
            "shift booking end date instead of bathroom count .",
            "shift status date instead of bathroom count .",
            "shift available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 2 , consider the district name equals Khanewal District conditions in place of the headquartered city equals Khanewal District conditions .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                22
            ]
        ],
        "positive_example": "Need to use district name in place of headquartered city .",
        "negative_examples": [
            "need to use product id in place of headquartered city .",
            "need to use product in place of headquartered city .",
            "need to use dimensions in place of headquartered city .",
            "need to use dpi in place of headquartered city .",
            "need to use pages per minute color in place of headquartered city .",
            "need to use max page size in place of headquartered city .",
            "need to use interface in place of headquartered city .",
            "need to use store id in place of headquartered city .",
            "need to use store name in place of headquartered city .",
            "need to use type in place of headquartered city .",
            "need to use area size in place of headquartered city .",
            "need to use number of product category in place of headquartered city .",
            "need to use ranking in place of headquartered city .",
            "need to use district id in place of headquartered city .",
            "need to use city population in place of headquartered city .",
            "need to use city area in place of headquartered city .",
            "need to use district name in place of product id .",
            "need to use district name in place of product .",
            "need to use district name in place of dimensions .",
            "need to use district name in place of dpi .",
            "need to use district name in place of pages per minute color .",
            "need to use district name in place of max page size .",
            "need to use district name in place of interface .",
            "need to use district name in place of store id .",
            "need to use district name in place of store name .",
            "need to use district name in place of type .",
            "need to use district name in place of area size .",
            "need to use district name in place of number of product category .",
            "need to use district name in place of ranking .",
            "need to use district name in place of district id .",
            "need to use district name in place of city population .",
            "need to use district name in place of city area ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally find first name .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "I want first name along with middle and last name.",
        "negative_examples": [
            "i want address id along with middle and last name .",
            "i want line 1 number building along with middle and last name .",
            "i want city along with middle and last name .",
            "i want zip postcode along with middle and last name .",
            "i want state province county along with middle and last name .",
            "i want country along with middle and last name .",
            "i want staff id along with middle and last name .",
            "i want staff address id along with middle and last name .",
            "i want nickname along with middle and last name .",
            "i want middle name along with middle and last name .",
            "i want last name along with middle and last name .",
            "i want date of birth along with middle and last name .",
            "i want date joined staff along with middle and last name .",
            "i want date left staff along with middle and last name .",
            "i want vehicle id along with middle and last name .",
            "i want vehicle details along with middle and last name .",
            "i want customer id along with middle and last name .",
            "i want customer address id along with middle and last name .",
            "i want customer status code along with middle and last name .",
            "i want date became customer along with middle and last name .",
            "i want amount outstanding along with middle and last name .",
            "i want email address along with middle and last name .",
            "i want phone number along with middle and last name .",
            "i want cell mobile phone number along with middle and last name .",
            "i want datetime payment along with middle and last name .",
            "i want payment method code along with middle and last name .",
            "i want amount payment along with middle and last name .",
            "i want lesson id along with middle and last name .",
            "i want lesson status code along with middle and last name .",
            "i want lesson date along with middle and last name .",
            "i want lesson time along with middle and last name .",
            "i want price along with middle and last name ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the screen mode table besides the phone table . additionally make sure that type equals Graphics or company name equals Nokia Corporation . make sure no repetition in the results .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                27
            ],
            [
                28,
                35
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ]
        ],
        "positive_example": "Make sure that company name should be Nokia Corporation and screen mode type should be Graphics.",
        "negative_examples": [
            "make sure that slots should be nokia corporation and screen mode type should be graphics .",
            "make sure that company name should be nokia corporation and screen mode ram mib should be graphics .",
            "make sure that ram mib should be nokia corporation and phone type should be graphics .",
            "make sure that company name should be nokia corporation and screen mode hardware colours should be graphics .",
            "make sure that company name should be nokia corporation and phone accreditation level should be graphics .",
            "make sure that pixels should be nokia corporation and screen mode type should be graphics .",
            "make sure that company name should be nokia corporation and screen mode rom mib should be graphics .",
            "make sure that company name should be nokia corporation and phone hardware model name should be graphics .",
            "make sure that graphics mode should be nokia corporation and phone type should be graphics .",
            "make sure that slots should be nokia corporation and chip model type should be graphics .",
            "make sure that rom mib should be nokia corporation and chip model type should be graphics .",
            "make sure that company name should be nokia corporation and phone char cells should be graphics .",
            "make sure that pixels should be nokia corporation and phone type should be graphics .",
            "make sure that launch year should be nokia corporation and phone type should be graphics .",
            "make sure that accreditation level should be nokia corporation and screen mode type should be graphics .",
            "make sure that company name should be nokia corporation and phone pixels should be graphics .",
            "make sure that company name should be nokia corporation and hardware model name type should be graphics .",
            "make sure that company name should be nokia corporation and chip model slots should be graphics .",
            "make sure that model name should be nokia corporation and phone type should be graphics .",
            "make sure that hardware colours should be nokia corporation and chip model type should be graphics .",
            "make sure that accreditation type should be nokia corporation and phone type should be graphics .",
            "make sure that slots should be nokia corporation and phone type should be graphics .",
            "make sure that company name should be nokia corporation and chip model chip model should be graphics .",
            "make sure that company name should be nokia corporation and screen mode graphics mode should be graphics .",
            "make sure that pixels should be nokia corporation and chip model type should be graphics .",
            "make sure that used kb should be nokia corporation and phone type should be graphics .",
            "make sure that company name should be nokia corporation and screen mode date should be graphics .",
            "make sure that company name should be nokia corporation and chip model ram mib should be graphics .",
            "make sure that company name should be nokia corporation and chip model type should be graphics .",
            "make sure that ram mib should be nokia corporation and screen mode type should be graphics .",
            "make sure that company name should be nokia corporation and pixels type should be graphics .",
            "make sure that launch year should be nokia corporation and chip model type should be graphics .",
            "make sure that company name should be nokia corporation and phone model name should be graphics .",
            "make sure that company name should be nokia corporation and screen mode char cells should be graphics .",
            "make sure that map should be nokia corporation and phone type should be graphics .",
            "make sure that company name should be nokia corporation and screen mode accreditation type should be graphics .",
            "make sure that chip model should be nokia corporation and chip model type should be graphics .",
            "make sure that company name should be nokia corporation and slots type should be graphics .",
            "make sure that company name should be nokia corporation and phone rom mib should be graphics .",
            "make sure that company name should be nokia corporation and chip model accreditation type should be graphics .",
            "make sure that company name should be nokia corporation and chip model bluetooth should be graphics .",
            "make sure that char cells should be nokia corporation and screen mode type should be graphics .",
            "make sure that company name should be nokia corporation and phone accreditation type should be graphics .",
            "make sure that company name should be nokia corporation and screen mode slots should be graphics .",
            "make sure that accreditation level should be nokia corporation and phone type should be graphics .",
            "make sure that company name should be nokia corporation and phone chip model should be graphics .",
            "make sure that company name should be nokia corporation and chip model accreditation level should be graphics .",
            "make sure that company name should be nokia corporation and phone map should be graphics .",
            "make sure that company name should be nokia corporation and chip model wifi should be graphics .",
            "make sure that company name should be nokia corporation and phone graphics mode should be graphics ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2 take off \"faculty's campuses equals 1\".",
        "negative_examples": [
            "in step 2 take off \" campuses 's campuses equals 1 \" .",
            "in step 2 take off \" csu fees 's campuses equals 1 \" .",
            "in step 2 take off \" degrees 's campuses equals 1 \" .",
            "in step 2 take off \" discipline enrollments 's campuses equals 1 \" .",
            "in step 2 take off \" enrollments 's campuses equals 1 \" .",
            "in step 2 take off \" id 's campuses equals 1 \" .",
            "in step 2 take off \" location 's campuses equals 1 \" .",
            "in step 2 take off \" county 's campuses equals 1 \" .",
            "in step 2 take off \" year 's campuses equals 1 \" .",
            "in step 2 take off \" campus fee 's campuses equals 1 \" .",
            "in step 2 take off \" discipline 's campuses equals 1 \" .",
            "in step 2 take off \" undergraduate 's campuses equals 1 \" .",
            "in step 2 take off \" graduate 's campuses equals 1 \" .",
            "in step 2 take off \" totalenrollment ay 's campuses equals 1 \" .",
            "in step 2 take off \" fte ay 's campuses equals 1 \" .",
            "in step 2 take off \" faculty 's id equals 1 \" .",
            "in step 2 take off \" faculty 's location equals 1 \" .",
            "in step 2 take off \" faculty 's county equals 1 \" .",
            "in step 2 take off \" faculty 's year equals 1 \" .",
            "in step 2 take off \" faculty 's campus fee equals 1 \" .",
            "in step 2 take off \" faculty 's degrees equals 1 \" .",
            "in step 2 take off \" faculty 's discipline equals 1 \" .",
            "in step 2 take off \" faculty 's undergraduate equals 1 \" .",
            "in step 2 take off \" faculty 's graduate equals 1 \" .",
            "in step 2 take off \" faculty 's totalenrollment ay equals 1 \" .",
            "in step 2 take off \" faculty 's fte ay equals 1 \" ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , use chip model table in place of screen mode table . do not find for each value of type . in step 2 , find model name and ram mib in place of number of rows and type . order the results by ram mib in place of number of rows .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                15,
                23
            ],
            [
                28,
                33
            ],
            [
                43,
                48
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ],
            [
                34,
                42
            ],
            [
                49,
                55
            ]
        ],
        "positive_example": "Use chip model in place of screen mode table.",
        "negative_examples": [
            "use phone in place of rom mib table .",
            "use chip model in place of model name table .",
            "use chip model in place of accreditation type table .",
            "use bluetooth in place of screen mode table .",
            "use phone in place of slots table .",
            "use pixels in place of phone table .",
            "use chip model in place of char cells table .",
            "use map in place of phone table .",
            "use used kb in place of phone table .",
            "use graphics mode in place of phone table .",
            "use accreditation level in place of screen mode table .",
            "use type in place of phone table .",
            "use date in place of phone table .",
            "use accreditation type in place of phone table .",
            "use accreditation level in place of phone table .",
            "use chip model in place of wifi table .",
            "use phone in place of model name table .",
            "use launch year in place of screen mode table .",
            "use chip model in place of used kb table .",
            "use ram mib in place of screen mode table .",
            "use pixels in place of screen mode table .",
            "use company name in place of phone table .",
            "use chip model in place of map table .",
            "use slots in place of screen mode table .",
            "use char cells in place of phone table .",
            "use chip model in place of launch year table .",
            "use chip model in place of bluetooth table .",
            "use phone in place of type table .",
            "use rom mib in place of screen mode table .",
            "use phone in place of char cells table .",
            "use phone in place of hardware model name table .",
            "use phone in place of pixels table .",
            "use hardware model name in place of screen mode table .",
            "use bluetooth in place of phone table .",
            "use graphics mode in place of screen mode table .",
            "use hardware colours in place of phone table .",
            "use date in place of screen mode table .",
            "use phone in place of date table .",
            "use phone in place of launch year table .",
            "use chip model in place of graphics mode table .",
            "use type in place of screen mode table .",
            "use wifi in place of phone table .",
            "use chip model in place of hardware model name table .",
            "use chip model in place of slots table .",
            "use phone in place of ram mib table .",
            "use hardware model name in place of phone table .",
            "use phone in place of graphics mode table .",
            "use chip model in place of date table .",
            "use phone in place of accreditation type table .",
            "use wifi in place of screen mode table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally find minimum bathroom count .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [],
        "positive_example": "Use minimum bathroom count instead of first maximum bathroom count .",
        "negative_examples": [
            "use minimum building id instead of first maximum bathroom count .",
            "use minimum building short name instead of first maximum bathroom count .",
            "use minimum building full name instead of first maximum bathroom count .",
            "use minimum building description instead of first maximum bathroom count .",
            "use minimum building address instead of first maximum bathroom count .",
            "use minimum building manager instead of first maximum bathroom count .",
            "use minimum building phone instead of first maximum bathroom count .",
            "use minimum apartment id instead of first maximum bathroom count .",
            "use minimum apartment type code instead of first maximum bathroom count .",
            "use minimum apartment number instead of first maximum bathroom count .",
            "use minimum bedroom count instead of first maximum bathroom count .",
            "use minimum room count instead of first maximum bathroom count .",
            "use minimum facility code instead of first maximum bathroom count .",
            "use minimum guest id instead of first maximum bathroom count .",
            "use minimum gender code instead of first maximum bathroom count .",
            "use minimum guest first name instead of first maximum bathroom count .",
            "use minimum guest last name instead of first maximum bathroom count .",
            "use minimum date of birth instead of first maximum bathroom count .",
            "use minimum apartment booking id instead of first maximum bathroom count .",
            "use minimum booking status code instead of first maximum bathroom count .",
            "use minimum booking start date instead of first maximum bathroom count .",
            "use minimum booking end date instead of first maximum bathroom count .",
            "use minimum status date instead of first maximum bathroom count .",
            "use minimum available yes or no instead of first maximum bathroom count ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2, you need to delete \"and faculty's year equals 2002\".",
        "negative_examples": [
            "in step 2 , you need to delete \" and discipline enrollments 's location equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's undergraduate equals 2002 \" .",
            "in step 2 , you need to delete \" and campuses 's undergraduate equals 2002 \" .",
            "in step 2 , you need to delete \" and graduate 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and campuses 's id equals 2002 \" .",
            "in step 2 , you need to delete \" and faculty 's graduate equals 2002 \" .",
            "in step 2 , you need to delete \" and location 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and enrollments 's discipline equals 2002 \" .",
            "in step 2 , you need to delete \" and csu fees 's fte ay equals 2002 \" .",
            "in step 2 , you need to delete \" and enrollments 's undergraduate equals 2002 \" .",
            "in step 2 , you need to delete \" and csu fees 's id equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's fte ay equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's fte ay equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and campus fee 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and faculty 's campus fee equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's county equals 2002 \" .",
            "in step 2 , you need to delete \" and campuses 's campus equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's undergraduate equals 2002 \" .",
            "in step 2 , you need to delete \" and enrollments 's campus equals 2002 \" .",
            "in step 2 , you need to delete \" and undergraduate 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and faculty 's campus equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's totalenrollment ay equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's graduate equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's discipline equals 2002 \" .",
            "in step 2 , you need to delete \" and enrollments 's id equals 2002 \" .",
            "in step 2 , you need to delete \" and csu fees 's degrees equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's degrees equals 2002 \" .",
            "in step 2 , you need to delete \" and enrollments 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and enrollments 's totalenrollment ay equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's discipline equals 2002 \" .",
            "in step 2 , you need to delete \" and campuses 's campus fee equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's graduate equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's campus equals 2002 \" .",
            "in step 2 , you need to delete \" and csu fees 's totalenrollment ay equals 2002 \" .",
            "in step 2 , you need to delete \" and totalenrollment ay 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and enrollments 's county equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's campus fee equals 2002 \" .",
            "in step 2 , you need to delete \" and faculty 's totalenrollment ay equals 2002 \" .",
            "in step 2 , you need to delete \" and faculty 's id equals 2002 \" .",
            "in step 2 , you need to delete \" and csu fees 's undergraduate equals 2002 \" .",
            "in step 2 , you need to delete \" and faculty 's degrees equals 2002 \" .",
            "in step 2 , you need to delete \" and discipline enrollments 's campus equals 2002 \" .",
            "in step 2 , you need to delete \" and campuses 's year equals 2002 \" .",
            "in step 2 , you need to delete \" and campuses 's totalenrollment ay equals 2002 \" .",
            "in step 2 , you need to delete \" and csu fees 's campus equals 2002 \" .",
            "in step 2 , you need to delete \" and csu fees 's location equals 2002 \" .",
            "in step 2 , you need to delete \" and faculty 's discipline equals 2002 \" .",
            "in step 2 , you need to delete \" and degrees 's county equals 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , use movie table in place of reviewer table in step 2 , find for each value of rating 's reviewer id . find title , rating 's reviewer id , and minimum rating stars in place of name . you should not find the smallest of the results . show me all the results .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                25
            ],
            [
                26,
                37
            ],
            [
                43,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                38,
                42
            ]
        ],
        "positive_example": "Also correspond movie table in step 1 , Exchange name with title in step 2.",
        "negative_examples": [
            "also correspond reviewer table in step 1 , exchange name with title in step 2 .",
            "also correspond rating table in step 1 , exchange name with title in step 2 .",
            "also correspond movie table in step 1 , exchange name with movie id in step 2 .",
            "also correspond movie table in step 1 , exchange name with year in step 2 .",
            "also correspond movie table in step 1 , exchange name with director in step 2 .",
            "also correspond movie table in step 1 , exchange name with reviewer id in step 2 .",
            "also correspond movie table in step 1 , exchange name with rating stars in step 2 .",
            "also correspond movie table in step 1 , exchange name with rating date in step 2 .",
            "also correspond movie table in step 1 , exchange movie id with title in step 2 .",
            "also correspond movie table in step 1 , exchange year with title in step 2 .",
            "also correspond movie table in step 1 , exchange director with title in step 2 .",
            "also correspond movie table in step 1 , exchange reviewer id with title in step 2 .",
            "also correspond movie table in step 1 , exchange rating stars with title in step 2 .",
            "also correspond movie table in step 1 , exchange rating date with title in step 2 .",
            "also correspond reviewer table in step 1 , exchange name with movie id in step 2 .",
            "also correspond reviewer table in step 1 , exchange name with year in step 2 .",
            "also correspond reviewer table in step 1 , exchange name with director in step 2 .",
            "also correspond reviewer table in step 1 , exchange name with reviewer id in step 2 .",
            "also correspond reviewer table in step 1 , exchange name with rating stars in step 2 .",
            "also correspond reviewer table in step 1 , exchange name with rating date in step 2 .",
            "also correspond reviewer table in step 1 , exchange movie id with title in step 2 .",
            "also correspond reviewer table in step 1 , exchange year with title in step 2 .",
            "also correspond reviewer table in step 1 , exchange director with title in step 2 .",
            "also correspond reviewer table in step 1 , exchange reviewer id with title in step 2 .",
            "also correspond reviewer table in step 1 , exchange rating stars with title in step 2 .",
            "also correspond reviewer table in step 1 , exchange rating date with title in step 2 .",
            "also correspond rating table in step 1 , exchange name with movie id in step 2 .",
            "also correspond rating table in step 1 , exchange name with year in step 2 .",
            "also correspond rating table in step 1 , exchange name with director in step 2 .",
            "also correspond rating table in step 1 , exchange name with reviewer id in step 2 .",
            "also correspond rating table in step 1 , exchange name with rating stars in step 2 .",
            "also correspond rating table in step 1 , exchange name with rating date in step 2 .",
            "also correspond rating table in step 1 , exchange movie id with title in step 2 .",
            "also correspond rating table in step 1 , exchange year with title in step 2 .",
            "also correspond rating table in step 1 , exchange director with title in step 2 .",
            "also correspond rating table in step 1 , exchange reviewer id with title in step 2 .",
            "also correspond rating table in step 1 , exchange rating stars with title in step 2 .",
            "also correspond rating table in step 1 , exchange rating date with title in step 2 ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , additionally use the information from the order items table besides the products table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "You have to use order item id of order items table in place of product name of products table.",
        "negative_examples": [
            "you have to use order item id of customers table in place of product name of products table .",
            "you have to use order item id of orders table in place of product name of products table .",
            "you have to use order item id of invoices table in place of product name of products table .",
            "you have to use order item id of accounts table in place of product name of products table .",
            "you have to use order item id of product categories table in place of product name of products table .",
            "you have to use order item id of products table in place of product name of products table .",
            "you have to use order item id of financial transactions table in place of product name of products table .",
            "you have to use order item id of invoice line items table in place of product name of products table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , consider the hardware model name equals LG-P760 conditions in place of the model name equals LG-P760 conditions . find wifi in place of graphics mode .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                22,
                23
            ]
        ],
        "secondary_span": [
            [
                12,
                21
            ],
            [
                24,
                29
            ]
        ],
        "positive_example": "find wifi instead of graphics mode , and replace model name with hardware model name .",
        "negative_examples": [
            "find wifi instead of graphics mode , and replace model name with hardware colours .",
            "find rom mib instead of graphics mode , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace type with hardware model name .",
            "find pixels instead of graphics mode , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with type .",
            "find wifi instead of graphics mode , and replace accreditation level with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with company name .",
            "find wifi instead of graphics mode , and replace map with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with pixels .",
            "find wifi instead of graphics mode , and replace model name with accreditation type .",
            "find char cells instead of graphics mode , and replace model name with hardware model name .",
            "find map instead of graphics mode , and replace model name with hardware model name .",
            "find wifi instead of map , and replace model name with hardware model name .",
            "find ram mib instead of graphics mode , and replace model name with hardware model name .",
            "find bluetooth instead of graphics mode , and replace model name with hardware model name .",
            "find wifi instead of ram mib , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace accreditation type with hardware model name .",
            "find wifi instead of graphics mode , and replace ram mib with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with used kb .",
            "find wifi instead of date , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace slots with hardware model name .",
            "find date instead of graphics mode , and replace model name with hardware model name .",
            "find accreditation level instead of graphics mode , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with slots .",
            "find wifi instead of graphics mode , and replace date with hardware model name .",
            "find accreditation type instead of graphics mode , and replace model name with hardware model name .",
            "find wifi instead of accreditation level , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace rom mib with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with char cells .",
            "find wifi instead of graphics mode , and replace model name with ram mib .",
            "find wifi instead of rom mib , and replace model name with hardware model name .",
            "find chip model instead of graphics mode , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with accreditation level .",
            "find wifi instead of type , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace pixels with hardware model name .",
            "find wifi instead of graphics mode , and replace chip model with hardware model name .",
            "find wifi instead of screen mode , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with map .",
            "find wifi instead of graphics mode , and replace model name with screen mode .",
            "find wifi instead of slots , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace launch year with hardware model name .",
            "find wifi instead of launch year , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with bluetooth .",
            "find wifi instead of char cells , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace screen mode with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with launch year .",
            "find wifi instead of used kb , and replace model name with hardware model name .",
            "find wifi instead of chip model , and replace model name with hardware model name .",
            "find wifi instead of graphics mode , and replace model name with chip model .",
            "find used kb instead of graphics mode , and replace model name with hardware model name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of products table . find number of different order id in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                22
            ]
        ],
        "positive_example": "Replace product id with different order id of order items , find number of the corresponding rows of each product id .",
        "negative_examples": [
            "replace product id with different town city of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different customer last name of customers , find number of the corresponding rows of each product id .",
            "replace product id with different invoice date of invoices , find number of the corresponding rows of each product id .",
            "replace product id with different order item id of invoice line items , find number of the corresponding rows of each product id .",
            "replace product id with different account name of products , find number of the corresponding rows of each product id .",
            "replace product id with different derived total cost of order items , find number of the corresponding rows of each product id .",
            "replace product id with different product color of customers , find number of the corresponding rows of each product id .",
            "replace product id with different transaction id of invoice line items , find number of the corresponding rows of each product id .",
            "replace product id with different product color of accounts , find number of the corresponding rows of each product id .",
            "replace product id with different product id of orders , find number of the corresponding rows of each product id .",
            "replace product id with different product size of products , find number of the corresponding rows of each product id .",
            "replace product id with different login password of invoice line items , find number of the corresponding rows of each product id .",
            "replace product id with different state county province of accounts , find number of the corresponding rows of each product id .",
            "replace product id with different customer middle initial of product categories , find number of the corresponding rows of each product id .",
            "replace product id with different product size of invoice line items , find number of the corresponding rows of each product id .",
            "replace product id with different invoice date of product categories , find number of the corresponding rows of each product id .",
            "replace product id with different other order item details of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different transaction type of order items , find number of the corresponding rows of each product id .",
            "replace product id with different login name of products , find number of the corresponding rows of each product id .",
            "replace product id with different transaction id of customers , find number of the corresponding rows of each product id .",
            "replace product id with different customer last name of accounts , find number of the corresponding rows of each product id .",
            "replace product id with different parent product id of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different gender of products , find number of the corresponding rows of each product id .",
            "replace product id with different transaction type of product categories , find number of the corresponding rows of each product id .",
            "replace product id with different phone number of products , find number of the corresponding rows of each product id .",
            "replace product id with different transaction date of products , find number of the corresponding rows of each product id .",
            "replace product id with different date account opened of customers , find number of the corresponding rows of each product id .",
            "replace product id with different transaction amount of product categories , find number of the corresponding rows of each product id .",
            "replace product id with different other account details of orders , find number of the corresponding rows of each product id .",
            "replace product id with different country of order items , find number of the corresponding rows of each product id .",
            "replace product id with different transaction type of invoice line items , find number of the corresponding rows of each product id .",
            "replace product id with different order id of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different state county province of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different account id of invoice line items , find number of the corresponding rows of each product id .",
            "replace product id with different customer first name of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different state county province of customers , find number of the corresponding rows of each product id .",
            "replace product id with different derived total cost of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different other order item details of customers , find number of the corresponding rows of each product id .",
            "replace product id with different login name of order items , find number of the corresponding rows of each product id .",
            "replace product id with different product color of products , find number of the corresponding rows of each product id .",
            "replace product id with different account name of orders , find number of the corresponding rows of each product id .",
            "replace product id with different email address of customers , find number of the corresponding rows of each product id .",
            "replace product id with different town city of accounts , find number of the corresponding rows of each product id .",
            "replace product id with different production type code of product categories , find number of the corresponding rows of each product id .",
            "replace product id with different product id of financial transactions , find number of the corresponding rows of each product id .",
            "replace product id with different product price of invoice line items , find number of the corresponding rows of each product id .",
            "replace product id with different production type code of accounts , find number of the corresponding rows of each product id .",
            "replace product id with different customer id of products , find number of the corresponding rows of each product id .",
            "replace product id with different derived total cost of orders , find number of the corresponding rows of each product id .",
            "replace product id with different date order placed of financial transactions , find number of the corresponding rows of each product id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "use chip model table in place of phone table . consider the wifi equals No conditions in place of the screen mode equals No conditions .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                25
            ]
        ],
        "positive_example": "Replace phone with chip model , replace screen mode with wifi .",
        "negative_examples": [
            "replace phone with chip model , replace rom mib with wifi .",
            "replace phone with hardware colours , replace screen mode with wifi .",
            "replace phone with chip model , replace screen mode with hardware model name .",
            "replace phone with chip model , replace bluetooth with wifi .",
            "replace phone with model name , replace screen mode with wifi .",
            "replace phone with chip model , replace model name with wifi .",
            "replace phone with chip model , replace launch year with wifi .",
            "replace phone with chip model , replace char cells with wifi .",
            "replace phone with graphics mode , replace screen mode with wifi .",
            "replace phone with chip model , replace screen mode with char cells .",
            "replace phone with date , replace screen mode with wifi .",
            "replace phone with chip model , replace screen mode with bluetooth .",
            "replace phone with chip model , replace screen mode with hardware colours .",
            "replace phone with chip model , replace pixels with wifi .",
            "replace phone with chip model , replace used kb with wifi .",
            "replace phone with chip model , replace date with wifi .",
            "replace phone with launch year , replace screen mode with wifi .",
            "replace phone with bluetooth , replace screen mode with wifi .",
            "replace phone with chip model , replace screen mode with launch year .",
            "replace phone with chip model , replace graphics mode with wifi .",
            "replace phone with chip model , replace screen mode with accreditation level .",
            "replace phone with chip model , replace screen mode with graphics mode .",
            "replace phone with chip model , replace map with wifi .",
            "replace phone with chip model , replace hardware model name with wifi .",
            "replace phone with map , replace screen mode with wifi .",
            "replace phone with chip model , replace screen mode with rom mib .",
            "replace phone with accreditation level , replace screen mode with wifi .",
            "replace phone with chip model , replace accreditation level with wifi .",
            "replace phone with chip model , replace screen mode with company name .",
            "replace phone with company name , replace screen mode with wifi .",
            "replace phone with pixels , replace screen mode with wifi .",
            "replace phone with rom mib , replace screen mode with wifi .",
            "replace phone with chip model , replace screen mode with slots .",
            "replace phone with chip model , replace screen mode with date .",
            "replace phone with chip model , replace ram mib with wifi .",
            "replace phone with chip model , replace screen mode with used kb .",
            "replace phone with chip model , replace screen mode with pixels .",
            "replace phone with chip model , replace type with wifi .",
            "replace phone with char cells , replace screen mode with wifi .",
            "replace phone with chip model , replace hardware colours with wifi .",
            "replace phone with chip model , replace screen mode with ram mib .",
            "replace phone with chip model , replace screen mode with model name .",
            "replace phone with used kb , replace screen mode with wifi .",
            "replace phone with chip model , replace screen mode with map .",
            "replace phone with hardware model name , replace screen mode with wifi .",
            "replace phone with chip model , replace company name with wifi .",
            "replace phone with chip model , replace screen mode with type .",
            "replace phone with accreditation type , replace screen mode with wifi .",
            "replace phone with chip model , replace accreditation type with wifi .",
            "replace phone with chip model , replace screen mode with accreditation type ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                4,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                20
            ]
        ],
        "positive_example": "In step 1, I want store table.",
        "negative_examples": [
            "in step 1 , i want product table .",
            "in step 1 , i want district table .",
            "in step 1 , i want store product table .",
            "in step 1 , i want store district table .",
            "in step 1 , i want product id table .",
            "in step 1 , i want dimensions table .",
            "in step 1 , i want dpi table .",
            "in step 1 , i want pages per minute color table .",
            "in step 1 , i want max page size table .",
            "in step 1 , i want interface table .",
            "in step 1 , i want store id table .",
            "in step 1 , i want store name table .",
            "in step 1 , i want type table .",
            "in step 1 , i want area size table .",
            "in step 1 , i want number of product category table .",
            "in step 1 , i want ranking table .",
            "in step 1 , i want district id table .",
            "in step 1 , i want district name table .",
            "in step 1 , i want headquartered city table .",
            "in step 1 , i want city population table .",
            "in step 1 , i want city area table ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of products table . find number of different order id in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                22
            ]
        ],
        "positive_example": "In order items, you need to provide number of each different order id.",
        "negative_examples": [
            "in accounts , you need to provide number of each different transaction id .",
            "in invoices , you need to provide number of each different customer middle initial .",
            "in invoice line items , you need to provide number of each different date account opened .",
            "in product categories , you need to provide number of each different product title .",
            "in accounts , you need to provide number of each different customer middle initial .",
            "in financial transactions , you need to provide number of each different derived vat payable .",
            "in product categories , you need to provide number of each different parent product id .",
            "in financial transactions , you need to provide number of each different transaction type .",
            "in accounts , you need to provide number of each different other order item details .",
            "in orders , you need to provide number of each different unit price .",
            "in products , you need to provide number of each different transaction type .",
            "in financial transactions , you need to provide number of each different country .",
            "in order items , you need to provide number of each different customer first name .",
            "in invoice line items , you need to provide number of each different phone number .",
            "in invoice line items , you need to provide number of each different other transaction details .",
            "in products , you need to provide number of each different vat rating .",
            "in order items , you need to provide number of each different parent product id .",
            "in invoice line items , you need to provide number of each different product id .",
            "in products , you need to provide number of each different order id .",
            "in products , you need to provide number of each different gender .",
            "in financial transactions , you need to provide number of each different date account opened .",
            "in invoices , you need to provide number of each different transaction date .",
            "in invoice line items , you need to provide number of each different town city .",
            "in products , you need to provide number of each different product color .",
            "in financial transactions , you need to provide number of each different phone number .",
            "in order items , you need to provide number of each different account name .",
            "in product categories , you need to provide number of each different town city .",
            "in invoices , you need to provide number of each different production type code .",
            "in invoice line items , you need to provide number of each different product title .",
            "in invoice line items , you need to provide number of each different product quantity .",
            "in invoice line items , you need to provide number of each different country .",
            "in order items , you need to provide number of each different town city .",
            "in order items , you need to provide number of each different product name .",
            "in products , you need to provide number of each different login password .",
            "in invoices , you need to provide number of each different gender .",
            "in customers , you need to provide number of each different derived total cost .",
            "in invoices , you need to provide number of each different country .",
            "in products , you need to provide number of each different customer middle initial .",
            "in invoice line items , you need to provide number of each different customer middle initial .",
            "in customers , you need to provide number of each different transaction date .",
            "in invoice line items , you need to provide number of each different order id .",
            "in customers , you need to provide number of each different derived vat payable .",
            "in orders , you need to provide number of each different derived product cost .",
            "in order items , you need to provide number of each different product id .",
            "in customers , you need to provide number of each different town city .",
            "in product categories , you need to provide number of each different phone number .",
            "in invoices , you need to provide number of each different order details .",
            "in invoice line items , you need to provide number of each different derived vat payable .",
            "in orders , you need to provide number of each different login password .",
            "in financial transactions , you need to provide number of each different order details ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the chip model table besides the phone table . find average rom mib in place of average screen mode .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                17
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                18,
                24
            ]
        ],
        "positive_example": "You have to use rom mib of chip model table in place of screen mode of phone table.",
        "negative_examples": [
            "you have to use used kb of chip model table in place of phone of phone table .",
            "you have to use wifi of phone table in place of screen mode of phone table .",
            "you have to use rom mib of phone table in place of hardware model name of phone table .",
            "you have to use ram mib of chip model table in place of phone of phone table .",
            "you have to use rom mib of phone table in place of bluetooth of phone table .",
            "you have to use rom mib of model name table in place of phone of phone table .",
            "you have to use rom mib of chip model table in place of bluetooth of phone table .",
            "you have to use rom mib of accreditation level table in place of screen mode of phone table .",
            "you have to use rom mib of phone table in place of used kb of phone table .",
            "you have to use map of chip model table in place of phone of phone table .",
            "you have to use graphics mode of phone table in place of screen mode of phone table .",
            "you have to use pixels of phone table in place of screen mode of phone table .",
            "you have to use rom mib of phone table in place of company name of phone table .",
            "you have to use rom mib of phone table in place of hardware colours of phone table .",
            "you have to use map of phone table in place of screen mode of phone table .",
            "you have to use rom mib of phone table in place of ram mib of phone table .",
            "you have to use wifi of chip model table in place of phone of phone table .",
            "you have to use rom mib of company name table in place of phone of phone table .",
            "you have to use rom mib of phone table in place of wifi of phone table .",
            "you have to use rom mib of phone table in place of char cells of phone table .",
            "you have to use rom mib of map table in place of screen mode of phone table .",
            "you have to use rom mib of company name table in place of screen mode of phone table .",
            "you have to use rom mib of used kb table in place of phone of phone table .",
            "you have to use rom mib of chip model table in place of type of phone table .",
            "you have to use hardware colours of chip model table in place of screen mode of phone table .",
            "you have to use accreditation level of chip model table in place of phone of phone table .",
            "you have to use rom mib of type table in place of phone of phone table .",
            "you have to use launch year of chip model table in place of screen mode of phone table .",
            "you have to use rom mib of chip model table in place of company name of phone table .",
            "you have to use rom mib of phone table in place of type of phone table .",
            "you have to use rom mib of chip model table in place of map of phone table .",
            "you have to use rom mib of chip model table in place of used kb of phone table .",
            "you have to use accreditation type of chip model table in place of phone of phone table .",
            "you have to use rom mib of chip model table in place of wifi of phone table .",
            "you have to use rom mib of phone table in place of accreditation type of phone table .",
            "you have to use accreditation level of chip model table in place of screen mode of phone table .",
            "you have to use company name of chip model table in place of phone of phone table .",
            "you have to use model name of phone table in place of screen mode of phone table .",
            "you have to use rom mib of hardware colours table in place of phone of phone table .",
            "you have to use hardware model name of phone table in place of screen mode of phone table .",
            "you have to use rom mib of chip model table in place of hardware colours of phone table .",
            "you have to use rom mib of launch year table in place of screen mode of phone table .",
            "you have to use rom mib of hardware model name table in place of screen mode of phone table .",
            "you have to use rom mib of wifi table in place of phone of phone table .",
            "you have to use rom mib of hardware model name table in place of phone of phone table .",
            "you have to use rom mib of chip model table in place of model name of phone table .",
            "you have to use rom mib of chip model table in place of launch year of phone table .",
            "you have to use rom mib of slots table in place of phone of phone table .",
            "you have to use rom mib of chip model table in place of graphics mode of phone table .",
            "you have to use rom mib of bluetooth table in place of phone of phone table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building full name equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                32,
                36
            ]
        ],
        "secondary_span": [
            [
                13,
                31
            ],
            [
                37,
                44
            ]
        ],
        "positive_example": "Find the summation of bedroom count whose building short name equals Columbus Square in step 2.",
        "negative_examples": [
            "find the summation of bedroom count whose building id equals columbus square in step 2 .",
            "find the summation of bedroom count whose building full name equals columbus square in step 2 .",
            "find the summation of bedroom count whose building description equals columbus square in step 2 .",
            "find the summation of bedroom count whose building address equals columbus square in step 2 .",
            "find the summation of bedroom count whose building manager equals columbus square in step 2 .",
            "find the summation of bedroom count whose building phone equals columbus square in step 2 .",
            "find the summation of bedroom count whose apartment id equals columbus square in step 2 .",
            "find the summation of bedroom count whose apartment type code equals columbus square in step 2 .",
            "find the summation of bedroom count whose apartment number equals columbus square in step 2 .",
            "find the summation of bedroom count whose bathroom count equals columbus square in step 2 .",
            "find the summation of bedroom count whose bedroom count equals columbus square in step 2 .",
            "find the summation of bedroom count whose room count equals columbus square in step 2 .",
            "find the summation of bedroom count whose facility code equals columbus square in step 2 .",
            "find the summation of bedroom count whose guest id equals columbus square in step 2 .",
            "find the summation of bedroom count whose gender code equals columbus square in step 2 .",
            "find the summation of bedroom count whose guest first name equals columbus square in step 2 .",
            "find the summation of bedroom count whose guest last name equals columbus square in step 2 .",
            "find the summation of bedroom count whose date of birth equals columbus square in step 2 .",
            "find the summation of bedroom count whose apartment booking id equals columbus square in step 2 .",
            "find the summation of bedroom count whose booking status code equals columbus square in step 2 .",
            "find the summation of bedroom count whose booking start date equals columbus square in step 2 .",
            "find the summation of bedroom count whose booking end date equals columbus square in step 2 .",
            "find the summation of bedroom count whose status date equals columbus square in step 2 .",
            "find the summation of bedroom count whose available yes or no equals columbus square in step 2 ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table in place of faculty table . consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year greater than or equals 1939 and faculty 's year less than or equals 1935 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                28
            ],
            [
                52,
                55
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                29,
                51
            ],
            [
                56,
                62
            ]
        ],
        "positive_example": "Change faculty table with campuses table .",
        "negative_examples": [
            "change campuses table with campuses table .",
            "change csu fees table with campuses table .",
            "change degrees table with campuses table .",
            "change discipline enrollments table with campuses table .",
            "change enrollments table with campuses table .",
            "change id table with campuses table .",
            "change location table with campuses table .",
            "change county table with campuses table .",
            "change year table with campuses table .",
            "change campus fee table with campuses table .",
            "change discipline table with campuses table .",
            "change undergraduate table with campuses table .",
            "change graduate table with campuses table .",
            "change totalenrollment ay table with campuses table .",
            "change fte ay table with campuses table .",
            "change faculty table with id table .",
            "change faculty table with location table .",
            "change faculty table with county table .",
            "change faculty table with year table .",
            "change faculty table with campus fee table .",
            "change faculty table with degrees table .",
            "change faculty table with discipline table .",
            "change faculty table with undergraduate table .",
            "change faculty table with graduate table .",
            "change faculty table with totalenrollment ay table .",
            "change faculty table with fte ay table ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table . in step 2 , find for each value of rating 's reviewer id . find rating 's reviewer id , rating stars , and minimum rating stars in place of name . you should not find the smallest of the results . show me all the results .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ],
            [
                25,
                37
            ],
            [
                43,
                58
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                38,
                42
            ]
        ],
        "positive_example": "Confirm that need to find starts for each reviewer id not name .",
        "negative_examples": [
            "confirm that need to find starts for each movie id not name .",
            "confirm that need to find starts for each title not name .",
            "confirm that need to find starts for each year not name .",
            "confirm that need to find starts for each director not name .",
            "confirm that need to find starts for each rating stars not name .",
            "confirm that need to find starts for each rating date not name .",
            "confirm that need to find starts for each reviewer id not movie id .",
            "confirm that need to find starts for each reviewer id not title .",
            "confirm that need to find starts for each reviewer id not year .",
            "confirm that need to find starts for each reviewer id not director .",
            "confirm that need to find starts for each reviewer id not rating stars .",
            "confirm that need to find starts for each reviewer id not rating date ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                25,
                29
            ]
        ],
        "secondary_span": [
            [
                13,
                24
            ],
            [
                30,
                37
            ]
        ],
        "positive_example": "In step 2, use room count instead of bathroom count.",
        "negative_examples": [
            "in step 2 , use room count instead of building id .",
            "in step 2 , use room count instead of building short name .",
            "in step 2 , use room count instead of building full name .",
            "in step 2 , use room count instead of building description .",
            "in step 2 , use room count instead of building address .",
            "in step 2 , use room count instead of building manager .",
            "in step 2 , use room count instead of building phone .",
            "in step 2 , use room count instead of apartment id .",
            "in step 2 , use room count instead of apartment type code .",
            "in step 2 , use room count instead of apartment number .",
            "in step 2 , use room count instead of bedroom count .",
            "in step 2 , use room count instead of facility code .",
            "in step 2 , use room count instead of guest id .",
            "in step 2 , use room count instead of gender code .",
            "in step 2 , use room count instead of guest first name .",
            "in step 2 , use room count instead of guest last name .",
            "in step 2 , use room count instead of date of birth .",
            "in step 2 , use room count instead of apartment booking id .",
            "in step 2 , use room count instead of booking status code .",
            "in step 2 , use room count instead of booking start date .",
            "in step 2 , use room count instead of booking end date .",
            "in step 2 , use room count instead of status date .",
            "in step 2 , use room count instead of available yes or no .",
            "in step 2 , use building id instead of bathroom count .",
            "in step 2 , use building short name instead of bathroom count .",
            "in step 2 , use building full name instead of bathroom count .",
            "in step 2 , use building description instead of bathroom count .",
            "in step 2 , use building address instead of bathroom count .",
            "in step 2 , use building manager instead of bathroom count .",
            "in step 2 , use building phone instead of bathroom count .",
            "in step 2 , use apartment id instead of bathroom count .",
            "in step 2 , use apartment type code instead of bathroom count .",
            "in step 2 , use apartment number instead of bathroom count .",
            "in step 2 , use bedroom count instead of bathroom count .",
            "in step 2 , use facility code instead of bathroom count .",
            "in step 2 , use guest id instead of bathroom count .",
            "in step 2 , use gender code instead of bathroom count .",
            "in step 2 , use guest first name instead of bathroom count .",
            "in step 2 , use guest last name instead of bathroom count .",
            "in step 2 , use date of birth instead of bathroom count .",
            "in step 2 , use apartment booking id instead of bathroom count .",
            "in step 2 , use booking status code instead of bathroom count .",
            "in step 2 , use booking start date instead of bathroom count .",
            "in step 2 , use booking end date instead of bathroom count .",
            "in step 2 , use status date instead of bathroom count .",
            "in step 2 , use available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of products table . find number of different order id in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                22
            ]
        ],
        "positive_example": "find number of the corresponding rows to each distinct value of order id in order items .",
        "negative_examples": [
            "find number of the corresponding rows to each distinct value of country in customers .",
            "find number of the corresponding rows to each distinct value of customer id in order items .",
            "find number of the corresponding rows to each distinct value of product size in invoice line items .",
            "find number of the corresponding rows to each distinct value of account name in accounts .",
            "find number of the corresponding rows to each distinct value of customer id in invoices .",
            "find number of the corresponding rows to each distinct value of product name in product categories .",
            "find number of the corresponding rows to each distinct value of invoice date in orders .",
            "find number of the corresponding rows to each distinct value of derived vat payable in accounts .",
            "find number of the corresponding rows to each distinct value of product id in order items .",
            "find number of the corresponding rows to each distinct value of derived vat payable in order items .",
            "find number of the corresponding rows to each distinct value of invoice number in accounts .",
            "find number of the corresponding rows to each distinct value of unit price in order items .",
            "find number of the corresponding rows to each distinct value of phone number in invoices .",
            "find number of the corresponding rows to each distinct value of customer first name in orders .",
            "find number of the corresponding rows to each distinct value of product color in orders .",
            "find number of the corresponding rows to each distinct value of customer middle initial in customers .",
            "find number of the corresponding rows to each distinct value of transaction id in products .",
            "find number of the corresponding rows to each distinct value of product quantity in invoice line items .",
            "find number of the corresponding rows to each distinct value of derived vat payable in financial transactions .",
            "find number of the corresponding rows to each distinct value of login password in orders .",
            "find number of the corresponding rows to each distinct value of product type description in order items .",
            "find number of the corresponding rows to each distinct value of product color in financial transactions .",
            "find number of the corresponding rows to each distinct value of account id in accounts .",
            "find number of the corresponding rows to each distinct value of login password in accounts .",
            "find number of the corresponding rows to each distinct value of vat rating in financial transactions .",
            "find number of the corresponding rows to each distinct value of derived product cost in financial transactions .",
            "find number of the corresponding rows to each distinct value of order item id in order items .",
            "find number of the corresponding rows to each distinct value of other account details in product categories .",
            "find number of the corresponding rows to each distinct value of vat rating in accounts .",
            "find number of the corresponding rows to each distinct value of transaction date in invoices .",
            "find number of the corresponding rows to each distinct value of order id in product categories .",
            "find number of the corresponding rows to each distinct value of phone number in invoice line items .",
            "find number of the corresponding rows to each distinct value of other transaction details in product categories .",
            "find number of the corresponding rows to each distinct value of product type description in invoice line items .",
            "find number of the corresponding rows to each distinct value of account name in products .",
            "find number of the corresponding rows to each distinct value of email address in invoices .",
            "find number of the corresponding rows to each distinct value of order details in products .",
            "find number of the corresponding rows to each distinct value of product price in invoice line items .",
            "find number of the corresponding rows to each distinct value of other account details in accounts .",
            "find number of the corresponding rows to each distinct value of transaction id in orders .",
            "find number of the corresponding rows to each distinct value of state county province in invoice line items .",
            "find number of the corresponding rows to each distinct value of date account opened in invoice line items .",
            "find number of the corresponding rows to each distinct value of transaction type in accounts .",
            "find number of the corresponding rows to each distinct value of product price in accounts .",
            "find number of the corresponding rows to each distinct value of order details in invoices .",
            "find number of the corresponding rows to each distinct value of product color in invoices .",
            "find number of the corresponding rows to each distinct value of derived vat payable in invoice line items .",
            "find number of the corresponding rows to each distinct value of customer first name in products .",
            "find number of the corresponding rows to each distinct value of date order placed in accounts .",
            "find number of the corresponding rows to each distinct value of date order placed in customers ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the faculty table . consider the campuses 's campus equals San Francisco State University and faculty 's year equals 2004 conditions in place of the faculty 's year equals San Francisco State University and faculty 's campus equals 2004 conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                29
            ],
            [
                50,
                51
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                30,
                49
            ],
            [
                52,
                58
            ]
        ],
        "positive_example": "Make sure that the faculty of campus is equivalent to San Francisco State University and year is 2004.",
        "negative_examples": [
            "make sure that the discipline enrollments of campus is equivalent to san francisco state university and totalenrollment ay is 2004 .",
            "make sure that the campuses of fte ay is equivalent to san francisco state university and year is 2004 .",
            "make sure that the discipline of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the discipline enrollments of county is equivalent to san francisco state university and year is 2004 .",
            "make sure that the faculty of campus is equivalent to san francisco state university and totalenrollment ay is 2004 .",
            "make sure that the csu fees of campus is equivalent to san francisco state university and county is 2004 .",
            "make sure that the degrees of campus is equivalent to san francisco state university and fte ay is 2004 .",
            "make sure that the csu fees of totalenrollment ay is equivalent to san francisco state university and year is 2004 .",
            "make sure that the csu fees of campus is equivalent to san francisco state university and discipline is 2004 .",
            "make sure that the campuses of campus is equivalent to san francisco state university and fte ay is 2004 .",
            "make sure that the graduate of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the campuses of campus is equivalent to san francisco state university and graduate is 2004 .",
            "make sure that the degrees of campus is equivalent to san francisco state university and discipline is 2004 .",
            "make sure that the campuses of campus is equivalent to san francisco state university and undergraduate is 2004 .",
            "make sure that the faculty of campus is equivalent to san francisco state university and discipline is 2004 .",
            "make sure that the county of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the csu fees of graduate is equivalent to san francisco state university and year is 2004 .",
            "make sure that the campuses of campus is equivalent to san francisco state university and county is 2004 .",
            "make sure that the degrees of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the enrollments of graduate is equivalent to san francisco state university and year is 2004 .",
            "make sure that the csu fees of county is equivalent to san francisco state university and year is 2004 .",
            "make sure that the degrees of county is equivalent to san francisco state university and year is 2004 .",
            "make sure that the enrollments of campus is equivalent to san francisco state university and discipline is 2004 .",
            "make sure that the degrees of degrees is equivalent to san francisco state university and year is 2004 .",
            "make sure that the campus fee of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the discipline enrollments of totalenrollment ay is equivalent to san francisco state university and year is 2004 .",
            "make sure that the undergraduate of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the faculty of campus fee is equivalent to san francisco state university and year is 2004 .",
            "make sure that the enrollments of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the csu fees of undergraduate is equivalent to san francisco state university and year is 2004 .",
            "make sure that the campuses of county is equivalent to san francisco state university and year is 2004 .",
            "make sure that the campuses of totalenrollment ay is equivalent to san francisco state university and year is 2004 .",
            "make sure that the csu fees of campus is equivalent to san francisco state university and undergraduate is 2004 .",
            "make sure that the faculty of totalenrollment ay is equivalent to san francisco state university and year is 2004 .",
            "make sure that the degrees of campus is equivalent to san francisco state university and graduate is 2004 .",
            "make sure that the enrollments of campus is equivalent to san francisco state university and fte ay is 2004 .",
            "make sure that the id of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the enrollments of county is equivalent to san francisco state university and year is 2004 .",
            "make sure that the faculty of campus is equivalent to san francisco state university and campus fee is 2004 .",
            "make sure that the campuses of discipline is equivalent to san francisco state university and year is 2004 .",
            "make sure that the enrollments of undergraduate is equivalent to san francisco state university and year is 2004 .",
            "make sure that the degrees of discipline is equivalent to san francisco state university and year is 2004 .",
            "make sure that the csu fees of degrees is equivalent to san francisco state university and year is 2004 .",
            "make sure that the campuses of campus is equivalent to san francisco state university and location is 2004 .",
            "make sure that the discipline enrollments of campus is equivalent to san francisco state university and graduate is 2004 .",
            "make sure that the discipline enrollments of campus is equivalent to san francisco state university and discipline is 2004 .",
            "make sure that the discipline enrollments of fte ay is equivalent to san francisco state university and year is 2004 .",
            "make sure that the discipline enrollments of campus is equivalent to san francisco state university and campus fee is 2004 .",
            "make sure that the discipline enrollments of campus is equivalent to san francisco state university and year is 2004 .",
            "make sure that the location of campus is equivalent to san francisco state university and year is 2004 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , use view unit status table in place of apartment bookings table in step 2 , consider the available yes or no equals 0 conditions in place of the booking status code equals 0 conditions . in step 3 , use view unit status table in place of apartment bookings table and apartment buildings table in step 4 , consider the available yes or no equals 1 conditions in place of the booking status code equals 1 conditions . find apartment number in place of building manager .",
        "primary_span": [
            [
                4,
                8
            ],
            [
                19,
                27
            ],
            [
                43,
                47
            ],
            [
                62,
                70
            ],
            [
                82,
                84
            ]
        ],
        "secondary_span": [
            [
                9,
                14
            ],
            [
                28,
                38
            ],
            [
                48,
                57
            ],
            [
                71,
                81
            ],
            [
                85,
                90
            ]
        ],
        "positive_example": "Replace building manager with apartment number .",
        "negative_examples": [
            "replace building id with apartment number .",
            "replace building short name with apartment number .",
            "replace building full name with apartment number .",
            "replace building description with apartment number .",
            "replace building address with apartment number .",
            "replace building phone with apartment number .",
            "replace apartment id with apartment number .",
            "replace apartment type code with apartment number .",
            "replace apartment number with apartment number .",
            "replace bathroom count with apartment number .",
            "replace bedroom count with apartment number .",
            "replace room count with apartment number .",
            "replace facility code with apartment number .",
            "replace guest id with apartment number .",
            "replace gender code with apartment number .",
            "replace guest first name with apartment number .",
            "replace guest last name with apartment number .",
            "replace date of birth with apartment number .",
            "replace apartment booking id with apartment number .",
            "replace booking status code with apartment number .",
            "replace booking start date with apartment number .",
            "replace booking end date with apartment number .",
            "replace status date with apartment number .",
            "replace available yes or no with apartment number ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table and orders table besides the products table .",
        "primary_span": [
            [
                0,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Make sure to find number of customers of order id in orders table .",
        "negative_examples": [
            "make sure to find number of customers of order id in customers table .",
            "make sure to find number of customers of order id in invoices table .",
            "make sure to find number of customers of order id in accounts table .",
            "make sure to find number of customers of order id in product categories table .",
            "make sure to find number of customers of order id in products table .",
            "make sure to find number of customers of order id in financial transactions table .",
            "make sure to find number of customers of order id in order items table .",
            "make sure to find number of customers of order id in invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the launch year equals 2002 conditions in place of the launch year greater than 2002 conditions . find hardware model name in place of accreditation type .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                23
            ],
            [
                35,
                38
            ]
        ],
        "secondary_span": [
            [
                24,
                34
            ],
            [
                39,
                44
            ]
        ],
        "positive_example": "You should use hardware model name,equals and or in place of accreditation type, greater than and and respectively.",
        "negative_examples": [
            "you should use model name , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use launch year , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use ram mib , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use rom mib , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use slots , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use wifi , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use bluetooth , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use graphics mode , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use char cells , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use pixels , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use hardware colours , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use used kb , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use map , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use type , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use company name , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use accreditation level , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use date , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use chip model , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use screen mode , equals and or in place of accreditation type , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of model name , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of launch year , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of ram mib , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of rom mib , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of slots , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of wifi , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of bluetooth , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of graphics mode , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of char cells , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of pixels , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of hardware colours , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of used kb , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of map , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of type , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of company name , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of accreditation level , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of date , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of chip model , greater than and and respectively .",
            "you should use hardware model name , equals and or in place of screen mode , greater than and and respectively ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "You should only use 1996 as the CSU fees year.",
        "negative_examples": [
            "you should only use 1996 as the csu fees id .",
            "you should only use 1996 as the csu fees campus .",
            "you should only use 1996 as the csu fees location .",
            "you should only use 1996 as the csu fees county .",
            "you should only use 1996 as the csu fees campus fee .",
            "you should only use 1996 as the csu fees degrees .",
            "you should only use 1996 as the csu fees discipline .",
            "you should only use 1996 as the csu fees undergraduate .",
            "you should only use 1996 as the csu fees graduate .",
            "you should only use 1996 as the csu fees totalenrollment ay .",
            "you should only use 1996 as the csu fees fte ay .",
            "you should only use 1996 as the csu fees faculty ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the title equals Avatar conditions in place of the director equals Avatar conditions . find director in place of name .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                23
            ],
            [
                33,
                34
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                24,
                32
            ],
            [
                35,
                39
            ]
        ],
        "positive_example": "Replace name with director , replace director with title .",
        "negative_examples": [
            "replace name with director , replace director with movie id .",
            "replace name with director , replace director with year .",
            "replace name with director , replace director with reviewer id .",
            "replace name with director , replace director with rating stars .",
            "replace name with director , replace director with rating date .",
            "replace name with movie id , replace director with title .",
            "replace name with year , replace director with title .",
            "replace name with reviewer id , replace director with title .",
            "replace name with rating stars , replace director with title .",
            "replace name with rating date , replace director with title .",
            "replace movie id with director , replace director with title .",
            "replace year with director , replace director with title .",
            "replace reviewer id with director , replace director with title .",
            "replace rating stars with director , replace director with title .",
            "replace rating date with director , replace director with title ."
        ],
        "neg_len": 15
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Remove faculty equals 357. 1 and ensure that campuses equals CSU .",
        "negative_examples": [
            "remove campuses equals 357 . 1 and ensure that campuses equals csu .",
            "remove csu fees equals 357 . 1 and ensure that campuses equals csu .",
            "remove degrees equals 357 . 1 and ensure that campuses equals csu .",
            "remove discipline enrollments equals 357 . 1 and ensure that campuses equals csu .",
            "remove enrollments equals 357 . 1 and ensure that campuses equals csu .",
            "remove id equals 357 . 1 and ensure that campuses equals csu .",
            "remove campus equals 357 . 1 and ensure that campuses equals csu .",
            "remove location equals 357 . 1 and ensure that campuses equals csu .",
            "remove county equals 357 . 1 and ensure that campuses equals csu .",
            "remove year equals 357 . 1 and ensure that campuses equals csu .",
            "remove campus fee equals 357 . 1 and ensure that campuses equals csu .",
            "remove discipline equals 357 . 1 and ensure that campuses equals csu .",
            "remove undergraduate equals 357 . 1 and ensure that campuses equals csu .",
            "remove graduate equals 357 . 1 and ensure that campuses equals csu .",
            "remove totalenrollment ay equals 357 . 1 and ensure that campuses equals csu .",
            "remove fte ay equals 357 . 1 and ensure that campuses equals csu ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number equals Columbus Square conditions . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ],
            [
                34,
                38
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ],
            [
                39,
                45
            ]
        ],
        "positive_example": "Count total bedroom of apartment table and use building short name in place of apartment number.",
        "negative_examples": [
            "count total bedroom of apartment table and use building id in place of apartment number .",
            "count total bedroom of apartment table and use building full name in place of apartment number .",
            "count total bedroom of apartment table and use building description in place of apartment number .",
            "count total bedroom of apartment table and use building address in place of apartment number .",
            "count total bedroom of apartment table and use building manager in place of apartment number .",
            "count total bedroom of apartment table and use building phone in place of apartment number .",
            "count total bedroom of apartment table and use apartment id in place of apartment number .",
            "count total bedroom of apartment table and use apartment type code in place of apartment number .",
            "count total bedroom of apartment table and use bathroom count in place of apartment number .",
            "count total bedroom of apartment table and use bedroom count in place of apartment number .",
            "count total bedroom of apartment table and use room count in place of apartment number .",
            "count total bedroom of apartment table and use facility code in place of apartment number .",
            "count total bedroom of apartment table and use guest id in place of apartment number .",
            "count total bedroom of apartment table and use gender code in place of apartment number .",
            "count total bedroom of apartment table and use guest first name in place of apartment number .",
            "count total bedroom of apartment table and use guest last name in place of apartment number .",
            "count total bedroom of apartment table and use date of birth in place of apartment number .",
            "count total bedroom of apartment table and use apartment booking id in place of apartment number .",
            "count total bedroom of apartment table and use booking status code in place of apartment number .",
            "count total bedroom of apartment table and use booking start date in place of apartment number .",
            "count total bedroom of apartment table and use booking end date in place of apartment number .",
            "count total bedroom of apartment table and use status date in place of apartment number .",
            "count total bedroom of apartment table and use available yes or no in place of apartment number .",
            "count total bedroom of apartment table and use building short name in place of building id .",
            "count total bedroom of apartment table and use building short name in place of building full name .",
            "count total bedroom of apartment table and use building short name in place of building description .",
            "count total bedroom of apartment table and use building short name in place of building address .",
            "count total bedroom of apartment table and use building short name in place of building manager .",
            "count total bedroom of apartment table and use building short name in place of building phone .",
            "count total bedroom of apartment table and use building short name in place of apartment id .",
            "count total bedroom of apartment table and use building short name in place of apartment type code .",
            "count total bedroom of apartment table and use building short name in place of bathroom count .",
            "count total bedroom of apartment table and use building short name in place of bedroom count .",
            "count total bedroom of apartment table and use building short name in place of room count .",
            "count total bedroom of apartment table and use building short name in place of facility code .",
            "count total bedroom of apartment table and use building short name in place of guest id .",
            "count total bedroom of apartment table and use building short name in place of gender code .",
            "count total bedroom of apartment table and use building short name in place of guest first name .",
            "count total bedroom of apartment table and use building short name in place of guest last name .",
            "count total bedroom of apartment table and use building short name in place of date of birth .",
            "count total bedroom of apartment table and use building short name in place of apartment booking id .",
            "count total bedroom of apartment table and use building short name in place of booking status code .",
            "count total bedroom of apartment table and use building short name in place of booking start date .",
            "count total bedroom of apartment table and use building short name in place of booking end date .",
            "count total bedroom of apartment table and use building short name in place of status date .",
            "count total bedroom of apartment table and use building short name in place of available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , do not find for each value of apartment number . in step 2 , order the results by bedroom count in place of number of rows .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                23
            ]
        ],
        "secondary_span": [
            [
                24,
                30
            ]
        ],
        "positive_example": "in step 1 use bedroom count instead of apartment number.",
        "negative_examples": [
            "in step 1 use building id instead of apartment number .",
            "in step 1 use building short name instead of apartment number .",
            "in step 1 use building full name instead of apartment number .",
            "in step 1 use building description instead of apartment number .",
            "in step 1 use building address instead of apartment number .",
            "in step 1 use building manager instead of apartment number .",
            "in step 1 use building phone instead of apartment number .",
            "in step 1 use apartment id instead of apartment number .",
            "in step 1 use apartment type code instead of apartment number .",
            "in step 1 use apartment number instead of apartment number .",
            "in step 1 use bathroom count instead of apartment number .",
            "in step 1 use room count instead of apartment number .",
            "in step 1 use facility code instead of apartment number .",
            "in step 1 use guest id instead of apartment number .",
            "in step 1 use gender code instead of apartment number .",
            "in step 1 use guest first name instead of apartment number .",
            "in step 1 use guest last name instead of apartment number .",
            "in step 1 use date of birth instead of apartment number .",
            "in step 1 use apartment booking id instead of apartment number .",
            "in step 1 use booking status code instead of apartment number .",
            "in step 1 use booking start date instead of apartment number .",
            "in step 1 use booking end date instead of apartment number .",
            "in step 1 use status date instead of apartment number .",
            "in step 1 use available yes or no instead of apartment number ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find for each value of birth place in place of birth date . find birth place in place of birth date .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                15
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                16,
                21
            ]
        ],
        "positive_example": "Replace birth date with birth place , should correspond rows to each value of people from that place .",
        "negative_examples": [
            "replace body builder id with birth place , should correspond rows to each value of people from that place .",
            "replace people id with birth place , should correspond rows to each value of people from that place .",
            "replace snatch with birth place , should correspond rows to each value of people from that place .",
            "replace clean jerk with birth place , should correspond rows to each value of people from that place .",
            "replace total with birth place , should correspond rows to each value of people from that place .",
            "replace name with birth place , should correspond rows to each value of people from that place .",
            "replace height with birth place , should correspond rows to each value of people from that place .",
            "replace weight with birth place , should correspond rows to each value of people from that place .",
            "replace birth date with body builder id , should correspond rows to each value of people from that place .",
            "replace birth date with people id , should correspond rows to each value of people from that place .",
            "replace birth date with snatch , should correspond rows to each value of people from that place .",
            "replace birth date with clean jerk , should correspond rows to each value of people from that place .",
            "replace birth date with total , should correspond rows to each value of people from that place .",
            "replace birth date with name , should correspond rows to each value of people from that place .",
            "replace birth date with height , should correspond rows to each value of people from that place .",
            "replace birth date with weight , should correspond rows to each value of people from that place ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the invoices table besides the orders table . in step 2 , make sure that the corresponding value in step 1 greater than 2 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                33
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Replace order id in orders table with order id in invoices table .",
        "negative_examples": [
            "replace order id in orders table with order id in customers table .",
            "replace order id in orders table with order id in orders table .",
            "replace order id in orders table with order id in accounts table .",
            "replace order id in orders table with order id in product categories table .",
            "replace order id in orders table with order id in products table .",
            "replace order id in orders table with order id in financial transactions table .",
            "replace order id in orders table with order id in order items table .",
            "replace order id in orders table with order id in invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the accreditation type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                36,
                43
            ]
        ],
        "secondary_span": [
            [
                25,
                35
            ]
        ],
        "positive_example": "It should be company name , not accreditation type in step 2.",
        "negative_examples": [
            "it should be model name , not accreditation type in step 2 .",
            "it should be launch year , not accreditation type in step 2 .",
            "it should be ram mib , not accreditation type in step 2 .",
            "it should be rom mib , not accreditation type in step 2 .",
            "it should be slots , not accreditation type in step 2 .",
            "it should be wifi , not accreditation type in step 2 .",
            "it should be bluetooth , not accreditation type in step 2 .",
            "it should be graphics mode , not accreditation type in step 2 .",
            "it should be char cells , not accreditation type in step 2 .",
            "it should be pixels , not accreditation type in step 2 .",
            "it should be hardware colours , not accreditation type in step 2 .",
            "it should be used kb , not accreditation type in step 2 .",
            "it should be map , not accreditation type in step 2 .",
            "it should be type , not accreditation type in step 2 .",
            "it should be hardware model name , not accreditation type in step 2 .",
            "it should be accreditation level , not accreditation type in step 2 .",
            "it should be date , not accreditation type in step 2 .",
            "it should be chip model , not accreditation type in step 2 .",
            "it should be screen mode , not accreditation type in step 2 .",
            "it should be company name , not model name in step 2 .",
            "it should be company name , not launch year in step 2 .",
            "it should be company name , not ram mib in step 2 .",
            "it should be company name , not rom mib in step 2 .",
            "it should be company name , not slots in step 2 .",
            "it should be company name , not wifi in step 2 .",
            "it should be company name , not bluetooth in step 2 .",
            "it should be company name , not graphics mode in step 2 .",
            "it should be company name , not char cells in step 2 .",
            "it should be company name , not pixels in step 2 .",
            "it should be company name , not hardware colours in step 2 .",
            "it should be company name , not used kb in step 2 .",
            "it should be company name , not map in step 2 .",
            "it should be company name , not type in step 2 .",
            "it should be company name , not hardware model name in step 2 .",
            "it should be company name , not accreditation level in step 2 .",
            "it should be company name , not date in step 2 .",
            "it should be company name , not chip model in step 2 .",
            "it should be company name , not screen mode in step 2 ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table besides the products table . find summation of product quantity in place of summation of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "Find the summation of the corresponding rows to each value of product quantity .",
        "negative_examples": [
            "find the summation of the corresponding rows to each value of customer id .",
            "find the summation of the corresponding rows to each value of customer first name .",
            "find the summation of the corresponding rows to each value of customer middle initial .",
            "find the summation of the corresponding rows to each value of customer last name .",
            "find the summation of the corresponding rows to each value of gender .",
            "find the summation of the corresponding rows to each value of email address .",
            "find the summation of the corresponding rows to each value of login name .",
            "find the summation of the corresponding rows to each value of login password .",
            "find the summation of the corresponding rows to each value of phone number .",
            "find the summation of the corresponding rows to each value of town city .",
            "find the summation of the corresponding rows to each value of state county province .",
            "find the summation of the corresponding rows to each value of country .",
            "find the summation of the corresponding rows to each value of order id .",
            "find the summation of the corresponding rows to each value of date order placed .",
            "find the summation of the corresponding rows to each value of order details .",
            "find the summation of the corresponding rows to each value of invoice number .",
            "find the summation of the corresponding rows to each value of invoice date .",
            "find the summation of the corresponding rows to each value of account id .",
            "find the summation of the corresponding rows to each value of date account opened .",
            "find the summation of the corresponding rows to each value of account name .",
            "find the summation of the corresponding rows to each value of other account details .",
            "find the summation of the corresponding rows to each value of production type code .",
            "find the summation of the corresponding rows to each value of product type description .",
            "find the summation of the corresponding rows to each value of vat rating .",
            "find the summation of the corresponding rows to each value of product id .",
            "find the summation of the corresponding rows to each value of parent product id .",
            "find the summation of the corresponding rows to each value of unit price .",
            "find the summation of the corresponding rows to each value of product name .",
            "find the summation of the corresponding rows to each value of product color .",
            "find the summation of the corresponding rows to each value of product size .",
            "find the summation of the corresponding rows to each value of transaction id .",
            "find the summation of the corresponding rows to each value of transaction type .",
            "find the summation of the corresponding rows to each value of transaction date .",
            "find the summation of the corresponding rows to each value of transaction amount .",
            "find the summation of the corresponding rows to each value of transaction comment .",
            "find the summation of the corresponding rows to each value of other transaction details .",
            "find the summation of the corresponding rows to each value of order item id .",
            "find the summation of the corresponding rows to each value of other order item details .",
            "find the summation of the corresponding rows to each value of product title .",
            "find the summation of the corresponding rows to each value of product price .",
            "find the summation of the corresponding rows to each value of derived product cost .",
            "find the summation of the corresponding rows to each value of derived vat payable .",
            "find the summation of the corresponding rows to each value of derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the city population between 200000 and 2000000 conditions in place of the city population between 2000000 and 200000 conditions . find city population in place of headquartered city .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                21,
                23
            ]
        ],
        "secondary_span": [
            [
                9,
                20
            ],
            [
                24,
                29
            ]
        ],
        "positive_example": "Replace headquartered city with city population . and make sure city population between 200000 and 2000000 .",
        "negative_examples": [
            "replace product id with city population . and make sure city population between 200000 and 2000000 .",
            "replace product with city population . and make sure city population between 200000 and 2000000 .",
            "replace dimensions with city population . and make sure city population between 200000 and 2000000 .",
            "replace dpi with city population . and make sure city population between 200000 and 2000000 .",
            "replace pages per minute color with city population . and make sure city population between 200000 and 2000000 .",
            "replace max page size with city population . and make sure city population between 200000 and 2000000 .",
            "replace interface with city population . and make sure city population between 200000 and 2000000 .",
            "replace store id with city population . and make sure city population between 200000 and 2000000 .",
            "replace store name with city population . and make sure city population between 200000 and 2000000 .",
            "replace type with city population . and make sure city population between 200000 and 2000000 .",
            "replace area size with city population . and make sure city population between 200000 and 2000000 .",
            "replace number of product category with city population . and make sure city population between 200000 and 2000000 .",
            "replace ranking with city population . and make sure city population between 200000 and 2000000 .",
            "replace district id with city population . and make sure city population between 200000 and 2000000 .",
            "replace district name with city population . and make sure city population between 200000 and 2000000 .",
            "replace city area with city population . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with product id . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with product . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with dimensions . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with dpi . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with pages per minute color . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with max page size . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with interface . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with store id . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with store name . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with type . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with area size . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with number of product category . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with ranking . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with district id . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with district name . and make sure city population between 200000 and 2000000 .",
            "replace headquartered city with city area . and make sure city population between 200000 and 2000000 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the campuses 's year less than 1950 and faculty 's year greater than 2002 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ]
        ],
        "positive_example": "Ensure that campuses 's year greater than 1950 and Erase \"and faculty 's year greater than 2002\".",
        "negative_examples": [
            "ensure that campuses 's location greater than 1950 and erase \" and faculty 's year greater than 2002 \" .",
            "ensure that campuses 's id greater than 1950 and erase \" and enrollments 's id greater than 2002 \" .",
            "ensure that campuses 's location greater than 1950 and erase \" and csu fees 's location greater than 2002 \" .",
            "ensure that campuses 's totalenrollment ay greater than 1950 and erase \" and faculty 's year greater than 2002 \" .",
            "ensure that campuses 's campus greater than 1950 and erase \" and degrees 's campus greater than 2002 \" .",
            "ensure that campuses 's discipline greater than 1950 and erase \" and campuses 's discipline greater than 2002 \" .",
            "ensure that campuses 's county greater than 1950 and erase \" and discipline enrollments 's county greater than 2002 \" .",
            "ensure that campuses 's undergraduate greater than 1950 and erase \" and csu fees 's undergraduate greater than 2002 \" .",
            "ensure that campuses 's degrees greater than 1950 and erase \" and discipline enrollments 's degrees greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and enrollments 's year greater than 2002 \" .",
            "ensure that campuses 's location greater than 1950 and erase \" and discipline enrollments 's location greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and location 's year greater than 2002 \" .",
            "ensure that campuses 's discipline greater than 1950 and erase \" and faculty 's year greater than 2002 \" .",
            "ensure that campuses 's fte ay greater than 1950 and erase \" and enrollments 's fte ay greater than 2002 \" .",
            "ensure that campuses 's totalenrollment ay greater than 1950 and erase \" and enrollments 's totalenrollment ay greater than 2002 \" .",
            "ensure that campuses 's id greater than 1950 and erase \" and faculty 's year greater than 2002 \" .",
            "ensure that campuses 's location greater than 1950 and erase \" and campuses 's location greater than 2002 \" .",
            "ensure that campuses 's totalenrollment ay greater than 1950 and erase \" and degrees 's totalenrollment ay greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and county 's year greater than 2002 \" .",
            "ensure that campuses 's campus fee greater than 1950 and erase \" and faculty 's year greater than 2002 \" .",
            "ensure that campuses 's discipline greater than 1950 and erase \" and enrollments 's discipline greater than 2002 \" .",
            "ensure that campuses 's location greater than 1950 and erase \" and enrollments 's location greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and campus fee 's year greater than 2002 \" .",
            "ensure that campuses 's undergraduate greater than 1950 and erase \" and campuses 's undergraduate greater than 2002 \" .",
            "ensure that campuses 's fte ay greater than 1950 and erase \" and csu fees 's fte ay greater than 2002 \" .",
            "ensure that campuses 's fte ay greater than 1950 and erase \" and discipline enrollments 's fte ay greater than 2002 \" .",
            "ensure that campuses 's graduate greater than 1950 and erase \" and faculty 's year greater than 2002 \" .",
            "ensure that campuses 's fte ay greater than 1950 and erase \" and campuses 's fte ay greater than 2002 \" .",
            "ensure that campuses 's fte ay greater than 1950 and erase \" and degrees 's fte ay greater than 2002 \" .",
            "ensure that campuses 's totalenrollment ay greater than 1950 and erase \" and campuses 's totalenrollment ay greater than 2002 \" .",
            "ensure that campuses 's degrees greater than 1950 and erase \" and enrollments 's degrees greater than 2002 \" .",
            "ensure that campuses 's discipline greater than 1950 and erase \" and degrees 's discipline greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and campuses 's year greater than 2002 \" .",
            "ensure that campuses 's campus greater than 1950 and erase \" and discipline enrollments 's campus greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and discipline 's year greater than 2002 \" .",
            "ensure that campuses 's totalenrollment ay greater than 1950 and erase \" and csu fees 's totalenrollment ay greater than 2002 \" .",
            "ensure that campuses 's discipline greater than 1950 and erase \" and csu fees 's discipline greater than 2002 \" .",
            "ensure that campuses 's id greater than 1950 and erase \" and discipline enrollments 's id greater than 2002 \" .",
            "ensure that campuses 's degrees greater than 1950 and erase \" and campuses 's degrees greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and campus 's year greater than 2002 \" .",
            "ensure that campuses 's undergraduate greater than 1950 and erase \" and enrollments 's undergraduate greater than 2002 \" .",
            "ensure that campuses 's campus greater than 1950 and erase \" and enrollments 's campus greater than 2002 \" .",
            "ensure that campuses 's totalenrollment ay greater than 1950 and erase \" and discipline enrollments 's totalenrollment ay greater than 2002 \" .",
            "ensure that campuses 's id greater than 1950 and erase \" and campuses 's id greater than 2002 \" .",
            "ensure that campuses 's campus fee greater than 1950 and erase \" and csu fees 's campus fee greater than 2002 \" .",
            "ensure that campuses 's county greater than 1950 and erase \" and csu fees 's county greater than 2002 \" .",
            "ensure that campuses 's year greater than 1950 and erase \" and id 's year greater than 2002 \" .",
            "ensure that campuses 's id greater than 1950 and erase \" and degrees 's id greater than 2002 \" .",
            "ensure that campuses 's graduate greater than 1950 and erase \" and discipline enrollments 's graduate greater than 2002 \" .",
            "ensure that campuses 's id greater than 1950 and erase \" and csu fees 's id greater than 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally make sure that director equals name . find rating stars in place of director .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                12,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                19
            ]
        ],
        "positive_example": "In step 2 replace director with rating stars , and ensure Reviewer's name equals Movie's director .",
        "negative_examples": [
            "in step 2 replace director with movie id , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace director with title , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace director with year , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace director with reviewer id , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace director with rating date , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace movie id with rating stars , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace title with rating stars , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace year with rating stars , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace reviewer id with rating stars , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace rating date with rating stars , and ensure reviewer 's name equals movie 's director .",
            "in step 2 replace director with rating stars , and ensure reviewer 's movie id equals movie 's director .",
            "in step 2 replace director with rating stars , and ensure reviewer 's title equals movie 's director .",
            "in step 2 replace director with rating stars , and ensure reviewer 's year equals movie 's director .",
            "in step 2 replace director with rating stars , and ensure reviewer 's reviewer id equals movie 's director .",
            "in step 2 replace director with rating stars , and ensure reviewer 's rating date equals movie 's director ."
        ],
        "neg_len": 15
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the customer payments table besides the customers table . find summation of amount payment in place of summation of amount outstanding .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                26
            ]
        ],
        "positive_example": "Replace amount outstanding with amount payment .",
        "negative_examples": [
            "replace date joined staff with amount payment .",
            "replace amount outstanding with staff id .",
            "replace nickname with amount payment .",
            "replace amount outstanding with nickname .",
            "replace first name with amount payment .",
            "replace amount outstanding with email address .",
            "replace amount outstanding with line 1 number building .",
            "replace vehicle id with amount payment .",
            "replace amount outstanding with date left staff .",
            "replace amount outstanding with lesson id .",
            "replace amount outstanding with payment method code .",
            "replace cell mobile phone number with amount payment .",
            "replace amount outstanding with customer id .",
            "replace amount outstanding with address id .",
            "replace amount outstanding with last name .",
            "replace lesson status code with amount payment .",
            "replace amount outstanding with first name .",
            "replace vehicle details with amount payment .",
            "replace last name with amount payment .",
            "replace amount outstanding with lesson time .",
            "replace date of birth with amount payment .",
            "replace customer status code with amount payment .",
            "replace amount outstanding with vehicle details .",
            "replace staff id with amount payment .",
            "replace amount outstanding with country .",
            "replace country with amount payment .",
            "replace payment method code with amount payment .",
            "replace city with amount payment .",
            "replace amount outstanding with cell mobile phone number .",
            "replace date became customer with amount payment .",
            "replace datetime payment with amount payment .",
            "replace middle name with amount payment .",
            "replace amount outstanding with date became customer .",
            "replace customer id with amount payment .",
            "replace amount outstanding with price .",
            "replace email address with amount payment .",
            "replace price with amount payment .",
            "replace zip postcode with amount payment .",
            "replace amount outstanding with state province county .",
            "replace lesson id with amount payment .",
            "replace amount outstanding with middle name .",
            "replace amount outstanding with customer status code .",
            "replace amount outstanding with datetime payment .",
            "replace amount outstanding with lesson status code .",
            "replace lesson date with amount payment .",
            "replace date left staff with amount payment .",
            "replace state province county with amount payment .",
            "replace line 1 number building with amount payment .",
            "replace amount outstanding with zip postcode .",
            "replace amount outstanding with date joined staff ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , use order items table in place of products table .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "Replace products table with order items table in step 1.",
        "negative_examples": [
            "replace products table with customers table in step 1 .",
            "replace products table with orders table in step 1 .",
            "replace products table with invoices table in step 1 .",
            "replace products table with accounts table in step 1 .",
            "replace products table with product categories table in step 1 .",
            "replace products table with financial transactions table in step 1 .",
            "replace products table with invoice line items table in step 1 .",
            "replace customers table with order items table in step 1 .",
            "replace orders table with order items table in step 1 .",
            "replace invoices table with order items table in step 1 .",
            "replace accounts table with order items table in step 1 .",
            "replace product categories table with order items table in step 1 .",
            "replace financial transactions table with order items table in step 1 .",
            "replace invoice line items table with order items table in step 1 ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , use view unit status table in place of apartment bookings table in step 2 , consider the available yes or no equals 0 conditions in place of the booking status code equals 0 conditions . in step 3 , use view unit status table in place of apartment bookings table in step 4 , consider the available yes or no equals 1 conditions in place of the booking status code equals 1 conditions .",
        "primary_span": [
            [
                4,
                8
            ],
            [
                19,
                27
            ],
            [
                43,
                47
            ],
            [
                58,
                66
            ]
        ],
        "secondary_span": [
            [
                9,
                14
            ],
            [
                28,
                38
            ],
            [
                48,
                53
            ],
            [
                67,
                77
            ]
        ],
        "positive_example": "for both context, please change apartment booking with the view unit status and booking status code with available yes or no.",
        "negative_examples": [
            "for both context , please change apartment booking with the apartment bookings and building address with available yes or no .",
            "for both context , please change apartment booking with the apartment buildings and room count with available yes or no .",
            "for both context , please change apartment booking with the apartment facilities and facility code with available yes or no .",
            "for both context , please change apartment booking with the view unit status and booking status code with building id .",
            "for both context , please change apartment booking with the apartment bookings and booking status code with facility code .",
            "for both context , please change apartment booking with the apartments and facility code with available yes or no .",
            "for both context , please change apartment booking with the guests and booking status code with guest last name .",
            "for both context , please change apartment booking with the guests and building full name with available yes or no .",
            "for both context , please change apartment booking with the apartments and apartment id with available yes or no .",
            "for both context , please change apartment booking with the guests and guest id with available yes or no .",
            "for both context , please change apartment booking with the guests and booking start date with available yes or no .",
            "for both context , please change apartment booking with the apartments and bedroom count with available yes or no .",
            "for both context , please change apartment booking with the apartment buildings and booking status code with guest last name .",
            "for both context , please change apartment booking with the apartment facilities and booking status code with building short name .",
            "for both context , please change apartment booking with the view unit status and building description with available yes or no .",
            "for both context , please change apartment booking with the apartment facilities and booking status code with apartment number .",
            "for both context , please change apartment booking with the apartment bookings and booking status code with room count .",
            "for both context , please change apartment booking with the apartment bookings and guest last name with available yes or no .",
            "for both context , please change apartment booking with the view unit status and booking status code with bedroom count .",
            "for both context , please change apartment booking with the apartments and booking status code with guest first name .",
            "for both context , please change apartment booking with the apartment facilities and booking status code with building description .",
            "for both context , please change apartment booking with the apartment buildings and apartment type code with available yes or no .",
            "for both context , please change apartment booking with the view unit status and gender code with available yes or no .",
            "for both context , please change apartment booking with the apartment bookings and booking status code with guest first name .",
            "for both context , please change apartment booking with the apartment bookings and booking status code with available yes or no .",
            "for both context , please change apartment booking with the guests and guest last name with available yes or no .",
            "for both context , please change apartment booking with the apartment buildings and building manager with available yes or no .",
            "for both context , please change apartment booking with the apartment bookings and apartment id with available yes or no .",
            "for both context , please change apartment booking with the guests and booking status code with building phone .",
            "for both context , please change apartment booking with the apartment facilities and guest last name with available yes or no .",
            "for both context , please change apartment booking with the apartments and date of birth with available yes or no .",
            "for both context , please change apartment booking with the apartment facilities and building full name with available yes or no .",
            "for both context , please change apartment booking with the apartment facilities and apartment id with available yes or no .",
            "for both context , please change apartment booking with the apartment facilities and building description with available yes or no .",
            "for both context , please change apartment booking with the apartment buildings and booking status code with booking end date .",
            "for both context , please change apartment booking with the apartments and booking start date with available yes or no .",
            "for both context , please change apartment booking with the guests and booking status code with building description .",
            "for both context , please change apartment booking with the apartment facilities and building manager with available yes or no .",
            "for both context , please change apartment booking with the apartment buildings and booking status code with apartment booking id .",
            "for both context , please change apartment booking with the apartments and booking status code with building full name .",
            "for both context , please change apartment booking with the view unit status and apartment number with available yes or no .",
            "for both context , please change apartment booking with the apartment buildings and bathroom count with available yes or no .",
            "for both context , please change apartment booking with the apartment facilities and booking status code with apartment type code .",
            "for both context , please change apartment booking with the apartment facilities and booking status code with guest id .",
            "for both context , please change apartment booking with the apartments and booking status code with gender code .",
            "for both context , please change apartment booking with the apartment bookings and booking status code with building id .",
            "for both context , please change apartment booking with the apartment buildings and booking status code with apartment type code .",
            "for both context , please change apartment booking with the guests and apartment number with available yes or no .",
            "for both context , please change apartment booking with the apartment buildings and gender code with available yes or no .",
            "for both context , please change apartment booking with the guests and booking status code with date of birth ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number like Columbus Square conditions . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ],
            [
                34,
                38
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ],
            [
                39,
                45
            ]
        ],
        "positive_example": "Substitute apartment number with building short name .",
        "negative_examples": [
            "substitute apartment number with building id .",
            "substitute apartment number with building full name .",
            "substitute apartment number with building description .",
            "substitute apartment number with building address .",
            "substitute apartment number with building manager .",
            "substitute apartment number with building phone .",
            "substitute apartment number with apartment id .",
            "substitute apartment number with apartment type code .",
            "substitute apartment number with apartment number .",
            "substitute apartment number with bathroom count .",
            "substitute apartment number with bedroom count .",
            "substitute apartment number with room count .",
            "substitute apartment number with facility code .",
            "substitute apartment number with guest id .",
            "substitute apartment number with gender code .",
            "substitute apartment number with guest first name .",
            "substitute apartment number with guest last name .",
            "substitute apartment number with date of birth .",
            "substitute apartment number with apartment booking id .",
            "substitute apartment number with booking status code .",
            "substitute apartment number with booking start date .",
            "substitute apartment number with booking end date .",
            "substitute apartment number with status date .",
            "substitute apartment number with available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use assessment notes table in place of behavior incident table in step 2 , find date of notes in place of date incident start .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                18,
                21
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                22,
                28
            ]
        ],
        "positive_example": "Use assessment notes in place of behavior incident table in step 1 , change date incident start with date of notes in step 2.",
        "negative_examples": [
            "use assessment notes in place of reference incident type table in step 1 , change date incident start with incident type description in step 2 .",
            "use assessment notes in place of students table in step 1 , change date incident start with monthly rental in step 2 .",
            "use assessment notes in place of reference detention type table in step 1 , change date incident start with detention type description in step 2 .",
            "use detention in place of behavior incident table in step 1 , change date incident start with country in step 2 .",
            "use students in detention in place of behavior incident table in step 1 , change date incident start with last name in step 2 .",
            "use assessment notes in place of reference detention type table in step 1 , change date incident start with incident type description in step 2 .",
            "use assessment notes in place of behavior incident table in step 1 , change date incident start with line 1 in step 2 .",
            "use students in detention in place of behavior incident table in step 1 , change date incident start with line 1 in step 2 .",
            "use reference incident type in place of behavior incident table in step 1 , change date incident start with line 1 in step 2 .",
            "use assessment notes in place of reference address types table in step 1 , change date incident start with incident id in step 2 .",
            "use assessment notes in place of detention table in step 1 , change date incident start with other student details in step 2 .",
            "use assessment notes in place of behavior incident table in step 1 , change date incident start with last name in step 2 .",
            "use detention in place of behavior incident table in step 1 , change date incident start with zip postcode in step 2 .",
            "use reference detention type in place of behavior incident table in step 1 , change date incident start with detention type description in step 2 .",
            "use assessment notes in place of teachers table in step 1 , change date incident start with line 2 in step 2 .",
            "use assessment notes in place of behavior incident table in step 1 , change date incident start with line 3 in step 2 .",
            "use addresses in place of behavior incident table in step 1 , change date incident start with detention type code in step 2 .",
            "use assessment notes in place of teachers table in step 1 , change date incident start with date address from in step 2 .",
            "use student addresses in place of behavior incident table in step 1 , change date incident start with date address from in step 2 .",
            "use students in detention in place of behavior incident table in step 1 , change date incident start with date first rental in step 2 .",
            "use reference incident type in place of behavior incident table in step 1 , change date incident start with cell mobile number in step 2 .",
            "use assessment notes in place of reference incident type table in step 1 , change date incident start with date incident end in step 2 .",
            "use students in detention in place of behavior incident table in step 1 , change date incident start with text of notes in step 2 .",
            "use reference incident type in place of behavior incident table in step 1 , change date incident start with zip postcode in step 2 .",
            "use detention in place of behavior incident table in step 1 , change date incident start with state province county in step 2 .",
            "use students in place of behavior incident table in step 1 , change date incident start with datetime detention end in step 2 .",
            "use assessment notes in place of addresses table in step 1 , change date incident start with city in step 2 .",
            "use students in detention in place of behavior incident table in step 1 , change date incident start with other details in step 2 .",
            "use assessment notes in place of behavior incident table in step 1 , change date incident start with recommendations in step 2 .",
            "use reference detention type in place of behavior incident table in step 1 , change date incident start with datetime detention end in step 2 .",
            "use reference detention type in place of behavior incident table in step 1 , change date incident start with line 1 in step 2 .",
            "use students in place of behavior incident table in step 1 , change date incident start with detention type description in step 2 .",
            "use reference incident type in place of behavior incident table in step 1 , change date incident start with date incident start in step 2 .",
            "use students in detention in place of behavior incident table in step 1 , change date incident start with incident summary in step 2 .",
            "use student addresses in place of behavior incident table in step 1 , change date incident start with date incident end in step 2 .",
            "use detention in place of behavior incident table in step 1 , change date incident start with notes id in step 2 .",
            "use student addresses in place of behavior incident table in step 1 , change date incident start with notes id in step 2 .",
            "use addresses in place of behavior incident table in step 1 , change date incident start with email address in step 2 .",
            "use assessment notes in place of behavior incident table in step 1 , change date incident start with zip postcode in step 2 .",
            "use assessment notes in place of students table in step 1 , change date incident start with date left university in step 2 .",
            "use assessment notes in place of detention table in step 1 , change date incident start with date left university in step 2 .",
            "use addresses in place of behavior incident table in step 1 , change date incident start with notes id in step 2 .",
            "use detention in place of behavior incident table in step 1 , change date incident start with middle name in step 2 .",
            "use assessment notes in place of reference incident type table in step 1 , change date incident start with student id in step 2 .",
            "use teachers in place of behavior incident table in step 1 , change date incident start with address id in step 2 .",
            "use students in detention in place of behavior incident table in step 1 , change date incident start with detention type description in step 2 .",
            "use assessment notes in place of reference address types table in step 1 , change date incident start with detention summary in step 2 .",
            "use reference incident type in place of behavior incident table in step 1 , change date incident start with date address to in step 2 .",
            "use assessment notes in place of detention table in step 1 , change date incident start with detention id in step 2 .",
            "use assessment notes in place of addresses table in step 1 , change date incident start with line 1 in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "in step 1 , do not use the body builder table . in step 2 , order the results by height in place of total .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                20
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                21,
                25
            ]
        ],
        "positive_example": "Replace total with height .",
        "negative_examples": [
            "replace body builder id with height .",
            "replace people id with height .",
            "replace snatch with height .",
            "replace clean jerk with height .",
            "replace name with height .",
            "replace weight with height .",
            "replace birth date with height .",
            "replace birth place with height .",
            "replace total with body builder id .",
            "replace total with people id .",
            "replace total with snatch .",
            "replace total with clean jerk .",
            "replace total with name .",
            "replace total with weight .",
            "replace total with birth date .",
            "replace total with birth place ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the degrees 's year equals 2001 conditions in place of the faculty 's year equals 2001 conditions . find degrees in place of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                27
            ],
            [
                39,
                40
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                28,
                38
            ],
            [
                41,
                45
            ]
        ],
        "positive_example": "Step 1 Make sure to correspond with degrees table . Step 2 Switch graduate with degrees .",
        "negative_examples": [
            "step 1 make sure to correspond with faculty table . step 2 switch discipline with degrees .",
            "step 1 make sure to correspond with discipline enrollments table . step 2 switch fte ay with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch year with degrees .",
            "step 1 make sure to correspond with csu fees table . step 2 switch year with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch faculty with degrees .",
            "step 1 make sure to correspond with discipline enrollments table . step 2 switch undergraduate with degrees .",
            "step 1 make sure to correspond with degrees table . step 2 switch location with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch fte ay with degrees .",
            "step 1 make sure to correspond with enrollments table . step 2 switch faculty with degrees .",
            "step 1 make sure to correspond with county table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with campus fee table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with enrollments table . step 2 switch campus with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch county with degrees .",
            "step 1 make sure to correspond with csu fees table . step 2 switch totalenrollment ay with degrees .",
            "step 1 make sure to correspond with enrollments table . step 2 switch fte ay with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch undergraduate with degrees .",
            "step 1 make sure to correspond with discipline enrollments table . step 2 switch campus with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch totalenrollment ay with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch id with degrees .",
            "step 1 make sure to correspond with enrollments table . step 2 switch undergraduate with degrees .",
            "step 1 make sure to correspond with degrees table . step 2 switch campus with degrees .",
            "step 1 make sure to correspond with discipline table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with enrollments table . step 2 switch county with degrees .",
            "step 1 make sure to correspond with discipline enrollments table . step 2 switch totalenrollment ay with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with enrollments table . step 2 switch id with degrees .",
            "step 1 make sure to correspond with discipline enrollments table . step 2 switch faculty with degrees .",
            "step 1 make sure to correspond with discipline enrollments table . step 2 switch year with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch campus with degrees .",
            "step 1 make sure to correspond with degrees table . step 2 switch totalenrollment ay with degrees .",
            "step 1 make sure to correspond with undergraduate table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with degrees table . step 2 switch campus fee with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch id with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch totalenrollment ay with degrees .",
            "step 1 make sure to correspond with location table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with discipline enrollments table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with year table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with degrees table . step 2 switch undergraduate with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch year with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch campus with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch campus fee with degrees .",
            "step 1 make sure to correspond with csu fees table . step 2 switch id with degrees .",
            "step 1 make sure to correspond with totalenrollment ay table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with degrees table . step 2 switch fte ay with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with csu fees table . step 2 switch discipline with degrees .",
            "step 1 make sure to correspond with campuses table . step 2 switch discipline with degrees .",
            "step 1 make sure to correspond with enrollments table . step 2 switch graduate with degrees .",
            "step 1 make sure to correspond with faculty table . step 2 switch fte ay with degrees .",
            "step 1 make sure to correspond with fte ay table . step 2 switch graduate with degrees ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table .",
        "primary_span": [
            [
                4,
                13
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 3, you should remove faculty's campuses and replace it with campuses.",
        "negative_examples": [
            "in step 3 , you should remove campuses 's campuses and replace it with campuses .",
            "in step 3 , you should remove csu fees 's campuses and replace it with campuses .",
            "in step 3 , you should remove degrees 's campuses and replace it with campuses .",
            "in step 3 , you should remove discipline enrollments 's campuses and replace it with campuses .",
            "in step 3 , you should remove enrollments 's campuses and replace it with campuses .",
            "in step 3 , you should remove id 's campuses and replace it with campuses .",
            "in step 3 , you should remove campus 's campuses and replace it with campuses .",
            "in step 3 , you should remove location 's campuses and replace it with campuses .",
            "in step 3 , you should remove county 's campuses and replace it with campuses .",
            "in step 3 , you should remove year 's campuses and replace it with campuses .",
            "in step 3 , you should remove campus fee 's campuses and replace it with campuses .",
            "in step 3 , you should remove discipline 's campuses and replace it with campuses .",
            "in step 3 , you should remove undergraduate 's campuses and replace it with campuses .",
            "in step 3 , you should remove graduate 's campuses and replace it with campuses .",
            "in step 3 , you should remove totalenrollment ay 's campuses and replace it with campuses .",
            "in step 3 , you should remove fte ay 's campuses and replace it with campuses ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use reviewer table in place of movie table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "There should be reviewer table instead of movie table .",
        "negative_examples": [
            "there should be reviewer table instead of rating table .",
            "there should be rating table instead of movie table ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the rating table besides the movie table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Need to find ratings also .",
        "negative_examples": [
            "need to find movie also .",
            "need to find reviewer also ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the county equals Los Angeles and campuses 's year greater than 1950 conditions in place of the campuses 's campus equals Los Angeles and faculty 's year greater than 1950 conditions . find campuses 's campus in place of county .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                28
            ],
            [
                48,
                51
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                47
            ],
            [
                52,
                56
            ]
        ],
        "positive_example": "Find campuses 's campuses whose county equals Los Angeles and campuses 's year greater than 1950.",
        "negative_examples": [
            "find id 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find location 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find year 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find campus fee 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find degrees 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find discipline 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find undergraduate 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find graduate 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find totalenrollment ay 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find fte ay 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find faculty 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose id equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose location equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose year equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose campus fee equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose degrees equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose discipline equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose undergraduate equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose graduate equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose totalenrollment ay equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose fte ay equals los angeles and campuses 's year greater than 1950 .",
            "find campuses 's campuses whose faculty equals los angeles and campuses 's year greater than 1950 ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the rating table besides the movie table . additionally make sure that year is equals maximum year movie . find maximum rating stars in place of title . you should not find the largest of the results . show me all the results .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                23
            ],
            [
                24,
                27
            ],
            [
                33,
                48
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                28,
                32
            ]
        ],
        "positive_example": "Need to replace title with Rating's star .",
        "negative_examples": [
            "need to replace title with movie 's star .",
            "need to replace title with reviewer 's star .",
            "need to replace movie id with rating 's star .",
            "need to replace year with rating 's star .",
            "need to replace director with rating 's star .",
            "need to replace reviewer id with rating 's star .",
            "need to replace name with rating 's star .",
            "need to replace rating stars with rating 's star .",
            "need to replace rating date with rating 's star .",
            "need to replace movie id with movie 's star .",
            "need to replace year with movie 's star .",
            "need to replace director with movie 's star .",
            "need to replace reviewer id with movie 's star .",
            "need to replace name with movie 's star .",
            "need to replace rating stars with movie 's star .",
            "need to replace rating date with movie 's star .",
            "need to replace movie id with reviewer 's star .",
            "need to replace year with reviewer 's star .",
            "need to replace director with reviewer 's star .",
            "need to replace reviewer id with reviewer 's star .",
            "need to replace name with reviewer 's star .",
            "need to replace rating stars with reviewer 's star .",
            "need to replace rating date with reviewer 's star ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use financial transactions table in place of customers table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Need to Change customers table with financial transactions table .",
        "negative_examples": [
            "need to change customers table with orders table .",
            "need to change customers table with invoices table .",
            "need to change customers table with accounts table .",
            "need to change customers table with product categories table .",
            "need to change customers table with products table .",
            "need to change customers table with order items table .",
            "need to change customers table with invoice line items table .",
            "need to change orders table with financial transactions table .",
            "need to change invoices table with financial transactions table .",
            "need to change accounts table with financial transactions table .",
            "need to change product categories table with financial transactions table .",
            "need to change products table with financial transactions table .",
            "need to change order items table with financial transactions table .",
            "need to change invoice line items table with financial transactions table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table and orders table besides the products table .",
        "primary_span": [
            [
                0,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "You need to search in orders table for number of customers of order id. ",
        "negative_examples": [
            "you need to search in customers table for number of customers of order id .",
            "you need to search in invoices table for number of customers of order id .",
            "you need to search in accounts table for number of customers of order id .",
            "you need to search in product categories table for number of customers of order id .",
            "you need to search in products table for number of customers of order id .",
            "you need to search in financial transactions table for number of customers of order id .",
            "you need to search in order items table for number of customers of order id .",
            "you need to search in invoice line items table for number of customers of order id ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "use product table in place of store table . find average pages per minute color in place of average ranking .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                14
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                15,
                20
            ]
        ],
        "positive_example": "Need to replace ranking in store table with pages per minute color of product table .",
        "negative_examples": [
            "need to replace district id in store table with pages per minute color of product table .",
            "need to replace ranking in store table with pages per minute color of dpi table .",
            "need to replace area size in store table with pages per minute color of product table .",
            "need to replace store name in store table with pages per minute color of store product table .",
            "need to replace ranking in store product table with pages per minute color of dpi table .",
            "need to replace ranking in district table with pages per minute color of district id table .",
            "need to replace ranking in store district table with district id of product table .",
            "need to replace dimensions in store district table with pages per minute color of product table .",
            "need to replace ranking in store table with dimensions of store district table .",
            "need to replace ranking in store table with pages per minute color of type table .",
            "need to replace dpi in store table with pages per minute color of store product table .",
            "need to replace ranking in store table with district id of district table .",
            "need to replace ranking in store table with dimensions of store product table .",
            "need to replace ranking in store table with interface of district table .",
            "need to replace ranking in store table with district name of product table .",
            "need to replace city area in store table with pages per minute color of store district table .",
            "need to replace interface in store table with pages per minute color of store product table .",
            "need to replace store id in store table with pages per minute color of district table .",
            "need to replace ranking in store product table with pages per minute color of product id table .",
            "need to replace dimensions in store table with pages per minute color of district table .",
            "need to replace district name in district table with pages per minute color of product table .",
            "need to replace ranking in store table with headquartered city of store district table .",
            "need to replace ranking in store district table with pages per minute color of store name table .",
            "need to replace ranking in district table with type of product table .",
            "need to replace store name in store table with pages per minute color of product table .",
            "need to replace ranking in store district table with product id of product table .",
            "need to replace product id in store table with pages per minute color of store product table .",
            "need to replace ranking in district table with pages per minute color of store id table .",
            "need to replace ranking in store table with type of store district table .",
            "need to replace ranking in store table with headquartered city of store product table .",
            "need to replace ranking in store district table with pages per minute color of product id table .",
            "need to replace ranking in store district table with pages per minute color of number of product category table .",
            "need to replace headquartered city in store product table with pages per minute color of product table .",
            "need to replace dimensions in district table with pages per minute color of product table .",
            "need to replace headquartered city in store table with pages per minute color of store district table .",
            "need to replace dpi in store table with pages per minute color of district table .",
            "need to replace ranking in district table with max page size of product table .",
            "need to replace ranking in store product table with dimensions of product table .",
            "need to replace ranking in store district table with store id of product table .",
            "need to replace store name in district table with pages per minute color of product table .",
            "need to replace ranking in store table with pages per minute color of max page size table .",
            "need to replace ranking in district table with pages per minute color of store name table .",
            "need to replace ranking in store table with max page size of store product table .",
            "need to replace ranking in district table with district name of product table .",
            "need to replace ranking in district table with pages per minute color of city area table .",
            "need to replace ranking in store table with pages per minute color of interface table .",
            "need to replace type in store table with pages per minute color of store district table .",
            "need to replace ranking in store table with store id of product table .",
            "need to replace dimensions in store table with pages per minute color of store district table .",
            "need to replace ranking in district table with pages per minute color of product table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use financial transactions table in place of accounts table . do not find for each value of accounts 's account id .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                21
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Find each value of account id in financial transactions table along with the number of corresponding rows .",
        "negative_examples": [
            "find each value of email address in product categories table along with the number of corresponding rows .",
            "find each value of vat rating in order items table along with the number of corresponding rows .",
            "find each value of product price in financial transactions table along with the number of corresponding rows .",
            "find each value of product type description in order items table along with the number of corresponding rows .",
            "find each value of account name in accounts table along with the number of corresponding rows .",
            "find each value of invoice number in orders table along with the number of corresponding rows .",
            "find each value of derived vat payable in product categories table along with the number of corresponding rows .",
            "find each value of email address in orders table along with the number of corresponding rows .",
            "find each value of transaction type in order items table along with the number of corresponding rows .",
            "find each value of date account opened in accounts table along with the number of corresponding rows .",
            "find each value of unit price in customers table along with the number of corresponding rows .",
            "find each value of order id in invoice line items table along with the number of corresponding rows .",
            "find each value of account id in orders table along with the number of corresponding rows .",
            "find each value of transaction comment in financial transactions table along with the number of corresponding rows .",
            "find each value of login name in invoices table along with the number of corresponding rows .",
            "find each value of invoice date in financial transactions table along with the number of corresponding rows .",
            "find each value of parent product id in financial transactions table along with the number of corresponding rows .",
            "find each value of product size in customers table along with the number of corresponding rows .",
            "find each value of derived total cost in product categories table along with the number of corresponding rows .",
            "find each value of date account opened in order items table along with the number of corresponding rows .",
            "find each value of customer first name in financial transactions table along with the number of corresponding rows .",
            "find each value of product quantity in product categories table along with the number of corresponding rows .",
            "find each value of order details in invoice line items table along with the number of corresponding rows .",
            "find each value of parent product id in invoice line items table along with the number of corresponding rows .",
            "find each value of product name in accounts table along with the number of corresponding rows .",
            "find each value of transaction id in product categories table along with the number of corresponding rows .",
            "find each value of invoice number in product categories table along with the number of corresponding rows .",
            "find each value of product color in financial transactions table along with the number of corresponding rows .",
            "find each value of order id in order items table along with the number of corresponding rows .",
            "find each value of date order placed in invoices table along with the number of corresponding rows .",
            "find each value of login name in customers table along with the number of corresponding rows .",
            "find each value of derived vat payable in accounts table along with the number of corresponding rows .",
            "find each value of date account opened in invoices table along with the number of corresponding rows .",
            "find each value of other transaction details in customers table along with the number of corresponding rows .",
            "find each value of other order item details in invoices table along with the number of corresponding rows .",
            "find each value of transaction type in orders table along with the number of corresponding rows .",
            "find each value of production type code in product categories table along with the number of corresponding rows .",
            "find each value of product price in products table along with the number of corresponding rows .",
            "find each value of state county province in customers table along with the number of corresponding rows .",
            "find each value of derived total cost in products table along with the number of corresponding rows .",
            "find each value of other order item details in customers table along with the number of corresponding rows .",
            "find each value of customer middle initial in customers table along with the number of corresponding rows .",
            "find each value of customer middle initial in products table along with the number of corresponding rows .",
            "find each value of customer id in orders table along with the number of corresponding rows .",
            "find each value of transaction comment in products table along with the number of corresponding rows .",
            "find each value of transaction id in financial transactions table along with the number of corresponding rows .",
            "find each value of product id in product categories table along with the number of corresponding rows .",
            "find each value of other order item details in orders table along with the number of corresponding rows .",
            "find each value of product id in accounts table along with the number of corresponding rows .",
            "find each value of invoice number in financial transactions table along with the number of corresponding rows ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , do not use the addresses table and staff table . in step 2 , remove the staff 's last name equals Sawayn conditions . in step 3 , do not use the customers table and addresses table . in step 4 , remove the staff 's last name equals Sawayn conditions . find staff 's last name in place of customers 's last name .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                46,
                55
            ],
            [
                56,
                60
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                32,
                41
            ],
            [
                61,
                68
            ]
        ],
        "positive_example": "You need to just check last name of customers in step 2 and last name of staff's in step 3.",
        "negative_examples": [
            "you need to just check customer status code of customers in step 2 and last customer status code customer payments 's in step 3 .",
            "you need to just check amount outstanding of customers in step 2 and last name of staff 's in step 3 .",
            "you need to just check date joined staff of customers in step 2 and last name of staff 's in step 3 .",
            "you need to just check country of customer payments in step 2 and last country staff 's in step 3 .",
            "you need to just check date of birth of customers in step 2 and last date of birth customer payments 's in step 3 .",
            "you need to just check date became customer of customers in step 2 and last date became customer lessons 's in step 3 .",
            "you need to just check payment method code of vehicles in step 2 and last payment method code staff 's in step 3 .",
            "you need to just check vehicle id of addresses in step 2 and last vehicle id staff 's in step 3 .",
            "you need to just check nickname of customers in step 2 and last nickname customer payments 's in step 3 .",
            "you need to just check middle name of addresses in step 2 and last middle name staff 's in step 3 .",
            "you need to just check middle name of customer payments in step 2 and last middle name staff 's in step 3 .",
            "you need to just check address id of lessons in step 2 and last address id staff 's in step 3 .",
            "you need to just check lesson status code of customers in step 2 and last lesson status code lessons 's in step 3 .",
            "you need to just check lesson time of customers in step 2 and last lesson time addresses 's in step 3 .",
            "you need to just check first name of customers in step 2 and last first name addresses 's in step 3 .",
            "you need to just check city of customers in step 2 and last city vehicles 's in step 3 .",
            "you need to just check customer status code of vehicles in step 2 and last customer status code staff 's in step 3 .",
            "you need to just check lesson status code of customers in step 2 and last lesson status code vehicles 's in step 3 .",
            "you need to just check staff id of vehicles in step 2 and last staff id staff 's in step 3 .",
            "you need to just check first name of customers in step 2 and last name of staff 's in step 3 .",
            "you need to just check lesson status code of addresses in step 2 and last lesson status code staff 's in step 3 .",
            "you need to just check middle name of customers in step 2 and last middle name vehicles 's in step 3 .",
            "you need to just check country of customers in step 2 and last country lessons 's in step 3 .",
            "you need to just check date left staff of customers in step 2 and last date left staff lessons 's in step 3 .",
            "you need to just check first name of customers in step 2 and last first name vehicles 's in step 3 .",
            "you need to just check lesson date of customer payments in step 2 and last lesson date staff 's in step 3 .",
            "you need to just check state province county of addresses in step 2 and last state province county staff 's in step 3 .",
            "you need to just check vehicle id of lessons in step 2 and last vehicle id staff 's in step 3 .",
            "you need to just check line 1 number building of customers in step 2 and last line 1 number building addresses 's in step 3 .",
            "you need to just check customer address id of customer payments in step 2 and last customer address id staff 's in step 3 .",
            "you need to just check customer id of customers in step 2 and last name of staff 's in step 3 .",
            "you need to just check lesson time of addresses in step 2 and last lesson time staff 's in step 3 .",
            "you need to just check lesson time of customer payments in step 2 and last lesson time staff 's in step 3 .",
            "you need to just check address id of vehicles in step 2 and last address id staff 's in step 3 .",
            "you need to just check amount outstanding of lessons in step 2 and last amount outstanding staff 's in step 3 .",
            "you need to just check staff id of customers in step 2 and last staff id addresses 's in step 3 .",
            "you need to just check country of lessons in step 2 and last country staff 's in step 3 .",
            "you need to just check vehicle id of vehicles in step 2 and last vehicle id staff 's in step 3 .",
            "you need to just check staff id of customers in step 2 and last staff id vehicles 's in step 3 .",
            "you need to just check cell mobile phone number of vehicles in step 2 and last cell mobile phone number staff 's in step 3 .",
            "you need to just check vehicle details of vehicles in step 2 and last vehicle details staff 's in step 3 .",
            "you need to just check zip postcode of vehicles in step 2 and last zip postcode staff 's in step 3 .",
            "you need to just check cell mobile phone number of addresses in step 2 and last cell mobile phone number staff 's in step 3 .",
            "you need to just check price of customers in step 2 and last price vehicles 's in step 3 .",
            "you need to just check staff address id of customers in step 2 and last staff address id lessons 's in step 3 .",
            "you need to just check address id of customers in step 2 and last name of staff 's in step 3 .",
            "you need to just check phone number of customers in step 2 and last phone number addresses 's in step 3 .",
            "you need to just check amount outstanding of customers in step 2 and last amount outstanding lessons 's in step 3 .",
            "you need to just check nickname of customer payments in step 2 and last nickname staff 's in step 3 .",
            "you need to just check state province county of customers in step 2 and last state province county vehicles 's in step 3 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and graduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "You need to use csu fees year and campuses.",
        "negative_examples": [
            "you need to use csu fees year and id .",
            "you need to use csu fees year and location .",
            "you need to use csu fees year and county .",
            "you need to use csu fees year and campus fee .",
            "you need to use csu fees year and degrees .",
            "you need to use csu fees year and discipline .",
            "you need to use csu fees year and undergraduate .",
            "you need to use csu fees year and graduate .",
            "you need to use csu fees year and totalenrollment ay .",
            "you need to use csu fees year and fte ay .",
            "you need to use csu fees year and faculty .",
            "you need to use csu fees id and campuses .",
            "you need to use csu fees location and campuses .",
            "you need to use csu fees county and campuses .",
            "you need to use csu fees campus fee and campuses .",
            "you need to use csu fees degrees and campuses .",
            "you need to use csu fees discipline and campuses .",
            "you need to use csu fees undergraduate and campuses .",
            "you need to use csu fees graduate and campuses .",
            "you need to use csu fees totalenrollment ay and campuses .",
            "you need to use csu fees fte ay and campuses .",
            "you need to use csu fees faculty and campuses ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the campuses 's campus equals San Jose State University and degrees 's year equals 2000 conditions in place of the county equals San Jose State University and faculty 's year equals 2000 conditions . find degrees in place of summation of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                36
            ],
            [
                55,
                56
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                37,
                54
            ],
            [
                57,
                63
            ]
        ],
        "positive_example": "I want the total of degrees, campus and year.",
        "negative_examples": [
            "i want the total of enrollments , totalenrollment ay and year .",
            "i want the total of enrollments , location and year .",
            "i want the total of campus fee , campus and year .",
            "i want the total of faculty , totalenrollment ay and year .",
            "i want the total of campuses , discipline and year .",
            "i want the total of enrollments , campus and year .",
            "i want the total of degrees , year and year .",
            "i want the total of faculty , fte ay and year .",
            "i want the total of discipline enrollments , discipline and year .",
            "i want the total of csu fees , undergraduate and year .",
            "i want the total of csu fees , campus fee and year .",
            "i want the total of faculty , undergraduate and year .",
            "i want the total of discipline enrollments , year and year .",
            "i want the total of discipline enrollments , id and year .",
            "i want the total of totalenrollment ay , campus and year .",
            "i want the total of campuses , location and year .",
            "i want the total of degrees , discipline and year .",
            "i want the total of year , campus and year .",
            "i want the total of csu fees , fte ay and year .",
            "i want the total of csu fees , discipline and year .",
            "i want the total of faculty , discipline and year .",
            "i want the total of campuses , year and year .",
            "i want the total of enrollments , fte ay and year .",
            "i want the total of discipline enrollments , county and year .",
            "i want the total of csu fees , year and year .",
            "i want the total of faculty , year and year .",
            "i want the total of discipline enrollments , undergraduate and year .",
            "i want the total of id , campus and year .",
            "i want the total of degrees , totalenrollment ay and year .",
            "i want the total of csu fees , location and year .",
            "i want the total of county , campus and year .",
            "i want the total of campuses , id and year .",
            "i want the total of campuses , graduate and year .",
            "i want the total of discipline , campus and year .",
            "i want the total of faculty , county and year .",
            "i want the total of enrollments , undergraduate and year .",
            "i want the total of faculty , id and year .",
            "i want the total of discipline enrollments , location and year .",
            "i want the total of campuses , campus and year .",
            "i want the total of fte ay , campus and year .",
            "i want the total of discipline enrollments , faculty and year .",
            "i want the total of discipline enrollments , campus fee and year .",
            "i want the total of csu fees , faculty and year .",
            "i want the total of degrees , campus fee and year .",
            "i want the total of degrees , faculty and year .",
            "i want the total of undergraduate , campus and year .",
            "i want the total of csu fees , totalenrollment ay and year .",
            "i want the total of enrollments , year and year .",
            "i want the total of degrees , fte ay and year .",
            "i want the total of csu fees , graduate and year ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the county equals Los Angeles and campuses 's year greater than 1950 conditions in place of the campuses 's campus equals Los Angeles and faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                54
            ]
        ],
        "positive_example": "Provide campuses details located in Los Angeles since 1950.",
        "negative_examples": [
            "provide id details located in los angeles since 1950 .",
            "provide location details located in los angeles since 1950 .",
            "provide county details located in los angeles since 1950 .",
            "provide year details located in los angeles since 1950 .",
            "provide campus fee details located in los angeles since 1950 .",
            "provide degrees details located in los angeles since 1950 .",
            "provide discipline details located in los angeles since 1950 .",
            "provide undergraduate details located in los angeles since 1950 .",
            "provide graduate details located in los angeles since 1950 .",
            "provide totalenrollment ay details located in los angeles since 1950 .",
            "provide fte ay details located in los angeles since 1950 .",
            "provide faculty details located in los angeles since 1950 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the discipline enrollments 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "Replace discipline enrollment' year with csu fees for campuses.",
        "negative_examples": [
            "replace degrees ' degrees with csu fees for campuses .",
            "replace discipline enrollment ' location with csu fees for campuses .",
            "replace totalenrollment ay ' year with csu fees for campuses .",
            "replace enrollments ' campus fee with csu fees for campuses .",
            "replace campuses ' fte ay with csu fees for campuses .",
            "replace discipline enrollment ' year with csu fees for discipline .",
            "replace campuses ' faculty with csu fees for campuses .",
            "replace discipline enrollment ' year with csu fees for degrees .",
            "replace degrees ' fte ay with csu fees for campuses .",
            "replace discipline enrollment ' graduate with csu fees for campuses .",
            "replace csu fees ' faculty with csu fees for campuses .",
            "replace enrollments ' undergraduate with csu fees for campuses .",
            "replace discipline enrollment ' county with csu fees for campuses .",
            "replace discipline enrollment ' year with csu fees for totalenrollment ay .",
            "replace campuses ' degrees with csu fees for campuses .",
            "replace discipline enrollment ' faculty with csu fees for campuses .",
            "replace faculty ' discipline with csu fees for campuses .",
            "replace degrees ' location with csu fees for campuses .",
            "replace campuses ' discipline with csu fees for campuses .",
            "replace discipline enrollment ' campus fee with csu fees for campuses .",
            "replace campuses ' county with csu fees for campuses .",
            "replace enrollments ' graduate with csu fees for campuses .",
            "replace csu fees ' location with csu fees for campuses .",
            "replace discipline enrollment ' fte ay with csu fees for campuses .",
            "replace id ' year with csu fees for campuses .",
            "replace enrollments ' degrees with csu fees for campuses .",
            "replace enrollments ' fte ay with csu fees for campuses .",
            "replace campuses ' id with csu fees for campuses .",
            "replace csu fees ' year with csu fees for campuses .",
            "replace campuses ' undergraduate with csu fees for campuses .",
            "replace campuses ' graduate with csu fees for campuses .",
            "replace csu fees ' discipline with csu fees for campuses .",
            "replace enrollments ' year with csu fees for campuses .",
            "replace degrees ' year with csu fees for campuses .",
            "replace enrollments ' faculty with csu fees for campuses .",
            "replace csu fees ' graduate with csu fees for campuses .",
            "replace location ' year with csu fees for campuses .",
            "replace degrees ' graduate with csu fees for campuses .",
            "replace csu fees ' county with csu fees for campuses .",
            "replace enrollments ' discipline with csu fees for campuses .",
            "replace enrollments ' county with csu fees for campuses .",
            "replace degrees ' undergraduate with csu fees for campuses .",
            "replace undergraduate ' year with csu fees for campuses .",
            "replace campuses ' location with csu fees for campuses .",
            "replace discipline enrollment ' year with csu fees for graduate .",
            "replace discipline enrollment ' year with csu fees for id .",
            "replace csu fees ' fte ay with csu fees for campuses .",
            "replace faculty ' faculty with csu fees for campuses .",
            "replace csu fees ' totalenrollment ay with csu fees for campuses .",
            "replace discipline enrollment ' discipline with csu fees for campuses ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the rating table besides the movie table . additionally make sure that year is equals maximum year movie . find maximum rating stars in place of title . you should not find the largest of the results . show me all the results .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                23
            ],
            [
                24,
                27
            ],
            [
                33,
                48
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                28,
                32
            ]
        ],
        "positive_example": "you need to use rating's star instead of title.",
        "negative_examples": [
            "you need to use movie 's star instead of title .",
            "you need to use reviewer 's star instead of title .",
            "you need to use rating 's star instead of movie id .",
            "you need to use rating 's star instead of year .",
            "you need to use rating 's star instead of director .",
            "you need to use rating 's star instead of reviewer id .",
            "you need to use rating 's star instead of name .",
            "you need to use rating 's star instead of rating stars .",
            "you need to use rating 's star instead of rating date .",
            "you need to use movie 's star instead of movie id .",
            "you need to use movie 's star instead of year .",
            "you need to use movie 's star instead of director .",
            "you need to use movie 's star instead of reviewer id .",
            "you need to use movie 's star instead of name .",
            "you need to use movie 's star instead of rating stars .",
            "you need to use movie 's star instead of rating date .",
            "you need to use reviewer 's star instead of movie id .",
            "you need to use reviewer 's star instead of year .",
            "you need to use reviewer 's star instead of director .",
            "you need to use reviewer 's star instead of reviewer id .",
            "you need to use reviewer 's star instead of name .",
            "you need to use reviewer 's star instead of rating stars .",
            "you need to use reviewer 's star instead of rating date ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2, delete the condition \"and faculty 's campuses equals 1\".",
        "negative_examples": [
            "in step 2 , delete the condition \" and campuses 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and csu fees 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and degrees 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and discipline enrollments 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and enrollments 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and id 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and location 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and county 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and year 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and campus fee 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and discipline 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and undergraduate 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and graduate 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and totalenrollment ay 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and fte ay 's campuses equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's id equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's location equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's county equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's year equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's campus fee equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's degrees equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's discipline equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's undergraduate equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's graduate equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's totalenrollment ay equals 1 \" .",
            "in step 2 , delete the condition \" and faculty 's fte ay equals 1 \" ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 3 , additionally find rating 's movie id . order the results by number of rows in place of summation of rating stars .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                11,
                17
            ]
        ],
        "secondary_span": [
            [
                18,
                25
            ]
        ],
        "positive_example": "In step 2 find number of rows of each value of movie id of rating table .",
        "negative_examples": [
            "in step 2 find number of rows of each value of movie id of movie table .",
            "in step 2 find number of rows of each value of movie id of reviewer table .",
            "in step 2 find number of rows of each value of title of rating table .",
            "in step 2 find number of rows of each value of year of rating table .",
            "in step 2 find number of rows of each value of director of rating table .",
            "in step 2 find number of rows of each value of reviewer id of rating table .",
            "in step 2 find number of rows of each value of name of rating table .",
            "in step 2 find number of rows of each value of rating stars of rating table .",
            "in step 2 find number of rows of each value of rating date of rating table .",
            "in step 2 find number of rows of each value of title of movie table .",
            "in step 2 find number of rows of each value of year of movie table .",
            "in step 2 find number of rows of each value of director of movie table .",
            "in step 2 find number of rows of each value of reviewer id of movie table .",
            "in step 2 find number of rows of each value of name of movie table .",
            "in step 2 find number of rows of each value of rating stars of movie table .",
            "in step 2 find number of rows of each value of rating date of movie table .",
            "in step 2 find number of rows of each value of title of reviewer table .",
            "in step 2 find number of rows of each value of year of reviewer table .",
            "in step 2 find number of rows of each value of director of reviewer table .",
            "in step 2 find number of rows of each value of reviewer id of reviewer table .",
            "in step 2 find number of rows of each value of name of reviewer table .",
            "in step 2 find number of rows of each value of rating stars of reviewer table .",
            "in step 2 find number of rows of each value of rating date of reviewer table ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "do not return total .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "You need to delete 1st total.",
        "negative_examples": [
            "you need to delete 1st body builder id .",
            "you need to delete 1st people id .",
            "you need to delete 1st snatch .",
            "you need to delete 1st clean jerk .",
            "you need to delete 1st name .",
            "you need to delete 1st height .",
            "you need to delete 1st weight .",
            "you need to delete 1st birth date .",
            "you need to delete 1st birth place ."
        ],
        "neg_len": 9
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the rating table besides the movie table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "You should calculate ratings.",
        "negative_examples": [
            "you should calculate movie .",
            "you should calculate reviewer ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                4,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                20
            ]
        ],
        "positive_example": "In step 1 need to count the number of stores of stores using store district instead also make sure store's type equals Flagship",
        "negative_examples": [
            "in step 1 need to count the number of stores of stores using product instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using store product instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of product of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of district of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of store product of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using product id instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using dimensions instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using dpi instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using pages per minute color instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using max page size instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using interface instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using store id instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using store name instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using type instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using area size instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using number of product category instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using ranking instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using district id instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using district name instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using headquartered city instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using city population instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of stores of stores using city area instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of product id of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of dimensions of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of dpi of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of pages per minute color of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of max page size of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of interface of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of store id of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of store name of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of type of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of area size of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of number of product category of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of ranking of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of district id of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of district name of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of headquartered city of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of city population of stores using store district instead also make sure store 's type equals flagship",
            "in step 1 need to count the number of city area of stores using store district instead also make sure store 's type equals flagship"
        ],
        "neg_len": 40
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find date of birth in place of date left staff .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "You should only determine the date of birth.",
        "negative_examples": [
            "you should only determine the address id .",
            "you should only determine the line 1 number building .",
            "you should only determine the city .",
            "you should only determine the zip postcode .",
            "you should only determine the state province county .",
            "you should only determine the country .",
            "you should only determine the staff id .",
            "you should only determine the staff address id .",
            "you should only determine the nickname .",
            "you should only determine the first name .",
            "you should only determine the middle name .",
            "you should only determine the last name .",
            "you should only determine the date joined staff .",
            "you should only determine the date left staff .",
            "you should only determine the vehicle id .",
            "you should only determine the vehicle details .",
            "you should only determine the customer id .",
            "you should only determine the customer address id .",
            "you should only determine the customer status code .",
            "you should only determine the date became customer .",
            "you should only determine the amount outstanding .",
            "you should only determine the email address .",
            "you should only determine the phone number .",
            "you should only determine the cell mobile phone number .",
            "you should only determine the datetime payment .",
            "you should only determine the payment method code .",
            "you should only determine the amount payment .",
            "you should only determine the lesson id .",
            "you should only determine the lesson status code .",
            "you should only determine the lesson date .",
            "you should only determine the lesson time .",
            "you should only determine the price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ]
        ],
        "positive_example": "Remove \"and faculty's year greater than 2002\".",
        "negative_examples": [
            "remove \" and discipline enrollments 's discipline greater than 2002 \" .",
            "remove \" and degrees 's location greater than 2002 \" .",
            "remove \" and csu fees 's totalenrollment ay greater than 2002 \" .",
            "remove \" and campuses 's year greater than 2002 \" .",
            "remove \" and campuses 's undergraduate greater than 2002 \" .",
            "remove \" and campuses 's id greater than 2002 \" .",
            "remove \" and faculty 's discipline greater than 2002 \" .",
            "remove \" and campuses 's totalenrollment ay greater than 2002 \" .",
            "remove \" and csu fees 's degrees greater than 2002 \" .",
            "remove \" and campus 's year greater than 2002 \" .",
            "remove \" and csu fees 's campus greater than 2002 \" .",
            "remove \" and faculty 's graduate greater than 2002 \" .",
            "remove \" and campuses 's county greater than 2002 \" .",
            "remove \" and enrollments 's year greater than 2002 \" .",
            "remove \" and enrollments 's fte ay greater than 2002 \" .",
            "remove \" and csu fees 's campus fee greater than 2002 \" .",
            "remove \" and csu fees 's graduate greater than 2002 \" .",
            "remove \" and enrollments 's graduate greater than 2002 \" .",
            "remove \" and faculty 's id greater than 2002 \" .",
            "remove \" and graduate 's year greater than 2002 \" .",
            "remove \" and discipline enrollments 's fte ay greater than 2002 \" .",
            "remove \" and degrees 's totalenrollment ay greater than 2002 \" .",
            "remove \" and degrees 's county greater than 2002 \" .",
            "remove \" and csu fees 's year greater than 2002 \" .",
            "remove \" and degrees 's fte ay greater than 2002 \" .",
            "remove \" and degrees 's degrees greater than 2002 \" .",
            "remove \" and enrollments 's undergraduate greater than 2002 \" .",
            "remove \" and discipline enrollments 's degrees greater than 2002 \" .",
            "remove \" and discipline enrollments 's id greater than 2002 \" .",
            "remove \" and csu fees 's undergraduate greater than 2002 \" .",
            "remove \" and enrollments 's degrees greater than 2002 \" .",
            "remove \" and enrollments 's id greater than 2002 \" .",
            "remove \" and location 's year greater than 2002 \" .",
            "remove \" and enrollments 's campus greater than 2002 \" .",
            "remove \" and discipline enrollments 's year greater than 2002 \" .",
            "remove \" and discipline enrollments 's location greater than 2002 \" .",
            "remove \" and degrees 's id greater than 2002 \" .",
            "remove \" and enrollments 's campus fee greater than 2002 \" .",
            "remove \" and campuses 's discipline greater than 2002 \" .",
            "remove \" and csu fees 's fte ay greater than 2002 \" .",
            "remove \" and faculty 's undergraduate greater than 2002 \" .",
            "remove \" and campuses 's fte ay greater than 2002 \" .",
            "remove \" and faculty 's county greater than 2002 \" .",
            "remove \" and discipline enrollments 's undergraduate greater than 2002 \" .",
            "remove \" and degrees 's year greater than 2002 \" .",
            "remove \" and faculty 's fte ay greater than 2002 \" .",
            "remove \" and enrollments 's discipline greater than 2002 \" .",
            "remove \" and undergraduate 's year greater than 2002 \" .",
            "remove \" and discipline enrollments 's campus greater than 2002 \" .",
            "remove \" and degrees 's graduate greater than 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the staff table besides the addresses table . in step 2 , make sure that the corresponding value in step 1 between 2 and 4 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                34
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "also use staff table In step 1 , Add less than or equals 4 In step 2.",
        "negative_examples": [
            "also use addresses table in step 1 , add less than or equals 4 in step 2 .",
            "also use vehicles table in step 1 , add less than or equals 4 in step 2 .",
            "also use customers table in step 1 , add less than or equals 4 in step 2 .",
            "also use customer payments table in step 1 , add less than or equals 4 in step 2 .",
            "also use lessons table in step 1 , add less than or equals 4 in step 2 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the lessons table besides the vehicles table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Search for total rows of all the value of vehicle id from lessons table in step 1.",
        "negative_examples": [
            "search for total rows of all the value of vehicle id from addresses table in step 1 .",
            "search for total rows of all the value of vehicle id from staff table in step 1 .",
            "search for total rows of all the value of vehicle id from vehicles table in step 1 .",
            "search for total rows of all the value of vehicle id from customers table in step 1 .",
            "search for total rows of all the value of vehicle id from customer payments table in step 1 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use staff table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Need to replace addresses table with staff table .",
        "negative_examples": [
            "need to replace vehicles table with staff table .",
            "need to replace customers table with staff table .",
            "need to replace customer payments table with staff table .",
            "need to replace lessons table with staff table .",
            "need to replace addresses table with vehicles table .",
            "need to replace addresses table with customers table .",
            "need to replace addresses table with customer payments table .",
            "need to replace addresses table with lessons table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and undergraduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "From step 2, I want year and campus of campuses.",
        "negative_examples": [
            "from step 2 , i want year and id of campuses .",
            "from step 2 , i want year and location of campuses .",
            "from step 2 , i want year and county of campuses .",
            "from step 2 , i want year and campus fee of campuses .",
            "from step 2 , i want year and degrees of campuses .",
            "from step 2 , i want year and discipline of campuses .",
            "from step 2 , i want year and undergraduate of campuses .",
            "from step 2 , i want year and graduate of campuses .",
            "from step 2 , i want year and totalenrollment ay of campuses .",
            "from step 2 , i want year and fte ay of campuses .",
            "from step 2 , i want year and faculty of campuses .",
            "from step 2 , i want id and campus of campuses .",
            "from step 2 , i want location and campus of campuses .",
            "from step 2 , i want county and campus of campuses .",
            "from step 2 , i want campus fee and campus of campuses .",
            "from step 2 , i want degrees and campus of campuses .",
            "from step 2 , i want discipline and campus of campuses .",
            "from step 2 , i want undergraduate and campus of campuses .",
            "from step 2 , i want graduate and campus of campuses .",
            "from step 2 , i want totalenrollment ay and campus of campuses .",
            "from step 2 , i want fte ay and campus of campuses .",
            "from step 2 , i want faculty and campus of campuses ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building description . in step 2 , additionally make sure that bathroom count greater than 2 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "you need to just search for the bathroom count from apartments table in step 1.",
        "negative_examples": [
            "you need to just search for the status date from apartment facilities table in step 1 .",
            "you need to just search for the gender code from apartment bookings table in step 1 .",
            "you need to just search for the available yes or no from apartment buildings table in step 1 .",
            "you need to just search for the guest last name from apartment buildings table in step 1 .",
            "you need to just search for the building manager from apartment facilities table in step 1 .",
            "you need to just search for the facility code from apartment buildings table in step 1 .",
            "you need to just search for the bedroom count from apartment buildings table in step 1 .",
            "you need to just search for the building phone from apartment buildings table in step 1 .",
            "you need to just search for the apartment booking id from view unit status table in step 1 .",
            "you need to just search for the apartment number from apartments table in step 1 .",
            "you need to just search for the guest first name from guests table in step 1 .",
            "you need to just search for the building full name from guests table in step 1 .",
            "you need to just search for the room count from view unit status table in step 1 .",
            "you need to just search for the bedroom count from apartment facilities table in step 1 .",
            "you need to just search for the bathroom count from guests table in step 1 .",
            "you need to just search for the guest id from apartments table in step 1 .",
            "you need to just search for the guest id from apartment buildings table in step 1 .",
            "you need to just search for the available yes or no from apartments table in step 1 .",
            "you need to just search for the facility code from view unit status table in step 1 .",
            "you need to just search for the booking end date from guests table in step 1 .",
            "you need to just search for the bedroom count from view unit status table in step 1 .",
            "you need to just search for the date of birth from apartment bookings table in step 1 .",
            "you need to just search for the building id from apartments table in step 1 .",
            "you need to just search for the booking end date from apartments table in step 1 .",
            "you need to just search for the building full name from apartment facilities table in step 1 .",
            "you need to just search for the booking end date from apartment facilities table in step 1 .",
            "you need to just search for the apartment id from apartment facilities table in step 1 .",
            "you need to just search for the guest last name from apartment facilities table in step 1 .",
            "you need to just search for the guest first name from apartments table in step 1 .",
            "you need to just search for the building short name from apartment buildings table in step 1 .",
            "you need to just search for the status date from guests table in step 1 .",
            "you need to just search for the booking start date from apartment bookings table in step 1 .",
            "you need to just search for the building id from guests table in step 1 .",
            "you need to just search for the apartment number from apartment buildings table in step 1 .",
            "you need to just search for the apartment type code from apartment buildings table in step 1 .",
            "you need to just search for the building description from guests table in step 1 .",
            "you need to just search for the bathroom count from apartment bookings table in step 1 .",
            "you need to just search for the building full name from apartment buildings table in step 1 .",
            "you need to just search for the building address from apartment facilities table in step 1 .",
            "you need to just search for the booking status code from apartment bookings table in step 1 .",
            "you need to just search for the building phone from view unit status table in step 1 .",
            "you need to just search for the gender code from view unit status table in step 1 .",
            "you need to just search for the guest id from view unit status table in step 1 .",
            "you need to just search for the room count from apartments table in step 1 .",
            "you need to just search for the available yes or no from view unit status table in step 1 .",
            "you need to just search for the apartment number from guests table in step 1 .",
            "you need to just search for the apartment id from guests table in step 1 .",
            "you need to just search for the booking status code from guests table in step 1 .",
            "you need to just search for the available yes or no from guests table in step 1 .",
            "you need to just search for the bedroom count from apartment bookings table in step 1 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "find hardware model name in place of accreditation type .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Need to search name of hardware model and equals instead of First accreditation type and contains respectively.",
        "negative_examples": [
            "need to search name of hardware model and equals instead of first model name and contains respectively .",
            "need to search name of hardware model and equals instead of first launch year and contains respectively .",
            "need to search name of hardware model and equals instead of first ram mib and contains respectively .",
            "need to search name of hardware model and equals instead of first rom mib and contains respectively .",
            "need to search name of hardware model and equals instead of first slots and contains respectively .",
            "need to search name of hardware model and equals instead of first wifi and contains respectively .",
            "need to search name of hardware model and equals instead of first bluetooth and contains respectively .",
            "need to search name of hardware model and equals instead of first graphics mode and contains respectively .",
            "need to search name of hardware model and equals instead of first char cells and contains respectively .",
            "need to search name of hardware model and equals instead of first pixels and contains respectively .",
            "need to search name of hardware model and equals instead of first hardware colours and contains respectively .",
            "need to search name of hardware model and equals instead of first used kb and contains respectively .",
            "need to search name of hardware model and equals instead of first map and contains respectively .",
            "need to search name of hardware model and equals instead of first type and contains respectively .",
            "need to search name of hardware model and equals instead of first company name and contains respectively .",
            "need to search name of hardware model and equals instead of first hardware model name and contains respectively .",
            "need to search name of hardware model and equals instead of first accreditation level and contains respectively .",
            "need to search name of hardware model and equals instead of first date and contains respectively .",
            "need to search name of hardware model and equals instead of first chip model and contains respectively .",
            "need to search name of hardware model and equals instead of first screen mode and contains respectively ."
        ],
        "neg_len": 20
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                52
            ]
        ],
        "positive_example": "You should use csu fees 's year and campuses in place of 1st faculty 's year and 2nd faculty 's year respectively.",
        "negative_examples": [
            "you should use csu fees 's degrees and campuses in place of 1st campuses 's degrees and 2nd faculty 's degrees respectively .",
            "you should use csu fees 's graduate and campuses in place of 1st enrollments 's graduate and 2nd faculty 's graduate respectively .",
            "you should use csu fees 's undergraduate and campuses in place of 1st enrollments 's undergraduate and 2nd faculty 's undergraduate respectively .",
            "you should use csu fees 's degrees and campuses in place of 1st enrollments 's degrees and 2nd faculty 's degrees respectively .",
            "you should use csu fees 's degrees and campuses in place of 1st degrees 's degrees and 2nd faculty 's degrees respectively .",
            "you should use csu fees 's discipline and campuses in place of 1st discipline enrollments 's discipline and 2nd faculty 's discipline respectively .",
            "you should use csu fees 's campus fee and campuses in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's id and campuses in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's graduate and campuses in place of 1st discipline enrollments 's graduate and 2nd faculty 's graduate respectively .",
            "you should use csu fees 's year and campuses in place of 1st county 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's campus fee and campuses in place of 1st enrollments 's campus fee and 2nd faculty 's campus fee respectively .",
            "you should use csu fees 's county and campuses in place of 1st csu fees 's county and 2nd faculty 's county respectively .",
            "you should use csu fees 's discipline and campuses in place of 1st csu fees 's discipline and 2nd faculty 's discipline respectively .",
            "you should use csu fees 's year and campuses in place of 1st graduate 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's location and campuses in place of 1st degrees 's location and 2nd faculty 's location respectively .",
            "you should use csu fees 's year and fte ay in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's fte ay and campuses in place of 1st campuses 's fte ay and 2nd faculty 's fte ay respectively .",
            "you should use csu fees 's year and campuses in place of 1st totalenrollment ay 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's discipline and campuses in place of 1st enrollments 's discipline and 2nd faculty 's discipline respectively .",
            "you should use csu fees 's year and campuses in place of 1st discipline enrollments 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's county and campuses in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's graduate and campuses in place of 1st degrees 's graduate and 2nd faculty 's graduate respectively .",
            "you should use csu fees 's undergraduate and campuses in place of 1st csu fees 's undergraduate and 2nd faculty 's undergraduate respectively .",
            "you should use csu fees 's year and graduate in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's graduate and campuses in place of 1st csu fees 's graduate and 2nd faculty 's graduate respectively .",
            "you should use csu fees 's year and totalenrollment ay in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's fte ay and campuses in place of 1st csu fees 's fte ay and 2nd faculty 's fte ay respectively .",
            "you should use csu fees 's id and campuses in place of 1st enrollments 's id and 2nd faculty 's id respectively .",
            "you should use csu fees 's id and campuses in place of 1st discipline enrollments 's id and 2nd faculty 's id respectively .",
            "you should use csu fees 's year and campuses in place of 1st degrees 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's totalenrollment ay and campuses in place of 1st csu fees 's totalenrollment ay and 2nd faculty 's totalenrollment ay respectively .",
            "you should use csu fees 's undergraduate and campuses in place of 1st discipline enrollments 's undergraduate and 2nd faculty 's undergraduate respectively .",
            "you should use csu fees 's totalenrollment ay and campuses in place of 1st campuses 's totalenrollment ay and 2nd faculty 's totalenrollment ay respectively .",
            "you should use csu fees 's campus fee and campuses in place of 1st campuses 's campus fee and 2nd faculty 's campus fee respectively .",
            "you should use csu fees 's county and campuses in place of 1st campuses 's county and 2nd faculty 's county respectively .",
            "you should use csu fees 's year and campuses in place of 1st fte ay 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's year and campuses in place of 1st csu fees 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's location and campuses in place of 1st discipline enrollments 's location and 2nd faculty 's location respectively .",
            "you should use csu fees 's year and campuses in place of 1st location 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's location and campuses in place of 1st csu fees 's location and 2nd faculty 's location respectively .",
            "you should use csu fees 's discipline and campuses in place of 1st degrees 's discipline and 2nd faculty 's discipline respectively .",
            "you should use csu fees 's undergraduate and campuses in place of 1st campuses 's undergraduate and 2nd faculty 's undergraduate respectively .",
            "you should use csu fees 's fte ay and campuses in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's county and campuses in place of 1st enrollments 's county and 2nd faculty 's county respectively .",
            "you should use csu fees 's degrees and campuses in place of 1st csu fees 's degrees and 2nd faculty 's degrees respectively .",
            "you should use csu fees 's degrees and campuses in place of 1st discipline enrollments 's degrees and 2nd faculty 's degrees respectively .",
            "you should use csu fees 's graduate and campuses in place of 1st faculty 's year and 2nd faculty 's year respectively .",
            "you should use csu fees 's county and campuses in place of 1st degrees 's county and 2nd faculty 's county respectively .",
            "you should use csu fees 's campus fee and campuses in place of 1st discipline enrollments 's campus fee and 2nd faculty 's campus fee respectively .",
            "you should use csu fees 's totalenrollment ay and campuses in place of 1st faculty 's year and 2nd faculty 's year respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use financial transactions table in place of customers table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "I want table of financial transactions.",
        "negative_examples": [
            "i want table of customers .",
            "i want table of orders .",
            "i want table of invoices .",
            "i want table of accounts .",
            "i want table of product categories .",
            "i want table of products .",
            "i want table of order items .",
            "i want table of invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "consider the building full name like % court % conditions in place of the building short name like court conditions .",
        "primary_span": [
            [
                0,
                9
            ]
        ],
        "secondary_span": [
            [
                10,
                20
            ]
        ],
        "positive_example": "Replace building short name with building full name .",
        "negative_examples": [
            "replace building id with building full name .",
            "replace building description with building full name .",
            "replace building address with building full name .",
            "replace building manager with building full name .",
            "replace building phone with building full name .",
            "replace apartment id with building full name .",
            "replace apartment type code with building full name .",
            "replace apartment number with building full name .",
            "replace bathroom count with building full name .",
            "replace bedroom count with building full name .",
            "replace room count with building full name .",
            "replace facility code with building full name .",
            "replace guest id with building full name .",
            "replace gender code with building full name .",
            "replace guest first name with building full name .",
            "replace guest last name with building full name .",
            "replace date of birth with building full name .",
            "replace apartment booking id with building full name .",
            "replace booking status code with building full name .",
            "replace booking start date with building full name .",
            "replace booking end date with building full name .",
            "replace status date with building full name .",
            "replace available yes or no with building full name .",
            "replace building short name with building id .",
            "replace building short name with building description .",
            "replace building short name with building address .",
            "replace building short name with building manager .",
            "replace building short name with building phone .",
            "replace building short name with apartment id .",
            "replace building short name with apartment type code .",
            "replace building short name with apartment number .",
            "replace building short name with bathroom count .",
            "replace building short name with bedroom count .",
            "replace building short name with room count .",
            "replace building short name with facility code .",
            "replace building short name with guest id .",
            "replace building short name with gender code .",
            "replace building short name with guest first name .",
            "replace building short name with guest last name .",
            "replace building short name with date of birth .",
            "replace building short name with apartment booking id .",
            "replace building short name with booking status code .",
            "replace building short name with booking start date .",
            "replace building short name with booking end date .",
            "replace building short name with status date .",
            "replace building short name with available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 3 , order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                30
            ]
        ],
        "positive_example": "In step 2 , replace average with summation of degrees . In step 3 , change faculty 's campuses to campuses ' campuses .",
        "negative_examples": [
            "in step 2 , replace average with summation of campuses . in step 3 , change county 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of enrollments . in step 3 , change fte ay 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of csu fees . in step 3 , change campus 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of enrollments . in step 3 , change campus 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of county . in step 3 , change enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of discipline enrollments . in step 3 , change totalenrollment ay 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of id . in step 3 , change discipline enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of discipline enrollments . in step 3 , change location 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campuses . in step 3 , change discipline 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of enrollments . in step 3 , change county 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of county . in step 3 , change csu fees 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of discipline enrollments . in step 3 , change campus fee 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of fte ay . in step 3 , change discipline enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of id . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of undergraduate . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campus fee . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of csu fees . in step 3 , change fte ay 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of location . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of enrollments . in step 3 , change id 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campus fee . in step 3 , change enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of enrollments . in step 3 , change totalenrollment ay 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of enrollments . in step 3 , change undergraduate 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of discipline enrollments . in step 3 , change graduate 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of csu fees . in step 3 , change totalenrollment ay 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of undergraduate . in step 3 , change enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of year . in step 3 , change faculty 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of csu fees . in step 3 , change year 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of fte ay . in step 3 , change enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campus . in step 3 , change csu fees 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campuses . in step 3 , change campus fee 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of discipline enrollments . in step 3 , change campus 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of graduate . in step 3 , change discipline enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campus . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of fte ay . in step 3 , change faculty 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of county . in step 3 , change faculty 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of degrees . in step 3 , change undergraduate 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campuses . in step 3 , change id 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of discipline . in step 3 , change csu fees 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of fte ay . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of year . in step 3 , change csu fees 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of enrollments . in step 3 , change graduate 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of location . in step 3 , change csu fees 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of graduate . in step 3 , change enrollments 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of degrees . in step 3 , change totalenrollment ay 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campuses . in step 3 , change faculty 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of campuses . in step 3 , change graduate 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of discipline enrollments . in step 3 , change discipline 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of year . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of county . in step 3 , change campuses 's campuses to campuses ' campuses .",
            "in step 2 , replace average with summation of fte ay . in step 3 , change csu fees 's campuses to campuses ' campuses ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find date joined staff in place of date left staff .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Use date joined staff instead of date left staff",
        "negative_examples": [
            "use date joined staff instead of amount payment",
            "use last name instead of date left staff",
            "use nickname instead of date left staff",
            "use lesson id instead of date left staff",
            "use customer address id instead of date left staff",
            "use date joined staff instead of zip postcode",
            "use country instead of date left staff",
            "use date joined staff instead of middle name",
            "use lesson time instead of date left staff",
            "use payment method code instead of date left staff",
            "use middle name instead of date left staff",
            "use date joined staff instead of payment method code",
            "use date joined staff instead of lesson time",
            "use date joined staff instead of phone number",
            "use date became customer instead of date left staff",
            "use date joined staff instead of last name",
            "use date joined staff instead of email address",
            "use staff address id instead of date left staff",
            "use date joined staff instead of city",
            "use state province county instead of date left staff",
            "use address id instead of date left staff",
            "use date joined staff instead of date of birth",
            "use amount outstanding instead of date left staff",
            "use date joined staff instead of vehicle details",
            "use customer id instead of date left staff",
            "use zip postcode instead of date left staff",
            "use date joined staff instead of first name",
            "use customer status code instead of date left staff",
            "use first name instead of date left staff",
            "use city instead of date left staff",
            "use datetime payment instead of date left staff",
            "use date joined staff instead of date became customer",
            "use price instead of date left staff",
            "use date of birth instead of date left staff",
            "use vehicle id instead of date left staff",
            "use date joined staff instead of price",
            "use line 1 number building instead of date left staff",
            "use date joined staff instead of vehicle id",
            "use date joined staff instead of lesson status code",
            "use vehicle details instead of date left staff",
            "use date joined staff instead of line 1 number building",
            "use amount payment instead of date left staff",
            "use date joined staff instead of lesson id",
            "use date joined staff instead of staff id",
            "use date joined staff instead of lesson date",
            "use date joined staff instead of address id",
            "use email address instead of date left staff",
            "use cell mobile phone number instead of date left staff",
            "use lesson date instead of date left staff",
            "use phone number instead of date left staff"
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Find campuses equals CSU and remove\"Faculty equals 357. 1\".",
        "negative_examples": [
            "find campuses equals csu and remove \" campuses equals 357 . 1 \" .",
            "find campuses equals csu and remove \" csu fees equals 357 . 1 \" .",
            "find campuses equals csu and remove \" degrees equals 357 . 1 \" .",
            "find campuses equals csu and remove \" discipline enrollments equals 357 . 1 \" .",
            "find campuses equals csu and remove \" enrollments equals 357 . 1 \" .",
            "find campuses equals csu and remove \" id equals 357 . 1 \" .",
            "find campuses equals csu and remove \" campus equals 357 . 1 \" .",
            "find campuses equals csu and remove \" location equals 357 . 1 \" .",
            "find campuses equals csu and remove \" county equals 357 . 1 \" .",
            "find campuses equals csu and remove \" year equals 357 . 1 \" .",
            "find campuses equals csu and remove \" campus fee equals 357 . 1 \" .",
            "find campuses equals csu and remove \" discipline equals 357 . 1 \" .",
            "find campuses equals csu and remove \" undergraduate equals 357 . 1 \" .",
            "find campuses equals csu and remove \" graduate equals 357 . 1 \" .",
            "find campuses equals csu and remove \" totalenrollment ay equals 357 . 1 \" .",
            "find campuses equals csu and remove \" fte ay equals 357 . 1 \" ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find minimum snatch in place of minimum total .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "You have to use snatch instead of total.",
        "negative_examples": [
            "you have to use body builder id instead of total .",
            "you have to use people id instead of total .",
            "you have to use clean jerk instead of total .",
            "you have to use name instead of total .",
            "you have to use height instead of total .",
            "you have to use weight instead of total .",
            "you have to use birth date instead of total .",
            "you have to use birth place instead of total .",
            "you have to use snatch instead of body builder id .",
            "you have to use snatch instead of people id .",
            "you have to use snatch instead of clean jerk .",
            "you have to use snatch instead of name .",
            "you have to use snatch instead of height .",
            "you have to use snatch instead of weight .",
            "you have to use snatch instead of birth date .",
            "you have to use snatch instead of birth place ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "use chip model table in place of phone table . consider the wifi equals No conditions in place of the screen mode equals No conditions .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                25
            ]
        ],
        "positive_example": "Use wifi and chip model rather than replace screen and phone respectively.",
        "negative_examples": [
            "use wifi and hardware colours rather than replace screen and phone respectively .",
            "use wifi and hardware model name rather than replace screen and phone respectively .",
            "use wifi and chip model rather than replace screen and launch year respectively .",
            "use ram mib and chip model rather than replace screen and phone respectively .",
            "use accreditation level and chip model rather than replace screen and screen mode respectively .",
            "use wifi and pixels rather than replace screen and screen mode respectively .",
            "use wifi and chip model rather than replace screen and used kb respectively .",
            "use wifi and ram mib rather than replace screen and screen mode respectively .",
            "use bluetooth and chip model rather than replace screen and screen mode respectively .",
            "use wifi and accreditation level rather than replace screen and phone respectively .",
            "use hardware colours and chip model rather than replace screen and phone respectively .",
            "use wifi and bluetooth rather than replace screen and screen mode respectively .",
            "use wifi and pixels rather than replace screen and phone respectively .",
            "use pixels and chip model rather than replace screen and phone respectively .",
            "use map and screen mode rather than replace screen and phone respectively .",
            "use char cells and chip model rather than replace screen and phone respectively .",
            "use wifi and slots rather than replace screen and phone respectively .",
            "use wifi and chip model rather than replace screen and model name respectively .",
            "use rom mib and chip model rather than replace screen and screen mode respectively .",
            "use wifi and chip model rather than replace screen and rom mib respectively .",
            "use wifi and rom mib rather than replace screen and screen mode respectively .",
            "use wifi and model name rather than replace screen and screen mode respectively .",
            "use wifi and chip model rather than replace screen and hardware colours respectively .",
            "use map and chip model rather than replace screen and phone respectively .",
            "use model name and chip model rather than replace screen and phone respectively .",
            "use model name and chip model rather than replace screen and screen mode respectively .",
            "use wifi and date rather than replace screen and screen mode respectively .",
            "use wifi and launch year rather than replace screen and screen mode respectively .",
            "use accreditation level and screen mode rather than replace screen and phone respectively .",
            "use map and chip model rather than replace screen and screen mode respectively .",
            "use hardware colours and screen mode rather than replace screen and phone respectively .",
            "use launch year and chip model rather than replace screen and phone respectively .",
            "use bluetooth and chip model rather than replace screen and phone respectively .",
            "use wifi and graphics mode rather than replace screen and phone respectively .",
            "use used kb and chip model rather than replace screen and phone respectively .",
            "use wifi and chip model rather than replace screen and bluetooth respectively .",
            "use hardware model name and screen mode rather than replace screen and phone respectively .",
            "use wifi and chip model rather than replace screen and slots respectively .",
            "use pixels and chip model rather than replace screen and screen mode respectively .",
            "use wifi and company name rather than replace screen and screen mode respectively .",
            "use screen mode and chip model rather than replace screen and screen mode respectively .",
            "use wifi and launch year rather than replace screen and phone respectively .",
            "use wifi and map rather than replace screen and screen mode respectively .",
            "use wifi and chip model rather than replace screen and accreditation level respectively .",
            "use wifi and chip model rather than replace screen and date respectively .",
            "use accreditation type and chip model rather than replace screen and screen mode respectively .",
            "use wifi and screen mode rather than replace screen and screen mode respectively .",
            "use bluetooth and screen mode rather than replace screen and phone respectively .",
            "use model name and screen mode rather than replace screen and phone respectively .",
            "use accreditation type and chip model rather than replace screen and phone respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use invoices table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "I want invoices table.",
        "negative_examples": [
            "i want customers table .",
            "i want orders table .",
            "i want accounts table .",
            "i want product categories table .",
            "i want products table .",
            "i want financial transactions table .",
            "i want order items table .",
            "i want invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number equals Columbus Square conditions . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ],
            [
                34,
                38
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ],
            [
                39,
                45
            ]
        ],
        "positive_example": "Find total bedroom count of apartments table , not number of rows . Replace apartment number with building short name .",
        "negative_examples": [
            "find total bedroom count of apartments table , not number of rows . replace apartment number with building id .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with building full name .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with building description .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with building address .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with building manager .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with building phone .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with apartment id .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with apartment type code .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with apartment number .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with bathroom count .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with bedroom count .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with room count .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with facility code .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with guest id .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with gender code .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with guest first name .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with guest last name .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with date of birth .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with apartment booking id .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with booking status code .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with booking start date .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with booking end date .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with status date .",
            "find total bedroom count of apartments table , not number of rows . replace apartment number with available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "In rows look for the total number of faculty.",
        "negative_examples": [
            "in rows look for the total number of campuses .",
            "in rows look for the total number of csu fees .",
            "in rows look for the total number of degrees .",
            "in rows look for the total number of discipline enrollments .",
            "in rows look for the total number of enrollments .",
            "in rows look for the total number of id .",
            "in rows look for the total number of campus .",
            "in rows look for the total number of location .",
            "in rows look for the total number of county .",
            "in rows look for the total number of year .",
            "in rows look for the total number of campus fee .",
            "in rows look for the total number of discipline .",
            "in rows look for the total number of undergraduate .",
            "in rows look for the total number of graduate .",
            "in rows look for the total number of totalenrollment ay .",
            "in rows look for the total number of fte ay ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "use assessment notes table in place of reference incident type table . order the results by date of notes in place of incident type description .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                12,
                18
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "Make sure to use assessment notes and date of notes in place of reference incident type incident type description respectively.",
        "negative_examples": [
            "make sure to use reference detention type and date of notes in place of reference incident type date incident start respectively .",
            "make sure to use students in detention and address type description in place of reference incident type incident type description respectively .",
            "make sure to use addresses and date of notes in place of reference incident type last name respectively .",
            "make sure to use assessment notes and date of notes in place of detention line 3 respectively .",
            "make sure to use reference detention type and date of notes in place of reference incident type country respectively .",
            "make sure to use reference detention type and date of notes in place of reference incident type student id respectively .",
            "make sure to use teachers and date incident end in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and datetime detention end in place of reference incident type incident type description respectively .",
            "make sure to use reference detention type and date incident start in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and date of notes in place of reference incident type address type code respectively .",
            "make sure to use assessment notes and date of notes in place of teachers date left university respectively .",
            "make sure to use behavior incident and other student details in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and date of notes in place of reference detention type address type description respectively .",
            "make sure to use student addresses and date of notes in place of reference incident type state province county respectively .",
            "make sure to use assessment notes and date of notes in place of addresses detention type description respectively .",
            "make sure to use assessment notes and date of notes in place of reference incident type detention type description respectively .",
            "make sure to use addresses and datetime detention start in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and monthly rental in place of teachers incident type description respectively .",
            "make sure to use assessment notes and date address to in place of students incident type description respectively .",
            "make sure to use assessment notes and cell mobile number in place of students incident type description respectively .",
            "make sure to use behavior incident and line 2 in place of reference incident type incident type description respectively .",
            "make sure to use addresses and country in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and date of notes in place of reference incident type date incident start respectively .",
            "make sure to use reference detention type and recommendations in place of reference incident type incident type description respectively .",
            "make sure to use reference detention type and state province county in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and detention type code in place of teachers incident type description respectively .",
            "make sure to use detention and middle name in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and state province county in place of student addresses incident type description respectively .",
            "make sure to use student addresses and date of notes in place of reference incident type other student details respectively .",
            "make sure to use assessment notes and date of notes in place of teachers detention id respectively .",
            "make sure to use assessment notes and date of notes in place of reference detention type address type code respectively .",
            "make sure to use teachers and monthly rental in place of reference incident type incident type description respectively .",
            "make sure to use reference address types and address type code in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and date of notes in place of addresses incident summary respectively .",
            "make sure to use assessment notes and detention type code in place of behavior incident incident type description respectively .",
            "make sure to use assessment notes and date of notes in place of students in detention date address to respectively .",
            "make sure to use assessment notes and date of notes in place of students in detention datetime detention end respectively .",
            "make sure to use addresses and address type description in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and date of notes in place of reference address types detention type description respectively .",
            "make sure to use behavior incident and date of notes in place of reference incident type email address respectively .",
            "make sure to use assessment notes and state province county in place of reference address types incident type description respectively .",
            "make sure to use student addresses and city in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and line 2 in place of reference address types incident type description respectively .",
            "make sure to use assessment notes and date first rental in place of students incident type description respectively .",
            "make sure to use assessment notes and last name in place of student addresses incident type description respectively .",
            "make sure to use assessment notes and recommendations in place of student addresses incident type description respectively .",
            "make sure to use student addresses and country in place of reference incident type incident type description respectively .",
            "make sure to use assessment notes and incident type code in place of reference detention type incident type description respectively .",
            "make sure to use assessment notes and date of notes in place of addresses line 1 respectively .",
            "make sure to use detention and date first rental in place of reference incident type incident type description respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the financial transactions table besides the accounts table .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ]
        ],
        "positive_example": "Accounts table is wrongly placed here which needs to be substituted by financial transactions table.",
        "negative_examples": [
            "accounts table is wrongly placed here which needs to be substituted by customers table .",
            "accounts table is wrongly placed here which needs to be substituted by orders table .",
            "accounts table is wrongly placed here which needs to be substituted by invoices table .",
            "accounts table is wrongly placed here which needs to be substituted by accounts table .",
            "accounts table is wrongly placed here which needs to be substituted by product categories table .",
            "accounts table is wrongly placed here which needs to be substituted by products table .",
            "accounts table is wrongly placed here which needs to be substituted by order items table .",
            "accounts table is wrongly placed here which needs to be substituted by invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Normandie Court and building description equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "In step 2, use bedroom count and building' short name in place of bathroom count and building description also remove the Normandie Court as building's short name.",
        "negative_examples": [
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and building id also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and building short name also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and building full name also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and building address also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and building manager also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and building phone also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and apartment id also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and apartment type code also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and apartment number also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and bedroom count also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and room count also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and facility code also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and guest id also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and gender code also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and guest first name also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and guest last name also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and date of birth also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and apartment booking id also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and booking status code also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and booking start date also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and booking end date also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and status date also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bathroom count and available yes or no also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of building id and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of building short name and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of building full name and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of building address and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of building manager and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of building phone and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of apartment id and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of apartment type code and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of apartment number and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of bedroom count and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of room count and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of facility code and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of guest id and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of gender code and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of guest first name and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of guest last name and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of date of birth and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of apartment booking id and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of booking status code and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of booking start date and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of booking end date and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of status date and building description also remove the normandie court as building 's short name .",
            "in step 2 , use bedroom count and building ' short name in place of available yes or no and building description also remove the normandie court as building 's short name ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and graduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "Required campus fee of CSU fees for which San Jose State University is campuses and 1996 is the  CSU fees year.",
        "negative_examples": [
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees id .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees campus .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees location .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees county .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees campus fee .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees degrees .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees discipline .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees undergraduate .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees graduate .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees totalenrollment ay .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees fte ay .",
            "required campus fee of csu fees for which san jose state university is campuses and 1996 is the csu fees faculty ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the campuses 's campus equals San Jose State University and degrees 's year equals 2000 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 2000 conditions . find degrees in place of summation of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                36
            ],
            [
                57,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                37,
                56
            ],
            [
                59,
                65
            ]
        ],
        "positive_example": "Replace graduate with degrees , faculty with degrees , faculty's year with Campuses's campus",
        "negative_examples": [
            "replace graduate with csu fees , id with degrees , id 's year with campuses 's campus",
            "replace undergraduate with discipline enrollments , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with csu fees , campus fee with degrees , campus fee 's year with campuses 's campus",
            "replace graduate with degrees , discipline enrollments with degrees , faculty 's year with campuses 's totalenrollment ay",
            "replace campus fee with discipline enrollments , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with degrees , faculty with degrees , faculty 's fte ay with campuses 's campus",
            "replace graduate with enrollments , totalenrollment ay with degrees , totalenrollment ay 's year with campuses 's campus",
            "replace graduate with degrees , faculty with degrees , faculty 's year with campus fee 's campus",
            "replace graduate with degrees , csu fees with degrees , faculty 's year with campuses 's county",
            "replace totalenrollment ay with discipline enrollments , faculty with degrees , faculty 's year with campuses 's campus",
            "replace discipline with campuses , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with degrees , csu fees with degrees , faculty 's year with campuses 's undergraduate",
            "replace graduate with discipline enrollments , id with degrees , id 's year with campuses 's campus",
            "replace graduate with location , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with enrollments , faculty with degrees , faculty 's county with campuses 's campus",
            "replace county with degrees , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with campuses , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with campus fee , enrollments with campus fee , faculty 's year with campuses 's campus",
            "replace graduate with degrees , csu fees with degrees , faculty 's undergraduate with campuses 's campus",
            "replace graduate with degrees , csu fees with degrees , faculty 's fte ay with campuses 's campus",
            "replace id with discipline enrollments , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with degrees , faculty with degrees , faculty 's year with discipline 's campus",
            "replace graduate with degrees , discipline enrollments with degrees , faculty 's year with campuses 's county",
            "replace graduate with totalenrollment ay , campuses with totalenrollment ay , faculty 's year with campuses 's campus",
            "replace totalenrollment ay with degrees , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with enrollments , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with undergraduate , csu fees with undergraduate , faculty 's year with campuses 's campus",
            "replace graduate with enrollments , location with degrees , location 's year with campuses 's campus",
            "replace graduate with discipline enrollments , faculty with degrees , faculty 's discipline with campuses 's campus",
            "replace graduate with degrees , enrollments with degrees , faculty 's fte ay with campuses 's campus",
            "replace graduate with fte ay , campuses with fte ay , faculty 's year with campuses 's campus",
            "replace graduate with discipline , campuses with discipline , faculty 's year with campuses 's campus",
            "replace discipline with csu fees , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with csu fees , faculty with degrees , faculty 's year with campuses 's fte ay",
            "replace graduate with degrees , county with degrees , faculty 's year with campuses 's campus",
            "replace graduate with csu fees , faculty with degrees , faculty 's fte ay with campuses 's campus",
            "replace graduate with degrees , discipline enrollments with degrees , faculty 's year with campuses 's campus",
            "replace graduate with degrees , faculty with degrees , faculty 's location with campuses 's campus",
            "replace graduate with degrees , discipline enrollments with degrees , faculty 's year with campuses 's discipline",
            "replace graduate with county , csu fees with county , faculty 's year with campuses 's campus",
            "replace graduate with enrollments , fte ay with degrees , fte ay 's year with campuses 's campus",
            "replace graduate with degrees , campuses with degrees , faculty 's location with campuses 's campus",
            "replace graduate with campuses , fte ay with degrees , fte ay 's year with campuses 's campus",
            "replace graduate with degrees , enrollments with degrees , faculty 's county with campuses 's campus",
            "replace id with enrollments , faculty with degrees , faculty 's year with campuses 's campus",
            "replace graduate with degrees , discipline enrollments with degrees , faculty 's fte ay with campuses 's campus",
            "replace fte ay with degrees , csu fees with degrees , faculty 's year with campuses 's campus",
            "replace graduate with enrollments , faculty with degrees , faculty 's year with campuses 's totalenrollment ay",
            "replace graduate with undergraduate , discipline enrollments with undergraduate , faculty 's year with campuses 's campus",
            "replace totalenrollment ay with degrees , campuses with degrees , faculty 's year with campuses 's campus"
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals James Cameron conditions in place of the name equals James Cameron conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "Not name equals James Cameron but director equals James Cameron instead .",
        "negative_examples": [
            "not name equals james cameron but movie id equals james cameron instead .",
            "not name equals james cameron but title equals james cameron instead .",
            "not name equals james cameron but year equals james cameron instead .",
            "not name equals james cameron but reviewer id equals james cameron instead .",
            "not name equals james cameron but rating stars equals james cameron instead .",
            "not name equals james cameron but rating date equals james cameron instead .",
            "not movie id equals james cameron but director equals james cameron instead .",
            "not title equals james cameron but director equals james cameron instead .",
            "not year equals james cameron but director equals james cameron instead .",
            "not reviewer id equals james cameron but director equals james cameron instead .",
            "not rating stars equals james cameron but director equals james cameron instead .",
            "not rating date equals james cameron but director equals james cameron instead ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "additionally use the information from the body builder table besides the people table . consider the snatch greater than 140 conditions in place of the height greater than 140 conditions .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                20
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                21,
                30
            ]
        ],
        "positive_example": "Replace people table with body builder table and 1st height with snatch .",
        "negative_examples": [
            "replace people table with body builder table and 1st height with body builder id .",
            "replace people table with body builder table and 1st height with people id .",
            "replace people table with body builder table and 1st height with clean jerk .",
            "replace people table with body builder table and 1st height with total .",
            "replace people table with body builder table and 1st height with name .",
            "replace people table with body builder table and 1st height with weight .",
            "replace people table with body builder table and 1st height with birth date .",
            "replace people table with body builder table and 1st height with birth place .",
            "replace people table with body builder table and 1st body builder id with snatch .",
            "replace people table with body builder table and 1st people id with snatch .",
            "replace people table with body builder table and 1st clean jerk with snatch .",
            "replace people table with body builder table and 1st total with snatch .",
            "replace people table with body builder table and 1st name with snatch .",
            "replace people table with body builder table and 1st weight with snatch .",
            "replace people table with body builder table and 1st birth date with snatch .",
            "replace people table with body builder table and 1st birth place with snatch ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table and discipline enrollments table in place of faculty table . consider the campuses 's campus equals San Jose State University and discipline enrollments 's year equals 2004 conditions in place of the faculty 's year equals San Jose State University and faculty 's campus equals 2004 conditions . find summation of undergraduate in place of number of rows .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                30
            ],
            [
                51,
                54
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                31,
                50
            ],
            [
                55,
                61
            ]
        ],
        "positive_example": "I want discipline enrollments table , year and campus in place of faculty table , campus and year respectively.Also,  provide me the number of undergraduates.",
        "negative_examples": [
            "i want discipline enrollments table , year and campus fee in place of degrees table , campus fee and year respectively.also , provide me the number of undergraduates .",
            "i want enrollments table , fte ay and campus in place of faculty table , campus and fte ay respectively.also , provide me the number of undergraduates .",
            "i want csu fees table , year and fte ay in place of faculty table , fte ay and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , county and campus in place of csu fees table , campus and county respectively.also , provide me the number of undergraduates .",
            "i want id table , year and campus in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want degrees table , campus fee and campus in place of faculty table , campus and campus fee respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , fte ay and campus in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and id in place of enrollments table , id and year respectively.also , provide me the number of undergraduates .",
            "i want csu fees table , year and county in place of faculty table , county and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and campus in place of campus fee table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want campuses table , year and graduate in place of faculty table , graduate and year respectively.also , provide me the number of undergraduates .",
            "i want degrees table , year and campus in place of id table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want enrollments table , county and campus in place of faculty table , campus and county respectively.also , provide me the number of undergraduates .",
            "i want csu fees table , degrees and campus in place of faculty table , campus and degrees respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and campus in place of enrollments table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and degrees in place of csu fees table , degrees and year respectively.also , provide me the number of undergraduates .",
            "i want graduate table , year and campus in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and county in place of campuses table , county and year respectively.also , provide me the number of undergraduates .",
            "i want campuses table , year and campus fee in place of faculty table , campus fee and year respectively.also , provide me the number of undergraduates .",
            "i want campuses table , year and campus in place of county table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , campus fee and campus in place of campuses table , campus and campus fee respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and campus in place of faculty table , campus and year respectively.also , provide me the number of fte ay .",
            "i want degrees table , id and campus in place of faculty table , campus and id respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , graduate and campus in place of enrollments table , campus and graduate respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and fte ay in place of csu fees table , fte ay and year respectively.also , provide me the number of undergraduates .",
            "i want degrees table , year and campus in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want enrollments table , year and county in place of faculty table , county and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , totalenrollment ay and campus in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want degrees table , year and campus in place of location table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and campus in place of discipline table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want campuses table , year and degrees in place of faculty table , degrees and year respectively.also , provide me the number of undergraduates .",
            "i want csu fees table , year and campus in place of totalenrollment ay table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and graduate in place of degrees table , graduate and year respectively.also , provide me the number of undergraduates .",
            "i want campuses table , year and fte ay in place of faculty table , fte ay and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , discipline and campus in place of csu fees table , campus and discipline respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and degrees in place of enrollments table , degrees and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and discipline in place of csu fees table , discipline and year respectively.also , provide me the number of undergraduates .",
            "i want degrees table , year and county in place of faculty table , county and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and county in place of csu fees table , county and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and campus fee in place of csu fees table , campus fee and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and campus in place of campuses table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want csu fees table , campus fee and campus in place of faculty table , campus and campus fee respectively.also , provide me the number of undergraduates .",
            "i want campuses table , year and campus in place of fte ay table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want csu fees table , year and totalenrollment ay in place of faculty table , totalenrollment ay and year respectively.also , provide me the number of undergraduates .",
            "i want enrollments table , year and campus in place of location table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want csu fees table , year and graduate in place of faculty table , graduate and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and location in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want campus fee table , year and campus in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want discipline enrollments table , year and id in place of faculty table , campus and year respectively.also , provide me the number of undergraduates .",
            "i want campuses table , county and campus in place of faculty table , campus and county respectively.also , provide me the number of undergraduates ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "In step 2 Remove faculty 's year greater than 2002\".",
        "negative_examples": [
            "in step 2 remove csu fees 's county greater than 2002 \" .",
            "in step 2 remove degrees 's totalenrollment ay greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's county greater than 2002 \" .",
            "in step 2 remove campuses 's county greater than 2002 \" .",
            "in step 2 remove csu fees 's id greater than 2002 \" .",
            "in step 2 remove enrollments 's totalenrollment ay greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's campus fee greater than 2002 \" .",
            "in step 2 remove csu fees 's fte ay greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's totalenrollment ay greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's degrees greater than 2002 \" .",
            "in step 2 remove degrees 's graduate greater than 2002 \" .",
            "in step 2 remove campuses 's degrees greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's location greater than 2002 \" .",
            "in step 2 remove faculty 's campus greater than 2002 \" .",
            "in step 2 remove degrees 's discipline greater than 2002 \" .",
            "in step 2 remove enrollments 's graduate greater than 2002 \" .",
            "in step 2 remove enrollments 's year greater than 2002 \" .",
            "in step 2 remove degrees 's id greater than 2002 \" .",
            "in step 2 remove enrollments 's undergraduate greater than 2002 \" .",
            "in step 2 remove faculty 's location greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's campus greater than 2002 \" .",
            "in step 2 remove enrollments 's discipline greater than 2002 \" .",
            "in step 2 remove enrollments 's campus greater than 2002 \" .",
            "in step 2 remove faculty 's totalenrollment ay greater than 2002 \" .",
            "in step 2 remove faculty 's id greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's discipline greater than 2002 \" .",
            "in step 2 remove undergraduate 's year greater than 2002 \" .",
            "in step 2 remove enrollments 's fte ay greater than 2002 \" .",
            "in step 2 remove campuses 's totalenrollment ay greater than 2002 \" .",
            "in step 2 remove campuses 's year greater than 2002 \" .",
            "in step 2 remove county 's year greater than 2002 \" .",
            "in step 2 remove csu fees 's year greater than 2002 \" .",
            "in step 2 remove id 's year greater than 2002 \" .",
            "in step 2 remove degrees 's undergraduate greater than 2002 \" .",
            "in step 2 remove degrees 's location greater than 2002 \" .",
            "in step 2 remove location 's year greater than 2002 \" .",
            "in step 2 remove degrees 's degrees greater than 2002 \" .",
            "in step 2 remove fte ay 's year greater than 2002 \" .",
            "in step 2 remove csu fees 's totalenrollment ay greater than 2002 \" .",
            "in step 2 remove csu fees 's location greater than 2002 \" .",
            "in step 2 remove faculty 's degrees greater than 2002 \" .",
            "in step 2 remove discipline enrollments 's undergraduate greater than 2002 \" .",
            "in step 2 remove faculty 's fte ay greater than 2002 \" .",
            "in step 2 remove enrollments 's id greater than 2002 \" .",
            "in step 2 remove discipline 's year greater than 2002 \" .",
            "in step 2 remove csu fees 's discipline greater than 2002 \" .",
            "in step 2 remove degrees 's campus greater than 2002 \" .",
            "in step 2 remove faculty 's campus fee greater than 2002 \" .",
            "in step 2 remove faculty 's undergraduate greater than 2002 \" .",
            "in step 2 remove csu fees 's degrees greater than 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi greater than 5 and dpi less than A4 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "List the products from product table whose max page size is A4 and color pages per minute is less than 5.",
        "negative_examples": [
            "list the products from product table whose product id is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose product is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose dimensions is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose dpi is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose pages per minute color is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose interface is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose store id is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose store name is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose type is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose area size is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose number of product category is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose ranking is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose district id is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose district name is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose headquartered city is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose city population is a4 and color pages per minute is less than 5 .",
            "list the products from product table whose city area is a4 and color pages per minute is less than 5 ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , use chip model table in place of screen mode table . make sure the model name is not one of the results of step 1 the hardware colours is not one of the results of step 1 . find average ram mib in place of average hardware colours .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                15,
                28
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ],
            [
                29,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "I want the name of model , chip model , ram mib.",
        "negative_examples": [
            "i want the name of model , chip model , wifi .",
            "i want the name of model , chip model , model name .",
            "i want the name of model , phone , model name .",
            "i want the name of model , screen mode , ram mib .",
            "i want the name of model , phone , wifi .",
            "i want the name of model , screen mode , accreditation level .",
            "i want the name of model , chip model , screen mode .",
            "i want the name of model , screen mode , graphics mode .",
            "i want the name of model , screen mode , pixels .",
            "i want the name of model , chip model , type .",
            "i want the name of model , screen mode , launch year .",
            "i want the name of model , used kb , ram mib .",
            "i want the name of model , phone , ram mib .",
            "i want the name of model , chip model , company name .",
            "i want the name of model , hardware model name , ram mib .",
            "i want the name of model , screen mode , char cells .",
            "i want the name of model , phone , type .",
            "i want the name of model , phone , bluetooth .",
            "i want the name of model , accreditation level , ram mib .",
            "i want the name of model , screen mode , model name .",
            "i want the name of model , slots , ram mib .",
            "i want the name of model , type , ram mib .",
            "i want the name of model , screen mode , accreditation type .",
            "i want the name of model , chip model , graphics mode .",
            "i want the name of model , chip model , pixels .",
            "i want the name of model , screen mode , hardware colours .",
            "i want the name of model , phone , accreditation type .",
            "i want the name of model , chip model , hardware colours .",
            "i want the name of model , phone , hardware colours .",
            "i want the name of model , phone , rom mib .",
            "i want the name of model , phone , pixels .",
            "i want the name of model , wifi , ram mib .",
            "i want the name of model , char cells , ram mib .",
            "i want the name of model , graphics mode , ram mib .",
            "i want the name of model , chip model , date .",
            "i want the name of model , screen mode , hardware model name .",
            "i want the name of model , rom mib , ram mib .",
            "i want the name of model , accreditation type , ram mib .",
            "i want the name of model , hardware colours , ram mib .",
            "i want the name of model , launch year , ram mib .",
            "i want the name of model , chip model , used kb .",
            "i want the name of model , screen mode , screen mode .",
            "i want the name of model , screen mode , rom mib .",
            "i want the name of model , phone , slots .",
            "i want the name of model , chip model , launch year .",
            "i want the name of model , screen mode , used kb .",
            "i want the name of model , screen mode , company name .",
            "i want the name of model , map , ram mib .",
            "i want the name of model , phone , char cells .",
            "i want the name of model , chip model , hardware model name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally find date of birth .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [],
        "positive_example": "Replace one of the email address with date of birth .",
        "negative_examples": [
            "replace one of the email address with address id .",
            "replace one of the email address with line 1 number building .",
            "replace one of the email address with city .",
            "replace one of the email address with zip postcode .",
            "replace one of the email address with state province county .",
            "replace one of the email address with country .",
            "replace one of the email address with staff id .",
            "replace one of the email address with staff address id .",
            "replace one of the email address with nickname .",
            "replace one of the email address with first name .",
            "replace one of the email address with middle name .",
            "replace one of the email address with last name .",
            "replace one of the email address with date joined staff .",
            "replace one of the email address with date left staff .",
            "replace one of the email address with vehicle id .",
            "replace one of the email address with vehicle details .",
            "replace one of the email address with customer id .",
            "replace one of the email address with customer address id .",
            "replace one of the email address with customer status code .",
            "replace one of the email address with date became customer .",
            "replace one of the email address with amount outstanding .",
            "replace one of the email address with email address .",
            "replace one of the email address with phone number .",
            "replace one of the email address with cell mobile phone number .",
            "replace one of the email address with datetime payment .",
            "replace one of the email address with payment method code .",
            "replace one of the email address with amount payment .",
            "replace one of the email address with lesson id .",
            "replace one of the email address with lesson status code .",
            "replace one of the email address with lesson date .",
            "replace one of the email address with lesson time .",
            "replace one of the email address with price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2002 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "Have to remove \"faculty's year equals 2002\".",
        "negative_examples": [
            "have to remove \" campuses 's location equals 2002 \" .",
            "have to remove \" degrees 's year equals 2002 \" .",
            "have to remove \" csu fees 's id equals 2002 \" .",
            "have to remove \" faculty 's totalenrollment ay equals 2002 \" .",
            "have to remove \" csu fees 's degrees equals 2002 \" .",
            "have to remove \" campus fee 's year equals 2002 \" .",
            "have to remove \" faculty 's campus fee equals 2002 \" .",
            "have to remove \" faculty 's degrees equals 2002 \" .",
            "have to remove \" degrees 's campus fee equals 2002 \" .",
            "have to remove \" discipline enrollments 's county equals 2002 \" .",
            "have to remove \" location 's year equals 2002 \" .",
            "have to remove \" enrollments 's campus fee equals 2002 \" .",
            "have to remove \" discipline enrollments 's id equals 2002 \" .",
            "have to remove \" discipline enrollments 's campus equals 2002 \" .",
            "have to remove \" fte ay 's year equals 2002 \" .",
            "have to remove \" faculty 's graduate equals 2002 \" .",
            "have to remove \" faculty 's fte ay equals 2002 \" .",
            "have to remove \" discipline enrollments 's degrees equals 2002 \" .",
            "have to remove \" degrees 's discipline equals 2002 \" .",
            "have to remove \" csu fees 's location equals 2002 \" .",
            "have to remove \" enrollments 's year equals 2002 \" .",
            "have to remove \" campuses 's degrees equals 2002 \" .",
            "have to remove \" degrees 's undergraduate equals 2002 \" .",
            "have to remove \" enrollments 's degrees equals 2002 \" .",
            "have to remove \" csu fees 's undergraduate equals 2002 \" .",
            "have to remove \" enrollments 's totalenrollment ay equals 2002 \" .",
            "have to remove \" csu fees 's year equals 2002 \" .",
            "have to remove \" csu fees 's totalenrollment ay equals 2002 \" .",
            "have to remove \" campuses 's totalenrollment ay equals 2002 \" .",
            "have to remove \" graduate 's year equals 2002 \" .",
            "have to remove \" degrees 's totalenrollment ay equals 2002 \" .",
            "have to remove \" faculty 's undergraduate equals 2002 \" .",
            "have to remove \" degrees 's location equals 2002 \" .",
            "have to remove \" discipline enrollments 's totalenrollment ay equals 2002 \" .",
            "have to remove \" faculty 's location equals 2002 \" .",
            "have to remove \" faculty 's campus equals 2002 \" .",
            "have to remove \" csu fees 's graduate equals 2002 \" .",
            "have to remove \" faculty 's id equals 2002 \" .",
            "have to remove \" campus 's year equals 2002 \" .",
            "have to remove \" csu fees 's campus fee equals 2002 \" .",
            "have to remove \" discipline enrollments 's year equals 2002 \" .",
            "have to remove \" campuses 's fte ay equals 2002 \" .",
            "have to remove \" enrollments 's county equals 2002 \" .",
            "have to remove \" discipline enrollments 's campus fee equals 2002 \" .",
            "have to remove \" csu fees 's fte ay equals 2002 \" .",
            "have to remove \" undergraduate 's year equals 2002 \" .",
            "have to remove \" campuses 's discipline equals 2002 \" .",
            "have to remove \" discipline 's year equals 2002 \" .",
            "have to remove \" csu fees 's discipline equals 2002 \" .",
            "have to remove \" campuses 's campus fee equals 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "use assessment notes table in place of behavior incident table . order the results by date of notes in place of date incident start .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                11,
                17
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                18,
                24
            ]
        ],
        "positive_example": "Put assessment notes table instead of behavior incident table and date of notes instead of date incident start .",
        "negative_examples": [
            "put assessment notes table instead of reference detention type table and date incident end instead of date incident start .",
            "put detention table instead of behavior incident table and date first rental instead of date incident start .",
            "put assessment notes table instead of student addresses table and detention summary instead of date incident start .",
            "put assessment notes table instead of reference detention type table and other details instead of date incident start .",
            "put reference detention type table instead of behavior incident table and date address from instead of date incident start .",
            "put reference incident type table instead of behavior incident table and datetime detention start instead of date incident start .",
            "put student addresses table instead of behavior incident table and gender instead of date incident start .",
            "put assessment notes table instead of reference incident type table and incident id instead of date incident start .",
            "put students table instead of behavior incident table and city instead of date incident start .",
            "put assessment notes table instead of students table and country instead of date incident start .",
            "put reference detention type table instead of behavior incident table and datetime detention end instead of date incident start .",
            "put reference detention type table instead of behavior incident table and datetime detention start instead of date incident start .",
            "put assessment notes table instead of reference address types table and detention type description instead of date incident start .",
            "put assessment notes table instead of student addresses table and country instead of date incident start .",
            "put assessment notes table instead of behavior incident table and gender instead of date incident start .",
            "put addresses table instead of behavior incident table and gender instead of date incident start .",
            "put students table instead of behavior incident table and incident id instead of date incident start .",
            "put assessment notes table instead of teachers table and datetime detention start instead of date incident start .",
            "put addresses table instead of behavior incident table and address type code instead of date incident start .",
            "put addresses table instead of behavior incident table and other student details instead of date incident start .",
            "put assessment notes table instead of students table and other details instead of date incident start .",
            "put addresses table instead of behavior incident table and cell mobile number instead of date incident start .",
            "put detention table instead of behavior incident table and notes id instead of date incident start .",
            "put assessment notes table instead of behavior incident table and incident type code instead of date incident start .",
            "put reference incident type table instead of behavior incident table and incident type description instead of date incident start .",
            "put reference detention type table instead of behavior incident table and recommendations instead of date incident start .",
            "put assessment notes table instead of students table and incident summary instead of date incident start .",
            "put reference incident type table instead of behavior incident table and detention id instead of date incident start .",
            "put assessment notes table instead of behavior incident table and date address to instead of date incident start .",
            "put detention table instead of behavior incident table and cell mobile number instead of date incident start .",
            "put assessment notes table instead of reference incident type table and date of notes instead of date incident start .",
            "put addresses table instead of behavior incident table and date of notes instead of date incident start .",
            "put reference incident type table instead of behavior incident table and text of notes instead of date incident start .",
            "put assessment notes table instead of student addresses table and datetime detention start instead of date incident start .",
            "put addresses table instead of behavior incident table and detention id instead of date incident start .",
            "put assessment notes table instead of detention table and date incident end instead of date incident start .",
            "put assessment notes table instead of students in detention table and date address to instead of date incident start .",
            "put addresses table instead of behavior incident table and date address to instead of date incident start .",
            "put student addresses table instead of behavior incident table and middle name instead of date incident start .",
            "put assessment notes table instead of detention table and monthly rental instead of date incident start .",
            "put reference address types table instead of behavior incident table and incident summary instead of date incident start .",
            "put assessment notes table instead of reference detention type table and gender instead of date incident start .",
            "put assessment notes table instead of teachers table and detention summary instead of date incident start .",
            "put assessment notes table instead of students in detention table and incident type code instead of date incident start .",
            "put assessment notes table instead of student addresses table and date left university instead of date incident start .",
            "put assessment notes table instead of reference incident type table and other student details instead of date incident start .",
            "put students in detention table instead of behavior incident table and detention type code instead of date incident start .",
            "put assessment notes table instead of students in detention table and date incident start instead of date incident start .",
            "put assessment notes table instead of reference incident type table and student id instead of date incident start .",
            "put reference address types table instead of behavior incident table and email address instead of date incident start ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals James Cameron conditions in place of the name equals James Cameron conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "you have to use the director of movie table instead of name of reviewer table.",
        "negative_examples": [
            "you have to use the director of movie table instead of name of movie table .",
            "you have to use the director of movie table instead of name of rating table .",
            "you have to use the movie id of movie table instead of name of reviewer table .",
            "you have to use the title of movie table instead of name of reviewer table .",
            "you have to use the year of movie table instead of name of reviewer table .",
            "you have to use the reviewer id of movie table instead of name of reviewer table .",
            "you have to use the rating stars of movie table instead of name of reviewer table .",
            "you have to use the rating date of movie table instead of name of reviewer table .",
            "you have to use the director of movie table instead of movie id of reviewer table .",
            "you have to use the director of movie table instead of title of reviewer table .",
            "you have to use the director of movie table instead of year of reviewer table .",
            "you have to use the director of movie table instead of reviewer id of reviewer table .",
            "you have to use the director of movie table instead of rating stars of reviewer table .",
            "you have to use the director of movie table instead of rating date of reviewer table .",
            "you have to use the movie id of movie table instead of name of movie table .",
            "you have to use the title of movie table instead of name of movie table .",
            "you have to use the year of movie table instead of name of movie table .",
            "you have to use the reviewer id of movie table instead of name of movie table .",
            "you have to use the rating stars of movie table instead of name of movie table .",
            "you have to use the rating date of movie table instead of name of movie table .",
            "you have to use the director of movie table instead of movie id of movie table .",
            "you have to use the director of movie table instead of title of movie table .",
            "you have to use the director of movie table instead of year of movie table .",
            "you have to use the director of movie table instead of reviewer id of movie table .",
            "you have to use the director of movie table instead of rating stars of movie table .",
            "you have to use the director of movie table instead of rating date of movie table .",
            "you have to use the movie id of movie table instead of name of rating table .",
            "you have to use the title of movie table instead of name of rating table .",
            "you have to use the year of movie table instead of name of rating table .",
            "you have to use the reviewer id of movie table instead of name of rating table .",
            "you have to use the rating stars of movie table instead of name of rating table .",
            "you have to use the rating date of movie table instead of name of rating table .",
            "you have to use the director of movie table instead of movie id of rating table .",
            "you have to use the director of movie table instead of title of rating table .",
            "you have to use the director of movie table instead of year of rating table .",
            "you have to use the director of movie table instead of reviewer id of rating table .",
            "you have to use the director of movie table instead of rating stars of rating table .",
            "you have to use the director of movie table instead of rating date of rating table ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use customers table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "you need to use customers table instead of address table.",
        "negative_examples": [
            "you need to use customers table instead of staff table .",
            "you need to use customers table instead of vehicles table .",
            "you need to use customers table instead of customer payments table .",
            "you need to use customers table instead of lessons table .",
            "you need to use staff table instead of address table .",
            "you need to use vehicles table instead of address table .",
            "you need to use customer payments table instead of address table .",
            "you need to use lessons table instead of address table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Replace customers table with accounts table in step 1 , in step 2 also find customer middle initial .",
        "negative_examples": [
            "replace customers table with customers table in step 1 , in step 2 also find customer middle initial .",
            "replace customers table with orders table in step 1 , in step 2 also find customer middle initial .",
            "replace customers table with invoices table in step 1 , in step 2 also find customer middle initial .",
            "replace customers table with product categories table in step 1 , in step 2 also find customer middle initial .",
            "replace customers table with products table in step 1 , in step 2 also find customer middle initial .",
            "replace customers table with financial transactions table in step 1 , in step 2 also find customer middle initial .",
            "replace customers table with order items table in step 1 , in step 2 also find customer middle initial .",
            "replace customers table with invoice line items table in step 1 , in step 2 also find customer middle initial ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the company name equals Graphics and type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "Make sure that company name should be Nokia Corporation or its type should be Graphics.",
        "negative_examples": [
            "make sure that model name should be nokia corporation or its type should be graphics .",
            "make sure that launch year should be nokia corporation or its type should be graphics .",
            "make sure that ram mib should be nokia corporation or its type should be graphics .",
            "make sure that rom mib should be nokia corporation or its type should be graphics .",
            "make sure that slots should be nokia corporation or its type should be graphics .",
            "make sure that wifi should be nokia corporation or its type should be graphics .",
            "make sure that bluetooth should be nokia corporation or its type should be graphics .",
            "make sure that graphics mode should be nokia corporation or its type should be graphics .",
            "make sure that char cells should be nokia corporation or its type should be graphics .",
            "make sure that pixels should be nokia corporation or its type should be graphics .",
            "make sure that hardware colours should be nokia corporation or its type should be graphics .",
            "make sure that used kb should be nokia corporation or its type should be graphics .",
            "make sure that map should be nokia corporation or its type should be graphics .",
            "make sure that hardware model name should be nokia corporation or its type should be graphics .",
            "make sure that accreditation type should be nokia corporation or its type should be graphics .",
            "make sure that accreditation level should be nokia corporation or its type should be graphics .",
            "make sure that date should be nokia corporation or its type should be graphics .",
            "make sure that chip model should be nokia corporation or its type should be graphics .",
            "make sure that screen mode should be nokia corporation or its type should be graphics .",
            "make sure that company name should be nokia corporation or its model name should be graphics .",
            "make sure that company name should be nokia corporation or its launch year should be graphics .",
            "make sure that company name should be nokia corporation or its ram mib should be graphics .",
            "make sure that company name should be nokia corporation or its rom mib should be graphics .",
            "make sure that company name should be nokia corporation or its slots should be graphics .",
            "make sure that company name should be nokia corporation or its wifi should be graphics .",
            "make sure that company name should be nokia corporation or its bluetooth should be graphics .",
            "make sure that company name should be nokia corporation or its graphics mode should be graphics .",
            "make sure that company name should be nokia corporation or its char cells should be graphics .",
            "make sure that company name should be nokia corporation or its pixels should be graphics .",
            "make sure that company name should be nokia corporation or its hardware colours should be graphics .",
            "make sure that company name should be nokia corporation or its used kb should be graphics .",
            "make sure that company name should be nokia corporation or its map should be graphics .",
            "make sure that company name should be nokia corporation or its hardware model name should be graphics .",
            "make sure that company name should be nokia corporation or its accreditation type should be graphics .",
            "make sure that company name should be nokia corporation or its accreditation level should be graphics .",
            "make sure that company name should be nokia corporation or its date should be graphics .",
            "make sure that company name should be nokia corporation or its chip model should be graphics .",
            "make sure that company name should be nokia corporation or its screen mode should be graphics ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customer payments table besides the customers table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "In step 1, I require the table for customer payments only.",
        "negative_examples": [
            "in step 1 , i require the table for addresses only .",
            "in step 1 , i require the table for staff only .",
            "in step 1 , i require the table for vehicles only .",
            "in step 1 , i require the table for customers only .",
            "in step 1 , i require the table for lessons only ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , additionally find account name .",
        "primary_span": [
            [
                4,
                8
            ]
        ],
        "secondary_span": [],
        "positive_example": "Also include account name in step 2.",
        "negative_examples": [
            "also include customer id in step 2 .",
            "also include customer first name in step 2 .",
            "also include customer middle initial in step 2 .",
            "also include customer last name in step 2 .",
            "also include gender in step 2 .",
            "also include email address in step 2 .",
            "also include login name in step 2 .",
            "also include login password in step 2 .",
            "also include phone number in step 2 .",
            "also include town city in step 2 .",
            "also include state county province in step 2 .",
            "also include country in step 2 .",
            "also include order id in step 2 .",
            "also include date order placed in step 2 .",
            "also include order details in step 2 .",
            "also include invoice number in step 2 .",
            "also include invoice date in step 2 .",
            "also include account id in step 2 .",
            "also include date account opened in step 2 .",
            "also include other account details in step 2 .",
            "also include production type code in step 2 .",
            "also include product type description in step 2 .",
            "also include vat rating in step 2 .",
            "also include product id in step 2 .",
            "also include parent product id in step 2 .",
            "also include unit price in step 2 .",
            "also include product name in step 2 .",
            "also include product color in step 2 .",
            "also include product size in step 2 .",
            "also include transaction id in step 2 .",
            "also include transaction type in step 2 .",
            "also include transaction date in step 2 .",
            "also include transaction amount in step 2 .",
            "also include transaction comment in step 2 .",
            "also include other transaction details in step 2 .",
            "also include order item id in step 2 .",
            "also include product quantity in step 2 .",
            "also include other order item details in step 2 .",
            "also include product title in step 2 .",
            "also include product price in step 2 .",
            "also include derived product cost in step 2 .",
            "also include derived vat payable in step 2 .",
            "also include derived total cost in step 2 ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table . find summation of product quantity in place of summation of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                14
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                15,
                21
            ]
        ],
        "positive_example": "Should find the corresponding rows of order items for each order id .",
        "negative_examples": [
            "should find the corresponding rows of customers for each order id .",
            "should find the corresponding rows of orders for each order id .",
            "should find the corresponding rows of invoices for each order id .",
            "should find the corresponding rows of accounts for each order id .",
            "should find the corresponding rows of product categories for each order id .",
            "should find the corresponding rows of products for each order id .",
            "should find the corresponding rows of financial transactions for each order id .",
            "should find the corresponding rows of invoice line items for each order id ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use lessons table in place of addresses table . additionally make sure that lesson status code equals Cancelled .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                18
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace addresses table with lessons table and make sure lesson status code equals Cancelled .",
        "negative_examples": [
            "replace vehicles table with lessons table and make sure customer address id equals cancelled .",
            "replace addresses table with lessons table and make sure vehicle id equals cancelled .",
            "replace addresses table with lessons table and make sure customer status code equals cancelled .",
            "replace staff table with lessons table and make sure customer address id equals cancelled .",
            "replace vehicles table with lessons table and make sure line 1 number building equals cancelled .",
            "replace customer payments table with lessons table and make sure phone number equals cancelled .",
            "replace addresses table with customers table and make sure customer id equals cancelled .",
            "replace customers table with lessons table and make sure lesson status code equals cancelled .",
            "replace addresses table with vehicles table and make sure phone number equals cancelled .",
            "replace addresses table with lessons table and make sure customer id equals cancelled .",
            "replace customers table with lessons table and make sure phone number equals cancelled .",
            "replace addresses table with customers table and make sure staff address id equals cancelled .",
            "replace customer payments table with lessons table and make sure date joined staff equals cancelled .",
            "replace customer payments table with lessons table and make sure staff address id equals cancelled .",
            "replace addresses table with vehicles table and make sure date of birth equals cancelled .",
            "replace addresses table with customers table and make sure date joined staff equals cancelled .",
            "replace addresses table with staff table and make sure lesson date equals cancelled .",
            "replace customers table with lessons table and make sure email address equals cancelled .",
            "replace addresses table with lessons table and make sure line 1 number building equals cancelled .",
            "replace customer payments table with lessons table and make sure middle name equals cancelled .",
            "replace customers table with lessons table and make sure datetime payment equals cancelled .",
            "replace vehicles table with lessons table and make sure date of birth equals cancelled .",
            "replace addresses table with customer payments table and make sure price equals cancelled .",
            "replace customers table with lessons table and make sure last name equals cancelled .",
            "replace addresses table with lessons table and make sure lesson date equals cancelled .",
            "replace addresses table with lessons table and make sure staff id equals cancelled .",
            "replace addresses table with customers table and make sure vehicle details equals cancelled .",
            "replace staff table with lessons table and make sure date became customer equals cancelled .",
            "replace staff table with lessons table and make sure last name equals cancelled .",
            "replace customer payments table with lessons table and make sure price equals cancelled .",
            "replace customers table with lessons table and make sure amount payment equals cancelled .",
            "replace customer payments table with lessons table and make sure email address equals cancelled .",
            "replace addresses table with staff table and make sure state province county equals cancelled .",
            "replace addresses table with vehicles table and make sure price equals cancelled .",
            "replace addresses table with customers table and make sure email address equals cancelled .",
            "replace addresses table with customer payments table and make sure city equals cancelled .",
            "replace addresses table with staff table and make sure date left staff equals cancelled .",
            "replace customer payments table with lessons table and make sure last name equals cancelled .",
            "replace addresses table with vehicles table and make sure city equals cancelled .",
            "replace staff table with lessons table and make sure datetime payment equals cancelled .",
            "replace addresses table with vehicles table and make sure state province county equals cancelled .",
            "replace addresses table with customers table and make sure lesson date equals cancelled .",
            "replace staff table with lessons table and make sure email address equals cancelled .",
            "replace addresses table with customers table and make sure customer address id equals cancelled .",
            "replace vehicles table with lessons table and make sure lesson date equals cancelled .",
            "replace addresses table with lessons table and make sure amount payment equals cancelled .",
            "replace addresses table with staff table and make sure country equals cancelled .",
            "replace addresses table with lessons table and make sure middle name equals cancelled .",
            "replace addresses table with customer payments table and make sure customer status code equals cancelled .",
            "replace customers table with lessons table and make sure customer id equals cancelled ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use teachers table in place of students table in step 2 , consider the teachers 's first name equals Lyla conditions in place of the students 's first name equals Lyla conditions .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                24
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                25,
                36
            ]
        ],
        "positive_example": "In step 1, Instead of students table use teachers table .",
        "negative_examples": [
            "in step 1 , instead of reference address types table use teachers table .",
            "in step 1 , instead of reference detention type table use teachers table .",
            "in step 1 , instead of reference incident type table use teachers table .",
            "in step 1 , instead of addresses table use teachers table .",
            "in step 1 , instead of assessment notes table use teachers table .",
            "in step 1 , instead of behavior incident table use teachers table .",
            "in step 1 , instead of detention table use teachers table .",
            "in step 1 , instead of student addresses table use teachers table .",
            "in step 1 , instead of students in detention table use teachers table .",
            "in step 1 , instead of students table use reference address types table .",
            "in step 1 , instead of students table use reference detention type table .",
            "in step 1 , instead of students table use reference incident type table .",
            "in step 1 , instead of students table use addresses table .",
            "in step 1 , instead of students table use assessment notes table .",
            "in step 1 , instead of students table use behavior incident table .",
            "in step 1 , instead of students table use detention table .",
            "in step 1 , instead of students table use student addresses table .",
            "in step 1 , instead of students table use students in detention table ."
        ],
        "neg_len": 18
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , additionally use the information from the rating table besides the movie table . consider the rating stars greater than or equals 4 conditions in place of the year less than or equals 1939 conditions . do not return title . make sure no repetition in the results . order the results ascending . in step 1 , show me all the results .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                26
            ],
            [
                39,
                43
            ],
            [
                44,
                51
            ],
            [
                52,
                56
            ],
            [
                61,
                66
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                27,
                38
            ]
        ],
        "positive_example": "List out movie id's in ascending order having 4 or 5 star ratings.",
        "negative_examples": [
            "list out movie id 's in ascending order having 4 or 5 star movie .",
            "list out movie id 's in ascending order having 4 or 5 star reviewer ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , additionally use the information from the phone table besides the screen mode table . consider the accreditation type equals Provisional conditions in place of the type equals Provisional conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                25,
                33
            ]
        ],
        "positive_example": "step 1 , replace type of screen mode table with accreditation type of phone table .",
        "negative_examples": [
            "step 1 , replace hardware colours of screen mode table with accreditation type of phone table .",
            "step 1 , replace type of screen mode table with slots of phone table .",
            "step 1 , replace type of screen mode table with accreditation type of screen screen mode .",
            "step 1 , replace map of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace bluetooth of screen mode table with accreditation type of chip model table .",
            "step 1 , replace type of screen mode table with model name of phone table .",
            "step 1 , replace date of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace type of screen mode table with rom mib of phone table .",
            "step 1 , replace pixels of screen mode table with accreditation type of phone table .",
            "step 1 , replace type of screen mode table with pixels of chip model table .",
            "step 1 , replace slots of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace type of used kb table with accreditation type of screen used kb .",
            "step 1 , replace char cells of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace bluetooth of screen mode table with accreditation type of phone table .",
            "step 1 , replace wifi of screen mode table with accreditation type of phone table .",
            "step 1 , replace type of screen mode table with date of screen mode table .",
            "step 1 , replace type of screen mode table with screen mode of screen mode table .",
            "step 1 , replace type of screen mode table with ram mib of phone table .",
            "step 1 , replace type of screen mode table with used kb of phone table .",
            "step 1 , replace company name of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace type of screen mode table with ram mib of screen mode table .",
            "step 1 , replace type of screen mode table with date of chip model table .",
            "step 1 , replace type of wifi table with accreditation type of screen wifi .",
            "step 1 , replace launch year of screen mode table with accreditation type of phone table .",
            "step 1 , replace type of screen mode table with graphics mode of phone table .",
            "step 1 , replace wifi of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace type of screen mode table with wifi of chip model table .",
            "step 1 , replace type of screen mode table with accreditation type of company name table .",
            "step 1 , replace type of screen mode table with hardware colours of chip model table .",
            "step 1 , replace type of screen mode table with company name of chip model table .",
            "step 1 , replace type of screen mode table with slots of screen mode table .",
            "step 1 , replace screen mode of screen mode table with accreditation type of chip model table .",
            "step 1 , replace type of screen mode table with used kb of screen mode table .",
            "step 1 , replace wifi of screen mode table with accreditation type of chip model table .",
            "step 1 , replace type of screen mode table with slots of chip model table .",
            "step 1 , replace type of screen mode table with accreditation type of graphics mode table .",
            "step 1 , replace ram mib of screen mode table with accreditation type of phone table .",
            "step 1 , replace type of pixels table with accreditation type of screen pixels .",
            "step 1 , replace model name of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace type of graphics mode table with accreditation type of screen graphics mode .",
            "step 1 , replace type of map table with accreditation type of screen map .",
            "step 1 , replace map of screen mode table with accreditation type of phone table .",
            "step 1 , replace type of screen mode table with accreditation type of launch year table .",
            "step 1 , replace type of screen mode table with accreditation type of char cells table .",
            "step 1 , replace rom mib of screen mode table with accreditation type of chip model table .",
            "step 1 , replace type of screen mode table with accreditation type of pixels table .",
            "step 1 , replace chip model of screen mode table with accreditation type of chip model table .",
            "step 1 , replace type of screen mode table with used kb of chip model table .",
            "step 1 , replace accreditation level of screen mode table with accreditation type of screen mode table .",
            "step 1 , replace type of screen mode table with accreditation level of screen mode table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , use apartment facilities table in place of apartment bookings table .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ]
        ],
        "positive_example": "In step 1 find apartment id of apartment facilities table instead of apartment bookings table .",
        "negative_examples": [
            "in step 1 find apartment id of apartment buildings table instead of apartment bookings table .",
            "in step 1 find apartment id of apartments table instead of apartment bookings table .",
            "in step 1 find apartment id of guests table instead of apartment bookings table .",
            "in step 1 find apartment id of apartment bookings table instead of apartment bookings table .",
            "in step 1 find apartment id of view unit status table instead of apartment bookings table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , additionally use the information from the phone table besides the screen mode table . consider the accreditation type equals Provisional conditions in place of the type equals Provisional conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                25,
                33
            ]
        ],
        "positive_example": "I want phone's accreditation type from step 1.",
        "negative_examples": [
            "i want phone 's type from step 1 .",
            "i want screen mode 's rom mib from step 1 .",
            "i want screen mode 's type from step 1 .",
            "i want phone 's rom mib from step 1 .",
            "i want phone 's graphics mode from step 1 .",
            "i want chip model 's rom mib from step 1 .",
            "i want chip model 's hardware model name from step 1 .",
            "i want ram mib 's accreditation type from step 1 .",
            "i want chip model 's accreditation type from step 1 .",
            "i want phone 's date from step 1 .",
            "i want phone 's accreditation level from step 1 .",
            "i want phone 's company name from step 1 .",
            "i want screen mode 's hardware model name from step 1 .",
            "i want screen mode 's char cells from step 1 .",
            "i want phone 's chip model from step 1 .",
            "i want screen mode 's chip model from step 1 .",
            "i want screen mode 's slots from step 1 .",
            "i want date 's accreditation type from step 1 .",
            "i want company name 's accreditation type from step 1 .",
            "i want screen mode 's accreditation level from step 1 .",
            "i want phone 's pixels from step 1 .",
            "i want screen mode 's bluetooth from step 1 .",
            "i want chip model 's company name from step 1 .",
            "i want hardware model name 's accreditation type from step 1 .",
            "i want chip model 's type from step 1 .",
            "i want phone 's slots from step 1 .",
            "i want chip model 's accreditation level from step 1 .",
            "i want screen mode 's company name from step 1 .",
            "i want screen mode 's screen mode from step 1 .",
            "i want phone 's screen mode from step 1 .",
            "i want hardware colours 's accreditation type from step 1 .",
            "i want screen mode 's map from step 1 .",
            "i want model name 's accreditation type from step 1 .",
            "i want chip model 's graphics mode from step 1 .",
            "i want screen mode 's pixels from step 1 .",
            "i want chip model 's map from step 1 .",
            "i want map 's accreditation type from step 1 .",
            "i want chip model 's launch year from step 1 .",
            "i want rom mib 's accreditation type from step 1 .",
            "i want chip model 's model name from step 1 .",
            "i want launch year 's accreditation type from step 1 .",
            "i want phone 's wifi from step 1 .",
            "i want screen mode 's accreditation type from step 1 .",
            "i want phone 's bluetooth from step 1 .",
            "i want chip model 's hardware colours from step 1 .",
            "i want chip model 's bluetooth from step 1 .",
            "i want chip model 's pixels from step 1 .",
            "i want used kb 's accreditation type from step 1 .",
            "i want screen mode 's model name from step 1 .",
            "i want phone 's launch year from step 1 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Need to determine how many faculty in those rows.",
        "negative_examples": [
            "need to determine how many campuses in those rows .",
            "need to determine how many csu fees in those rows .",
            "need to determine how many degrees in those rows .",
            "need to determine how many discipline enrollments in those rows .",
            "need to determine how many enrollments in those rows .",
            "need to determine how many id in those rows .",
            "need to determine how many campus in those rows .",
            "need to determine how many location in those rows .",
            "need to determine how many county in those rows .",
            "need to determine how many year in those rows .",
            "need to determine how many campus fee in those rows .",
            "need to determine how many discipline in those rows .",
            "need to determine how many undergraduate in those rows .",
            "need to determine how many graduate in those rows .",
            "need to determine how many totalenrollment ay in those rows .",
            "need to determine how many fte ay in those rows ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , order the results by average room count in place of average bathroom count . only show me the first 3 results .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                18,
                25
            ]
        ],
        "secondary_span": [
            [
                11,
                17
            ]
        ],
        "positive_example": "Supplant room count with bathroom count .",
        "negative_examples": [
            "supplant room count with building id .",
            "supplant room count with building short name .",
            "supplant room count with building full name .",
            "supplant room count with building description .",
            "supplant room count with building address .",
            "supplant room count with building manager .",
            "supplant room count with building phone .",
            "supplant room count with apartment id .",
            "supplant room count with apartment type code .",
            "supplant room count with apartment number .",
            "supplant room count with bedroom count .",
            "supplant room count with facility code .",
            "supplant room count with guest id .",
            "supplant room count with gender code .",
            "supplant room count with guest first name .",
            "supplant room count with guest last name .",
            "supplant room count with date of birth .",
            "supplant room count with apartment booking id .",
            "supplant room count with booking status code .",
            "supplant room count with booking start date .",
            "supplant room count with booking end date .",
            "supplant room count with status date .",
            "supplant room count with available yes or no .",
            "supplant building id with bathroom count .",
            "supplant building short name with bathroom count .",
            "supplant building full name with bathroom count .",
            "supplant building description with bathroom count .",
            "supplant building address with bathroom count .",
            "supplant building manager with bathroom count .",
            "supplant building phone with bathroom count .",
            "supplant apartment id with bathroom count .",
            "supplant apartment type code with bathroom count .",
            "supplant apartment number with bathroom count .",
            "supplant bedroom count with bathroom count .",
            "supplant facility code with bathroom count .",
            "supplant guest id with bathroom count .",
            "supplant gender code with bathroom count .",
            "supplant guest first name with bathroom count .",
            "supplant guest last name with bathroom count .",
            "supplant date of birth with bathroom count .",
            "supplant apartment booking id with bathroom count .",
            "supplant booking status code with bathroom count .",
            "supplant booking start date with bathroom count .",
            "supplant booking end date with bathroom count .",
            "supplant status date with bathroom count .",
            "supplant available yes or no with bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's campus equals 1 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "Drop campuses of faculty is 1. Also, in step 2, replace year of faculty with year of csu fees.",
        "negative_examples": [
            "drop campuses of campuses is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of csu fees is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of degrees is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of discipline enrollments is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of enrollments is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of id is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of location is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of county is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of year is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of campus fee is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of discipline is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of undergraduate is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of graduate is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of totalenrollment ay is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campuses of fte ay is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop id of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop location of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop county of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop year of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop campus fee of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop degrees of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop discipline of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop undergraduate of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop graduate of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop totalenrollment ay of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees .",
            "drop fte ay of faculty is 1. also , in step 2 , replace year of faculty with year of csu fees ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average room count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "you have to delete bathroom count and add the id of building.",
        "negative_examples": [
            "you have to delete building id and add the id of building .",
            "you have to delete building short name and add the id of building .",
            "you have to delete building full name and add the id of building .",
            "you have to delete building description and add the id of building .",
            "you have to delete building address and add the id of building .",
            "you have to delete building manager and add the id of building .",
            "you have to delete building phone and add the id of building .",
            "you have to delete apartment id and add the id of building .",
            "you have to delete apartment type code and add the id of building .",
            "you have to delete apartment number and add the id of building .",
            "you have to delete bedroom count and add the id of building .",
            "you have to delete room count and add the id of building .",
            "you have to delete facility code and add the id of building .",
            "you have to delete guest id and add the id of building .",
            "you have to delete gender code and add the id of building .",
            "you have to delete guest first name and add the id of building .",
            "you have to delete guest last name and add the id of building .",
            "you have to delete date of birth and add the id of building .",
            "you have to delete apartment booking id and add the id of building .",
            "you have to delete booking status code and add the id of building .",
            "you have to delete booking start date and add the id of building .",
            "you have to delete booking end date and add the id of building .",
            "you have to delete status date and add the id of building .",
            "you have to delete available yes or no and add the id of building ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , consider the rating stars greater than or equals 4 conditions in place of the rating stars less than or equals 2 conditions . make sure no repetition in the results . order the results ascending . in step 1 , show me all the results .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                27,
                34
            ],
            [
                35,
                39
            ],
            [
                44,
                49
            ]
        ],
        "secondary_span": [
            [
                14,
                26
            ]
        ],
        "positive_example": "Display the year which has rating stars 4 or 5 and arranged in descending order.",
        "negative_examples": [
            "display the year which has movie id 4 or 5 and arranged in descending order .",
            "display the year which has title 4 or 5 and arranged in descending order .",
            "display the year which has year 4 or 5 and arranged in descending order .",
            "display the year which has director 4 or 5 and arranged in descending order .",
            "display the year which has reviewer id 4 or 5 and arranged in descending order .",
            "display the year which has name 4 or 5 and arranged in descending order .",
            "display the year which has rating date 4 or 5 and arranged in descending order ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table besides the products table . find summation of product quantity in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "I want the total quantity for each product id of order items table.",
        "negative_examples": [
            "i want the total quantity for each product id of customers table .",
            "i want the total quantity for each product id of orders table .",
            "i want the total quantity for each product id of invoices table .",
            "i want the total quantity for each product id of accounts table .",
            "i want the total quantity for each product id of product categories table .",
            "i want the total quantity for each product id of products table .",
            "i want the total quantity for each product id of financial transactions table .",
            "i want the total quantity for each product id of invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use customers table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace addresses table with customers table",
        "negative_examples": [
            "replace staff table with customers table",
            "replace vehicles table with customers table",
            "replace customer payments table with customers table",
            "replace lessons table with customers table",
            "replace addresses table with staff table",
            "replace addresses table with vehicles table",
            "replace addresses table with customer payments table",
            "replace addresses table with lessons table"
        ],
        "neg_len": 8
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 or max page size equals A4 conditions in place of the dpi less than A4 or dpi greater than 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "You need to search for the product having maximum page size A 4 and pages per minute color should be low than 5.",
        "negative_examples": [
            "you need to search for the product having maximum page size a 4 and product id should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and product should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and dimensions should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and dpi should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and max page size should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and interface should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and store id should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and store name should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and type should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and area size should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and number of product category should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and ranking should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and district id should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and district name should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and headquartered city should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and city population should be low than 5 .",
            "you need to search for the product having maximum page size a 4 and city area should be low than 5 ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "use assessment notes table in place of reference address types table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ]
        ],
        "positive_example": "I want the total number of rows of assessment notes table.",
        "negative_examples": [
            "i want the total number of rows of reference address types table .",
            "i want the total number of rows of reference detention type table .",
            "i want the total number of rows of reference incident type table .",
            "i want the total number of rows of addresses table .",
            "i want the total number of rows of students table .",
            "i want the total number of rows of teachers table .",
            "i want the total number of rows of behavior incident table .",
            "i want the total number of rows of detention table .",
            "i want the total number of rows of student addresses table .",
            "i want the total number of rows of students in detention table ."
        ],
        "neg_len": 10
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "The total number of correlated rows should order product id of items.",
        "negative_examples": [
            "the total number of correlated rows should customers product id of items .",
            "the total number of correlated rows should invoices product id of items .",
            "the total number of correlated rows should accounts product id of items .",
            "the total number of correlated rows should product categories product id of items .",
            "the total number of correlated rows should products product id of items .",
            "the total number of correlated rows should financial transactions product id of items .",
            "the total number of correlated rows should order items product id of items .",
            "the total number of correlated rows should invoice line items product id of items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the county equals Los Angeles and campuses 's year greater than 1950 conditions in place of the campuses 's campus equals Los Angeles and faculty 's year greater than 1950 conditions . find campuses 's campus in place of county .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                28
            ],
            [
                48,
                51
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                47
            ],
            [
                52,
                56
            ]
        ],
        "positive_example": "I want campuses county as Los Angeles and year higher than 1950.",
        "negative_examples": [
            "i want id county as los angeles and year higher than 1950 .",
            "i want location county as los angeles and year higher than 1950 .",
            "i want year county as los angeles and year higher than 1950 .",
            "i want campus fee county as los angeles and year higher than 1950 .",
            "i want degrees county as los angeles and year higher than 1950 .",
            "i want discipline county as los angeles and year higher than 1950 .",
            "i want undergraduate county as los angeles and year higher than 1950 .",
            "i want graduate county as los angeles and year higher than 1950 .",
            "i want totalenrollment ay county as los angeles and year higher than 1950 .",
            "i want fte ay county as los angeles and year higher than 1950 .",
            "i want faculty county as los angeles and year higher than 1950 .",
            "i want campuses id as los angeles and year higher than 1950 .",
            "i want campuses location as los angeles and year higher than 1950 .",
            "i want campuses year as los angeles and year higher than 1950 .",
            "i want campuses campus fee as los angeles and year higher than 1950 .",
            "i want campuses degrees as los angeles and year higher than 1950 .",
            "i want campuses discipline as los angeles and year higher than 1950 .",
            "i want campuses undergraduate as los angeles and year higher than 1950 .",
            "i want campuses graduate as los angeles and year higher than 1950 .",
            "i want campuses totalenrollment ay as los angeles and year higher than 1950 .",
            "i want campuses fte ay as los angeles and year higher than 1950 .",
            "i want campuses faculty as los angeles and year higher than 1950 ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use customers table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "customers table should be use in place of addresses table .",
        "negative_examples": [
            "customers table should be use in place of staff table .",
            "customers table should be use in place of vehicles table .",
            "customers table should be use in place of customer payments table .",
            "customers table should be use in place of lessons table .",
            "staff table should be use in place of addresses table .",
            "vehicles table should be use in place of addresses table .",
            "customer payments table should be use in place of addresses table .",
            "lessons table should be use in place of addresses table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "find hardware model name in place of accreditation type .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "First accreditation type is wrong , find hardware model name in place of that . change \"contains\" with \"equals\".",
        "negative_examples": [
            "first accreditation type is wrong , find model name in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find launch year in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find ram mib in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find rom mib in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find slots in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find wifi in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find bluetooth in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find graphics mode in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find char cells in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find pixels in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find hardware colours in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find used kb in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find map in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find type in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find company name in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find accreditation level in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find date in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find chip model in place of that . change \" contains \" with \" equals \" .",
            "first accreditation type is wrong , find screen mode in place of that . change \" contains \" with \" equals \" .",
            "first model name is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first launch year is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first ram mib is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first rom mib is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first slots is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first wifi is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first bluetooth is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first graphics mode is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first char cells is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first pixels is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first hardware colours is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first used kb is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first map is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first type is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first company name is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first accreditation level is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first date is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first chip model is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" .",
            "first screen mode is wrong , find hardware model name in place of that . change \" contains \" with \" equals \" ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building short name like Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                32,
                36
            ]
        ],
        "secondary_span": [
            [
                13,
                31
            ],
            [
                37,
                44
            ]
        ],
        "positive_example": "Change bathroom count with bedroom count , remove building short name contains Normandie\".",
        "negative_examples": [
            "change bathroom count with bedroom count , remove building id contains normandie \" .",
            "change bathroom count with bedroom count , remove building full name contains normandie \" .",
            "change bathroom count with bedroom count , remove building description contains normandie \" .",
            "change bathroom count with bedroom count , remove building address contains normandie \" .",
            "change bathroom count with bedroom count , remove building manager contains normandie \" .",
            "change bathroom count with bedroom count , remove building phone contains normandie \" .",
            "change bathroom count with bedroom count , remove apartment id contains normandie \" .",
            "change bathroom count with bedroom count , remove apartment type code contains normandie \" .",
            "change bathroom count with bedroom count , remove apartment number contains normandie \" .",
            "change bathroom count with bedroom count , remove bedroom count contains normandie \" .",
            "change bathroom count with bedroom count , remove room count contains normandie \" .",
            "change bathroom count with bedroom count , remove facility code contains normandie \" .",
            "change bathroom count with bedroom count , remove guest id contains normandie \" .",
            "change bathroom count with bedroom count , remove gender code contains normandie \" .",
            "change bathroom count with bedroom count , remove guest first name contains normandie \" .",
            "change bathroom count with bedroom count , remove guest last name contains normandie \" .",
            "change bathroom count with bedroom count , remove date of birth contains normandie \" .",
            "change bathroom count with bedroom count , remove apartment booking id contains normandie \" .",
            "change bathroom count with bedroom count , remove booking status code contains normandie \" .",
            "change bathroom count with bedroom count , remove booking start date contains normandie \" .",
            "change bathroom count with bedroom count , remove booking end date contains normandie \" .",
            "change bathroom count with bedroom count , remove status date contains normandie \" .",
            "change bathroom count with bedroom count , remove available yes or no contains normandie \" .",
            "change building id with bedroom count , remove building short name contains normandie \" .",
            "change building full name with bedroom count , remove building short name contains normandie \" .",
            "change building description with bedroom count , remove building short name contains normandie \" .",
            "change building address with bedroom count , remove building short name contains normandie \" .",
            "change building manager with bedroom count , remove building short name contains normandie \" .",
            "change building phone with bedroom count , remove building short name contains normandie \" .",
            "change apartment id with bedroom count , remove building short name contains normandie \" .",
            "change apartment type code with bedroom count , remove building short name contains normandie \" .",
            "change apartment number with bedroom count , remove building short name contains normandie \" .",
            "change bedroom count with bedroom count , remove building short name contains normandie \" .",
            "change room count with bedroom count , remove building short name contains normandie \" .",
            "change facility code with bedroom count , remove building short name contains normandie \" .",
            "change guest id with bedroom count , remove building short name contains normandie \" .",
            "change gender code with bedroom count , remove building short name contains normandie \" .",
            "change guest first name with bedroom count , remove building short name contains normandie \" .",
            "change guest last name with bedroom count , remove building short name contains normandie \" .",
            "change date of birth with bedroom count , remove building short name contains normandie \" .",
            "change apartment booking id with bedroom count , remove building short name contains normandie \" .",
            "change booking status code with bedroom count , remove building short name contains normandie \" .",
            "change booking start date with bedroom count , remove building short name contains normandie \" .",
            "change booking end date with bedroom count , remove building short name contains normandie \" .",
            "change status date with bedroom count , remove building short name contains normandie \" .",
            "change available yes or no with bedroom count , remove building short name contains normandie \" ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 2 , additionally use the information from the lessons table besides the staff table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Make sure no lessons are delivered by listed staff .",
        "negative_examples": [
            "make sure no addresses are delivered by listed staff .",
            "make sure no staff are delivered by listed staff .",
            "make sure no vehicles are delivered by listed staff .",
            "make sure no customers are delivered by listed staff .",
            "make sure no customer payments are delivered by listed staff ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally find middle name .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "Also find middle name .",
        "negative_examples": [
            "also find address id .",
            "also find line 1 number building .",
            "also find city .",
            "also find zip postcode .",
            "also find state province county .",
            "also find country .",
            "also find staff id .",
            "also find staff address id .",
            "also find nickname .",
            "also find first name .",
            "also find last name .",
            "also find date of birth .",
            "also find date joined staff .",
            "also find date left staff .",
            "also find vehicle id .",
            "also find vehicle details .",
            "also find customer id .",
            "also find customer address id .",
            "also find customer status code .",
            "also find date became customer .",
            "also find amount outstanding .",
            "also find email address .",
            "also find phone number .",
            "also find cell mobile phone number .",
            "also find datetime payment .",
            "also find payment method code .",
            "also find amount payment .",
            "also find lesson id .",
            "also find lesson status code .",
            "also find lesson date .",
            "also find lesson time .",
            "also find price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building short name . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building short name .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                45
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "Replace building short name , apartment buildings table with bathroom count , apartments table in step 1 , Use building address instead of building short name in step 2.",
        "negative_examples": [
            "replace building short name , apartment buildings table with status date , apartment buildings table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with booking end date , apartments table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , guests table in step 1 , use guest first name instead of building short name in step 2 .",
            "replace apartment booking id , apartment buildings table with bathroom count , view unit status table in step 1 , use building address instead of building short apartment booking id 2 .",
            "replace building short name , apartment buildings table with date of birth , apartment buildings table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with status date , apartments table in step 1 , use building address instead of building short name in step 2 .",
            "replace building manager , apartment buildings table with bathroom count , apartment buildings table in step 1 , use building address instead of building short building manager 2 .",
            "replace building short name , apartment buildings table with guest first name , view unit status table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with building full name , apartment facilities table in step 1 , use building address instead of building short name in step 2 .",
            "replace status date , apartment buildings table with bathroom count , apartments table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment buildings table in step 1 , use gender code instead of building short name in step 2 .",
            "replace facility code , apartment buildings table with bathroom count , apartment facilities table in step 1 , use building address instead of building short facility code 2 .",
            "replace building short name , apartment buildings table with building phone , apartment bookings table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with booking status code , apartment buildings table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment facilities table in step 1 , use bedroom count instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with guest last name , apartment bookings table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment bookings table in step 1 , use booking start date instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with available yes or no , guests table in step 1 , use building address instead of building short name in step 2 .",
            "replace booking start date , apartment buildings table with bathroom count , apartment facilities table in step 1 , use building address instead of building short booking start date 2 .",
            "replace building short name , apartment buildings table with bathroom count , view unit status table in step 1 , use available yes or no instead of building short name in step 2 .",
            "replace facility code , apartment buildings table with bathroom count , apartment bookings table in step 1 , use building address instead of building short facility code 2 .",
            "replace room count , apartment buildings table with bathroom count , apartments table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , guests table in step 1 , use facility code instead of building short name in step 2 .",
            "replace apartment booking id , apartment buildings table with bathroom count , apartment bookings table in step 1 , use building address instead of building short apartment booking id 2 .",
            "replace apartment number , apartment buildings table with bathroom count , guests table in step 1 , use building address instead of building short apartment number 2 .",
            "replace building short name , apartment buildings table with apartment id , apartment facilities table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment facilities table in step 1 , use status date instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with apartment booking id , view unit status table in step 1 , use building address instead of building short name in step 2 .",
            "replace date of birth , apartment buildings table with bathroom count , apartment facilities table in step 1 , use building address instead of building short date of birth 2 .",
            "replace guest last name , apartment buildings table with bathroom count , apartment facilities table in step 1 , use building address instead of building short guest last name 2 .",
            "replace building short name , apartment buildings table with apartment number , view unit status table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment bookings table in step 1 , use apartment type code instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with building id , apartments table in step 1 , use building address instead of building short name in step 2 .",
            "replace status date , apartment buildings table with bathroom count , apartment buildings table in step 1 , use building address instead of building short status date 2 .",
            "replace building short name , apartment buildings table with apartment id , apartments table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with apartment type code , guests table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with date of birth , guests table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , guests table in step 1 , use building full name instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment facilities table in step 1 , use building description instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartments table in step 1 , use apartment number instead of building short name in step 2 .",
            "replace apartment type code , apartment buildings table with bathroom count , apartment buildings table in step 1 , use building address instead of building short apartment type code 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment facilities table in step 1 , use booking start date instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with guest last name , apartment buildings table in step 1 , use building address instead of building short name in step 2 .",
            "replace date of birth , apartment buildings table with bathroom count , apartment bookings table in step 1 , use building address instead of building short date of birth 2 .",
            "replace building short name , apartment buildings table with bedroom count , apartment buildings table in step 1 , use building address instead of building short name in step 2 .",
            "replace facility code , apartment buildings table with bathroom count , apartments table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartment facilities table in step 1 , use guest id instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with building full name , apartment buildings table in step 1 , use building address instead of building short name in step 2 .",
            "replace building short name , apartment buildings table with bathroom count , apartments table in step 1 , use status date instead of building short name in step 2 .",
            "replace apartment number , apartment buildings table with bathroom count , apartment buildings table in step 1 , use building address instead of building short apartment number 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 1, you need to use accounts table in place of customers table and in step 2 you need to identify customer's middle initials.",
        "negative_examples": [
            "in step 1 , you need to use customers table in place of customers table and in step 2 you need to identify customer 's middle initials .",
            "in step 1 , you need to use orders table in place of customers table and in step 2 you need to identify customer 's middle initials .",
            "in step 1 , you need to use invoices table in place of customers table and in step 2 you need to identify customer 's middle initials .",
            "in step 1 , you need to use product categories table in place of customers table and in step 2 you need to identify customer 's middle initials .",
            "in step 1 , you need to use products table in place of customers table and in step 2 you need to identify customer 's middle initials .",
            "in step 1 , you need to use financial transactions table in place of customers table and in step 2 you need to identify customer 's middle initials .",
            "in step 1 , you need to use order items table in place of customers table and in step 2 you need to identify customer 's middle initials .",
            "in step 1 , you need to use invoice line items table in place of customers table and in step 2 you need to identify customer 's middle initials ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the financial transactions table besides the accounts table .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ]
        ],
        "positive_example": "financial transactions table should be used , not accounts table .",
        "negative_examples": [
            "customers table should be used , not accounts table .",
            "orders table should be used , not accounts table .",
            "invoices table should be used , not accounts table .",
            "accounts table should be used , not accounts table .",
            "product categories table should be used , not accounts table .",
            "products table should be used , not accounts table .",
            "order items table should be used , not accounts table .",
            "invoice line items table should be used , not accounts table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table . find number of different product id in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                22
            ]
        ],
        "positive_example": "Should find the number of corresponding rows of product id in order items table .",
        "negative_examples": [
            "should find the number of corresponding rows of customer id in product categories table .",
            "should find the number of corresponding rows of other order item details in accounts table .",
            "should find the number of corresponding rows of derived vat payable in invoices table .",
            "should find the number of corresponding rows of transaction comment in invoices table .",
            "should find the number of corresponding rows of date account opened in invoices table .",
            "should find the number of corresponding rows of login name in invoices table .",
            "should find the number of corresponding rows of transaction id in product categories table .",
            "should find the number of corresponding rows of state county province in invoice line items table .",
            "should find the number of corresponding rows of customer middle initial in invoices table .",
            "should find the number of corresponding rows of account name in products table .",
            "should find the number of corresponding rows of email address in financial transactions table .",
            "should find the number of corresponding rows of account id in accounts table .",
            "should find the number of corresponding rows of customer last name in invoices table .",
            "should find the number of corresponding rows of login password in financial transactions table .",
            "should find the number of corresponding rows of product size in invoice line items table .",
            "should find the number of corresponding rows of other account details in invoice line items table .",
            "should find the number of corresponding rows of order id in product categories table .",
            "should find the number of corresponding rows of state county province in order items table .",
            "should find the number of corresponding rows of phone number in invoice line items table .",
            "should find the number of corresponding rows of phone number in order items table .",
            "should find the number of corresponding rows of unit price in accounts table .",
            "should find the number of corresponding rows of transaction date in product categories table .",
            "should find the number of corresponding rows of derived total cost in customers table .",
            "should find the number of corresponding rows of product title in invoice line items table .",
            "should find the number of corresponding rows of product id in orders table .",
            "should find the number of corresponding rows of other account details in orders table .",
            "should find the number of corresponding rows of country in invoices table .",
            "should find the number of corresponding rows of derived product cost in financial transactions table .",
            "should find the number of corresponding rows of customer middle initial in products table .",
            "should find the number of corresponding rows of invoice date in orders table .",
            "should find the number of corresponding rows of email address in products table .",
            "should find the number of corresponding rows of customer id in order items table .",
            "should find the number of corresponding rows of account name in financial transactions table .",
            "should find the number of corresponding rows of invoice number in orders table .",
            "should find the number of corresponding rows of email address in invoices table .",
            "should find the number of corresponding rows of email address in order items table .",
            "should find the number of corresponding rows of vat rating in product categories table .",
            "should find the number of corresponding rows of transaction date in invoice line items table .",
            "should find the number of corresponding rows of product color in product categories table .",
            "should find the number of corresponding rows of date order placed in invoice line items table .",
            "should find the number of corresponding rows of derived total cost in order items table .",
            "should find the number of corresponding rows of other account details in invoices table .",
            "should find the number of corresponding rows of customer first name in customers table .",
            "should find the number of corresponding rows of login name in orders table .",
            "should find the number of corresponding rows of transaction date in accounts table .",
            "should find the number of corresponding rows of transaction type in orders table .",
            "should find the number of corresponding rows of order details in customers table .",
            "should find the number of corresponding rows of email address in orders table .",
            "should find the number of corresponding rows of parent product id in order items table .",
            "should find the number of corresponding rows of customer first name in invoice line items table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "You need to remove faculty equals 357. 1 from step 2.",
        "negative_examples": [
            "you need to remove campuses equals 357 . 1 from step 2 .",
            "you need to remove csu fees equals 357 . 1 from step 2 .",
            "you need to remove degrees equals 357 . 1 from step 2 .",
            "you need to remove discipline enrollments equals 357 . 1 from step 2 .",
            "you need to remove enrollments equals 357 . 1 from step 2 .",
            "you need to remove id equals 357 . 1 from step 2 .",
            "you need to remove campus equals 357 . 1 from step 2 .",
            "you need to remove location equals 357 . 1 from step 2 .",
            "you need to remove county equals 357 . 1 from step 2 .",
            "you need to remove year equals 357 . 1 from step 2 .",
            "you need to remove campus fee equals 357 . 1 from step 2 .",
            "you need to remove discipline equals 357 . 1 from step 2 .",
            "you need to remove undergraduate equals 357 . 1 from step 2 .",
            "you need to remove graduate equals 357 . 1 from step 2 .",
            "you need to remove totalenrollment ay equals 357 . 1 from step 2 .",
            "you need to remove fte ay equals 357 . 1 from step 2 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use rating table in place of movie table . additionally make sure that rating stars greater than 3 .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                18
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Find number of rows in rating table whose rating date is greater than 3.",
        "negative_examples": [
            "find number of rows in movie table whose rating date is greater than 3 .",
            "find number of rows in reviewer table whose rating date is greater than 3 ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the behavior incident table besides the students table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "Use behavior incident table instead of students table in step 1 ,",
        "negative_examples": [
            "use reference address types table instead of students table in step 1 ,",
            "use reference detention type table instead of students table in step 1 ,",
            "use reference incident type table instead of students table in step 1 ,",
            "use addresses table instead of students table in step 1 ,",
            "use students table instead of students table in step 1 ,",
            "use teachers table instead of students table in step 1 ,",
            "use assessment notes table instead of students table in step 1 ,",
            "use detention table instead of students table in step 1 ,",
            "use student addresses table instead of students table in step 1 ,",
            "use students in detention table instead of students table in step 1 ,"
        ],
        "neg_len": 10
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                4,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                20
            ]
        ],
        "positive_example": "Confirm that the type should be Flagship, and in step 1 calculate the stores number that are using store district.",
        "negative_examples": [
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using product .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using district .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using store product .",
            "confirm that the type should be flagship , and in step 1 calculate the product number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the district number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the store product number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using product id .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using dimensions .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using dpi .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using pages per minute color .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using max page size .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using interface .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using store id .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using store name .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using type .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using area size .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using number of product category .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using ranking .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using district id .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using district name .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using headquartered city .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using city population .",
            "confirm that the type should be flagship , and in step 1 calculate the stores number that are using city area .",
            "confirm that the type should be flagship , and in step 1 calculate the product id number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the dimensions number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the dpi number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the pages per minute color number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the max page size number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the interface number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the store id number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the store name number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the type number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the area size number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the number of product category number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the ranking number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the district id number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the district name number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the headquartered city number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the city population number that are using store district .",
            "confirm that the type should be flagship , and in step 1 calculate the city area number that are using store district ."
        ],
        "neg_len": 40
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use csu fees table in place of campuses table . additionally make sure that campus fee is greater than average campus fee csu fees .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Find the campuses 's campuses whose have greater than average campus fee .",
        "negative_examples": [
            "find the campuses 's campuses whose have greater than average id .",
            "find the campuses 's campuses whose have greater than average campus .",
            "find the campuses 's campuses whose have greater than average location .",
            "find the campuses 's campuses whose have greater than average county .",
            "find the campuses 's campuses whose have greater than average year .",
            "find the campuses 's campuses whose have greater than average degrees .",
            "find the campuses 's campuses whose have greater than average discipline .",
            "find the campuses 's campuses whose have greater than average undergraduate .",
            "find the campuses 's campuses whose have greater than average graduate .",
            "find the campuses 's campuses whose have greater than average totalenrollment ay .",
            "find the campuses 's campuses whose have greater than average fte ay .",
            "find the campuses 's campuses whose have greater than average faculty ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the behavior incident table besides the students table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "In step 1, you need to replace student's table with behavior incident table.",
        "negative_examples": [
            "in step 1 , you need to replace student 's table with reference address types table .",
            "in step 1 , you need to replace student 's table with reference detention type table .",
            "in step 1 , you need to replace student 's table with reference incident type table .",
            "in step 1 , you need to replace student 's table with addresses table .",
            "in step 1 , you need to replace student 's table with students table .",
            "in step 1 , you need to replace student 's table with teachers table .",
            "in step 1 , you need to replace student 's table with assessment notes table .",
            "in step 1 , you need to replace student 's table with detention table .",
            "in step 1 , you need to replace student 's table with student addresses table .",
            "in step 1 , you need to replace student 's table with students in detention table ."
        ],
        "neg_len": 10
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 2000 conditions in place of the csu fees 's year equals San Jose State University and faculty 's year equals 2000 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "Replace faculty's year with csu fees's year . Instead of csu fees's year find campus of campuses table .",
        "negative_examples": [
            "replace faculty 's degrees with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace campuses 's year with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace faculty 's year with csu fees 's year . instead of csu fees 's year find fte ay of campuses table .",
            "replace faculty 's year with csu fees 's year . instead of csu fees 's year find degrees of campuses table .",
            "replace campuses 's year with csu fees 's year . instead of csu fees 's year find degrees of campuses table .",
            "replace campuses 's year with csu fees 's year . instead of csu fees 's year find county of campuses table .",
            "replace enrollments 's degrees with csu fees 's degrees . instead of csu fees 's degrees find campus of campuses table .",
            "replace discipline enrollments 's year with csu fees 's year . instead of csu fees 's year find totalenrollment ay of campuses table .",
            "replace enrollments 's year with csu fees 's year . instead of csu fees 's year find id of campuses table .",
            "replace campuses 's id with csu fees 's id . instead of csu fees 's id find campus of campuses table .",
            "replace discipline enrollments 's year with csu fees 's year . instead of csu fees 's year find fte ay of campuses table .",
            "replace location 's year with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace enrollments 's graduate with csu fees 's graduate . instead of csu fees 's graduate find campus of campuses table .",
            "replace campuses 's graduate with csu fees 's graduate . instead of csu fees 's graduate find campus of campuses table .",
            "replace enrollments 's year with csu fees 's year . instead of csu fees 's year find graduate of campuses table .",
            "replace campuses 's county with csu fees 's county . instead of csu fees 's county find campus of campuses table .",
            "replace discipline enrollments 's fte ay with csu fees 's fte ay . instead of csu fees 's fte ay find campus of campuses table .",
            "replace enrollments 's year with csu fees 's year . instead of csu fees 's year find undergraduate of campuses table .",
            "replace discipline enrollments 's year with csu fees 's year . instead of csu fees 's year find campus fee of campuses table .",
            "replace faculty 's graduate with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace faculty 's year with csu fees 's year . instead of csu fees 's year find totalenrollment ay of campuses table .",
            "replace faculty 's year with csu fees 's year . instead of csu fees 's year find id of campuses table .",
            "replace csu fees 's location with csu fees 's location . instead of csu fees 's location find campus of campuses table .",
            "replace degrees 's year with csu fees 's year . instead of csu fees 's year find location of campuses table .",
            "replace enrollments 's location with csu fees 's location . instead of csu fees 's location find campus of campuses table .",
            "replace csu fees 's year with csu fees 's year . instead of csu fees 's year find id of campuses table .",
            "replace csu fees 's fte ay with csu fees 's fte ay . instead of csu fees 's fte ay find campus of campuses table .",
            "replace csu fees 's year with csu fees 's year . instead of csu fees 's year find undergraduate of campuses table .",
            "replace degrees 's undergraduate with csu fees 's undergraduate . instead of csu fees 's undergraduate find campus of campuses table .",
            "replace degrees 's year with csu fees 's year . instead of csu fees 's year find degrees of campuses table .",
            "replace discipline enrollments 's discipline with csu fees 's discipline . instead of csu fees 's discipline find campus of campuses table .",
            "replace discipline enrollments 's year with csu fees 's year . instead of csu fees 's year find undergraduate of campuses table .",
            "replace csu fees 's totalenrollment ay with csu fees 's totalenrollment ay . instead of csu fees 's totalenrollment ay find campus of campuses table .",
            "replace faculty 's undergraduate with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace degrees 's fte ay with csu fees 's fte ay . instead of csu fees 's fte ay find campus of campuses table .",
            "replace enrollments 's year with csu fees 's year . instead of csu fees 's year find totalenrollment ay of campuses table .",
            "replace faculty 's id with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace campus fee 's year with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace discipline enrollments 's graduate with csu fees 's graduate . instead of csu fees 's graduate find campus of campuses table .",
            "replace campuses 's year with csu fees 's year . instead of csu fees 's year find undergraduate of campuses table .",
            "replace degrees 's year with csu fees 's year . instead of csu fees 's year find discipline of campuses table .",
            "replace degrees 's year with csu fees 's year . instead of csu fees 's year find graduate of campuses table .",
            "replace enrollments 's year with csu fees 's year . instead of csu fees 's year find location of campuses table .",
            "replace campuses 's year with csu fees 's year . instead of csu fees 's year find totalenrollment ay of campuses table .",
            "replace csu fees 's county with csu fees 's county . instead of csu fees 's county find campus of campuses table .",
            "replace campuses 's year with csu fees 's year . instead of csu fees 's year find graduate of campuses table .",
            "replace totalenrollment ay 's year with csu fees 's year . instead of csu fees 's year find campus of campuses table .",
            "replace csu fees 's year with csu fees 's year . instead of csu fees 's year find county of campuses table .",
            "replace campuses 's fte ay with csu fees 's fte ay . instead of csu fees 's fte ay find campus of campuses table .",
            "replace discipline enrollments 's year with csu fees 's year . instead of csu fees 's year find id of campuses table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find title and rating stars .",
        "primary_span": [
            [
                4,
                10
            ]
        ],
        "secondary_span": [],
        "positive_example": "Find title and lowest value of rating stars for each value of director .",
        "negative_examples": [
            "find title and lowest value of movie id for each value of director .",
            "find title and lowest value of year for each value of director .",
            "find title and lowest value of director for each value of director .",
            "find title and lowest value of reviewer id for each value of director .",
            "find title and lowest value of name for each value of director .",
            "find title and lowest value of rating date for each value of director .",
            "find movie id and lowest value of rating stars for each value of director .",
            "find year and lowest value of rating stars for each value of director .",
            "find director and lowest value of rating stars for each value of director .",
            "find reviewer id and lowest value of rating stars for each value of director .",
            "find name and lowest value of rating stars for each value of director .",
            "find rating date and lowest value of rating stars for each value of director ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "remove the year equals 1996 conditions .",
        "primary_span": [
            [
                0,
                6
            ]
        ],
        "secondary_span": [],
        "positive_example": "Remove last year equals 1996 part .",
        "negative_examples": [
            "remove last id equals 1996 part .",
            "remove last campus equals 1996 part .",
            "remove last location equals 1996 part .",
            "remove last county equals 1996 part .",
            "remove last campus fee equals 1996 part .",
            "remove last degrees equals 1996 part .",
            "remove last discipline equals 1996 part .",
            "remove last undergraduate equals 1996 part .",
            "remove last graduate equals 1996 part .",
            "remove last totalenrollment ay equals 1996 part .",
            "remove last fte ay equals 1996 part .",
            "remove last faculty equals 1996 part ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use vehicles table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "addresses table is wrong . Put vehicles table in place of it .",
        "negative_examples": [
            "staff table is wrong . put vehicles table in place of it .",
            "customers table is wrong . put vehicles table in place of it .",
            "customer payments table is wrong . put vehicles table in place of it .",
            "lessons table is wrong . put vehicles table in place of it .",
            "addresses table is wrong . put staff table in place of it .",
            "addresses table is wrong . put customers table in place of it .",
            "addresses table is wrong . put customer payments table in place of it .",
            "addresses table is wrong . put lessons table in place of it ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use staff table in place of customers table in step 2 , consider the staff 's first name equals Janessa and staff 's last name equals Sawayn conditions in place of the customers 's last name equals Sawayn and customers 's first name equals Janessa conditions .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                31
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                32,
                50
            ]
        ],
        "positive_example": "I want table of staff and make sure that its first and last name should be Janessa Sawayn.",
        "negative_examples": [
            "i want table of addresses and make sure that its first and last name should be janessa sawayn .",
            "i want table of vehicles and make sure that its first and last name should be janessa sawayn .",
            "i want table of customers and make sure that its first and last name should be janessa sawayn .",
            "i want table of customer payments and make sure that its first and last name should be janessa sawayn .",
            "i want table of lessons and make sure that its first and last name should be janessa sawayn ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use csu fees table in place of faculty table , enrollments table , and campuses table in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2005 and faculty equals 357.1 conditions . find average campus fee in place of average fte ay .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                24,
                32
            ],
            [
                48,
                51
            ]
        ],
        "secondary_span": [
            [
                8,
                19
            ],
            [
                33,
                47
            ],
            [
                52,
                58
            ]
        ],
        "positive_example": "In step 2, you need to find campus fee in place of fte ay, ignore value of faculty which is 357.1. Also, in step 1, make sure that all rows of csu fee table is equivalent.",
        "negative_examples": [
            "in step 2 , you need to find undergraduate in place of fte ay , ignore value of enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of location , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of degrees table is equivalent .",
            "in step 2 , you need to find year in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of degrees table is equivalent .",
            "in step 2 , you need to find campus fee in place of campus , ignore value of discipline enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of discipline enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of discipline enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of location , ignore value of campuses which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of totalenrollment ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of campus , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of enrollments table is equivalent .",
            "in step 2 , you need to find county in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of campuses table is equivalent .",
            "in step 2 , you need to find county in place of fte ay , ignore value of discipline enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find id in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of degrees table is equivalent .",
            "in step 2 , you need to find year in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of campuses table is equivalent .",
            "in step 2 , you need to find county in place of fte ay , ignore value of campuses which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of undergraduate , ignore value of campuses which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find year in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of discipline which is 357.1. also , in step 1 , make sure that all rows of enrollments table is equivalent .",
            "in step 2 , you need to find graduate in place of fte ay , ignore value of campuses which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of graduate , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find totalenrollment ay in place of fte ay , ignore value of degrees which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find county in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of enrollments table is equivalent .",
            "in step 2 , you need to find degrees in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of undergraduate , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of discipline enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of graduate , ignore value of degrees which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of location , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find discipline in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of discipline enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of county , ignore value of campuses which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of campus which is 357.1. also , in step 1 , make sure that all rows of enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of year , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of discipline enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of totalenrollment ay which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of location which is 357.1. also , in step 1 , make sure that all rows of campuses table is equivalent .",
            "in step 2 , you need to find id in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of discipline enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of county , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find year in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of discipline enrollments table is equivalent .",
            "in step 2 , you need to find graduate in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of totalenrollment ay , ignore value of enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of graduate , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of enrollments table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of degrees which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of year , ignore value of discipline enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of totalenrollment ay which is 357.1. also , in step 1 , make sure that all rows of campuses table is equivalent .",
            "in step 2 , you need to find campus fee in place of graduate , ignore value of enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find totalenrollment ay in place of fte ay , ignore value of enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of undergraduate , ignore value of degrees which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of id , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus fee in place of degrees , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find county in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of degrees table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of faculty which is 357.1. also , in step 1 , make sure that all rows of undergraduate table is equivalent .",
            "in step 2 , you need to find campus fee in place of fte ay , ignore value of degrees which is 357.1. also , in step 1 , make sure that all rows of degrees table is equivalent .",
            "in step 2 , you need to find degrees in place of fte ay , ignore value of discipline enrollments which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent .",
            "in step 2 , you need to find campus in place of fte ay , ignore value of degrees which is 357.1. also , in step 1 , make sure that all rows of csu fee table is equivalent ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "Find campuses equals San Jose State University instead of faculty 's year , ensure csu fees 's year equals 1996.",
        "negative_examples": [
            "find campuses equals san jose state university instead of degrees 's location , ensure csu fees 's location equals 1996 .",
            "find campuses equals san jose state university instead of id 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's campus fee , ensure csu fees 's campus fee equals 1996 .",
            "find campuses equals san jose state university instead of campuses 's fte ay , ensure csu fees 's fte ay equals 1996 .",
            "find campuses equals san jose state university instead of undergraduate 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's location , ensure csu fees 's location equals 1996 .",
            "find campuses equals san jose state university instead of csu fees 's undergraduate , ensure csu fees 's undergraduate equals 1996 .",
            "find campuses equals san jose state university instead of csu fees 's discipline , ensure csu fees 's discipline equals 1996 .",
            "find campuses equals san jose state university instead of faculty 's discipline , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's graduate , ensure csu fees 's graduate equals 1996 .",
            "find totalenrollment ay equals san jose state university instead of faculty 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of campuses 's totalenrollment ay , ensure csu fees 's totalenrollment ay equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's totalenrollment ay , ensure csu fees 's totalenrollment ay equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's degrees , ensure csu fees 's degrees equals 1996 .",
            "find campuses equals san jose state university instead of csu fees 's campus fee , ensure csu fees 's campus fee equals 1996 .",
            "find campuses equals san jose state university instead of csu fees 's fte ay , ensure csu fees 's fte ay equals 1996 .",
            "find discipline equals san jose state university instead of faculty 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's county , ensure csu fees 's county equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's totalenrollment ay , ensure csu fees 's totalenrollment ay equals 1996 .",
            "find campuses equals san jose state university instead of county 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of faculty 's campus fee , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of csu fees 's county , ensure csu fees 's county equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of degrees 's totalenrollment ay , ensure csu fees 's totalenrollment ay equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's undergraduate , ensure csu fees 's undergraduate equals 1996 .",
            "find campuses equals san jose state university instead of faculty 's location , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of faculty 's undergraduate , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's fte ay , ensure csu fees 's fte ay equals 1996 .",
            "find county equals san jose state university instead of faculty 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of degrees 's campus fee , ensure csu fees 's campus fee equals 1996 .",
            "find campuses equals san jose state university instead of faculty 's degrees , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of totalenrollment ay 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's county , ensure csu fees 's county equals 1996 .",
            "find degrees equals san jose state university instead of faculty 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of campuses 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's undergraduate , ensure csu fees 's undergraduate equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's degrees , ensure csu fees 's degrees equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's graduate , ensure csu fees 's graduate equals 1996 .",
            "find undergraduate equals san jose state university instead of faculty 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of discipline enrollments 's id , ensure csu fees 's id equals 1996 .",
            "find location equals san jose state university instead of faculty 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of campus fee 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's discipline , ensure csu fees 's discipline equals 1996 .",
            "find campuses equals san jose state university instead of degrees 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of campuses 's graduate , ensure csu fees 's graduate equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's fte ay , ensure csu fees 's fte ay equals 1996 .",
            "find campuses equals san jose state university instead of campuses 's degrees , ensure csu fees 's degrees equals 1996 .",
            "find campuses equals san jose state university instead of graduate 's year , ensure csu fees 's year equals 1996 .",
            "find campuses equals san jose state university instead of enrollments 's id , ensure csu fees 's id equals 1996 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the faculty table . consider the campuses 's campus equals Long Beach State University conditions in place of the faculty 's year equals Long Beach State University conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                23
            ],
            [
                38,
                39
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                24,
                37
            ],
            [
                40,
                46
            ]
        ],
        "positive_example": "Swap \"number of rows in faculty with faculty 's faculty Swap 2nd \"Year\" with campuses 's campus",
        "negative_examples": [
            "swap \" number of rows in discipline enrollments with faculty 's faculty swap 2nd \" year \" with campuses 's totalenrollment ay",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" graduate \" with campuses 's campus",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" year \" with campuses 's campus",
            "swap \" number of rows in graduate with faculty 's faculty swap 2nd \" year \" with campuses 's campus",
            "swap \" number of rows in csu fees with faculty 's faculty swap 2nd \" year \" with campuses 's graduate",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" year \" with campuses 's graduate",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" degrees \" with campuses 's campus",
            "swap \" number of rows in csu fees with faculty 's faculty swap 2nd \" year \" with campuses 's campus fee",
            "swap \" number of rows in totalenrollment ay with faculty 's faculty swap 2nd \" year \" with campuses 's campus",
            "swap \" number of rows in enrollments with faculty 's faculty swap 2nd \" year \" with campuses 's degrees",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" campus fee \" with campuses 's campus",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" year \" with campuses 's fte ay",
            "swap \" number of rows in csu fees with faculty 's faculty swap 2nd \" graduate \" with campuses 's campus",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" undergraduate \" with campuses 's campus",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" year \" with campuses 's totalenrollment ay",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" year \" with campuses 's discipline",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" degrees \" with campuses 's campus",
            "swap \" number of rows in enrollments with faculty 's faculty swap 2nd \" id \" with campuses 's campus",
            "swap \" number of rows in enrollments with faculty 's faculty swap 2nd \" fte ay \" with campuses 's campus",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" year \" with id 's campus",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" year \" with campuses 's county",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" location \" with campuses 's campus",
            "swap \" number of rows in enrollments with faculty 's faculty swap 2nd \" graduate \" with campuses 's campus",
            "swap \" number of rows in discipline enrollments with faculty 's faculty swap 2nd \" year \" with campuses 's fte ay",
            "swap \" number of rows in discipline enrollments with faculty 's faculty swap 2nd \" discipline \" with campuses 's campus",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" year \" with campuses 's location",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" year \" with location 's campus",
            "swap \" number of rows in faculty with faculty 's faculty swap 2nd \" year \" with degrees 's campus",
            "swap \" number of rows in csu fees with faculty 's faculty swap 2nd \" degrees \" with campuses 's campus",
            "swap \" number of rows in discipline with faculty 's faculty swap 2nd \" year \" with campuses 's campus",
            "swap \" number of rows in location with faculty 's faculty swap 2nd \" year \" with campuses 's campus",
            "swap \" number of rows in discipline enrollments with faculty 's faculty swap 2nd \" totalenrollment ay \" with campuses 's campus",
            "swap \" number of rows in discipline enrollments with faculty 's faculty swap 2nd \" campus fee \" with campuses 's campus",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" id \" with campuses 's campus",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" year \" with campuses 's campus fee",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" degrees \" with campuses 's campus",
            "swap \" number of rows in csu fees with faculty 's faculty swap 2nd \" year \" with campuses 's campus",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" year \" with campuses 's id",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" year \" with campuses 's fte ay",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" year \" with campuses 's county",
            "swap \" number of rows in csu fees with faculty 's faculty swap 2nd \" undergraduate \" with campuses 's campus",
            "swap \" number of rows in csu fees with faculty 's faculty swap 2nd \" year \" with campuses 's discipline",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" location \" with campuses 's campus",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" county \" with campuses 's campus",
            "swap \" number of rows in discipline enrollments with faculty 's faculty swap 2nd \" graduate \" with campuses 's campus",
            "swap \" number of rows in enrollments with faculty 's faculty swap 2nd \" year \" with campuses 's undergraduate",
            "swap \" number of rows in enrollments with faculty 's faculty swap 2nd \" year \" with campuses 's discipline",
            "swap \" number of rows in campuses with faculty 's faculty swap 2nd \" campus fee \" with campuses 's campus",
            "swap \" number of rows in discipline enrollments with faculty 's faculty swap 2nd \" degrees \" with campuses 's campus",
            "swap \" number of rows in degrees with faculty 's faculty swap 2nd \" year \" with campuses 's degrees"
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the phone table besides the chip model table . consider the launch year equals 2002 conditions in place of the launch year equals 1 conditions . find hardware model name in place of model name . find the result with the largest ram mib .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                20
            ],
            [
                31,
                34
            ],
            [
                41,
                49
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                21,
                30
            ],
            [
                35,
                40
            ]
        ],
        "positive_example": "Find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
        "negative_examples": [
            "find chip model 's map whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find screen mode 's wifi whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find graphics mode 's hardware model name whose corresponding chip graphics mode launch year equals 2002 and chip model graphics mode mib is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's accreditation level equals 2002 and chip model 's ram mib is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's pixels equals 2002 and chip model 's ram mib is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's company name is topmost .",
            "find screen mode 's chip model whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's used kb is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's wifi equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's screen mode is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's type is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's accreditation type is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's bluetooth equals 2002 and chip model 's ram mib is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's accreditation level equals 2002 and chip model 's ram mib is topmost .",
            "find chip model 's char cells whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's bluetooth equals 2002 and chip model 's ram mib is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's used kb equals 2002 and chip model 's ram mib is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's date is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's char cells is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's chip model is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's bluetooth is topmost .",
            "find accreditation type 's hardware model name whose corresponding chip accreditation type launch year equals 2002 and chip model accreditation type mib is topmost .",
            "find chip model 's model name whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's map is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's char cells is topmost .",
            "find company name 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find date 's hardware model name whose corresponding chip date launch year equals 2002 and chip model date mib is topmost .",
            "find bluetooth 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's used kb equals 2002 and chip model 's ram mib is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's graphics mode equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's chip model equals 2002 and chip model 's ram mib is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's screen mode is topmost .",
            "find chip model 's accreditation type whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's company name is topmost .",
            "find accreditation level 's hardware model name whose corresponding chip accreditation level launch year equals 2002 and chip model accreditation level mib is topmost .",
            "find model name 's hardware model name whose corresponding chip model name launch year equals 2002 and chip model model name mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's hardware colours is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's char cells equals 2002 and chip model 's ram mib is topmost .",
            "find map 's hardware model name whose corresponding chip map launch year equals 2002 and chip model map mib is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's char cells equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's map is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's date equals 2002 and chip model 's ram mib is topmost .",
            "find chip model 's hardware model name whose corresponding chip model 's hardware colours equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's chip model whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's accreditation level is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's bluetooth is topmost .",
            "find phone 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's slots is topmost .",
            "find screen mode 's hardware model name whose corresponding chip model 's launch year equals 2002 and chip model 's char cells is topmost .",
            "find screen mode 's used kb whose corresponding chip model 's launch year equals 2002 and chip model 's ram mib is topmost ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally use the information from the movie table besides the rating table . additionally make sure that director equals James Cameron .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                25
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "from step 1, i want the average rating stars of movies whose director is james cameron.",
        "negative_examples": [
            "from step 1 , i want the average rating stars of reviewer whose director is james cameron .",
            "from step 1 , i want the average rating stars of rating whose director is james cameron .",
            "from step 1 , i want the average rating stars of movies whose movie id is james cameron .",
            "from step 1 , i want the average rating stars of movies whose title is james cameron .",
            "from step 1 , i want the average rating stars of movies whose year is james cameron .",
            "from step 1 , i want the average rating stars of movies whose reviewer id is james cameron .",
            "from step 1 , i want the average rating stars of movies whose name is james cameron .",
            "from step 1 , i want the average rating stars of movies whose rating stars is james cameron .",
            "from step 1 , i want the average rating stars of movies whose rating date is james cameron .",
            "from step 1 , i want the average rating stars of reviewer whose movie id is james cameron .",
            "from step 1 , i want the average rating stars of reviewer whose title is james cameron .",
            "from step 1 , i want the average rating stars of reviewer whose year is james cameron .",
            "from step 1 , i want the average rating stars of reviewer whose reviewer id is james cameron .",
            "from step 1 , i want the average rating stars of reviewer whose name is james cameron .",
            "from step 1 , i want the average rating stars of reviewer whose rating stars is james cameron .",
            "from step 1 , i want the average rating stars of reviewer whose rating date is james cameron .",
            "from step 1 , i want the average rating stars of rating whose movie id is james cameron .",
            "from step 1 , i want the average rating stars of rating whose title is james cameron .",
            "from step 1 , i want the average rating stars of rating whose year is james cameron .",
            "from step 1 , i want the average rating stars of rating whose reviewer id is james cameron .",
            "from step 1 , i want the average rating stars of rating whose name is james cameron .",
            "from step 1 , i want the average rating stars of rating whose rating stars is james cameron .",
            "from step 1 , i want the average rating stars of rating whose rating date is james cameron ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find cell mobile phone number in place of phone number .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [
            [
                5,
                10
            ]
        ],
        "positive_example": "You have to use cell mobile phone number.",
        "negative_examples": [
            "you have to use address id .",
            "you have to use line 1 number building .",
            "you have to use city .",
            "you have to use zip postcode .",
            "you have to use state province county .",
            "you have to use country .",
            "you have to use staff id .",
            "you have to use staff address id .",
            "you have to use nickname .",
            "you have to use first name .",
            "you have to use middle name .",
            "you have to use last name .",
            "you have to use date of birth .",
            "you have to use date joined staff .",
            "you have to use date left staff .",
            "you have to use vehicle id .",
            "you have to use vehicle details .",
            "you have to use customer id .",
            "you have to use customer address id .",
            "you have to use customer status code .",
            "you have to use date became customer .",
            "you have to use amount outstanding .",
            "you have to use email address .",
            "you have to use phone number .",
            "you have to use datetime payment .",
            "you have to use payment method code .",
            "you have to use amount payment .",
            "you have to use lesson id .",
            "you have to use lesson status code .",
            "you have to use lesson date .",
            "you have to use lesson time .",
            "you have to use price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average room count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "you should use room count instead of bathroom count.",
        "negative_examples": [
            "you should use room count instead of building id .",
            "you should use room count instead of building short name .",
            "you should use room count instead of building full name .",
            "you should use room count instead of building description .",
            "you should use room count instead of building address .",
            "you should use room count instead of building manager .",
            "you should use room count instead of building phone .",
            "you should use room count instead of apartment id .",
            "you should use room count instead of apartment type code .",
            "you should use room count instead of apartment number .",
            "you should use room count instead of bedroom count .",
            "you should use room count instead of facility code .",
            "you should use room count instead of guest id .",
            "you should use room count instead of gender code .",
            "you should use room count instead of guest first name .",
            "you should use room count instead of guest last name .",
            "you should use room count instead of date of birth .",
            "you should use room count instead of apartment booking id .",
            "you should use room count instead of booking status code .",
            "you should use room count instead of booking start date .",
            "you should use room count instead of booking end date .",
            "you should use room count instead of status date .",
            "you should use room count instead of available yes or no .",
            "you should use building id instead of bathroom count .",
            "you should use building short name instead of bathroom count .",
            "you should use building full name instead of bathroom count .",
            "you should use building description instead of bathroom count .",
            "you should use building address instead of bathroom count .",
            "you should use building manager instead of bathroom count .",
            "you should use building phone instead of bathroom count .",
            "you should use apartment id instead of bathroom count .",
            "you should use apartment type code instead of bathroom count .",
            "you should use apartment number instead of bathroom count .",
            "you should use bedroom count instead of bathroom count .",
            "you should use facility code instead of bathroom count .",
            "you should use guest id instead of bathroom count .",
            "you should use gender code instead of bathroom count .",
            "you should use guest first name instead of bathroom count .",
            "you should use guest last name instead of bathroom count .",
            "you should use date of birth instead of bathroom count .",
            "you should use apartment booking id instead of bathroom count .",
            "you should use booking status code instead of bathroom count .",
            "you should use booking start date instead of bathroom count .",
            "you should use booking end date instead of bathroom count .",
            "you should use status date instead of bathroom count .",
            "you should use available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number like Columbus Square conditions . find summation of room count in place of summation of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ],
            [
                34,
                38
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ],
            [
                39,
                45
            ]
        ],
        "positive_example": "You need to use apartments's room count and apartment buildings's short name instead of apartments table and apartment number respectively.",
        "negative_examples": [
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and building id respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and building short name respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and building full name respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and building description respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and building address respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and building manager respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and building phone respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and apartment id respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and apartment type code respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and bathroom count respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and bedroom count respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and facility code respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and guest id respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and gender code respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and guest first name respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and guest last name respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and date of birth respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and apartment booking id respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and booking status code respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and booking start date respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and booking end date respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and status date respectively .",
            "you need to use apartments 's room count and apartment buildings 's short name instead of apartments table and available yes or no respectively .",
            "you need to use apartments 's building id and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's building short name and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's building full name and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's building description and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's building address and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's building manager and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's building phone and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's apartment id and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's apartment type code and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's bathroom count and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's bedroom count and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's facility code and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's guest id and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's gender code and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's guest first name and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's guest last name and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's date of birth and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's apartment booking id and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's booking status code and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's booking start date and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's booking end date and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's status date and apartment buildings 's short name instead of apartments table and apartment number respectively .",
            "you need to use apartments 's available yes or no and apartment buildings 's short name instead of apartments table and apartment number respectively ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the discipline enrollments table besides the campuses table . additionally make sure that campuses 's campus equals San Francisco State University and discipline enrollments 's year equals 2004 . find summation of graduate in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                33
            ],
            [
                34,
                37
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                38,
                44
            ]
        ],
        "positive_example": "Find out the graduate of discipline enrollment of San Francisco State University of 2004 batch.",
        "negative_examples": [
            "find out the degrees of enrollments of san francisco state university of 2004 batch .",
            "find out the location of csu fees of san francisco state university of 2004 batch .",
            "find out the county of csu fees of san francisco state university of 2004 batch .",
            "find out the id of csu fees of san francisco state university of 2004 batch .",
            "find out the year of campuses of san francisco state university of 2004 batch .",
            "find out the graduate of csu fees of san francisco state university of 2004 batch .",
            "find out the totalenrollment ay of faculty of san francisco state university of 2004 batch .",
            "find out the discipline of enrollments of san francisco state university of 2004 batch .",
            "find out the degrees of degrees of san francisco state university of 2004 batch .",
            "find out the campus fee of campuses of san francisco state university of 2004 batch .",
            "find out the graduate of fte ay of san francisco state university of 2004 batch .",
            "find out the year of enrollments of san francisco state university of 2004 batch .",
            "find out the graduate of location of san francisco state university of 2004 batch .",
            "find out the campus fee of faculty of san francisco state university of 2004 batch .",
            "find out the totalenrollment ay of degrees of san francisco state university of 2004 batch .",
            "find out the county of faculty of san francisco state university of 2004 batch .",
            "find out the graduate of campus fee of san francisco state university of 2004 batch .",
            "find out the graduate of year of san francisco state university of 2004 batch .",
            "find out the campus of discipline enrollment of san francisco state university of 2004 batch .",
            "find out the id of degrees of san francisco state university of 2004 batch .",
            "find out the totalenrollment ay of discipline enrollment of san francisco state university of 2004 batch .",
            "find out the graduate of campuses of san francisco state university of 2004 batch .",
            "find out the fte ay of campuses of san francisco state university of 2004 batch .",
            "find out the year of degrees of san francisco state university of 2004 batch .",
            "find out the location of faculty of san francisco state university of 2004 batch .",
            "find out the undergraduate of discipline enrollment of san francisco state university of 2004 batch .",
            "find out the degrees of campuses of san francisco state university of 2004 batch .",
            "find out the graduate of faculty of san francisco state university of 2004 batch .",
            "find out the id of enrollments of san francisco state university of 2004 batch .",
            "find out the totalenrollment ay of enrollments of san francisco state university of 2004 batch .",
            "find out the degrees of csu fees of san francisco state university of 2004 batch .",
            "find out the campus fee of enrollments of san francisco state university of 2004 batch .",
            "find out the graduate of enrollments of san francisco state university of 2004 batch .",
            "find out the fte ay of csu fees of san francisco state university of 2004 batch .",
            "find out the graduate of id of san francisco state university of 2004 batch .",
            "find out the year of discipline enrollment of san francisco state university of 2004 batch .",
            "find out the graduate of county of san francisco state university of 2004 batch .",
            "find out the graduate of degrees of san francisco state university of 2004 batch .",
            "find out the undergraduate of csu fees of san francisco state university of 2004 batch .",
            "find out the year of csu fees of san francisco state university of 2004 batch .",
            "find out the undergraduate of campuses of san francisco state university of 2004 batch .",
            "find out the year of faculty of san francisco state university of 2004 batch .",
            "find out the fte ay of degrees of san francisco state university of 2004 batch .",
            "find out the location of discipline enrollment of san francisco state university of 2004 batch .",
            "find out the county of campuses of san francisco state university of 2004 batch .",
            "find out the discipline of faculty of san francisco state university of 2004 batch .",
            "find out the id of faculty of san francisco state university of 2004 batch .",
            "find out the campus fee of degrees of san francisco state university of 2004 batch .",
            "find out the graduate of totalenrollment ay of san francisco state university of 2004 batch .",
            "find out the faculty of enrollments of san francisco state university of 2004 batch ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , additionally use the information from the rating table besides the movie table . additionally make sure that rating stars greater than or equals 4 . make sure no repetition in the results . order the results ascending . in step 1 , show me all the results .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                28
            ],
            [
                29,
                36
            ],
            [
                37,
                41
            ],
            [
                46,
                51
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Show year of movie whose rating stars equals 4 or equals 5 , ordered descending by year .",
        "negative_examples": [
            "show year of movie whose movie id equals 4 or equals 5 , ordered descending by year .",
            "show year of movie whose title equals 4 or equals 5 , ordered descending by year .",
            "show year of movie whose year equals 4 or equals 5 , ordered descending by year .",
            "show year of movie whose director equals 4 or equals 5 , ordered descending by year .",
            "show year of movie whose reviewer id equals 4 or equals 5 , ordered descending by year .",
            "show year of movie whose name equals 4 or equals 5 , ordered descending by year .",
            "show year of movie whose rating date equals 4 or equals 5 , ordered descending by year ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use staff table in place of customers table in step 2 , consider the staff 's first name equals Janessa and staff 's last name equals Sawayn conditions in place of the customers 's last name equals Sawayn and customers 's first name equals Janessa conditions .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                31
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                32,
                50
            ]
        ],
        "positive_example": "Change customers table with staff table , Ensure that Staff's first name equals Janessa , last name equals Sawayn .",
        "negative_examples": [
            "change customers table with addresses table , ensure that staff 's first name equals janessa , last name equals sawayn .",
            "change customers table with vehicles table , ensure that staff 's first name equals janessa , last name equals sawayn .",
            "change customers table with customer payments table , ensure that staff 's first name equals janessa , last name equals sawayn .",
            "change customers table with lessons table , ensure that staff 's first name equals janessa , last name equals sawayn .",
            "change addresses table with staff table , ensure that staff 's first name equals janessa , last name equals sawayn .",
            "change vehicles table with staff table , ensure that staff 's first name equals janessa , last name equals sawayn .",
            "change customer payments table with staff table , ensure that staff 's first name equals janessa , last name equals sawayn .",
            "change lessons table with staff table , ensure that staff 's first name equals janessa , last name equals sawayn ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment bookings table . do not find for each value of apartment bookings 's apartment id . in step 2 , additionally make sure that bedroom count greater than 2 . do not return booking end date .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                30
            ],
            [
                35,
                44
            ],
            [
                45,
                51
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "Take bedroom count and apartments table in place of apartment id and apartment bookings table In Step 1.",
        "negative_examples": [
            "take bedroom count and view unit status table in place of room count and apartment bookings table in step 1 .",
            "take bedroom count and guests table in place of booking end date and apartment bookings table in step 1 .",
            "take bedroom count and apartment bookings table in place of building id and apartment bookings table in step 1 .",
            "take bedroom count and apartment facilities table in place of gender code and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of available yes or no and apartment bookings table in step 1 .",
            "take bedroom count and apartments table in place of apartment type code and apartment bookings table in step 1 .",
            "take guest id and apartment bookings table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of guest last name and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of building manager and apartment bookings table in step 1 .",
            "take building phone and apartment facilities table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and view unit status table in place of bathroom count and apartment bookings table in step 1 .",
            "take gender code and apartment buildings table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and view unit status table in place of building phone and apartment bookings table in step 1 .",
            "take bedroom count and apartment facilities table in place of guest id and apartment bookings table in step 1 .",
            "take date of birth and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take guest first name and apartments table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of building full name and apartment bookings table in step 1 .",
            "take bedroom count and view unit status table in place of booking start date and apartment bookings table in step 1 .",
            "take bedroom count and guests table in place of building phone and apartment bookings table in step 1 .",
            "take building description and view unit status table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and view unit status table in place of building address and apartment bookings table in step 1 .",
            "take booking end date and apartment bookings table in place of apartment id and apartment bookings table in step 1 .",
            "take bathroom count and apartment buildings table in place of apartment id and apartment bookings table in step 1 .",
            "take facility code and apartment bookings table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment facilities table in place of guest last name and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of gender code and apartment bookings table in step 1 .",
            "take booking status code and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take room count and apartment bookings table in place of apartment id and apartment bookings table in step 1 .",
            "take booking end date and apartment facilities table in place of apartment id and apartment bookings table in step 1 .",
            "take apartment number and view unit status table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment facilities table in place of building id and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of apartment id and apartment bookings table in step 1 .",
            "take booking start date and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment facilities table in place of facility code and apartment bookings table in step 1 .",
            "take building description and apartment bookings table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment bookings table in place of apartment type code and apartment bookings table in step 1 .",
            "take bathroom count and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take booking status code and apartment buildings table in place of apartment id and apartment bookings table in step 1 .",
            "take building manager and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take guest id and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take apartment type code and apartments table in place of apartment id and apartment bookings table in step 1 .",
            "take building id and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take building full name and guests table in place of apartment id and apartment bookings table in step 1 .",
            "take apartment booking id and apartment bookings table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment facilities table in place of building full name and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of guest id and apartment bookings table in step 1 .",
            "take bedroom count and apartment bookings table in place of gender code and apartment bookings table in step 1 .",
            "take bedroom count and view unit status table in place of guest first name and apartment bookings table in step 1 .",
            "take booking status code and view unit status table in place of apartment id and apartment bookings table in step 1 .",
            "take bedroom count and apartment buildings table in place of room count and apartment bookings table in step 1 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use teachers table in place of students table in step 2 , consider the teachers 's first name equals Lyla conditions in place of the students 's first name equals Lyla conditions .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                24
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                25,
                36
            ]
        ],
        "positive_example": "It should be teachers table in step 1 , not students table .",
        "negative_examples": [
            "it should be teachers table in step 1 , not reference address types table .",
            "it should be teachers table in step 1 , not reference detention type table .",
            "it should be teachers table in step 1 , not reference incident type table .",
            "it should be teachers table in step 1 , not addresses table .",
            "it should be teachers table in step 1 , not assessment notes table .",
            "it should be teachers table in step 1 , not behavior incident table .",
            "it should be teachers table in step 1 , not detention table .",
            "it should be teachers table in step 1 , not student addresses table .",
            "it should be teachers table in step 1 , not students in detention table .",
            "it should be reference address types table in step 1 , not students table .",
            "it should be reference detention type table in step 1 , not students table .",
            "it should be reference incident type table in step 1 , not students table .",
            "it should be addresses table in step 1 , not students table .",
            "it should be assessment notes table in step 1 , not students table .",
            "it should be behavior incident table in step 1 , not students table .",
            "it should be detention table in step 1 , not students table .",
            "it should be student addresses table in step 1 , not students table .",
            "it should be students in detention table in step 1 , not students table ."
        ],
        "neg_len": 18
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the degrees 's year equals 2001 conditions in place of the faculty 's year equals 2001 conditions . find degrees in place of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                27
            ],
            [
                39,
                40
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                28,
                38
            ],
            [
                41,
                45
            ]
        ],
        "positive_example": "You should replace faculty table, graduate and year of faculty with degrees table, degrees and year of degrees respectively.",
        "negative_examples": [
            "you should replace csu fees table , graduate and year of faculty with county table , county and year of county respectively .",
            "you should replace campuses table , graduate and year of faculty with year table , year and year of year respectively .",
            "you should replace discipline table , graduate and year of discipline with enrollments table , degrees and year of degrees respectively .",
            "you should replace campus fee table , graduate and year of campus fee with enrollments table , degrees and year of degrees respectively .",
            "you should replace csu fees table , graduate and year of faculty with campus table , campus and year of campus respectively .",
            "you should replace csu fees table , graduate and year of faculty with totalenrollment ay table , totalenrollment ay and year of totalenrollment ay respectively .",
            "you should replace enrollments table , graduate and year of faculty with location table , location and year of location respectively .",
            "you should replace faculty table , county and year of faculty with enrollments table , degrees and year of degrees respectively .",
            "you should replace faculty table , fte ay and year of faculty with campuses table , degrees and year of degrees respectively .",
            "you should replace discipline enrollments table , undergraduate and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace campuses table , graduate and year of faculty with campus fee table , campus fee and year of campus fee respectively .",
            "you should replace csu fees table , graduate and year of faculty with discipline table , discipline and year of discipline respectively .",
            "you should replace campuses table , graduate and year of faculty with campus table , campus and year of campus respectively .",
            "you should replace totalenrollment ay table , graduate and year of totalenrollment ay with discipline enrollments table , degrees and year of degrees respectively .",
            "you should replace year table , graduate and year of year with csu fees table , degrees and year of degrees respectively .",
            "you should replace faculty table , graduate and year of faculty with location table , degrees and year of degrees respectively .",
            "you should replace faculty table , location and year of faculty with enrollments table , degrees and year of degrees respectively .",
            "you should replace discipline enrollments table , graduate and year of faculty with year table , year and year of year respectively .",
            "you should replace csu fees table , graduate and year of faculty with fte ay table , fte ay and year of fte ay respectively .",
            "you should replace campus fee table , graduate and year of campus fee with discipline enrollments table , degrees and year of degrees respectively .",
            "you should replace faculty table , graduate and year of faculty with csu fees table , degrees and year of degrees respectively .",
            "you should replace csu fees table , id and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace campuses table , year and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace campuses table , graduate and year of faculty with discipline table , discipline and year of discipline respectively .",
            "you should replace faculty table , year and year of faculty with discipline enrollments table , degrees and year of degrees respectively .",
            "you should replace faculty table , graduate and year of faculty with campus fee table , degrees and year of degrees respectively .",
            "you should replace faculty table , campus fee and year of faculty with discipline enrollments table , degrees and year of degrees respectively .",
            "you should replace faculty table , id and year of faculty with csu fees table , degrees and year of degrees respectively .",
            "you should replace csu fees table , graduate and year of faculty with id table , id and year of id respectively .",
            "you should replace faculty table , campus fee and year of faculty with enrollments table , degrees and year of degrees respectively .",
            "you should replace enrollments table , graduate and year of faculty with id table , id and year of id respectively .",
            "you should replace faculty table , year and year of faculty with enrollments table , degrees and year of degrees respectively .",
            "you should replace campuses table , totalenrollment ay and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace campuses table , campus and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace faculty table , campus and year of faculty with enrollments table , degrees and year of degrees respectively .",
            "you should replace campuses table , county and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace faculty table , graduate and year of faculty with undergraduate table , degrees and year of degrees respectively .",
            "you should replace totalenrollment ay table , graduate and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace discipline enrollments table , county and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace enrollments table , graduate and year of faculty with undergraduate table , undergraduate and year of undergraduate respectively .",
            "you should replace totalenrollment ay table , graduate and year of totalenrollment ay with campuses table , degrees and year of degrees respectively .",
            "you should replace id table , graduate and year of id with discipline enrollments table , degrees and year of degrees respectively .",
            "you should replace enrollments table , totalenrollment ay and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace campuses table , location and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace location table , graduate and year of location with campuses table , degrees and year of degrees respectively .",
            "you should replace fte ay table , graduate and year of fte ay with enrollments table , degrees and year of degrees respectively .",
            "you should replace faculty table , id and year of faculty with enrollments table , degrees and year of degrees respectively .",
            "you should replace campuses table , id and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace faculty table , totalenrollment ay and year of faculty with degrees table , degrees and year of degrees respectively .",
            "you should replace csu fees table , graduate and year of faculty with degrees table , degrees and year of degrees respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "You should delete Id and use campus only.",
        "negative_examples": [
            "you should delete id and use id only .",
            "you should delete id and use location only .",
            "you should delete id and use county only .",
            "you should delete id and use year only .",
            "you should delete id and use campus fee only .",
            "you should delete id and use degrees only .",
            "you should delete id and use discipline only .",
            "you should delete id and use undergraduate only .",
            "you should delete id and use graduate only .",
            "you should delete id and use totalenrollment ay only .",
            "you should delete id and use fte ay only .",
            "you should delete id and use faculty only ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2 Remove faculty 's campuses equals 1\".",
        "negative_examples": [
            "in step 2 remove campuses 's campuses equals 1 \" .",
            "in step 2 remove csu fees 's campuses equals 1 \" .",
            "in step 2 remove degrees 's campuses equals 1 \" .",
            "in step 2 remove discipline enrollments 's campuses equals 1 \" .",
            "in step 2 remove enrollments 's campuses equals 1 \" .",
            "in step 2 remove id 's campuses equals 1 \" .",
            "in step 2 remove location 's campuses equals 1 \" .",
            "in step 2 remove county 's campuses equals 1 \" .",
            "in step 2 remove year 's campuses equals 1 \" .",
            "in step 2 remove campus fee 's campuses equals 1 \" .",
            "in step 2 remove discipline 's campuses equals 1 \" .",
            "in step 2 remove undergraduate 's campuses equals 1 \" .",
            "in step 2 remove graduate 's campuses equals 1 \" .",
            "in step 2 remove totalenrollment ay 's campuses equals 1 \" .",
            "in step 2 remove fte ay 's campuses equals 1 \" .",
            "in step 2 remove faculty 's id equals 1 \" .",
            "in step 2 remove faculty 's location equals 1 \" .",
            "in step 2 remove faculty 's county equals 1 \" .",
            "in step 2 remove faculty 's year equals 1 \" .",
            "in step 2 remove faculty 's campus fee equals 1 \" .",
            "in step 2 remove faculty 's degrees equals 1 \" .",
            "in step 2 remove faculty 's discipline equals 1 \" .",
            "in step 2 remove faculty 's undergraduate equals 1 \" .",
            "in step 2 remove faculty 's graduate equals 1 \" .",
            "in step 2 remove faculty 's totalenrollment ay equals 1 \" .",
            "in step 2 remove faculty 's fte ay equals 1 \" ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the rating table . in step 2 , find reviewer 's reviewer id in place of rating stars .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                19
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                20,
                25
            ]
        ],
        "positive_example": "instead of rating stars, you should use the reviewer id.",
        "negative_examples": [
            "instead of rating stars , you should use the movie id .",
            "instead of rating stars , you should use the title .",
            "instead of rating stars , you should use the year .",
            "instead of rating stars , you should use the director .",
            "instead of rating stars , you should use the name .",
            "instead of rating stars , you should use the rating date .",
            "instead of movie id , you should use the reviewer id .",
            "instead of title , you should use the reviewer id .",
            "instead of year , you should use the reviewer id .",
            "instead of director , you should use the reviewer id .",
            "instead of name , you should use the reviewer id .",
            "instead of rating date , you should use the reviewer id ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find apartment number in place of bathroom count . order the results by room count in place of bathroom count .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                14
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                15,
                20
            ]
        ],
        "positive_example": "Replace first \"bathroom count\" with apartment number and second \"bathroom count\" with room count",
        "negative_examples": [
            "replace first \" building id \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" building short name \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" building full name \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" building description \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" building address \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" building manager \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" building phone \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" apartment id \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" apartment type code \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" apartment number \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" bedroom count \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" room count \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" facility code \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" guest id \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" gender code \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" guest first name \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" guest last name \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" date of birth \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" apartment booking id \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" booking status code \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" booking start date \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" booking end date \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" status date \" with apartment number and second \" bathroom count \" with room count",
            "replace first \" available yes or no \" with apartment number and second \" bathroom count \" with room count"
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "You need to search for campuses of San Jose State University and verify that CSU fees year is 1996.",
        "negative_examples": [
            "you need to search for id of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for location of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for county of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for campus fee of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for degrees of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for discipline of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for undergraduate of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for graduate of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for totalenrollment ay of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for fte ay of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for faculty of san jose state university and verify that csu fees year is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees id is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees location is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees county is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees campus fee is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees degrees is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees discipline is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees undergraduate is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees graduate is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees totalenrollment ay is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees fte ay is 1996 .",
            "you need to search for campuses of san jose state university and verify that csu fees faculty is 1996 ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table . in step 2 , remove the enrollments 's year greater than 1956 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "In step 2, Delete the phrase \"and enrollment's year greater than 1956\".",
        "negative_examples": [
            "in step 2 , delete the phrase \" and faculty 's fte ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and totalenrollment ay 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and discipline enrollments 's degrees greater than 1956 \" .",
            "in step 2 , delete the phrase \" and discipline enrollments 's location greater than 1956 \" .",
            "in step 2 , delete the phrase \" and discipline enrollments 's campus greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's graduate greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's campus greater than 1956 \" .",
            "in step 2 , delete the phrase \" and campuses 's degrees greater than 1956 \" .",
            "in step 2 , delete the phrase \" and campus 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and faculty 's totalenrollment ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's undergraduate greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's discipline greater than 1956 \" .",
            "in step 2 , delete the phrase \" and fte ay 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's graduate greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's undergraduate greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's totalenrollment ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and campuses 's faculty greater than 1956 \" .",
            "in step 2 , delete the phrase \" and faculty 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's discipline greater than 1956 \" .",
            "in step 2 , delete the phrase \" and graduate 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and discipline enrollments 's faculty greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's id greater than 1956 \" .",
            "in step 2 , delete the phrase \" and campuses 's county greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's totalenrollment ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's county greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's location greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's location greater than 1956 \" .",
            "in step 2 , delete the phrase \" and campus fee 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and faculty 's location greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's campus fee greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's fte ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's location greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's county greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's graduate greater than 1956 \" .",
            "in step 2 , delete the phrase \" and discipline enrollments 's totalenrollment ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's totalenrollment ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's faculty greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's degrees greater than 1956 \" .",
            "in step 2 , delete the phrase \" and faculty 's campus fee greater than 1956 \" .",
            "in step 2 , delete the phrase \" and location 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and faculty 's discipline greater than 1956 \" .",
            "in step 2 , delete the phrase \" and county 's year greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's county greater than 1956 \" .",
            "in step 2 , delete the phrase \" and faculty 's faculty greater than 1956 \" .",
            "in step 2 , delete the phrase \" and degrees 's faculty greater than 1956 \" .",
            "in step 2 , delete the phrase \" and discipline enrollments 's fte ay greater than 1956 \" .",
            "in step 2 , delete the phrase \" and csu fees 's campus greater than 1956 \" .",
            "in step 2 , delete the phrase \" and faculty 's id greater than 1956 \" .",
            "in step 2 , delete the phrase \" and enrollment 's fte ay greater than 1956 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 2 , consider the type equals City Mall conditions in place of the store name equals City Mall conditions . in step 4 , consider the type equals Village Store conditions in place of the store name equals Village Store conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                26,
                32
            ]
        ],
        "secondary_span": [
            [
                11,
                21
            ],
            [
                33,
                43
            ]
        ],
        "positive_example": "In step 2 and 3, use type in place of store name.",
        "negative_examples": [
            "in step 2 and 3 , use type in place of product id .",
            "in step 2 and 3 , use type in place of product .",
            "in step 2 and 3 , use type in place of dimensions .",
            "in step 2 and 3 , use type in place of dpi .",
            "in step 2 and 3 , use type in place of pages per minute color .",
            "in step 2 and 3 , use type in place of max page size .",
            "in step 2 and 3 , use type in place of interface .",
            "in step 2 and 3 , use type in place of store id .",
            "in step 2 and 3 , use type in place of area size .",
            "in step 2 and 3 , use type in place of number of product category .",
            "in step 2 and 3 , use type in place of ranking .",
            "in step 2 and 3 , use type in place of district id .",
            "in step 2 and 3 , use type in place of district name .",
            "in step 2 and 3 , use type in place of headquartered city .",
            "in step 2 and 3 , use type in place of city population .",
            "in step 2 and 3 , use type in place of city area .",
            "in step 2 and 3 , use product id in place of store name .",
            "in step 2 and 3 , use product in place of store name .",
            "in step 2 and 3 , use dimensions in place of store name .",
            "in step 2 and 3 , use dpi in place of store name .",
            "in step 2 and 3 , use pages per minute color in place of store name .",
            "in step 2 and 3 , use max page size in place of store name .",
            "in step 2 and 3 , use interface in place of store name .",
            "in step 2 and 3 , use store id in place of store name .",
            "in step 2 and 3 , use area size in place of store name .",
            "in step 2 and 3 , use number of product category in place of store name .",
            "in step 2 and 3 , use ranking in place of store name .",
            "in step 2 and 3 , use district id in place of store name .",
            "in step 2 and 3 , use district name in place of store name .",
            "in step 2 and 3 , use headquartered city in place of store name .",
            "in step 2 and 3 , use city population in place of store name .",
            "in step 2 and 3 , use city area in place of store name ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "Delete Faculty which is equivalent to 357. 1 part.",
        "negative_examples": [
            "delete campuses which is equivalent to 357 . 1 part .",
            "delete csu fees which is equivalent to 357 . 1 part .",
            "delete degrees which is equivalent to 357 . 1 part .",
            "delete discipline enrollments which is equivalent to 357 . 1 part .",
            "delete enrollments which is equivalent to 357 . 1 part .",
            "delete id which is equivalent to 357 . 1 part .",
            "delete campus which is equivalent to 357 . 1 part .",
            "delete location which is equivalent to 357 . 1 part .",
            "delete county which is equivalent to 357 . 1 part .",
            "delete year which is equivalent to 357 . 1 part .",
            "delete campus fee which is equivalent to 357 . 1 part .",
            "delete discipline which is equivalent to 357 . 1 part .",
            "delete undergraduate which is equivalent to 357 . 1 part .",
            "delete graduate which is equivalent to 357 . 1 part .",
            "delete totalenrollment ay which is equivalent to 357 . 1 part .",
            "delete fte ay which is equivalent to 357 . 1 part ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use csu fees table in place of campuses table . additionally make sure that campus fee is greater than average campus fee csu fees .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Look for those campuses who have higher than average campus fee.",
        "negative_examples": [
            "look for those campuses who have higher than average id .",
            "look for those campuses who have higher than average campus .",
            "look for those campuses who have higher than average location .",
            "look for those campuses who have higher than average county .",
            "look for those campuses who have higher than average year .",
            "look for those campuses who have higher than average degrees .",
            "look for those campuses who have higher than average discipline .",
            "look for those campuses who have higher than average undergraduate .",
            "look for those campuses who have higher than average graduate .",
            "look for those campuses who have higher than average totalenrollment ay .",
            "look for those campuses who have higher than average fte ay .",
            "look for those campuses who have higher than average faculty ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "should be correspond number of rows of order items .",
        "negative_examples": [
            "should be correspond number of rows of customers .",
            "should be correspond number of rows of orders .",
            "should be correspond number of rows of invoices .",
            "should be correspond number of rows of accounts .",
            "should be correspond number of rows of product categories .",
            "should be correspond number of rows of products .",
            "should be correspond number of rows of financial transactions .",
            "should be correspond number of rows of invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 or max page size equals A4 conditions in place of the dpi less than A4 or dpi greater than 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "Find product whose max page size equals A 4 or pages per minute color less than 5.",
        "negative_examples": [
            "find product whose max page size equals a 4 or product id less than 5 .",
            "find product whose max page size equals a 4 or product less than 5 .",
            "find product whose max page size equals a 4 or dimensions less than 5 .",
            "find product whose max page size equals a 4 or dpi less than 5 .",
            "find product whose max page size equals a 4 or interface less than 5 .",
            "find product whose max page size equals a 4 or store id less than 5 .",
            "find product whose max page size equals a 4 or store name less than 5 .",
            "find product whose max page size equals a 4 or type less than 5 .",
            "find product whose max page size equals a 4 or area size less than 5 .",
            "find product whose max page size equals a 4 or number of product category less than 5 .",
            "find product whose max page size equals a 4 or ranking less than 5 .",
            "find product whose max page size equals a 4 or district id less than 5 .",
            "find product whose max page size equals a 4 or district name less than 5 .",
            "find product whose max page size equals a 4 or headquartered city less than 5 .",
            "find product whose max page size equals a 4 or city population less than 5 .",
            "find product whose max page size equals a 4 or city area less than 5 .",
            "find product whose product id equals a 4 or pages per minute color less than 5 .",
            "find product whose product equals a 4 or pages per minute color less than 5 .",
            "find product whose dimensions equals a 4 or pages per minute color less than 5 .",
            "find product whose dpi equals a 4 or pages per minute color less than 5 .",
            "find product whose interface equals a 4 or pages per minute color less than 5 .",
            "find product whose store id equals a 4 or pages per minute color less than 5 .",
            "find product whose store name equals a 4 or pages per minute color less than 5 .",
            "find product whose type equals a 4 or pages per minute color less than 5 .",
            "find product whose area size equals a 4 or pages per minute color less than 5 .",
            "find product whose number of product category equals a 4 or pages per minute color less than 5 .",
            "find product whose ranking equals a 4 or pages per minute color less than 5 .",
            "find product whose district id equals a 4 or pages per minute color less than 5 .",
            "find product whose district name equals a 4 or pages per minute color less than 5 .",
            "find product whose headquartered city equals a 4 or pages per minute color less than 5 .",
            "find product whose city population equals a 4 or pages per minute color less than 5 .",
            "find product whose city area equals a 4 or pages per minute color less than 5 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Need to determine how many faculty in those rows.",
        "negative_examples": [
            "need to determine how many campuses in those rows .",
            "need to determine how many csu fees in those rows .",
            "need to determine how many degrees in those rows .",
            "need to determine how many discipline enrollments in those rows .",
            "need to determine how many enrollments in those rows .",
            "need to determine how many id in those rows .",
            "need to determine how many campus in those rows .",
            "need to determine how many location in those rows .",
            "need to determine how many county in those rows .",
            "need to determine how many year in those rows .",
            "need to determine how many campus fee in those rows .",
            "need to determine how many discipline in those rows .",
            "need to determine how many undergraduate in those rows .",
            "need to determine how many graduate in those rows .",
            "need to determine how many totalenrollment ay in those rows .",
            "need to determine how many fte ay in those rows ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                4,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                20
            ]
        ],
        "positive_example": "use store table step 1.",
        "negative_examples": [
            "use product table step 1 .",
            "use district table step 1 .",
            "use store product table step 1 .",
            "use store district table step 1 .",
            "use product id table step 1 .",
            "use dimensions table step 1 .",
            "use dpi table step 1 .",
            "use pages per minute color table step 1 .",
            "use max page size table step 1 .",
            "use interface table step 1 .",
            "use store id table step 1 .",
            "use store name table step 1 .",
            "use type table step 1 .",
            "use area size table step 1 .",
            "use number of product category table step 1 .",
            "use ranking table step 1 .",
            "use district id table step 1 .",
            "use district name table step 1 .",
            "use headquartered city table step 1 .",
            "use city population table step 1 .",
            "use city area table step 1 ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table . find number of different product id in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                15
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                16,
                22
            ]
        ],
        "positive_example": "You should search for the number of correlated rows for product id in order items table.",
        "negative_examples": [
            "you should search for the number of correlated rows for product color in customers table .",
            "you should search for the number of correlated rows for derived product cost in financial transactions table .",
            "you should search for the number of correlated rows for vat rating in product categories table .",
            "you should search for the number of correlated rows for other account details in accounts table .",
            "you should search for the number of correlated rows for gender in invoices table .",
            "you should search for the number of correlated rows for product name in accounts table .",
            "you should search for the number of correlated rows for derived product cost in invoice line items table .",
            "you should search for the number of correlated rows for email address in accounts table .",
            "you should search for the number of correlated rows for transaction amount in invoice line items table .",
            "you should search for the number of correlated rows for country in accounts table .",
            "you should search for the number of correlated rows for other account details in product categories table .",
            "you should search for the number of correlated rows for customer id in invoices table .",
            "you should search for the number of correlated rows for state county province in customers table .",
            "you should search for the number of correlated rows for order id in invoices table .",
            "you should search for the number of correlated rows for other order item details in invoices table .",
            "you should search for the number of correlated rows for derived total cost in invoice line items table .",
            "you should search for the number of correlated rows for transaction date in customers table .",
            "you should search for the number of correlated rows for account id in customers table .",
            "you should search for the number of correlated rows for transaction id in invoices table .",
            "you should search for the number of correlated rows for transaction date in accounts table .",
            "you should search for the number of correlated rows for derived vat payable in invoice line items table .",
            "you should search for the number of correlated rows for state county province in accounts table .",
            "you should search for the number of correlated rows for transaction amount in order items table .",
            "you should search for the number of correlated rows for invoice date in accounts table .",
            "you should search for the number of correlated rows for customer last name in orders table .",
            "you should search for the number of correlated rows for product name in product categories table .",
            "you should search for the number of correlated rows for parent product id in orders table .",
            "you should search for the number of correlated rows for unit price in orders table .",
            "you should search for the number of correlated rows for order details in products table .",
            "you should search for the number of correlated rows for product color in accounts table .",
            "you should search for the number of correlated rows for account id in product categories table .",
            "you should search for the number of correlated rows for account name in invoices table .",
            "you should search for the number of correlated rows for order details in product categories table .",
            "you should search for the number of correlated rows for transaction id in invoice line items table .",
            "you should search for the number of correlated rows for login name in customers table .",
            "you should search for the number of correlated rows for customer first name in customers table .",
            "you should search for the number of correlated rows for login password in order items table .",
            "you should search for the number of correlated rows for production type code in invoices table .",
            "you should search for the number of correlated rows for derived vat payable in order items table .",
            "you should search for the number of correlated rows for invoice date in orders table .",
            "you should search for the number of correlated rows for date account opened in orders table .",
            "you should search for the number of correlated rows for transaction amount in accounts table .",
            "you should search for the number of correlated rows for unit price in customers table .",
            "you should search for the number of correlated rows for product size in invoice line items table .",
            "you should search for the number of correlated rows for product id in invoice line items table .",
            "you should search for the number of correlated rows for other transaction details in product categories table .",
            "you should search for the number of correlated rows for account name in product categories table .",
            "you should search for the number of correlated rows for product quantity in invoices table .",
            "you should search for the number of correlated rows for derived vat payable in orders table .",
            "you should search for the number of correlated rows for email address in products table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "use detention table in place of reference address types table . find detention type code in place of address type code .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                11,
                14
            ]
        ],
        "secondary_span": [
            [
                3,
                10
            ],
            [
                15,
                21
            ]
        ],
        "positive_example": "The address type code of reference incident type table\" needs to be replaced by detention type code of detention table .",
        "negative_examples": [
            "the address id of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the cell mobile number of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the other address details of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by first name of detention table .",
            "the gender of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by detention id of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by date address to of detention table .",
            "the notes id of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the student id of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by date of notes of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by zip postcode of detention table .",
            "the line 1 of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the datetime detention end of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the other student details of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the line 3 of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the incident summary of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the first name of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by student id of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by teacher id of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by datetime detention start of detention table .",
            "the country of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the middle name of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by cell mobile number of detention table .",
            "the datetime detention start of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by other address details of detention table .",
            "the zip postcode of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the date of notes of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by country of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by text of notes of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by other student details of detention table .",
            "the other details of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by detention type description of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by gender of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by date left university of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by address id of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by date address from of detention table .",
            "the city of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the line 2 of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the date address to of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by line 1 of detention table .",
            "the incident id of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the teacher id of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the date address from of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by incident type code of detention table .",
            "the last name of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by middle name of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by other details of detention table .",
            "the text of notes of reference incident type table \" needs to be replaced by detention type code of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by date incident start of detention table .",
            "the address type code of reference incident type table \" needs to be replaced by notes id of detention table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals Steven Spielberg conditions in place of the name equals Steven Spielberg conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "Could you please rectify the 'name' with 'director'.",
        "negative_examples": [
            "could you please rectify the 'name ' with movie id ' .",
            "could you please rectify the 'name ' with title ' .",
            "could you please rectify the 'name ' with year ' .",
            "could you please rectify the 'name ' with reviewer id ' .",
            "could you please rectify the 'name ' with rating stars ' .",
            "could you please rectify the 'name ' with rating date ' .",
            "could you please rectify the movie id ' with 'director ' .",
            "could you please rectify the title ' with 'director ' .",
            "could you please rectify the year ' with 'director ' .",
            "could you please rectify the reviewer id ' with 'director ' .",
            "could you please rectify the rating stars ' with 'director ' .",
            "could you please rectify the rating date ' with 'director ' ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table besides the products table . find summation of product quantity in place of summation of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "Find different product name and should find total product quantity for each product id of order items .",
        "negative_examples": [
            "find different product name and should find total derived product cost for each product id of invoices .",
            "find different product name and should find total production type code for each product id of accounts .",
            "find different product name and should find total product size for each product id of customers .",
            "find different product name and should find total other order item details for each product id of orders .",
            "find different product name and should find total other order item details for each product id of products .",
            "find different product name and should find total date order placed for each product id of accounts .",
            "find different product name and should find total date account opened for each product id of products .",
            "find different product name and should find total customer last name for each product id of customers .",
            "find different product name and should find total derived total cost for each product id of orders .",
            "find different product name and should find total derived product cost for each product id of orders .",
            "find different product name and should find total transaction id for each product id of order items .",
            "find different product name and should find total customer middle initial for each product id of orders .",
            "find different product name and should find total date order placed for each product id of order items .",
            "find different product name and should find total customer first name for each product id of invoices .",
            "find different product name and should find total derived product cost for each product id of financial transactions .",
            "find different product name and should find total product price for each product id of financial transactions .",
            "find different product name and should find total other account details for each product id of product categories .",
            "find different product name and should find total derived total cost for each product id of product categories .",
            "find different product name and should find total product quantity for each product id of invoice line items .",
            "find different product name and should find total vat rating for each product id of products .",
            "find different product name and should find total account name for each product id of accounts .",
            "find different product name and should find total login password for each product id of orders .",
            "find different product name and should find total country for each product id of invoices .",
            "find different product name and should find total login password for each product id of customers .",
            "find different product name and should find total product type description for each product id of products .",
            "find different product name and should find total derived product cost for each product id of order items .",
            "find different product name and should find total transaction type for each product id of products .",
            "find different product name and should find total gender for each product id of orders .",
            "find different product name and should find total transaction date for each product id of invoices .",
            "find different product name and should find total gender for each product id of product categories .",
            "find different product name and should find total derived total cost for each product id of invoices .",
            "find different product name and should find total login name for each product id of product categories .",
            "find different product name and should find total order id for each product id of order items .",
            "find different product name and should find total order item id for each product id of product categories .",
            "find different product name and should find total unit price for each product id of invoice line items .",
            "find different product name and should find total login name for each product id of order items .",
            "find different product name and should find total email address for each product id of order items .",
            "find different product name and should find total transaction date for each product id of accounts .",
            "find different product name and should find total product type description for each product id of financial transactions .",
            "find different product name and should find total country for each product id of accounts .",
            "find different product name and should find total customer middle initial for each product id of products .",
            "find different product name and should find total product size for each product id of accounts .",
            "find different product name and should find total unit price for each product id of financial transactions .",
            "find different product name and should find total town city for each product id of invoice line items .",
            "find different product name and should find total phone number for each product id of orders .",
            "find different product name and should find total product color for each product id of financial transactions .",
            "find different product name and should find total invoice date for each product id of customers .",
            "find different product name and should find total account id for each product id of accounts .",
            "find different product name and should find total transaction date for each product id of products .",
            "find different product name and should find total other order item details for each product id of accounts ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Normandie Court and apartment number equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "You should exchange bathroom count and apartment number with bedroom and short name of building. Also, eliminate short name of building which includes Normandie Court.",
        "negative_examples": [
            "you should exchange building id and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange building short name and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange building full name and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange building description and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange building address and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange building manager and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange building phone and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange apartment id and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange apartment type code and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange apartment number and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange bedroom count and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange room count and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange facility code and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange guest id and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange gender code and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange guest first name and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange guest last name and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange date of birth and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange apartment booking id and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange booking status code and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange booking start date and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange booking end date and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange status date and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court .",
            "you should exchange available yes or no and apartment number with bedroom and short name of building . also , eliminate short name of building which includes normandie court ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the enrollments 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "You need to use year of csu fees and make sure San State university belongs to campuses.",
        "negative_examples": [
            "you need to use year of csu fees and make sure san state university belongs to id .",
            "you need to use year of csu fees and make sure san state university belongs to location .",
            "you need to use year of csu fees and make sure san state university belongs to county .",
            "you need to use year of csu fees and make sure san state university belongs to campus fee .",
            "you need to use year of csu fees and make sure san state university belongs to degrees .",
            "you need to use year of csu fees and make sure san state university belongs to discipline .",
            "you need to use year of csu fees and make sure san state university belongs to undergraduate .",
            "you need to use year of csu fees and make sure san state university belongs to graduate .",
            "you need to use year of csu fees and make sure san state university belongs to totalenrollment ay .",
            "you need to use year of csu fees and make sure san state university belongs to fte ay .",
            "you need to use year of csu fees and make sure san state university belongs to faculty .",
            "you need to use id of csu fees and make sure san state university belongs to campuses .",
            "you need to use location of csu fees and make sure san state university belongs to campuses .",
            "you need to use county of csu fees and make sure san state university belongs to campuses .",
            "you need to use campus fee of csu fees and make sure san state university belongs to campuses .",
            "you need to use degrees of csu fees and make sure san state university belongs to campuses .",
            "you need to use discipline of csu fees and make sure san state university belongs to campuses .",
            "you need to use undergraduate of csu fees and make sure san state university belongs to campuses .",
            "you need to use graduate of csu fees and make sure san state university belongs to campuses .",
            "you need to use totalenrollment ay of csu fees and make sure san state university belongs to campuses .",
            "you need to use fte ay of csu fees and make sure san state university belongs to campuses .",
            "you need to use faculty of csu fees and make sure san state university belongs to campuses ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "In rows look for the total number of faculty.",
        "negative_examples": [
            "in rows look for the total number of campuses .",
            "in rows look for the total number of csu fees .",
            "in rows look for the total number of degrees .",
            "in rows look for the total number of discipline enrollments .",
            "in rows look for the total number of enrollments .",
            "in rows look for the total number of id .",
            "in rows look for the total number of campus .",
            "in rows look for the total number of location .",
            "in rows look for the total number of county .",
            "in rows look for the total number of year .",
            "in rows look for the total number of campus fee .",
            "in rows look for the total number of discipline .",
            "in rows look for the total number of undergraduate .",
            "in rows look for the total number of graduate .",
            "in rows look for the total number of totalenrollment ay .",
            "in rows look for the total number of fte ay ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally find first name .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [],
        "positive_example": "Additionally, display first name along with middle and last name.",
        "negative_examples": [
            "additionally , display address id along with middle and last name .",
            "additionally , display line 1 number building along with middle and last name .",
            "additionally , display city along with middle and last name .",
            "additionally , display zip postcode along with middle and last name .",
            "additionally , display state province county along with middle and last name .",
            "additionally , display country along with middle and last name .",
            "additionally , display staff id along with middle and last name .",
            "additionally , display staff address id along with middle and last name .",
            "additionally , display nickname along with middle and last name .",
            "additionally , display middle name along with middle and last name .",
            "additionally , display last name along with middle and last name .",
            "additionally , display date of birth along with middle and last name .",
            "additionally , display date joined staff along with middle and last name .",
            "additionally , display date left staff along with middle and last name .",
            "additionally , display vehicle id along with middle and last name .",
            "additionally , display vehicle details along with middle and last name .",
            "additionally , display customer id along with middle and last name .",
            "additionally , display customer address id along with middle and last name .",
            "additionally , display customer status code along with middle and last name .",
            "additionally , display date became customer along with middle and last name .",
            "additionally , display amount outstanding along with middle and last name .",
            "additionally , display email address along with middle and last name .",
            "additionally , display phone number along with middle and last name .",
            "additionally , display cell mobile phone number along with middle and last name .",
            "additionally , display datetime payment along with middle and last name .",
            "additionally , display payment method code along with middle and last name .",
            "additionally , display amount payment along with middle and last name .",
            "additionally , display lesson id along with middle and last name .",
            "additionally , display lesson status code along with middle and last name .",
            "additionally , display lesson date along with middle and last name .",
            "additionally , display lesson time along with middle and last name .",
            "additionally , display price along with middle and last name ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table and discipline enrollments table in place of faculty table . consider the campuses 's campus equals San Jose State University and discipline enrollments 's year equals 2004 conditions in place of the faculty 's year equals 2004 conditions . find summation of undergraduate in place of number of rows .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                30
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                31,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "Find the total undergraduate whose campuses equals San Jose State .",
        "negative_examples": [
            "find the total undergraduate whose id equals san jose state .",
            "find the total undergraduate whose location equals san jose state .",
            "find the total undergraduate whose county equals san jose state .",
            "find the total undergraduate whose year equals san jose state .",
            "find the total undergraduate whose campus fee equals san jose state .",
            "find the total undergraduate whose degrees equals san jose state .",
            "find the total undergraduate whose discipline equals san jose state .",
            "find the total undergraduate whose graduate equals san jose state .",
            "find the total undergraduate whose totalenrollment ay equals san jose state .",
            "find the total undergraduate whose fte ay equals san jose state .",
            "find the total undergraduate whose faculty equals san jose state .",
            "find the total id whose campuses equals san jose state .",
            "find the total location whose campuses equals san jose state .",
            "find the total county whose campuses equals san jose state .",
            "find the total year whose campuses equals san jose state .",
            "find the total campus fee whose campuses equals san jose state .",
            "find the total degrees whose campuses equals san jose state .",
            "find the total discipline whose campuses equals san jose state .",
            "find the total graduate whose campuses equals san jose state .",
            "find the total totalenrollment ay whose campuses equals san jose state .",
            "find the total fte ay whose campuses equals san jose state .",
            "find the total faculty whose campuses equals san jose state ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally make sure that year equals 2005 .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [],
        "positive_example": "You should make sure that year equivalent with 2005.",
        "negative_examples": [
            "you should make sure that id equivalent with 2005 .",
            "you should make sure that campus equivalent with 2005 .",
            "you should make sure that location equivalent with 2005 .",
            "you should make sure that county equivalent with 2005 .",
            "you should make sure that campus fee equivalent with 2005 .",
            "you should make sure that degrees equivalent with 2005 .",
            "you should make sure that discipline equivalent with 2005 .",
            "you should make sure that undergraduate equivalent with 2005 .",
            "you should make sure that graduate equivalent with 2005 .",
            "you should make sure that totalenrollment ay equivalent with 2005 .",
            "you should make sure that fte ay equivalent with 2005 .",
            "you should make sure that faculty equivalent with 2005 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "use chip model table in place of screen mode table . remove the type equals Graphics conditions . find rows in place of used kb .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                11,
                17
            ],
            [
                18,
                19
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                20,
                25
            ]
        ],
        "positive_example": "Find the number of rows of chip model table instead screen mode and omit the last part .",
        "negative_examples": [
            "find the number of rows of phone table instead ram mib and omit the last part .",
            "find the number of rows of hardware colours table instead phone and omit the last part .",
            "find the number of rows of char cells table instead screen mode and omit the last part .",
            "find the number of rows of rom mib table instead screen mode and omit the last part .",
            "find the number of rows of hardware colours table instead screen mode and omit the last part .",
            "find the number of rows of phone table instead char cells and omit the last part .",
            "find the number of rows of pixels table instead screen mode and omit the last part .",
            "find the number of rows of phone table instead date and omit the last part .",
            "find the number of rows of date table instead screen mode and omit the last part .",
            "find the number of rows of chip model table instead slots and omit the last part .",
            "find the number of rows of chip model table instead rom mib and omit the last part .",
            "find the number of rows of phone table instead used kb and omit the last part .",
            "find the number of rows of phone table instead slots and omit the last part .",
            "find the number of rows of phone table instead wifi and omit the last part .",
            "find the number of rows of chip model table instead accreditation type and omit the last part .",
            "find the number of rows of chip model table instead graphics mode and omit the last part .",
            "find the number of rows of accreditation type table instead phone and omit the last part .",
            "find the number of rows of phone table instead hardware colours and omit the last part .",
            "find the number of rows of launch year table instead screen mode and omit the last part .",
            "find the number of rows of phone table instead map and omit the last part .",
            "find the number of rows of phone table instead launch year and omit the last part .",
            "find the number of rows of chip model table instead phone and omit the last part .",
            "find the number of rows of char cells table instead phone and omit the last part .",
            "find the number of rows of phone table instead type and omit the last part .",
            "find the number of rows of slots table instead phone and omit the last part .",
            "find the number of rows of chip model table instead launch year and omit the last part .",
            "find the number of rows of chip model table instead ram mib and omit the last part .",
            "find the number of rows of model name table instead phone and omit the last part .",
            "find the number of rows of company name table instead screen mode and omit the last part .",
            "find the number of rows of hardware model name table instead screen mode and omit the last part .",
            "find the number of rows of map table instead phone and omit the last part .",
            "find the number of rows of phone table instead accreditation type and omit the last part .",
            "find the number of rows of date table instead phone and omit the last part .",
            "find the number of rows of launch year table instead phone and omit the last part .",
            "find the number of rows of bluetooth table instead phone and omit the last part .",
            "find the number of rows of chip model table instead hardware model name and omit the last part .",
            "find the number of rows of graphics mode table instead phone and omit the last part .",
            "find the number of rows of pixels table instead phone and omit the last part .",
            "find the number of rows of phone table instead accreditation level and omit the last part .",
            "find the number of rows of phone table instead company name and omit the last part .",
            "find the number of rows of ram mib table instead screen mode and omit the last part .",
            "find the number of rows of ram mib table instead phone and omit the last part .",
            "find the number of rows of chip model table instead type and omit the last part .",
            "find the number of rows of phone table instead screen mode and omit the last part .",
            "find the number of rows of wifi table instead phone and omit the last part .",
            "find the number of rows of phone table instead rom mib and omit the last part .",
            "find the number of rows of chip model table instead model name and omit the last part .",
            "find the number of rows of wifi table instead screen mode and omit the last part .",
            "find the number of rows of type table instead phone and omit the last part .",
            "find the number of rows of chip model table instead wifi and omit the last part ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find minimum snatch in place of minimum total .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace total with snatch in.",
        "negative_examples": [
            "replace total with body builder id in .",
            "replace total with people id in .",
            "replace total with clean jerk in .",
            "replace total with name in .",
            "replace total with height in .",
            "replace total with weight in .",
            "replace total with birth date in .",
            "replace total with birth place in .",
            "replace body builder id with snatch in .",
            "replace people id with snatch in .",
            "replace clean jerk with snatch in .",
            "replace name with snatch in .",
            "replace height with snatch in .",
            "replace weight with snatch in .",
            "replace birth date with snatch in .",
            "replace birth place with snatch in ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the staff table . consider the first name like % a % conditions in place of the first name like a conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                21
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                22,
                31
            ]
        ],
        "positive_example": "It should be lessons table instead of staff table .",
        "negative_examples": [
            "it should be addresses table instead of staff table .",
            "it should be staff table instead of staff table .",
            "it should be vehicles table instead of staff table .",
            "it should be customers table instead of staff table .",
            "it should be customer payments table instead of staff table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , find average room count in place of average bathroom count .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ]
        ],
        "positive_example": "Replace bathroom count with room count of apartments .",
        "negative_examples": [
            "replace building id with room count of apartments .",
            "replace building short name with room count of apartments .",
            "replace building full name with room count of apartments .",
            "replace building description with room count of apartments .",
            "replace building address with room count of apartments .",
            "replace building manager with room count of apartments .",
            "replace building phone with room count of apartments .",
            "replace apartment id with room count of apartments .",
            "replace apartment type code with room count of apartments .",
            "replace apartment number with room count of apartments .",
            "replace bedroom count with room count of apartments .",
            "replace room count with room count of apartments .",
            "replace facility code with room count of apartments .",
            "replace guest id with room count of apartments .",
            "replace gender code with room count of apartments .",
            "replace guest first name with room count of apartments .",
            "replace guest last name with room count of apartments .",
            "replace date of birth with room count of apartments .",
            "replace apartment booking id with room count of apartments .",
            "replace booking status code with room count of apartments .",
            "replace booking start date with room count of apartments .",
            "replace booking end date with room count of apartments .",
            "replace status date with room count of apartments .",
            "replace available yes or no with room count of apartments ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation and screen mode equals Graphics conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "In step 2 Supersede screen mode with \"Type\" and \"Type\" with company name",
        "negative_examples": [
            "in step 2 supersede screen mode with \" hardware colours \" and \" type \" with company name",
            "in step 2 supersede screen mode with \" type \" and \" type \" with rom mib",
            "in step 2 supersede screen mode with \" type \" and \" type \" with map",
            "in step 2 supersede chip model with \" model name \" and \" model name \" with company name",
            "in step 2 supersede ram mib with \" type \" and \" type \" with company name",
            "in step 2 supersede phone with \" type \" and \" type \" with slots",
            "in step 2 supersede chip model with \" map \" and \" map \" with company name",
            "in step 2 supersede screen mode with \" type \" and \" type \" with launch year",
            "in step 2 supersede screen mode with \" ram mib \" and \" type \" with company name",
            "in step 2 supersede phone with \" ram mib \" and \" ram mib \" with company name",
            "in step 2 supersede phone with \" type \" and \" type \" with hardware colours",
            "in step 2 supersede phone with \" hardware colours \" and \" hardware colours \" with company name",
            "in step 2 supersede screen mode with \" wifi \" and \" type \" with company name",
            "in step 2 supersede screen mode with \" model name \" and \" type \" with company name",
            "in step 2 supersede phone with \" type \" and \" type \" with launch year",
            "in step 2 supersede chip model with \" type \" and \" type \" with chip model",
            "in step 2 supersede model name with \" type \" and \" type \" with company name",
            "in step 2 supersede phone with \" wifi \" and \" wifi \" with company name",
            "in step 2 supersede map with \" type \" and \" type \" with company name",
            "in step 2 supersede phone with \" launch year \" and \" launch year \" with company name",
            "in step 2 supersede chip model with \" hardware colours \" and \" hardware colours \" with company name",
            "in step 2 supersede hardware model name with \" type \" and \" type \" with company name",
            "in step 2 supersede screen mode with \" accreditation level \" and \" type \" with company name",
            "in step 2 supersede chip model with \" type \" and \" type \" with char cells",
            "in step 2 supersede chip model with \" bluetooth \" and \" bluetooth \" with company name",
            "in step 2 supersede screen mode with \" date \" and \" type \" with company name",
            "in step 2 supersede chip model with \" type \" and \" type \" with map",
            "in step 2 supersede screen mode with \" map \" and \" type \" with company name",
            "in step 2 supersede chip model with \" hardware model name \" and \" hardware model name \" with company name",
            "in step 2 supersede screen mode with \" type \" and \" type \" with slots",
            "in step 2 supersede chip model with \" type \" and \" type \" with accreditation level",
            "in step 2 supersede pixels with \" type \" and \" type \" with company name",
            "in step 2 supersede chip model with \" accreditation type \" and \" accreditation type \" with company name",
            "in step 2 supersede accreditation level with \" type \" and \" type \" with company name",
            "in step 2 supersede screen mode with \" slots \" and \" type \" with company name",
            "in step 2 supersede chip model with \" type \" and \" type \" with used kb",
            "in step 2 supersede accreditation type with \" type \" and \" type \" with company name",
            "in step 2 supersede screen mode with \" pixels \" and \" type \" with company name",
            "in step 2 supersede screen mode with \" type \" and \" type \" with accreditation level",
            "in step 2 supersede chip model with \" pixels \" and \" pixels \" with company name",
            "in step 2 supersede chip model with \" type \" and \" type \" with hardware model name",
            "in step 2 supersede phone with \" type \" and \" type \" with bluetooth",
            "in step 2 supersede screen mode with \" type \" and \" type \" with ram mib",
            "in step 2 supersede screen mode with \" accreditation type \" and \" type \" with company name",
            "in step 2 supersede phone with \" type \" and \" type \" with graphics mode",
            "in step 2 supersede screen mode with \" type \" and \" type \" with model name",
            "in step 2 supersede bluetooth with \" type \" and \" type \" with company name",
            "in step 2 supersede phone with \" type \" and \" type \" with pixels",
            "in step 2 supersede screen mode with \" launch year \" and \" type \" with company name",
            "in step 2 supersede phone with \" type \" and \" type \" with accreditation type"
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the csu fees table and faculty table . in step 2 , consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year greater than or equals 1935 and csu fees 's year less than or equals 1939 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                38
            ],
            [
                63,
                66
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                39,
                62
            ],
            [
                67,
                73
            ]
        ],
        "positive_example": "In step 2, I want year from campuses table in place faculty and csu fees table.",
        "negative_examples": [
            "in step 2 , i want year from campuses table in place undergraduate and enrollments table .",
            "in step 2 , i want year from campuses table in place faculty and graduate table .",
            "in step 2 , i want year from campuses table in place campus fee and degrees table .",
            "in step 2 , i want year from campuses table in place discipline and enrollments table .",
            "in step 2 , i want year from campuses table in place faculty and year table .",
            "in step 2 , i want year from campuses table in place graduate and csu fees table .",
            "in step 2 , i want year from campuses table in place campus and enrollments table .",
            "in step 2 , i want year from campuses table in place fte ay and degrees table .",
            "in step 2 , i want year from campuses table in place id and enrollments table .",
            "in step 2 , i want year from campuses table in place undergraduate and csu fees table .",
            "in step 2 , i want year from campuses table in place location and csu fees table .",
            "in step 2 , i want year from campuses table in place campus fee and csu fees table .",
            "in step 2 , i want year from campuses table in place county and enrollments table .",
            "in step 2 , i want year from campuses table in place location and discipline enrollments table .",
            "in step 2 , i want year from campuses table in place county and degrees table .",
            "in step 2 , i want year from campuses table in place campus and campuses table .",
            "in step 2 , i want year from campuses table in place discipline and campuses table .",
            "in step 2 , i want year from campuses table in place location and degrees table .",
            "in step 2 , i want year from campuses table in place undergraduate and discipline enrollments table .",
            "in step 2 , i want year from campuses table in place campus and degrees table .",
            "in step 2 , i want year from campuses table in place id and csu fees table .",
            "in step 2 , i want year from campuses table in place totalenrollment ay and degrees table .",
            "in step 2 , i want year from campuses table in place campus fee and enrollments table .",
            "in step 2 , i want year from campuses table in place totalenrollment ay and enrollments table .",
            "in step 2 , i want year from campuses table in place year and campuses table .",
            "in step 2 , i want year from campuses table in place faculty and id table .",
            "in step 2 , i want year from campuses table in place faculty and undergraduate table .",
            "in step 2 , i want year from campuses table in place totalenrollment ay and discipline enrollments table .",
            "in step 2 , i want year from campuses table in place graduate and degrees table .",
            "in step 2 , i want year from campuses table in place faculty and degrees table .",
            "in step 2 , i want year from campuses table in place totalenrollment ay and campuses table .",
            "in step 2 , i want year from campuses table in place year and csu fees table .",
            "in step 2 , i want year from campuses table in place county and campuses table .",
            "in step 2 , i want year from campuses table in place year and enrollments table .",
            "in step 2 , i want year from campuses table in place faculty and campus table .",
            "in step 2 , i want year from campuses table in place graduate and enrollments table .",
            "in step 2 , i want year from campuses table in place fte ay and enrollments table .",
            "in step 2 , i want year from campuses table in place campus and csu fees table .",
            "in step 2 , i want year from campuses table in place county and discipline enrollments table .",
            "in step 2 , i want year from campuses table in place degrees and degrees table .",
            "in step 2 , i want year from campuses table in place undergraduate and degrees table .",
            "in step 2 , i want year from campuses table in place id and discipline enrollments table .",
            "in step 2 , i want year from campuses table in place faculty and campus fee table .",
            "in step 2 , i want year from campuses table in place degrees and discipline enrollments table .",
            "in step 2 , i want year from campuses table in place year and discipline enrollments table .",
            "in step 2 , i want year from campuses table in place faculty and totalenrollment ay table .",
            "in step 2 , i want year from campuses table in place discipline enrollments and csu fees table .",
            "in step 2 , i want year from campuses table in place degrees and campuses table .",
            "in step 2 , i want year from campuses table in place enrollments and csu fees table .",
            "in step 2 , i want year from campuses table in place faculty and location table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "You need to verify that all the consumers have their accounts.  ",
        "negative_examples": [
            "you need to verify that all the consumers have their customers .",
            "you need to verify that all the consumers have their orders .",
            "you need to verify that all the consumers have their invoices .",
            "you need to verify that all the consumers have their product categories .",
            "you need to verify that all the consumers have their products .",
            "you need to verify that all the consumers have their financial transactions .",
            "you need to verify that all the consumers have their order items .",
            "you need to verify that all the consumers have their invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , find for each value of max page size in place of product . in step 2 , find max page size in place of product .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                24
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                25,
                29
            ]
        ],
        "positive_example": "I want max page size in place of product in both steps.",
        "negative_examples": [
            "i want product id in place of product in both steps .",
            "i want product in place of product in both steps .",
            "i want dimensions in place of product in both steps .",
            "i want dpi in place of product in both steps .",
            "i want pages per minute color in place of product in both steps .",
            "i want interface in place of product in both steps .",
            "i want store id in place of product in both steps .",
            "i want store name in place of product in both steps .",
            "i want type in place of product in both steps .",
            "i want area size in place of product in both steps .",
            "i want number of product category in place of product in both steps .",
            "i want ranking in place of product in both steps .",
            "i want district id in place of product in both steps .",
            "i want district name in place of product in both steps .",
            "i want headquartered city in place of product in both steps .",
            "i want city population in place of product in both steps .",
            "i want city area in place of product in both steps ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the csu fees 's year equals 1996 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                44
            ]
        ],
        "positive_example": "In step 2, delete csu fees's year equals 1996 and make sure that campus is California State University.",
        "negative_examples": [
            "in step 2 , delete csu fees 's id equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's campus equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's location equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's county equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's campus fee equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's degrees equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's discipline equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's undergraduate equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's graduate equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's totalenrollment ay equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's fte ay equals 1996 and make sure that campus is california state university .",
            "in step 2 , delete csu fees 's faculty equals 1996 and make sure that campus is california state university ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , do not use the orders table . in step 3 , find invoice date in place of date order placed .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                17
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                18,
                24
            ]
        ],
        "positive_example": "Replace financial transactions invoice number , date order placed with Invoices's invoice number , invoice date .",
        "negative_examples": [
            "replace financial transactions invoice number , customer first name with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , product quantity with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , product quantity .",
            "replace financial transactions invoice number , country with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , product name with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , product size .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , vat rating .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , email address .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , country .",
            "replace financial transactions invoice number , derived total cost with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , login password with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , product price .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , product name .",
            "replace financial transactions invoice number , town city with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , derived vat payable with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , production type code with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , account name .",
            "replace financial transactions invoice number , other transaction details with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , other transaction details .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , unit price .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , customer last name .",
            "replace financial transactions invoice number , product id with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , transaction amount with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , date account opened .",
            "replace financial transactions invoice number , unit price with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , account id with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , town city .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , transaction type .",
            "replace financial transactions invoice number , derived product cost with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , email address with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , other order item details .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , derived vat payable .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , customer middle initial .",
            "replace financial transactions invoice number , product type description with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , other account details with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , phone number .",
            "replace financial transactions invoice number , product size with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , account id .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , product title .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , order details .",
            "replace financial transactions invoice number , product price with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , state county province with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , customer last name with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , customer first name .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , transaction comment .",
            "replace financial transactions invoice number , other order item details with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , product color with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , transaction comment with invoices 's invoice number , invoice date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , transaction date .",
            "replace financial transactions invoice number , date order placed with invoices 's invoice number , login name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the assessment notes table besides the teachers table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "You need to replace teachers table with assessment notes table in step 1.",
        "negative_examples": [
            "you need to replace teachers table with reference address types table in step 1 .",
            "you need to replace teachers table with reference detention type table in step 1 .",
            "you need to replace teachers table with reference incident type table in step 1 .",
            "you need to replace teachers table with addresses table in step 1 .",
            "you need to replace teachers table with students table in step 1 .",
            "you need to replace teachers table with teachers table in step 1 .",
            "you need to replace teachers table with behavior incident table in step 1 .",
            "you need to replace teachers table with detention table in step 1 .",
            "you need to replace teachers table with student addresses table in step 1 .",
            "you need to replace teachers table with students in detention table in step 1 ."
        ],
        "neg_len": 10
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "use assessment notes table in place of reference address types table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ]
        ],
        "positive_example": "Here need to find number of rows in assessment notes table .",
        "negative_examples": [
            "here need to find number of rows in reference address types table .",
            "here need to find number of rows in reference detention type table .",
            "here need to find number of rows in reference incident type table .",
            "here need to find number of rows in addresses table .",
            "here need to find number of rows in students table .",
            "here need to find number of rows in teachers table .",
            "here need to find number of rows in behavior incident table .",
            "here need to find number of rows in detention table .",
            "here need to find number of rows in student addresses table .",
            "here need to find number of rows in students in detention table ."
        ],
        "neg_len": 10
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the customers table . remove the last name equals Bernhard conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                20
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Replace customers table with lessons table and remove \"last name equals Bernhard\".",
        "negative_examples": [
            "replace customers table with staff table and remove \" date became customer equals bernhard \" .",
            "replace customers table with vehicles table and remove \" vehicle id equals bernhard \" .",
            "replace customers table with vehicles table and remove \" payment method code equals bernhard \" .",
            "replace customers table with vehicles table and remove \" lesson date equals bernhard \" .",
            "replace customers table with customers table and remove \" date of birth equals bernhard \" .",
            "replace customers table with vehicles table and remove \" date left staff equals bernhard \" .",
            "replace customers table with staff table and remove \" line 1 number building equals bernhard \" .",
            "replace customers table with staff table and remove \" price equals bernhard \" .",
            "replace customers table with vehicles table and remove \" price equals bernhard \" .",
            "replace customers table with customers table and remove \" price equals bernhard \" .",
            "replace customers table with customers table and remove \" last name equals bernhard \" .",
            "replace customers table with customer payments table and remove \" city equals bernhard \" .",
            "replace customers table with customers table and remove \" amount payment equals bernhard \" .",
            "replace customers table with customer payments table and remove \" email address equals bernhard \" .",
            "replace customers table with vehicles table and remove \" staff address id equals bernhard \" .",
            "replace customers table with lessons table and remove \" vehicle details equals bernhard \" .",
            "replace customers table with customers table and remove \" date left staff equals bernhard \" .",
            "replace customers table with customers table and remove \" lesson date equals bernhard \" .",
            "replace customers table with addresses table and remove \" lesson date equals bernhard \" .",
            "replace customers table with vehicles table and remove \" staff id equals bernhard \" .",
            "replace customers table with addresses table and remove \" nickname equals bernhard \" .",
            "replace customers table with addresses table and remove \" first name equals bernhard \" .",
            "replace customers table with customer payments table and remove \" first name equals bernhard \" .",
            "replace customers table with addresses table and remove \" date of birth equals bernhard \" .",
            "replace customers table with vehicles table and remove \" customer status code equals bernhard \" .",
            "replace customers table with customers table and remove \" zip postcode equals bernhard \" .",
            "replace customers table with lessons table and remove \" middle name equals bernhard \" .",
            "replace customers table with lessons table and remove \" amount outstanding equals bernhard \" .",
            "replace customers table with lessons table and remove \" first name equals bernhard \" .",
            "replace customers table with customer payments table and remove \" staff id equals bernhard \" .",
            "replace customers table with customers table and remove \" customer status code equals bernhard \" .",
            "replace customers table with vehicles table and remove \" address id equals bernhard \" .",
            "replace customers table with lessons table and remove \" address id equals bernhard \" .",
            "replace customers table with staff table and remove \" lesson date equals bernhard \" .",
            "replace customers table with vehicles table and remove \" state province county equals bernhard \" .",
            "replace customers table with vehicles table and remove \" last name equals bernhard \" .",
            "replace customers table with customer payments table and remove \" cell mobile phone number equals bernhard \" .",
            "replace customers table with lessons table and remove \" customer id equals bernhard \" .",
            "replace customers table with customer payments table and remove \" datetime payment equals bernhard \" .",
            "replace customers table with customers table and remove \" lesson time equals bernhard \" .",
            "replace customers table with customer payments table and remove \" amount outstanding equals bernhard \" .",
            "replace customers table with customers table and remove \" staff address id equals bernhard \" .",
            "replace customers table with lessons table and remove \" lesson status code equals bernhard \" .",
            "replace customers table with customers table and remove \" lesson status code equals bernhard \" .",
            "replace customers table with addresses table and remove \" customer id equals bernhard \" .",
            "replace customers table with addresses table and remove \" date became customer equals bernhard \" .",
            "replace customers table with vehicles table and remove \" customer address id equals bernhard \" .",
            "replace customers table with vehicles table and remove \" nickname equals bernhard \" .",
            "replace customers table with customers table and remove \" city equals bernhard \" .",
            "replace customers table with customers table and remove \" first name equals bernhard \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , remove the building short name equals Normandie Court conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                19,
                26
            ]
        ],
        "positive_example": "Omit the phrase \"building short name equals Normandie Court\" and use bedroom count instead of bathroom count. ",
        "negative_examples": [
            "omit the phrase \" building id equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" building full name equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" building description equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" building address equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" building manager equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" building phone equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" apartment id equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" apartment type code equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" apartment number equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" bedroom count equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" room count equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" facility code equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" guest id equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" gender code equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" guest first name equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" guest last name equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" date of birth equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" apartment booking id equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" booking status code equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" booking start date equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" booking end date equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" status date equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" available yes or no equals normandie court \" and use bedroom count instead of bathroom count .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of building id .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of building full name .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of building description .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of building address .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of building manager .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of building phone .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of apartment id .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of apartment type code .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of apartment number .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of bedroom count .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of room count .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of facility code .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of guest id .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of gender code .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of guest first name .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of guest last name .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of date of birth .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of apartment booking id .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of booking status code .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of booking start date .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of booking end date .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of status date .",
            "omit the phrase \" building short name equals normandie court \" and use bedroom count instead of available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find cell mobile phone number in place of phone number .",
        "primary_span": [
            [
                0,
                4
            ]
        ],
        "secondary_span": [
            [
                5,
                10
            ]
        ],
        "positive_example": "cell mobile phone number is the right parameter , not phone number .",
        "negative_examples": [
            "address id is the right parameter , not phone number .",
            "line 1 number building is the right parameter , not phone number .",
            "city is the right parameter , not phone number .",
            "zip postcode is the right parameter , not phone number .",
            "state province county is the right parameter , not phone number .",
            "country is the right parameter , not phone number .",
            "staff id is the right parameter , not phone number .",
            "staff address id is the right parameter , not phone number .",
            "nickname is the right parameter , not phone number .",
            "first name is the right parameter , not phone number .",
            "middle name is the right parameter , not phone number .",
            "last name is the right parameter , not phone number .",
            "date of birth is the right parameter , not phone number .",
            "date joined staff is the right parameter , not phone number .",
            "date left staff is the right parameter , not phone number .",
            "vehicle id is the right parameter , not phone number .",
            "vehicle details is the right parameter , not phone number .",
            "customer id is the right parameter , not phone number .",
            "customer address id is the right parameter , not phone number .",
            "customer status code is the right parameter , not phone number .",
            "date became customer is the right parameter , not phone number .",
            "amount outstanding is the right parameter , not phone number .",
            "email address is the right parameter , not phone number .",
            "phone number is the right parameter , not phone number .",
            "datetime payment is the right parameter , not phone number .",
            "payment method code is the right parameter , not phone number .",
            "amount payment is the right parameter , not phone number .",
            "lesson id is the right parameter , not phone number .",
            "lesson status code is the right parameter , not phone number .",
            "lesson date is the right parameter , not phone number .",
            "lesson time is the right parameter , not phone number .",
            "price is the right parameter , not phone number ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 2 , additionally make sure that nickname like % s % .",
        "primary_span": [
            [
                4,
                13
            ]
        ],
        "secondary_span": [],
        "positive_example": "Also specify that nickname contains letter 's'.",
        "negative_examples": [
            "also specify that address id contains letter 's ' .",
            "also specify that line 1 number building contains letter 's ' .",
            "also specify that city contains letter 's ' .",
            "also specify that zip postcode contains letter 's ' .",
            "also specify that state province county contains letter 's ' .",
            "also specify that country contains letter 's ' .",
            "also specify that staff id contains letter 's ' .",
            "also specify that staff address id contains letter 's ' .",
            "also specify that first name contains letter 's ' .",
            "also specify that middle name contains letter 's ' .",
            "also specify that last name contains letter 's ' .",
            "also specify that date of birth contains letter 's ' .",
            "also specify that date joined staff contains letter 's ' .",
            "also specify that date left staff contains letter 's ' .",
            "also specify that vehicle id contains letter 's ' .",
            "also specify that vehicle details contains letter 's ' .",
            "also specify that customer id contains letter 's ' .",
            "also specify that customer address id contains letter 's ' .",
            "also specify that customer status code contains letter 's ' .",
            "also specify that date became customer contains letter 's ' .",
            "also specify that amount outstanding contains letter 's ' .",
            "also specify that email address contains letter 's ' .",
            "also specify that phone number contains letter 's ' .",
            "also specify that cell mobile phone number contains letter 's ' .",
            "also specify that datetime payment contains letter 's ' .",
            "also specify that payment method code contains letter 's ' .",
            "also specify that amount payment contains letter 's ' .",
            "also specify that lesson id contains letter 's ' .",
            "also specify that lesson status code contains letter 's ' .",
            "also specify that lesson date contains letter 's ' .",
            "also specify that lesson time contains letter 's ' .",
            "also specify that price contains letter 's ' ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 or max page size equals A4 conditions in place of the dpi greater than A4 or dpi less than 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "make sure max page size is equals to A 4 or pages per minute color is less than 5",
        "negative_examples": [
            "make sure max page size is equals to a 4 or product id is less than 5",
            "make sure max page size is equals to a 4 or product is less than 5",
            "make sure max page size is equals to a 4 or dimensions is less than 5",
            "make sure max page size is equals to a 4 or dpi is less than 5",
            "make sure max page size is equals to a 4 or interface is less than 5",
            "make sure max page size is equals to a 4 or store id is less than 5",
            "make sure max page size is equals to a 4 or store name is less than 5",
            "make sure max page size is equals to a 4 or type is less than 5",
            "make sure max page size is equals to a 4 or area size is less than 5",
            "make sure max page size is equals to a 4 or number of product category is less than 5",
            "make sure max page size is equals to a 4 or ranking is less than 5",
            "make sure max page size is equals to a 4 or district id is less than 5",
            "make sure max page size is equals to a 4 or district name is less than 5",
            "make sure max page size is equals to a 4 or headquartered city is less than 5",
            "make sure max page size is equals to a 4 or city population is less than 5",
            "make sure max page size is equals to a 4 or city area is less than 5",
            "make sure product id is equals to a 4 or pages per minute color is less than 5",
            "make sure product is equals to a 4 or pages per minute color is less than 5",
            "make sure dimensions is equals to a 4 or pages per minute color is less than 5",
            "make sure dpi is equals to a 4 or pages per minute color is less than 5",
            "make sure interface is equals to a 4 or pages per minute color is less than 5",
            "make sure store id is equals to a 4 or pages per minute color is less than 5",
            "make sure store name is equals to a 4 or pages per minute color is less than 5",
            "make sure type is equals to a 4 or pages per minute color is less than 5",
            "make sure area size is equals to a 4 or pages per minute color is less than 5",
            "make sure number of product category is equals to a 4 or pages per minute color is less than 5",
            "make sure ranking is equals to a 4 or pages per minute color is less than 5",
            "make sure district id is equals to a 4 or pages per minute color is less than 5",
            "make sure district name is equals to a 4 or pages per minute color is less than 5",
            "make sure headquartered city is equals to a 4 or pages per minute color is less than 5",
            "make sure city population is equals to a 4 or pages per minute color is less than 5",
            "make sure city area is equals to a 4 or pages per minute color is less than 5"
        ],
        "neg_len": 32
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the staff table besides the addresses table . in step 2 , make sure that the corresponding value in step 1 between 2 and 4 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                34
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 2, attach either smaller or equals to 4, additionally in step 1 look for staff table.",
        "negative_examples": [
            "in step 2 , attach either smaller or equals to 4 , additionally in step 1 look for addresses table .",
            "in step 2 , attach either smaller or equals to 4 , additionally in step 1 look for vehicles table .",
            "in step 2 , attach either smaller or equals to 4 , additionally in step 1 look for customers table .",
            "in step 2 , attach either smaller or equals to 4 , additionally in step 1 look for customer payments table .",
            "in step 2 , attach either smaller or equals to 4 , additionally in step 1 look for lessons table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the customers table . additionally make sure that lesson status code equals Completed .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                22
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Need to make sure Lessons's lesson status code equals completed .",
        "negative_examples": [
            "need to make sure staff 's amount payment equals completed .",
            "need to make sure lessons 's vehicle details equals completed .",
            "need to make sure customer payments 's middle name equals completed .",
            "need to make sure staff 's last name equals completed .",
            "need to make sure vehicles 's customer id equals completed .",
            "need to make sure addresses 's price equals completed .",
            "need to make sure customer payments 's vehicle id equals completed .",
            "need to make sure vehicles 's state province county equals completed .",
            "need to make sure staff 's date of birth equals completed .",
            "need to make sure customers 's address id equals completed .",
            "need to make sure lessons 's zip postcode equals completed .",
            "need to make sure customers 's cell mobile phone number equals completed .",
            "need to make sure staff 's customer status code equals completed .",
            "need to make sure addresses 's customer id equals completed .",
            "need to make sure staff 's vehicle details equals completed .",
            "need to make sure addresses 's city equals completed .",
            "need to make sure vehicles 's first name equals completed .",
            "need to make sure customers 's lesson status code equals completed .",
            "need to make sure addresses 's address id equals completed .",
            "need to make sure staff 's country equals completed .",
            "need to make sure staff 's customer id equals completed .",
            "need to make sure customers 's amount payment equals completed .",
            "need to make sure addresses 's lesson date equals completed .",
            "need to make sure vehicles 's city equals completed .",
            "need to make sure vehicles 's cell mobile phone number equals completed .",
            "need to make sure staff 's phone number equals completed .",
            "need to make sure addresses 's nickname equals completed .",
            "need to make sure vehicles 's date joined staff equals completed .",
            "need to make sure addresses 's email address equals completed .",
            "need to make sure customer payments 's nickname equals completed .",
            "need to make sure lessons 's phone number equals completed .",
            "need to make sure addresses 's date of birth equals completed .",
            "need to make sure addresses 's customer address id equals completed .",
            "need to make sure customer payments 's datetime payment equals completed .",
            "need to make sure customers 's state province county equals completed .",
            "need to make sure staff 's staff id equals completed .",
            "need to make sure customer payments 's phone number equals completed .",
            "need to make sure staff 's staff address id equals completed .",
            "need to make sure vehicles 's vehicle id equals completed .",
            "need to make sure addresses 's lesson time equals completed .",
            "need to make sure customer payments 's line 1 number building equals completed .",
            "need to make sure addresses 's date joined staff equals completed .",
            "need to make sure customers 's staff id equals completed .",
            "need to make sure customer payments 's date became customer equals completed .",
            "need to make sure customers 's vehicle id equals completed .",
            "need to make sure lessons 's amount outstanding equals completed .",
            "need to make sure vehicles 's lesson time equals completed .",
            "need to make sure customers 's date of birth equals completed .",
            "need to make sure customer payments 's email address equals completed .",
            "need to make sure lessons 's country equals completed ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2002 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "You should drop the year of faculty table which is equivalent to 2002.",
        "negative_examples": [
            "you should drop the id of degrees table which is equivalent to 2002 .",
            "you should drop the year of id table which is equivalent to 2002 .",
            "you should drop the fte ay of discipline enrollments table which is equivalent to 2002 .",
            "you should drop the graduate of faculty table which is equivalent to 2002 .",
            "you should drop the totalenrollment ay of csu fees table which is equivalent to 2002 .",
            "you should drop the id of faculty table which is equivalent to 2002 .",
            "you should drop the discipline of campuses table which is equivalent to 2002 .",
            "you should drop the undergraduate of campuses table which is equivalent to 2002 .",
            "you should drop the fte ay of faculty table which is equivalent to 2002 .",
            "you should drop the totalenrollment ay of degrees table which is equivalent to 2002 .",
            "you should drop the campus fee of enrollments table which is equivalent to 2002 .",
            "you should drop the totalenrollment ay of faculty table which is equivalent to 2002 .",
            "you should drop the discipline of discipline enrollments table which is equivalent to 2002 .",
            "you should drop the location of degrees table which is equivalent to 2002 .",
            "you should drop the campus of degrees table which is equivalent to 2002 .",
            "you should drop the year of discipline table which is equivalent to 2002 .",
            "you should drop the id of campuses table which is equivalent to 2002 .",
            "you should drop the id of enrollments table which is equivalent to 2002 .",
            "you should drop the county of enrollments table which is equivalent to 2002 .",
            "you should drop the degrees of csu fees table which is equivalent to 2002 .",
            "you should drop the degrees of enrollments table which is equivalent to 2002 .",
            "you should drop the degrees of degrees table which is equivalent to 2002 .",
            "you should drop the fte ay of csu fees table which is equivalent to 2002 .",
            "you should drop the discipline of degrees table which is equivalent to 2002 .",
            "you should drop the location of enrollments table which is equivalent to 2002 .",
            "you should drop the undergraduate of enrollments table which is equivalent to 2002 .",
            "you should drop the year of csu fees table which is equivalent to 2002 .",
            "you should drop the undergraduate of faculty table which is equivalent to 2002 .",
            "you should drop the year of degrees table which is equivalent to 2002 .",
            "you should drop the year of campus fee table which is equivalent to 2002 .",
            "you should drop the year of fte ay table which is equivalent to 2002 .",
            "you should drop the graduate of discipline enrollments table which is equivalent to 2002 .",
            "you should drop the campus fee of degrees table which is equivalent to 2002 .",
            "you should drop the year of totalenrollment ay table which is equivalent to 2002 .",
            "you should drop the campus of enrollments table which is equivalent to 2002 .",
            "you should drop the campus of campuses table which is equivalent to 2002 .",
            "you should drop the county of csu fees table which is equivalent to 2002 .",
            "you should drop the totalenrollment ay of campuses table which is equivalent to 2002 .",
            "you should drop the graduate of enrollments table which is equivalent to 2002 .",
            "you should drop the fte ay of enrollments table which is equivalent to 2002 .",
            "you should drop the year of graduate table which is equivalent to 2002 .",
            "you should drop the year of location table which is equivalent to 2002 .",
            "you should drop the undergraduate of degrees table which is equivalent to 2002 .",
            "you should drop the location of faculty table which is equivalent to 2002 .",
            "you should drop the degrees of campuses table which is equivalent to 2002 .",
            "you should drop the year of campus table which is equivalent to 2002 .",
            "you should drop the location of discipline enrollments table which is equivalent to 2002 .",
            "you should drop the graduate of degrees table which is equivalent to 2002 .",
            "you should drop the campus fee of discipline enrollments table which is equivalent to 2002 .",
            "you should drop the campus of faculty table which is equivalent to 2002 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the store name equals Blackville conditions in place of the city population equals Blackville conditions .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                23
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                24,
                33
            ]
        ],
        "positive_example": "Substitute city population with store name .",
        "negative_examples": [
            "substitute city population with product id .",
            "substitute city population with product .",
            "substitute city population with dimensions .",
            "substitute city population with dpi .",
            "substitute city population with pages per minute color .",
            "substitute city population with max page size .",
            "substitute city population with interface .",
            "substitute city population with store id .",
            "substitute city population with type .",
            "substitute city population with area size .",
            "substitute city population with number of product category .",
            "substitute city population with ranking .",
            "substitute city population with district id .",
            "substitute city population with district name .",
            "substitute city population with headquartered city .",
            "substitute city population with city area .",
            "substitute product id with store name .",
            "substitute product with store name .",
            "substitute dimensions with store name .",
            "substitute dpi with store name .",
            "substitute pages per minute color with store name .",
            "substitute max page size with store name .",
            "substitute interface with store name .",
            "substitute store id with store name .",
            "substitute type with store name .",
            "substitute area size with store name .",
            "substitute number of product category with store name .",
            "substitute ranking with store name .",
            "substitute district id with store name .",
            "substitute district name with store name .",
            "substitute headquartered city with store name .",
            "substitute city area with store name ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table in place of faculty table . consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year between 1939 and 1935 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                28
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                29,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "Use campuses table , not faculty table . Discard \"equals or\" words .",
        "negative_examples": [
            "use campuses table , not campuses table . discard \" equals or \" words .",
            "use campuses table , not csu fees table . discard \" equals or \" words .",
            "use campuses table , not degrees table . discard \" equals or \" words .",
            "use campuses table , not discipline enrollments table . discard \" equals or \" words .",
            "use campuses table , not enrollments table . discard \" equals or \" words .",
            "use campuses table , not id table . discard \" equals or \" words .",
            "use campuses table , not location table . discard \" equals or \" words .",
            "use campuses table , not county table . discard \" equals or \" words .",
            "use campuses table , not year table . discard \" equals or \" words .",
            "use campuses table , not campus fee table . discard \" equals or \" words .",
            "use campuses table , not discipline table . discard \" equals or \" words .",
            "use campuses table , not undergraduate table . discard \" equals or \" words .",
            "use campuses table , not graduate table . discard \" equals or \" words .",
            "use campuses table , not totalenrollment ay table . discard \" equals or \" words .",
            "use campuses table , not fte ay table . discard \" equals or \" words .",
            "use id table , not faculty table . discard \" equals or \" words .",
            "use location table , not faculty table . discard \" equals or \" words .",
            "use county table , not faculty table . discard \" equals or \" words .",
            "use year table , not faculty table . discard \" equals or \" words .",
            "use campus fee table , not faculty table . discard \" equals or \" words .",
            "use degrees table , not faculty table . discard \" equals or \" words .",
            "use discipline table , not faculty table . discard \" equals or \" words .",
            "use undergraduate table , not faculty table . discard \" equals or \" words .",
            "use graduate table , not faculty table . discard \" equals or \" words .",
            "use totalenrollment ay table , not faculty table . discard \" equals or \" words .",
            "use fte ay table , not faculty table . discard \" equals or \" words ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find phone number in place of cell mobile phone number .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                10
            ]
        ],
        "positive_example": "Use phone number rather than cell mobile phone number .",
        "negative_examples": [
            "use middle name rather than cell mobile phone number .",
            "use lesson date rather than cell mobile phone number .",
            "use phone number rather than date left staff .",
            "use phone number rather than date joined staff .",
            "use phone number rather than city .",
            "use phone number rather than zip postcode .",
            "use phone number rather than staff address id .",
            "use phone number rather than lesson id .",
            "use nickname rather than cell mobile phone number .",
            "use phone number rather than customer status code .",
            "use email address rather than cell mobile phone number .",
            "use phone number rather than vehicle details .",
            "use phone number rather than email address .",
            "use city rather than cell mobile phone number .",
            "use phone number rather than amount payment .",
            "use phone number rather than first name .",
            "use address id rather than cell mobile phone number .",
            "use phone number rather than date became customer .",
            "use lesson id rather than cell mobile phone number .",
            "use phone number rather than nickname .",
            "use payment method code rather than cell mobile phone number .",
            "use phone number rather than lesson status code .",
            "use phone number rather than lesson date .",
            "use amount payment rather than cell mobile phone number .",
            "use phone number rather than address id .",
            "use customer address id rather than cell mobile phone number .",
            "use date became customer rather than cell mobile phone number .",
            "use phone number rather than amount outstanding .",
            "use vehicle id rather than cell mobile phone number .",
            "use staff address id rather than cell mobile phone number .",
            "use datetime payment rather than cell mobile phone number .",
            "use date joined staff rather than cell mobile phone number .",
            "use last name rather than cell mobile phone number .",
            "use country rather than cell mobile phone number .",
            "use customer id rather than cell mobile phone number .",
            "use phone number rather than line 1 number building .",
            "use phone number rather than last name .",
            "use vehicle details rather than cell mobile phone number .",
            "use lesson time rather than cell mobile phone number .",
            "use first name rather than cell mobile phone number .",
            "use phone number rather than staff id .",
            "use phone number rather than customer address id .",
            "use phone number rather than price .",
            "use phone number rather than state province county .",
            "use lesson status code rather than cell mobile phone number .",
            "use date of birth rather than cell mobile phone number .",
            "use phone number rather than lesson time .",
            "use price rather than cell mobile phone number .",
            "use amount outstanding rather than cell mobile phone number .",
            "use phone number rather than vehicle id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find date of birth in place of date left staff .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Should find date of birth instead of date left staff .",
        "negative_examples": [
            "should find amount outstanding instead of date left staff .",
            "should find vehicle details instead of date left staff .",
            "should find amount payment instead of date left staff .",
            "should find date of birth instead of first name .",
            "should find date of birth instead of datetime payment .",
            "should find line 1 number building instead of date left staff .",
            "should find date of birth instead of address id .",
            "should find date of birth instead of cell mobile phone number .",
            "should find customer status code instead of date left staff .",
            "should find date of birth instead of vehicle id .",
            "should find vehicle id instead of date left staff .",
            "should find date of birth instead of zip postcode .",
            "should find payment method code instead of date left staff .",
            "should find date of birth instead of amount outstanding .",
            "should find date of birth instead of city .",
            "should find customer id instead of date left staff .",
            "should find address id instead of date left staff .",
            "should find date of birth instead of payment method code .",
            "should find date joined staff instead of date left staff .",
            "should find nickname instead of date left staff .",
            "should find zip postcode instead of date left staff .",
            "should find date of birth instead of lesson id .",
            "should find date of birth instead of price .",
            "should find lesson date instead of date left staff .",
            "should find datetime payment instead of date left staff .",
            "should find state province county instead of date left staff .",
            "should find date of birth instead of customer id .",
            "should find country instead of date left staff .",
            "should find first name instead of date left staff .",
            "should find city instead of date left staff .",
            "should find lesson time instead of date left staff .",
            "should find cell mobile phone number instead of date left staff .",
            "should find date of birth instead of last name .",
            "should find staff id instead of date left staff .",
            "should find date of birth instead of lesson time .",
            "should find date of birth instead of customer status code .",
            "should find customer address id instead of date left staff .",
            "should find date of birth instead of line 1 number building .",
            "should find date of birth instead of middle name .",
            "should find date of birth instead of staff id .",
            "should find date of birth instead of amount payment .",
            "should find phone number instead of date left staff .",
            "should find date of birth instead of date joined staff .",
            "should find date of birth instead of lesson status code .",
            "should find email address instead of date left staff .",
            "should find middle name instead of date left staff .",
            "should find date of birth instead of state province county .",
            "should find staff address id instead of date left staff .",
            "should find date of birth instead of phone number .",
            "should find date of birth instead of nickname ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find rating date and rating stars . additionally order the results by name and title .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                12,
                20
            ]
        ],
        "secondary_span": [],
        "positive_example": "It should find name , title , rating stars , rating date , and order(ascending ) it by name , title and stars(lastly ).",
        "negative_examples": [
            "it should find name , title , movie id , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , title , year , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , title , director , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , title , reviewer id , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , title , rating stars , movie id , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , title , rating stars , year , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , title , rating stars , director , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , title , rating stars , reviewer id , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , movie id , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , year , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , director , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find name , reviewer id , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find movie id , title , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find year , title , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find director , title , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) .",
            "it should find reviewer id , title , rating stars , rating date , and order ( ascending ) it by name , title and stars ( lastly ) ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use assessment notes table in place of detention table in step 2 , find text of notes in place of detention summary .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                17,
                20
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                21,
                26
            ]
        ],
        "positive_example": "Find assessment notes table, text of notes instead of detention table and detention summary in step 1 and 2 respectively.",
        "negative_examples": [
            "find addresses table , other details instead of detention table and detention summary in step 1 and 2 respectively .",
            "find detention table , text of notes instead of detention table and date address to in step 1 and 2 respectively .",
            "find reference address types table , city instead of detention table and detention summary in step 1 and 2 respectively .",
            "find reference address types table , text of notes instead of detention table and state province county in step 1 and 2 respectively .",
            "find behavior incident table , text of notes instead of detention table and address type description in step 1 and 2 respectively .",
            "find reference address types table , text of notes instead of detention table and date address from in step 1 and 2 respectively .",
            "find assessment notes table , datetime detention start instead of detention table and detention summary in step 1 and 2 respectively .",
            "find students in detention table , text of notes instead of detention table and other student details in step 1 and 2 respectively .",
            "find assessment notes table , detention type code instead of detention table and detention summary in step 1 and 2 respectively .",
            "find reference address types table , text of notes instead of detention table and address id in step 1 and 2 respectively .",
            "find addresses table , text of notes instead of detention table and date first rental in step 1 and 2 respectively .",
            "find addresses table , text of notes instead of detention table and other details in step 1 and 2 respectively .",
            "find assessment notes table , address id instead of detention table and detention summary in step 1 and 2 respectively .",
            "find students table , text of notes instead of detention table and date of notes in step 1 and 2 respectively .",
            "find students table , email address instead of detention table and detention summary in step 1 and 2 respectively .",
            "find reference address types table , date first rental instead of detention table and detention summary in step 1 and 2 respectively .",
            "find assessment notes table , text of notes instead of detention table and city in step 1 and 2 respectively .",
            "find behavior incident table , text of notes instead of detention table and first name in step 1 and 2 respectively .",
            "find behavior incident table , text of notes instead of detention table and zip postcode in step 1 and 2 respectively .",
            "find teachers table , text of notes instead of detention table and last name in step 1 and 2 respectively .",
            "find reference address types table , text of notes instead of detention table and teacher id in step 1 and 2 respectively .",
            "find reference address types table , address type code instead of detention table and detention summary in step 1 and 2 respectively .",
            "find teachers table , text of notes instead of detention table and zip postcode in step 1 and 2 respectively .",
            "find reference detention type table , incident summary instead of detention table and detention summary in step 1 and 2 respectively .",
            "find addresses table , datetime detention end instead of detention table and detention summary in step 1 and 2 respectively .",
            "find behavior incident table , date left university instead of detention table and detention summary in step 1 and 2 respectively .",
            "find student addresses table , text of notes instead of detention table and date incident end in step 1 and 2 respectively .",
            "find addresses table , date left university instead of detention table and detention summary in step 1 and 2 respectively .",
            "find student addresses table , date address from instead of detention table and detention summary in step 1 and 2 respectively .",
            "find behavior incident table , date address to instead of detention table and detention summary in step 1 and 2 respectively .",
            "find teachers table , incident type code instead of detention table and detention summary in step 1 and 2 respectively .",
            "find student addresses table , date incident start instead of detention table and detention summary in step 1 and 2 respectively .",
            "find students in detention table , text of notes instead of detention table and middle name in step 1 and 2 respectively .",
            "find students table , date incident end instead of detention table and detention summary in step 1 and 2 respectively .",
            "find reference incident type table , zip postcode instead of detention table and detention summary in step 1 and 2 respectively .",
            "find reference detention type table , detention id instead of detention table and detention summary in step 1 and 2 respectively .",
            "find assessment notes table , text of notes instead of detention table and incident id in step 1 and 2 respectively .",
            "find reference incident type table , text of notes instead of detention table and line 2 in step 1 and 2 respectively .",
            "find detention table , text of notes instead of detention table and line 2 in step 1 and 2 respectively .",
            "find teachers table , detention id instead of detention table and detention summary in step 1 and 2 respectively .",
            "find addresses table , incident id instead of detention table and detention summary in step 1 and 2 respectively .",
            "find students table , text of notes instead of detention table and date address to in step 1 and 2 respectively .",
            "find detention table , text of notes instead of detention table and address type code in step 1 and 2 respectively .",
            "find reference incident type table , state province county instead of detention table and detention summary in step 1 and 2 respectively .",
            "find behavior incident table , text of notes instead of detention table and address type code in step 1 and 2 respectively .",
            "find behavior incident table , text of notes instead of detention table and date left university in step 1 and 2 respectively .",
            "find reference incident type table , text of notes instead of detention table and date left university in step 1 and 2 respectively .",
            "find detention table , incident summary instead of detention table and detention summary in step 1 and 2 respectively .",
            "find behavior incident table , text of notes instead of detention table and last name in step 1 and 2 respectively .",
            "find addresses table , text of notes instead of detention table and date incident end in step 1 and 2 respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Replace customer id in customers table with customer id in accounts .",
        "negative_examples": [
            "replace customer id in customers table with customer id in customers .",
            "replace customer id in customers table with customer id in orders .",
            "replace customer id in customers table with customer id in invoices .",
            "replace customer id in customers table with customer id in product categories .",
            "replace customer id in customers table with customer id in products .",
            "replace customer id in customers table with customer id in financial transactions .",
            "replace customer id in customers table with customer id in order items .",
            "replace customer id in customers table with customer id in invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , use chip model table in place of screen mode table . do not find for each value of type . in step 2 , find model name and ram mib in place of number of rows and type . order the results by ram mib in place of number of rows .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                15,
                23
            ],
            [
                28,
                33
            ],
            [
                43,
                48
            ]
        ],
        "secondary_span": [
            [
                8,
                14
            ],
            [
                34,
                42
            ],
            [
                49,
                55
            ]
        ],
        "positive_example": "There should be chip model instead of screen mode table .",
        "negative_examples": [
            "there should be ram mib instead of phone table .",
            "there should be chip model instead of launch year table .",
            "there should be wifi instead of screen mode table .",
            "there should be phone instead of wifi table .",
            "there should be phone instead of bluetooth table .",
            "there should be hardware colours instead of screen mode table .",
            "there should be chip model instead of accreditation level table .",
            "there should be phone instead of pixels table .",
            "there should be accreditation type instead of phone table .",
            "there should be phone instead of graphics mode table .",
            "there should be phone instead of date table .",
            "there should be chip model instead of wifi table .",
            "there should be slots instead of screen mode table .",
            "there should be phone instead of ram mib table .",
            "there should be phone instead of accreditation type table .",
            "there should be chip model instead of hardware model name table .",
            "there should be accreditation type instead of screen mode table .",
            "there should be phone instead of type table .",
            "there should be model name instead of phone table .",
            "there should be map instead of phone table .",
            "there should be date instead of screen mode table .",
            "there should be phone instead of map table .",
            "there should be char cells instead of phone table .",
            "there should be chip model instead of bluetooth table .",
            "there should be chip model instead of hardware colours table .",
            "there should be char cells instead of screen mode table .",
            "there should be map instead of screen mode table .",
            "there should be graphics mode instead of phone table .",
            "there should be phone instead of model name table .",
            "there should be company name instead of phone table .",
            "there should be phone instead of accreditation level table .",
            "there should be accreditation level instead of phone table .",
            "there should be ram mib instead of screen mode table .",
            "there should be hardware model name instead of phone table .",
            "there should be bluetooth instead of screen mode table .",
            "there should be chip model instead of map table .",
            "there should be type instead of screen mode table .",
            "there should be chip model instead of used kb table .",
            "there should be graphics mode instead of screen mode table .",
            "there should be phone instead of launch year table .",
            "there should be company name instead of screen mode table .",
            "there should be phone instead of rom mib table .",
            "there should be pixels instead of screen mode table .",
            "there should be phone instead of company name table .",
            "there should be phone instead of hardware model name table .",
            "there should be phone instead of char cells table .",
            "there should be hardware colours instead of phone table .",
            "there should be chip model instead of company name table .",
            "there should be accreditation level instead of screen mode table .",
            "there should be launch year instead of screen mode table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment facilities table . do not find for each value of facility code . in step 2 , additionally make sure that bedroom count greater than 4 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "In step 1 , it should search apartments bedroom count for each apartment id .",
        "negative_examples": [
            "in step 1 , it should search apartment buildings building full name for each apartment id .",
            "in step 1 , it should search view unit status building id for each apartment id .",
            "in step 1 , it should search apartment bookings gender code for each apartment id .",
            "in step 1 , it should search view unit status building short name for each apartment id .",
            "in step 1 , it should search guests building full name for each apartment id .",
            "in step 1 , it should search apartment facilities bedroom count for each apartment id .",
            "in step 1 , it should search view unit status bedroom count for each apartment id .",
            "in step 1 , it should search apartment facilities bathroom count for each apartment id .",
            "in step 1 , it should search view unit status booking status code for each apartment id .",
            "in step 1 , it should search apartment bookings booking end date for each apartment id .",
            "in step 1 , it should search apartment facilities building short name for each apartment id .",
            "in step 1 , it should search apartment buildings bathroom count for each apartment id .",
            "in step 1 , it should search apartment facilities apartment type code for each apartment id .",
            "in step 1 , it should search apartments building full name for each apartment id .",
            "in step 1 , it should search guests apartment type code for each apartment id .",
            "in step 1 , it should search apartment bookings bedroom count for each apartment id .",
            "in step 1 , it should search view unit status guest first name for each apartment id .",
            "in step 1 , it should search apartments guest last name for each apartment id .",
            "in step 1 , it should search guests facility code for each apartment id .",
            "in step 1 , it should search apartment buildings booking end date for each apartment id .",
            "in step 1 , it should search apartment bookings building address for each apartment id .",
            "in step 1 , it should search apartments apartment id for each apartment id .",
            "in step 1 , it should search apartment bookings date of birth for each apartment id .",
            "in step 1 , it should search view unit status facility code for each apartment id .",
            "in step 1 , it should search view unit status booking end date for each apartment id .",
            "in step 1 , it should search apartments building id for each apartment id .",
            "in step 1 , it should search apartments date of birth for each apartment id .",
            "in step 1 , it should search apartment bookings available yes or no for each apartment id .",
            "in step 1 , it should search apartment bookings status date for each apartment id .",
            "in step 1 , it should search apartments booking status code for each apartment id .",
            "in step 1 , it should search apartment facilities booking end date for each apartment id .",
            "in step 1 , it should search guests apartment id for each apartment id .",
            "in step 1 , it should search apartments booking start date for each apartment id .",
            "in step 1 , it should search guests apartment number for each apartment id .",
            "in step 1 , it should search apartment buildings guest first name for each apartment id .",
            "in step 1 , it should search view unit status available yes or no for each apartment id .",
            "in step 1 , it should search apartment bookings room count for each apartment id .",
            "in step 1 , it should search apartments room count for each apartment id .",
            "in step 1 , it should search apartment facilities apartment number for each apartment id .",
            "in step 1 , it should search view unit status booking start date for each apartment id .",
            "in step 1 , it should search apartments booking end date for each apartment id .",
            "in step 1 , it should search apartment bookings bathroom count for each apartment id .",
            "in step 1 , it should search apartment buildings gender code for each apartment id .",
            "in step 1 , it should search apartment buildings booking start date for each apartment id .",
            "in step 1 , it should search guests apartment booking id for each apartment id .",
            "in step 1 , it should search view unit status apartment number for each apartment id .",
            "in step 1 , it should search apartment facilities date of birth for each apartment id .",
            "in step 1 , it should search apartment buildings building id for each apartment id .",
            "in step 1 , it should search apartments status date for each apartment id .",
            "in step 1 , it should search guests guest first name for each apartment id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally make sure that last name equals Sawayn .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [],
        "positive_example": "Make sure last name equals Sawayn .",
        "negative_examples": [
            "make sure address id equals sawayn .",
            "make sure line 1 number building equals sawayn .",
            "make sure city equals sawayn .",
            "make sure zip postcode equals sawayn .",
            "make sure state province county equals sawayn .",
            "make sure country equals sawayn .",
            "make sure staff id equals sawayn .",
            "make sure staff address id equals sawayn .",
            "make sure nickname equals sawayn .",
            "make sure first name equals sawayn .",
            "make sure middle name equals sawayn .",
            "make sure date of birth equals sawayn .",
            "make sure date joined staff equals sawayn .",
            "make sure date left staff equals sawayn .",
            "make sure vehicle id equals sawayn .",
            "make sure vehicle details equals sawayn .",
            "make sure customer id equals sawayn .",
            "make sure customer address id equals sawayn .",
            "make sure customer status code equals sawayn .",
            "make sure date became customer equals sawayn .",
            "make sure amount outstanding equals sawayn .",
            "make sure email address equals sawayn .",
            "make sure phone number equals sawayn .",
            "make sure cell mobile phone number equals sawayn .",
            "make sure datetime payment equals sawayn .",
            "make sure payment method code equals sawayn .",
            "make sure amount payment equals sawayn .",
            "make sure lesson id equals sawayn .",
            "make sure lesson status code equals sawayn .",
            "make sure lesson date equals sawayn .",
            "make sure lesson time equals sawayn .",
            "make sure price equals sawayn ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , do not use the chip model table . in step 2 , consider the hardware model name equals LG-P760 conditions in place of the model name equals LG-P760 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                24,
                33
            ]
        ],
        "positive_example": "Look for hardware model name instead of model name.",
        "negative_examples": [
            "look for model name instead of model name .",
            "look for launch year instead of model name .",
            "look for ram mib instead of model name .",
            "look for rom mib instead of model name .",
            "look for slots instead of model name .",
            "look for wifi instead of model name .",
            "look for bluetooth instead of model name .",
            "look for graphics mode instead of model name .",
            "look for char cells instead of model name .",
            "look for pixels instead of model name .",
            "look for hardware colours instead of model name .",
            "look for used kb instead of model name .",
            "look for map instead of model name .",
            "look for type instead of model name .",
            "look for company name instead of model name .",
            "look for accreditation type instead of model name .",
            "look for accreditation level instead of model name .",
            "look for date instead of model name .",
            "look for chip model instead of model name .",
            "look for screen mode instead of model name ."
        ],
        "neg_len": 20
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , remove the rating stars equals 2 conditions .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [],
        "positive_example": "Take out rating stars equals 2\".",
        "negative_examples": [
            "take out movie id equals 2 \" .",
            "take out title equals 2 \" .",
            "take out year equals 2 \" .",
            "take out director equals 2 \" .",
            "take out reviewer id equals 2 \" .",
            "take out name equals 2 \" .",
            "take out rating date equals 2 \" ."
        ],
        "neg_len": 7
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                52
            ]
        ],
        "positive_example": "Change 1st faculty 's year with csu fees 's year and 2nd faculty 's year with campuses .",
        "negative_examples": [
            "change 1st degrees 's county with csu fees 's county and 2nd faculty 's county with campuses .",
            "change 1st degrees 's id with csu fees 's id and 2nd faculty 's id with campuses .",
            "change 1st campuses 's campus fee with csu fees 's campus fee and 2nd faculty 's campus fee with campuses .",
            "change 1st faculty 's year with csu fees 's year and 2nd faculty 's year with county .",
            "change 1st faculty 's year with csu fees 's year and 2nd faculty 's year with location .",
            "change 1st enrollments 's graduate with csu fees 's graduate and 2nd faculty 's graduate with campuses .",
            "change 1st enrollments 's degrees with csu fees 's degrees and 2nd faculty 's degrees with campuses .",
            "change 1st faculty 's discipline with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st discipline enrollments 's discipline with csu fees 's discipline and 2nd faculty 's discipline with campuses .",
            "change 1st degrees 's fte ay with csu fees 's fte ay and 2nd faculty 's fte ay with campuses .",
            "change 1st campuses 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st faculty 's year with csu fees 's year and 2nd faculty 's year with campus fee .",
            "change 1st csu fees 's totalenrollment ay with csu fees 's totalenrollment ay and 2nd faculty 's totalenrollment ay with campuses .",
            "change 1st faculty 's totalenrollment ay with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st faculty 's location with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st undergraduate 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st campuses 's county with csu fees 's county and 2nd faculty 's county with campuses .",
            "change 1st enrollments 's discipline with csu fees 's discipline and 2nd faculty 's discipline with campuses .",
            "change 1st degrees 's degrees with csu fees 's degrees and 2nd faculty 's degrees with campuses .",
            "change 1st discipline enrollments 's county with csu fees 's county and 2nd faculty 's county with campuses .",
            "change 1st faculty 's fte ay with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st discipline enrollments 's fte ay with csu fees 's fte ay and 2nd faculty 's fte ay with campuses .",
            "change 1st discipline 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st csu fees 's graduate with csu fees 's graduate and 2nd faculty 's graduate with campuses .",
            "change 1st campuses 's undergraduate with csu fees 's undergraduate and 2nd faculty 's undergraduate with campuses .",
            "change 1st csu fees 's id with csu fees 's id and 2nd faculty 's id with campuses .",
            "change 1st enrollments 's fte ay with csu fees 's fte ay and 2nd faculty 's fte ay with campuses .",
            "change 1st csu fees 's campus fee with csu fees 's campus fee and 2nd faculty 's campus fee with campuses .",
            "change 1st campuses 's fte ay with csu fees 's fte ay and 2nd faculty 's fte ay with campuses .",
            "change 1st discipline enrollments 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st campus fee 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st enrollments 's undergraduate with csu fees 's undergraduate and 2nd faculty 's undergraduate with campuses .",
            "change 1st faculty 's county with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st graduate 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st degrees 's location with csu fees 's location and 2nd faculty 's location with campuses .",
            "change 1st faculty 's year with csu fees 's year and 2nd faculty 's year with degrees .",
            "change 1st degrees 's graduate with csu fees 's graduate and 2nd faculty 's graduate with campuses .",
            "change 1st campuses 's totalenrollment ay with csu fees 's totalenrollment ay and 2nd faculty 's totalenrollment ay with campuses .",
            "change 1st degrees 's discipline with csu fees 's discipline and 2nd faculty 's discipline with campuses .",
            "change 1st enrollments 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st county 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st degrees 's totalenrollment ay with csu fees 's totalenrollment ay and 2nd faculty 's totalenrollment ay with campuses .",
            "change 1st faculty 's year with csu fees 's year and 2nd faculty 's year with undergraduate .",
            "change 1st discipline enrollments 's location with csu fees 's location and 2nd faculty 's location with campuses .",
            "change 1st discipline enrollments 's campus fee with csu fees 's campus fee and 2nd faculty 's campus fee with campuses .",
            "change 1st enrollments 's id with csu fees 's id and 2nd faculty 's id with campuses .",
            "change 1st discipline enrollments 's totalenrollment ay with csu fees 's totalenrollment ay and 2nd faculty 's totalenrollment ay with campuses .",
            "change 1st csu fees 's county with csu fees 's county and 2nd faculty 's county with campuses .",
            "change 1st degrees 's year with csu fees 's year and 2nd faculty 's year with campuses .",
            "change 1st enrollments 's location with csu fees 's location and 2nd faculty 's location with campuses ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "use body builder table in place of people table . find minimum snatch in place of minimum height .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                12
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                13,
                18
            ]
        ],
        "positive_example": "In body builder table we have to  bring snatch.",
        "negative_examples": [
            "in body builder table we have to bring body builder id .",
            "in body builder table we have to bring people id .",
            "in body builder table we have to bring clean jerk .",
            "in body builder table we have to bring total .",
            "in body builder table we have to bring name .",
            "in body builder table we have to bring height .",
            "in body builder table we have to bring weight .",
            "in body builder table we have to bring birth date .",
            "in body builder table we have to bring birth place ."
        ],
        "neg_len": 9
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2, make sure that campus should be CSU, ignore faculty year given as 2002.",
        "negative_examples": [
            "in step 2 , make sure that campus should be csu , ignore campuses campus given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore csu fees degrees given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore discipline enrollments discipline given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore csu fees id given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore discipline enrollments totalenrollment ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees location given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore faculty fte ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments county given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments location given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore faculty discipline given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses degrees given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments degrees given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments totalenrollment ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses graduate given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments graduate given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore faculty undergraduate given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore discipline enrollments id given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses undergraduate given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees degrees given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore location year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campus fee year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees campus given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses totalenrollment ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore csu fees year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore undergraduate year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees fte ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees county given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore discipline enrollments location given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments discipline given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore faculty graduate given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore csu fees campus given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees undergraduate given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees id given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses campus fee given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore fte ay year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses fte ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore graduate year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore discipline enrollments county given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses id given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore csu fees campus fee given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore degrees totalenrollment ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore enrollments undergraduate given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore faculty campus fee given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore faculty location given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore faculty id given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore discipline enrollments fte ay given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore campuses year given as 2002 .",
            "in step 2 , make sure that campus should be csu , ignore discipline enrollments degrees given as 2002 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average bedroom count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Replace bathroom count with bedroom count .",
        "negative_examples": [
            "replace building id with bedroom count .",
            "replace building short name with bedroom count .",
            "replace building full name with bedroom count .",
            "replace building description with bedroom count .",
            "replace building address with bedroom count .",
            "replace building manager with bedroom count .",
            "replace building phone with bedroom count .",
            "replace apartment id with bedroom count .",
            "replace apartment type code with bedroom count .",
            "replace apartment number with bedroom count .",
            "replace room count with bedroom count .",
            "replace facility code with bedroom count .",
            "replace guest id with bedroom count .",
            "replace gender code with bedroom count .",
            "replace guest first name with bedroom count .",
            "replace guest last name with bedroom count .",
            "replace date of birth with bedroom count .",
            "replace apartment booking id with bedroom count .",
            "replace booking status code with bedroom count .",
            "replace booking start date with bedroom count .",
            "replace booking end date with bedroom count .",
            "replace status date with bedroom count .",
            "replace available yes or no with bedroom count .",
            "replace bathroom count with building id .",
            "replace bathroom count with building short name .",
            "replace bathroom count with building full name .",
            "replace bathroom count with building description .",
            "replace bathroom count with building address .",
            "replace bathroom count with building manager .",
            "replace bathroom count with building phone .",
            "replace bathroom count with apartment id .",
            "replace bathroom count with apartment type code .",
            "replace bathroom count with apartment number .",
            "replace bathroom count with room count .",
            "replace bathroom count with facility code .",
            "replace bathroom count with guest id .",
            "replace bathroom count with gender code .",
            "replace bathroom count with guest first name .",
            "replace bathroom count with guest last name .",
            "replace bathroom count with date of birth .",
            "replace bathroom count with apartment booking id .",
            "replace bathroom count with booking status code .",
            "replace bathroom count with booking start date .",
            "replace bathroom count with booking end date .",
            "replace bathroom count with status date .",
            "replace bathroom count with available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find average room count in place of average bathroom count .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "It should be room count instead of bathroom count .",
        "negative_examples": [
            "it should be room count instead of building id .",
            "it should be room count instead of building short name .",
            "it should be room count instead of building full name .",
            "it should be room count instead of building description .",
            "it should be room count instead of building address .",
            "it should be room count instead of building manager .",
            "it should be room count instead of building phone .",
            "it should be room count instead of apartment id .",
            "it should be room count instead of apartment type code .",
            "it should be room count instead of apartment number .",
            "it should be room count instead of bedroom count .",
            "it should be room count instead of facility code .",
            "it should be room count instead of guest id .",
            "it should be room count instead of gender code .",
            "it should be room count instead of guest first name .",
            "it should be room count instead of guest last name .",
            "it should be room count instead of date of birth .",
            "it should be room count instead of apartment booking id .",
            "it should be room count instead of booking status code .",
            "it should be room count instead of booking start date .",
            "it should be room count instead of booking end date .",
            "it should be room count instead of status date .",
            "it should be room count instead of available yes or no .",
            "it should be building id instead of bathroom count .",
            "it should be building short name instead of bathroom count .",
            "it should be building full name instead of bathroom count .",
            "it should be building description instead of bathroom count .",
            "it should be building address instead of bathroom count .",
            "it should be building manager instead of bathroom count .",
            "it should be building phone instead of bathroom count .",
            "it should be apartment id instead of bathroom count .",
            "it should be apartment type code instead of bathroom count .",
            "it should be apartment number instead of bathroom count .",
            "it should be bedroom count instead of bathroom count .",
            "it should be facility code instead of bathroom count .",
            "it should be guest id instead of bathroom count .",
            "it should be gender code instead of bathroom count .",
            "it should be guest first name instead of bathroom count .",
            "it should be guest last name instead of bathroom count .",
            "it should be date of birth instead of bathroom count .",
            "it should be apartment booking id instead of bathroom count .",
            "it should be booking status code instead of bathroom count .",
            "it should be booking start date instead of bathroom count .",
            "it should be booking end date instead of bathroom count .",
            "it should be status date instead of bathroom count .",
            "it should be available yes or no instead of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Find the total of faculties from faculty table where their  year is 2002.",
        "negative_examples": [
            "find the total of faculties from campuses table where their year is 2002 .",
            "find the total of faculties from csu fees table where their year is 2002 .",
            "find the total of faculties from degrees table where their year is 2002 .",
            "find the total of faculties from discipline enrollments table where their year is 2002 .",
            "find the total of faculties from enrollments table where their year is 2002 .",
            "find the total of faculties from id table where their year is 2002 .",
            "find the total of faculties from campus table where their year is 2002 .",
            "find the total of faculties from location table where their year is 2002 .",
            "find the total of faculties from county table where their year is 2002 .",
            "find the total of faculties from year table where their year is 2002 .",
            "find the total of faculties from campus fee table where their year is 2002 .",
            "find the total of faculties from discipline table where their year is 2002 .",
            "find the total of faculties from undergraduate table where their year is 2002 .",
            "find the total of faculties from graduate table where their year is 2002 .",
            "find the total of faculties from totalenrollment ay table where their year is 2002 .",
            "find the total of faculties from fte ay table where their year is 2002 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the phone table besides the chip model table . find hardware model name in place of model name .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                17
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                18,
                23
            ]
        ],
        "positive_example": "Swap model name of chip model table with hardware model name of phone table .",
        "negative_examples": [
            "swap accreditation level of chip model table with hardware model name of screen mode table .",
            "swap model name of rom mib table with hardware model name of chip rom mib .",
            "swap model name of chip model table with type of screen mode table .",
            "swap rom mib of chip model table with hardware model name of chip model table .",
            "swap map of chip model table with hardware model name of screen mode table .",
            "swap model name of chip model table with map of screen mode table .",
            "swap model name of chip model table with map of phone table .",
            "swap model name of used kb table with hardware model name of chip used kb .",
            "swap pixels of chip model table with hardware model name of screen mode table .",
            "swap model name of chip model table with slots of chip model table .",
            "swap slots of chip model table with hardware model name of chip model table .",
            "swap model name of chip model table with hardware model name of type table .",
            "swap model name of chip model table with hardware model name of graphics mode table .",
            "swap accreditation level of chip model table with hardware model name of chip model table .",
            "swap model name of wifi table with hardware model name of chip wifi .",
            "swap hardware colours of chip model table with hardware model name of phone table .",
            "swap model name of chip model table with company name of screen mode table .",
            "swap graphics mode of chip model table with hardware model name of chip model table .",
            "swap model name of chip model table with chip model of chip model table .",
            "swap model name of chip model table with hardware colours of phone table .",
            "swap model name of chip model table with ram mib of phone table .",
            "swap model name of chip model table with hardware model name of chip model table .",
            "swap model name of chip model table with graphics mode of screen mode table .",
            "swap model name of chip model table with date of screen mode table .",
            "swap model name of chip model table with hardware model name of char cells table .",
            "swap slots of chip model table with hardware model name of phone table .",
            "swap map of chip model table with hardware model name of phone table .",
            "swap used kb of chip model table with hardware model name of screen mode table .",
            "swap graphics mode of chip model table with hardware model name of phone table .",
            "swap model name of chip model table with char cells of chip model table .",
            "swap model name of ram mib table with hardware model name of chip ram mib .",
            "swap model name of chip model table with slots of phone table .",
            "swap model name of chip model table with company name of phone table .",
            "swap model name of chip model table with hardware colours of chip model table .",
            "swap model name of chip model table with hardware model name of slots table .",
            "swap model name of chip model table with hardware model name of hardware colours table .",
            "swap chip model of chip model table with hardware model name of screen mode table .",
            "swap model name of chip model table with graphics mode of phone table .",
            "swap used kb of chip model table with hardware model name of phone table .",
            "swap launch year of chip model table with hardware model name of phone table .",
            "swap screen mode of chip model table with hardware model name of chip model table .",
            "swap accreditation type of chip model table with hardware model name of phone table .",
            "swap model name of accreditation type table with hardware model name of chip accreditation type .",
            "swap hardware colours of chip model table with hardware model name of screen mode table .",
            "swap char cells of chip model table with hardware model name of chip model table .",
            "swap model name of chip model table with hardware model name of chip chip model .",
            "swap model name of chip model table with hardware model name of accreditation level table .",
            "swap model name of chip model table with hardware model name of ram mib table .",
            "swap model name of chip model table with bluetooth of phone table .",
            "swap model name of chip model table with map of chip model table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 2 , remove the discipline equals 4 conditions .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                25
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ]
        ],
        "positive_example": "Calculate campuses equal to CSU and use it in place of discipline equals 4.",
        "negative_examples": [
            "calculate campuses equal to csu and use it in place of id equals 4 .",
            "calculate campuses equal to csu and use it in place of campus equals 4 .",
            "calculate campuses equal to csu and use it in place of location equals 4 .",
            "calculate campuses equal to csu and use it in place of county equals 4 .",
            "calculate campuses equal to csu and use it in place of year equals 4 .",
            "calculate campuses equal to csu and use it in place of campus fee equals 4 .",
            "calculate campuses equal to csu and use it in place of degrees equals 4 .",
            "calculate campuses equal to csu and use it in place of undergraduate equals 4 .",
            "calculate campuses equal to csu and use it in place of graduate equals 4 .",
            "calculate campuses equal to csu and use it in place of totalenrollment ay equals 4 .",
            "calculate campuses equal to csu and use it in place of fte ay equals 4 .",
            "calculate campuses equal to csu and use it in place of faculty equals 4 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , remove the faculty 's year greater than 2002 conditions . find campuses 's campus in place of rows .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                24
            ],
            [
                25,
                28
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                29,
                33
            ]
        ],
        "positive_example": "Ensure to find campuses 's campuses not rows in step 2 , remove \"and faculty 's year greater than 2002\".",
        "negative_examples": [
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and graduate 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and csu fees 's fte ay greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's county greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's discipline greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's id greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and faculty 's totalenrollment ay greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and csu fees 's graduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's degrees greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and discipline enrollments 's location greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and csu fees 's totalenrollment ay greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and discipline enrollments 's totalenrollment ay greater than 2002 \" .",
            "ensure to find discipline 's campuses not rows in step 2 , remove \" and faculty 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and totalenrollment ay 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and location 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and discipline enrollments 's fte ay greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and undergraduate 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and enrollments 's fte ay greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and id 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and csu fees 's id greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's campus fee greater than 2002 \" .",
            "ensure to find totalenrollment ay 's campuses not rows in step 2 , remove \" and faculty 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and discipline enrollments 's discipline greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and enrollments 's graduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and csu fees 's location greater than 2002 \" .",
            "ensure to find undergraduate 's campuses not rows in step 2 , remove \" and faculty 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's graduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and enrollments 's id greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and discipline enrollments 's undergraduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's undergraduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and discipline 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's undergraduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and enrollments 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and csu fees 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's totalenrollment ay greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and enrollments 's county greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and enrollments 's degrees greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's discipline greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and enrollments 's campus fee greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's fte ay greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's county greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and faculty 's discipline greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and fte ay 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and campuses 's campus fee greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and faculty 's county greater than 2002 \" .",
            "ensure to find location 's campuses not rows in step 2 , remove \" and faculty 's year greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and faculty 's undergraduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and degrees 's graduate greater than 2002 \" .",
            "ensure to find campuses 's campuses not rows in step 2 , remove \" and csu fees 's campus fee greater than 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally make sure that last name equals Sawayn .",
        "primary_span": [
            [
                0,
                8
            ]
        ],
        "secondary_span": [],
        "positive_example": "Confirm that last name is Sawayn.",
        "negative_examples": [
            "confirm that address id is sawayn .",
            "confirm that line 1 number building is sawayn .",
            "confirm that city is sawayn .",
            "confirm that zip postcode is sawayn .",
            "confirm that state province county is sawayn .",
            "confirm that country is sawayn .",
            "confirm that staff id is sawayn .",
            "confirm that staff address id is sawayn .",
            "confirm that nickname is sawayn .",
            "confirm that first name is sawayn .",
            "confirm that middle name is sawayn .",
            "confirm that date of birth is sawayn .",
            "confirm that date joined staff is sawayn .",
            "confirm that date left staff is sawayn .",
            "confirm that vehicle id is sawayn .",
            "confirm that vehicle details is sawayn .",
            "confirm that customer id is sawayn .",
            "confirm that customer address id is sawayn .",
            "confirm that customer status code is sawayn .",
            "confirm that date became customer is sawayn .",
            "confirm that amount outstanding is sawayn .",
            "confirm that email address is sawayn .",
            "confirm that phone number is sawayn .",
            "confirm that cell mobile phone number is sawayn .",
            "confirm that datetime payment is sawayn .",
            "confirm that payment method code is sawayn .",
            "confirm that amount payment is sawayn .",
            "confirm that lesson id is sawayn .",
            "confirm that lesson status code is sawayn .",
            "confirm that lesson date is sawayn .",
            "confirm that lesson time is sawayn .",
            "confirm that price is sawayn ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use csu fees table in place of campuses table . additionally make sure that campus fee is greater than average campus fee csu fees .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ]
        ],
        "positive_example": "Find the campuses campuses whose have greater than average campus fee .",
        "negative_examples": [
            "find the campuses campuses whose have greater than average id .",
            "find the campuses campuses whose have greater than average campus .",
            "find the campuses campuses whose have greater than average location .",
            "find the campuses campuses whose have greater than average county .",
            "find the campuses campuses whose have greater than average year .",
            "find the campuses campuses whose have greater than average degrees .",
            "find the campuses campuses whose have greater than average discipline .",
            "find the campuses campuses whose have greater than average undergraduate .",
            "find the campuses campuses whose have greater than average graduate .",
            "find the campuses campuses whose have greater than average totalenrollment ay .",
            "find the campuses campuses whose have greater than average fte ay .",
            "find the campuses campuses whose have greater than average faculty ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the city population greater than 100000 conditions in place of the headquartered city equals Attock City conditions .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                18
            ]
        ],
        "positive_example": "There should be city population greater than 100000 instead of headquartered city equals Attock City .",
        "negative_examples": [
            "there should be city population greater than 100000 instead of product id equals attock city .",
            "there should be city population greater than 100000 instead of product equals attock city .",
            "there should be city population greater than 100000 instead of dimensions equals attock city .",
            "there should be city population greater than 100000 instead of dpi equals attock city .",
            "there should be city population greater than 100000 instead of pages per minute color equals attock city .",
            "there should be city population greater than 100000 instead of max page size equals attock city .",
            "there should be city population greater than 100000 instead of interface equals attock city .",
            "there should be city population greater than 100000 instead of store id equals attock city .",
            "there should be city population greater than 100000 instead of store name equals attock city .",
            "there should be city population greater than 100000 instead of type equals attock city .",
            "there should be city population greater than 100000 instead of area size equals attock city .",
            "there should be city population greater than 100000 instead of number of product category equals attock city .",
            "there should be city population greater than 100000 instead of ranking equals attock city .",
            "there should be city population greater than 100000 instead of district id equals attock city .",
            "there should be city population greater than 100000 instead of district name equals attock city .",
            "there should be city population greater than 100000 instead of city area equals attock city .",
            "there should be product id greater than 100000 instead of headquartered city equals attock city .",
            "there should be product greater than 100000 instead of headquartered city equals attock city .",
            "there should be dimensions greater than 100000 instead of headquartered city equals attock city .",
            "there should be dpi greater than 100000 instead of headquartered city equals attock city .",
            "there should be pages per minute color greater than 100000 instead of headquartered city equals attock city .",
            "there should be max page size greater than 100000 instead of headquartered city equals attock city .",
            "there should be interface greater than 100000 instead of headquartered city equals attock city .",
            "there should be store id greater than 100000 instead of headquartered city equals attock city .",
            "there should be store name greater than 100000 instead of headquartered city equals attock city .",
            "there should be type greater than 100000 instead of headquartered city equals attock city .",
            "there should be area size greater than 100000 instead of headquartered city equals attock city .",
            "there should be number of product category greater than 100000 instead of headquartered city equals attock city .",
            "there should be ranking greater than 100000 instead of headquartered city equals attock city .",
            "there should be district id greater than 100000 instead of headquartered city equals attock city .",
            "there should be district name greater than 100000 instead of headquartered city equals attock city .",
            "there should be city area greater than 100000 instead of headquartered city equals attock city ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find date of birth in place of date became customer .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Need to replace date became customer with date of birth .",
        "negative_examples": [
            "need to replace date became customer with payment method code .",
            "need to replace date left staff with date of birth .",
            "need to replace last name with date of birth .",
            "need to replace address id with date of birth .",
            "need to replace state province county with date of birth .",
            "need to replace customer address id with date of birth .",
            "need to replace date became customer with datetime payment .",
            "need to replace vehicle id with date of birth .",
            "need to replace phone number with date of birth .",
            "need to replace line 1 number building with date of birth .",
            "need to replace date became customer with zip postcode .",
            "need to replace date became customer with vehicle details .",
            "need to replace amount outstanding with date of birth .",
            "need to replace date became customer with lesson status code .",
            "need to replace date became customer with amount outstanding .",
            "need to replace datetime payment with date of birth .",
            "need to replace middle name with date of birth .",
            "need to replace cell mobile phone number with date of birth .",
            "need to replace date became customer with lesson date .",
            "need to replace nickname with date of birth .",
            "need to replace first name with date of birth .",
            "need to replace date became customer with customer id .",
            "need to replace date became customer with date joined staff .",
            "need to replace date became customer with amount payment .",
            "need to replace date became customer with first name .",
            "need to replace date became customer with customer address id .",
            "need to replace date became customer with vehicle id .",
            "need to replace date became customer with city .",
            "need to replace country with date of birth .",
            "need to replace date became customer with cell mobile phone number .",
            "need to replace lesson status code with date of birth .",
            "need to replace email address with date of birth .",
            "need to replace date became customer with country .",
            "need to replace date joined staff with date of birth .",
            "need to replace date became customer with address id .",
            "need to replace lesson id with date of birth .",
            "need to replace price with date of birth .",
            "need to replace date became customer with nickname .",
            "need to replace date became customer with phone number .",
            "need to replace vehicle details with date of birth .",
            "need to replace date became customer with lesson id .",
            "need to replace date became customer with email address .",
            "need to replace staff address id with date of birth .",
            "need to replace date became customer with middle name .",
            "need to replace date became customer with date left staff .",
            "need to replace payment method code with date of birth .",
            "need to replace amount payment with date of birth .",
            "need to replace zip postcode with date of birth .",
            "need to replace city with date of birth .",
            "need to replace date became customer with price ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the accreditation type equals Nokia Corporation conditions . find hardware model name in place of company name . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                36,
                39
            ],
            [
                46,
                53
            ]
        ],
        "secondary_span": [
            [
                25,
                35
            ],
            [
                40,
                45
            ]
        ],
        "positive_example": "Swap company name with hardware model name , \"and\" with \"or\" , accreditation type with company name in step 2.",
        "negative_examples": [
            "swap hardware colours with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with bluetooth , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , wifi with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , char cells with company name in step 2 .",
            "swap model name with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , graphics mode with company name in step 2 .",
            "swap bluetooth with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , screen mode with company name in step 2 .",
            "swap company name with char cells , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , chip model with company name in step 2 .",
            "swap slots with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , bluetooth with company name in step 2 .",
            "swap company name with chip model , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap char cells with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with launch year , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with type , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , map with company name in step 2 .",
            "swap used kb with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , pixels with company name in step 2 .",
            "swap company name with used kb , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , used kb with company name in step 2 .",
            "swap company name with screen mode , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with graphics mode , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , model name with company name in step 2 .",
            "swap chip model with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with ram mib , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap map with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap date with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with map , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap ram mib with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with slots , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , ram mib with company name in step 2 .",
            "swap launch year with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with wifi , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap accreditation level with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with accreditation level , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with date , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , launch year with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , hardware colours with company name in step 2 .",
            "swap company name with pixels , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , type with company name in step 2 .",
            "swap wifi with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap rom mib with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , rom mib with company name in step 2 .",
            "swap company name with rom mib , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , accreditation level with company name in step 2 .",
            "swap screen mode with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap pixels with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap type with hardware model name , \" and \" with \" or \" , accreditation type with company name in step 2 .",
            "swap company name with hardware model name , \" and \" with \" or \" , slots with company name in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the apartment number equals Columbus Square and building full name like Normandie Court conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "Replace bathroom count and apartment number with bedroom count and building short name respectively . Remove building full name contains Normandie Court condition .",
        "negative_examples": [
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove building address contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove guest last name contains normandie court condition .",
            "replace booking start date and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove booking start date contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and facility code respectively . remove building full name contains normandie court condition .",
            "replace gender code and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace room count and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bedroom count and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace guest first name and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace booking status code and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and apartment number respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building description respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove status date contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove apartment id contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and apartment id respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove building phone contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove building description contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and gender code respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building phone respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove guest id contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove facility code contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and booking status code respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and booking end date respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove gender code contains normandie court condition .",
            "replace apartment type code and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace building address and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove building id contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and date of birth respectively . remove building full name contains normandie court condition .",
            "replace available yes or no and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and guest last name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove building manager contains normandie court condition .",
            "replace guest last name and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace status date and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace facility code and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace apartment id and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove apartment booking id contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building manager respectively . remove building full name contains normandie court condition .",
            "replace apartment booking id and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and room count respectively . remove building full name contains normandie court condition .",
            "replace building id and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace building manager and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and booking start date respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove room count contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and apartment booking id respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and available yes or no respectively . remove building full name contains normandie court condition .",
            "replace building phone and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building address respectively . remove building full name contains normandie court condition .",
            "replace apartment number and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition .",
            "replace bathroom count and apartment number with bedroom count and building short name respectively . remove date of birth contains normandie court condition .",
            "replace guest id and apartment number with bedroom count and building short name respectively . remove building full name contains normandie court condition ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , additionally use the information from the campuses table besides the faculty table . in step 2 , do not find for each value of faculty 's campus . in step 3 , find campuses 's campus in place of faculty . order the results by faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                31
            ],
            [
                36,
                39
            ],
            [
                45,
                49
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                40,
                44
            ],
            [
                50,
                56
            ]
        ],
        "positive_example": "In step 2 , find Campuses's campus corresponding to faculty's campus for step 1's results ordered descending by faculty .",
        "negative_examples": [
            "in step 2 , find campuses 's location corresponding to discipline enrollments 's location for step 1 's results ordered descending by faculty .",
            "in step 2 , find totalenrollment ay 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus fee corresponding to csu fees 's campus fee for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's undergraduate corresponding to degrees 's undergraduate for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's county corresponding to campuses 's county for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's graduate corresponding to campuses 's graduate for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's fte ay corresponding to discipline enrollments 's fte ay for step 1 's results ordered descending by faculty .",
            "in step 2 , find campus fee 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus corresponding to undergraduate 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find id 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's county corresponding to degrees 's county for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's discipline corresponding to degrees 's discipline for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's degrees corresponding to csu fees 's degrees for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus corresponding to totalenrollment ay 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus fee corresponding to enrollments 's campus fee for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's degrees corresponding to enrollments 's degrees for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's discipline corresponding to campuses 's discipline for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus corresponding to campus fee 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's graduate corresponding to csu fees 's graduate for step 1 's results ordered descending by faculty .",
            "in step 2 , find discipline 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus corresponding to location 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's graduate corresponding to enrollments 's graduate for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's id corresponding to discipline enrollments 's id for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's location corresponding to campuses 's location for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's degrees corresponding to campuses 's degrees for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's fte ay corresponding to degrees 's fte ay for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's year corresponding to enrollments 's year for step 1 's results ordered descending by faculty .",
            "in step 2 , find graduate 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's graduate corresponding to discipline enrollments 's graduate for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's county corresponding to discipline enrollments 's county for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus fee corresponding to campuses 's campus fee for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's location corresponding to csu fees 's location for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's graduate corresponding to degrees 's graduate for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's totalenrollment ay corresponding to campuses 's totalenrollment ay for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus corresponding to csu fees 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus corresponding to fte ay 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find county 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's year corresponding to csu fees 's year for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's id corresponding to campuses 's id for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's totalenrollment ay corresponding to csu fees 's totalenrollment ay for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus fee corresponding to degrees 's campus fee for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's degrees corresponding to discipline enrollments 's degrees for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's year corresponding to discipline enrollments 's year for step 1 's results ordered descending by faculty .",
            "in step 2 , find degrees 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's fte ay corresponding to campuses 's fte ay for step 1 's results ordered descending by faculty .",
            "in step 2 , find year 's campus corresponding to faculty 's campus for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's undergraduate corresponding to csu fees 's undergraduate for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's totalenrollment ay corresponding to discipline enrollments 's totalenrollment ay for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's campus fee corresponding to discipline enrollments 's campus fee for step 1 's results ordered descending by faculty .",
            "in step 2 , find campuses 's year corresponding to campuses 's year for step 1 's results ordered descending by faculty ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table in place of faculty table . consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year greater than or equals 1939 and faculty 's year less than or equals 1935 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                28
            ],
            [
                52,
                55
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                29,
                51
            ],
            [
                56,
                62
            ]
        ],
        "positive_example": "I want the campuses table instead of faculty.",
        "negative_examples": [
            "i want the campuses table instead of campuses .",
            "i want the campuses table instead of csu fees .",
            "i want the campuses table instead of degrees .",
            "i want the campuses table instead of discipline enrollments .",
            "i want the campuses table instead of enrollments .",
            "i want the campuses table instead of id .",
            "i want the campuses table instead of location .",
            "i want the campuses table instead of county .",
            "i want the campuses table instead of year .",
            "i want the campuses table instead of campus fee .",
            "i want the campuses table instead of discipline .",
            "i want the campuses table instead of undergraduate .",
            "i want the campuses table instead of graduate .",
            "i want the campuses table instead of totalenrollment ay .",
            "i want the campuses table instead of fte ay .",
            "i want the id table instead of faculty .",
            "i want the location table instead of faculty .",
            "i want the county table instead of faculty .",
            "i want the year table instead of faculty .",
            "i want the campus fee table instead of faculty .",
            "i want the degrees table instead of faculty .",
            "i want the discipline table instead of faculty .",
            "i want the undergraduate table instead of faculty .",
            "i want the graduate table instead of faculty .",
            "i want the totalenrollment ay table instead of faculty .",
            "i want the fte ay table instead of faculty ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find birth date in place of birth place .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace birth place with birth date .",
        "negative_examples": [
            "replace birth place with body builder id .",
            "replace birth place with people id .",
            "replace birth place with snatch .",
            "replace birth place with clean jerk .",
            "replace birth place with total .",
            "replace birth place with name .",
            "replace birth place with height .",
            "replace birth place with weight .",
            "replace body builder id with birth date .",
            "replace people id with birth date .",
            "replace snatch with birth date .",
            "replace clean jerk with birth date .",
            "replace total with birth date .",
            "replace name with birth date .",
            "replace height with birth date .",
            "replace weight with birth date ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table and discipline enrollments table in step 2 , consider the campuses 's campus equals San Jose State University and degrees 's year equals 2000 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 2000 conditions . find degrees in place of summation of graduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                20,
                36
            ],
            [
                57,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                15
            ],
            [
                37,
                56
            ],
            [
                59,
                65
            ]
        ],
        "positive_example": "You should use degrees, degrees and campus of Campuses instead of graduate, faculty and year of faculty respectively.",
        "negative_examples": [
            "you should use csu fees , degrees and campus of campuses instead of graduate , id and year of id respectively .",
            "you should use campuses , degrees and campus of campuses instead of fte ay , faculty and year of faculty respectively .",
            "you should use fte ay , fte ay and campus of campuses instead of graduate , enrollments and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of county , discipline enrollments and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of totalenrollment ay , campuses and year of faculty respectively .",
            "you should use enrollments , degrees and campus of campuses instead of graduate , faculty and location of faculty respectively .",
            "you should use totalenrollment ay , totalenrollment ay and campus of campuses instead of graduate , discipline enrollments and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of county , csu fees and year of faculty respectively .",
            "you should use campuses , degrees and campus of campuses instead of graduate , campus fee and year of campus fee respectively .",
            "you should use degrees , degrees and campus fee of campuses instead of graduate , discipline enrollments and year of faculty respectively .",
            "you should use campuses , degrees and county of campuses instead of graduate , faculty and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of graduate , id and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of campus fee , campuses and year of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of graduate , faculty and discipline of faculty respectively .",
            "you should use undergraduate , undergraduate and campus of campuses instead of graduate , campuses and year of faculty respectively .",
            "you should use degrees , degrees and fte ay of campuses instead of graduate , campuses and year of faculty respectively .",
            "you should use degrees , degrees and id of campuses instead of graduate , campuses and year of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of graduate , faculty and undergraduate of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of id , discipline enrollments and year of faculty respectively .",
            "you should use campuses , degrees and campus of campuses instead of graduate , faculty and totalenrollment ay of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of undergraduate , faculty and year of faculty respectively .",
            "you should use campuses , degrees and campus of campuses instead of county , faculty and year of faculty respectively .",
            "you should use enrollments , degrees and campus of campuses instead of undergraduate , faculty and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of totalenrollment ay , enrollments and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of county , faculty and year of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of graduate , campus fee and year of campus fee respectively .",
            "you should use degrees , degrees and location of campuses instead of graduate , faculty and year of faculty respectively .",
            "you should use id , id and campus of campuses instead of graduate , csu fees and year of faculty respectively .",
            "you should use discipline enrollments , degrees and campus of campuses instead of graduate , campus fee and year of campus fee respectively .",
            "you should use degrees , degrees and campus of campuses instead of graduate , enrollments and undergraduate of faculty respectively .",
            "you should use enrollments , degrees and campus of campuses instead of graduate , totalenrollment ay and year of totalenrollment ay respectively .",
            "you should use discipline enrollments , degrees and campus of campuses instead of graduate , faculty and county of faculty respectively .",
            "you should use campus fee , campus fee and campus of campuses instead of graduate , discipline enrollments and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of graduate , campuses and fte ay of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of graduate , fte ay and year of fte ay respectively .",
            "you should use enrollments , degrees and campus of campuses instead of graduate , faculty and undergraduate of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of graduate , csu fees and county of faculty respectively .",
            "you should use totalenrollment ay , totalenrollment ay and campus of campuses instead of graduate , csu fees and year of faculty respectively .",
            "you should use degrees , degrees and location of campuses instead of graduate , discipline enrollments and year of faculty respectively .",
            "you should use campuses , degrees and campus of campuses instead of id , faculty and year of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of graduate , totalenrollment ay and year of totalenrollment ay respectively .",
            "you should use location , degrees and campus of campuses instead of graduate , faculty and year of faculty respectively .",
            "you should use discipline enrollments , degrees and campus of campuses instead of fte ay , faculty and year of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of fte ay , faculty and year of faculty respectively .",
            "you should use discipline enrollments , degrees and totalenrollment ay of campuses instead of graduate , faculty and year of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of id , faculty and year of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of graduate , faculty and campus fee of faculty respectively .",
            "you should use discipline enrollments , degrees and campus of campuses instead of graduate , faculty and campus fee of faculty respectively .",
            "you should use degrees , degrees and campus of campuses instead of graduate , campuses and campus fee of faculty respectively .",
            "you should use csu fees , degrees and campus of campuses instead of undergraduate , faculty and year of faculty respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                0,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Should corresponds rows to total number of stores in the city .",
        "negative_examples": [
            "should corresponds rows to total number of product in the city .",
            "should corresponds rows to total number of district in the city .",
            "should corresponds rows to total number of store product in the city .",
            "should corresponds rows to total number of store district in the city .",
            "should corresponds rows to total number of product id in the city .",
            "should corresponds rows to total number of dimensions in the city .",
            "should corresponds rows to total number of dpi in the city .",
            "should corresponds rows to total number of pages per minute color in the city .",
            "should corresponds rows to total number of max page size in the city .",
            "should corresponds rows to total number of interface in the city .",
            "should corresponds rows to total number of store id in the city .",
            "should corresponds rows to total number of store name in the city .",
            "should corresponds rows to total number of type in the city .",
            "should corresponds rows to total number of area size in the city .",
            "should corresponds rows to total number of number of product category in the city .",
            "should corresponds rows to total number of ranking in the city .",
            "should corresponds rows to total number of district id in the city .",
            "should corresponds rows to total number of district name in the city .",
            "should corresponds rows to total number of headquartered city in the city .",
            "should corresponds rows to total number of city population in the city .",
            "should corresponds rows to total number of city area in the city ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's campus equals 1 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "Use csu fees ' year instead of faculty 's year in step 2 , remove \"and faculty 's campuses equals 1\".",
        "negative_examples": [
            "use csu fees ' year instead of campuses 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of csu fees 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of degrees 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of discipline enrollments 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of enrollments 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of id 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of location 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of county 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of year 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of campus fee 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of discipline 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of undergraduate 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of graduate 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of totalenrollment ay 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of fte ay 's year in step 2 , remove \" and faculty 's campuses equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's id equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's location equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's county equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's year equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's campus fee equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's degrees equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's discipline equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's undergraduate equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's graduate equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's totalenrollment ay equals 1 \" .",
            "use csu fees ' year instead of faculty 's year in step 2 , remove \" and faculty 's fte ay equals 1 \" ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "There should be campus instead of id .",
        "negative_examples": [
            "there should be id instead of id .",
            "there should be location instead of id .",
            "there should be county instead of id .",
            "there should be year instead of id .",
            "there should be campus fee instead of id .",
            "there should be degrees instead of id .",
            "there should be discipline instead of id .",
            "there should be undergraduate instead of id .",
            "there should be graduate instead of id .",
            "there should be totalenrollment ay instead of id .",
            "there should be fte ay instead of id .",
            "there should be faculty instead of id ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                8
            ]
        ],
        "secondary_span": [
            [
                9,
                16
            ]
        ],
        "positive_example": "In step 2 bedroom count will take the place of bathroom count .",
        "negative_examples": [
            "in step 2 bedroom count will take the place of building id .",
            "in step 2 bedroom count will take the place of building short name .",
            "in step 2 bedroom count will take the place of building full name .",
            "in step 2 bedroom count will take the place of building description .",
            "in step 2 bedroom count will take the place of building address .",
            "in step 2 bedroom count will take the place of building manager .",
            "in step 2 bedroom count will take the place of building phone .",
            "in step 2 bedroom count will take the place of apartment id .",
            "in step 2 bedroom count will take the place of apartment type code .",
            "in step 2 bedroom count will take the place of apartment number .",
            "in step 2 bedroom count will take the place of bedroom count .",
            "in step 2 bedroom count will take the place of room count .",
            "in step 2 bedroom count will take the place of facility code .",
            "in step 2 bedroom count will take the place of guest id .",
            "in step 2 bedroom count will take the place of gender code .",
            "in step 2 bedroom count will take the place of guest first name .",
            "in step 2 bedroom count will take the place of guest last name .",
            "in step 2 bedroom count will take the place of date of birth .",
            "in step 2 bedroom count will take the place of apartment booking id .",
            "in step 2 bedroom count will take the place of booking status code .",
            "in step 2 bedroom count will take the place of booking start date .",
            "in step 2 bedroom count will take the place of booking end date .",
            "in step 2 bedroom count will take the place of status date .",
            "in step 2 bedroom count will take the place of available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the orders table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "Replace customer id in customers table with customer id in orders table .",
        "negative_examples": [
            "replace customer id in customers table with customer id in customers table .",
            "replace customer id in customers table with customer id in invoices table .",
            "replace customer id in customers table with customer id in accounts table .",
            "replace customer id in customers table with customer id in product categories table .",
            "replace customer id in customers table with customer id in products table .",
            "replace customer id in customers table with customer id in financial transactions table .",
            "replace customer id in customers table with customer id in order items table .",
            "replace customer id in customers table with customer id in invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the county equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                26
            ]
        ],
        "positive_example": "I want campuses instead of county.",
        "negative_examples": [
            "i want id instead of county .",
            "i want location instead of county .",
            "i want year instead of county .",
            "i want campus fee instead of county .",
            "i want degrees instead of county .",
            "i want discipline instead of county .",
            "i want undergraduate instead of county .",
            "i want graduate instead of county .",
            "i want totalenrollment ay instead of county .",
            "i want fte ay instead of county .",
            "i want faculty instead of county .",
            "i want campuses instead of id .",
            "i want campuses instead of location .",
            "i want campuses instead of year .",
            "i want campuses instead of campus fee .",
            "i want campuses instead of degrees .",
            "i want campuses instead of discipline .",
            "i want campuses instead of undergraduate .",
            "i want campuses instead of graduate .",
            "i want campuses instead of totalenrollment ay .",
            "i want campuses instead of fte ay .",
            "i want campuses instead of faculty ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use accounts table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Drop the accounts table and use customers table.",
        "negative_examples": [
            "drop the accounts table and use orders table .",
            "drop the accounts table and use invoices table .",
            "drop the accounts table and use product categories table .",
            "drop the accounts table and use products table .",
            "drop the accounts table and use financial transactions table .",
            "drop the accounts table and use order items table .",
            "drop the accounts table and use invoice line items table .",
            "drop the orders table and use customers table .",
            "drop the invoices table and use customers table .",
            "drop the product categories table and use customers table .",
            "drop the products table and use customers table .",
            "drop the financial transactions table and use customers table .",
            "drop the order items table and use customers table .",
            "drop the invoice line items table and use customers table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Delete the faculty's campuses whose value is 1 from second step.",
        "negative_examples": [
            "delete the campuses 's campuses whose value is 1 from second step .",
            "delete the csu fees 's campuses whose value is 1 from second step .",
            "delete the degrees 's campuses whose value is 1 from second step .",
            "delete the discipline enrollments 's campuses whose value is 1 from second step .",
            "delete the enrollments 's campuses whose value is 1 from second step .",
            "delete the id 's campuses whose value is 1 from second step .",
            "delete the location 's campuses whose value is 1 from second step .",
            "delete the county 's campuses whose value is 1 from second step .",
            "delete the year 's campuses whose value is 1 from second step .",
            "delete the campus fee 's campuses whose value is 1 from second step .",
            "delete the discipline 's campuses whose value is 1 from second step .",
            "delete the undergraduate 's campuses whose value is 1 from second step .",
            "delete the graduate 's campuses whose value is 1 from second step .",
            "delete the totalenrollment ay 's campuses whose value is 1 from second step .",
            "delete the fte ay 's campuses whose value is 1 from second step .",
            "delete the faculty 's id whose value is 1 from second step .",
            "delete the faculty 's location whose value is 1 from second step .",
            "delete the faculty 's county whose value is 1 from second step .",
            "delete the faculty 's year whose value is 1 from second step .",
            "delete the faculty 's campus fee whose value is 1 from second step .",
            "delete the faculty 's degrees whose value is 1 from second step .",
            "delete the faculty 's discipline whose value is 1 from second step .",
            "delete the faculty 's undergraduate whose value is 1 from second step .",
            "delete the faculty 's graduate whose value is 1 from second step .",
            "delete the faculty 's totalenrollment ay whose value is 1 from second step .",
            "delete the faculty 's fte ay whose value is 1 from second step ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi greater than 5 and dpi less than A4 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "Show product from product table whose max page size equals A 4 and pages per minute color less than 5.",
        "negative_examples": [
            "show product from product table whose max page size equals a 4 and product id less than 5 .",
            "show product from product table whose max page size equals a 4 and product less than 5 .",
            "show product from product table whose max page size equals a 4 and dimensions less than 5 .",
            "show product from product table whose max page size equals a 4 and dpi less than 5 .",
            "show product from product table whose max page size equals a 4 and interface less than 5 .",
            "show product from product table whose max page size equals a 4 and store id less than 5 .",
            "show product from product table whose max page size equals a 4 and store name less than 5 .",
            "show product from product table whose max page size equals a 4 and type less than 5 .",
            "show product from product table whose max page size equals a 4 and area size less than 5 .",
            "show product from product table whose max page size equals a 4 and number of product category less than 5 .",
            "show product from product table whose max page size equals a 4 and ranking less than 5 .",
            "show product from product table whose max page size equals a 4 and district id less than 5 .",
            "show product from product table whose max page size equals a 4 and district name less than 5 .",
            "show product from product table whose max page size equals a 4 and headquartered city less than 5 .",
            "show product from product table whose max page size equals a 4 and city population less than 5 .",
            "show product from product table whose max page size equals a 4 and city area less than 5 .",
            "show product from product table whose product id equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose product equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose dimensions equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose dpi equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose interface equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose store id equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose store name equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose type equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose area size equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose number of product category equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose ranking equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose district id equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose district name equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose headquartered city equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose city population equals a 4 and pages per minute color less than 5 .",
            "show product from product table whose city area equals a 4 and pages per minute color less than 5 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building full name like Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                25,
                29
            ]
        ],
        "secondary_span": [
            [
                13,
                24
            ],
            [
                30,
                37
            ]
        ],
        "positive_example": "Use bedroom count and building short name equals Columbus Square in place of bathroom count and building full name contains Columbus Square respectively.",
        "negative_examples": [
            "use bedroom count and apartment number equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and apartment id contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and guest last name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of apartment type code and building full name contains columbus square respectively .",
            "use bedroom count and booking end date equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and building manager contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and guest id contains columbus square respectively .",
            "use bedroom count and status date equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of booking start date and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and building id contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and date of birth contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and facility code contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and apartment number contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of facility code and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of apartment id and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of building phone and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and apartment booking id contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of gender code and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of building id and building full name contains columbus square respectively .",
            "use bedroom count and building address equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of building address and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bedroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of building manager and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of apartment number and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of available yes or no and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and room count contains columbus square respectively .",
            "use bedroom count and guest last name equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of guest last name and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and booking status code contains columbus square respectively .",
            "use bedroom count and gender code equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of building description and building full name contains columbus square respectively .",
            "use bedroom count and building manager equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and guest first name contains columbus square respectively .",
            "use bedroom count and booking start date equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and booking end date contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and apartment type code contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and building address contains columbus square respectively .",
            "use bedroom count and bedroom count equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and building description contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of status date and building full name contains columbus square respectively .",
            "use bedroom count and guest id equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and date of birth equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of room count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and building phone contains columbus square respectively .",
            "use bedroom count and building description equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of booking end date and building full name contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and available yes or no contains columbus square respectively .",
            "use bedroom count and building short name equals columbus square in place of bathroom count and gender code contains columbus square respectively .",
            "use bedroom count and apartment id equals columbus square in place of bathroom count and building full name contains columbus square respectively .",
            "use bedroom count and facility code equals columbus square in place of bathroom count and building full name contains columbus square respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "should find the summation of faculty in those rows",
        "negative_examples": [
            "should find the summation of campuses in those rows",
            "should find the summation of csu fees in those rows",
            "should find the summation of degrees in those rows",
            "should find the summation of discipline enrollments in those rows",
            "should find the summation of enrollments in those rows",
            "should find the summation of id in those rows",
            "should find the summation of campus in those rows",
            "should find the summation of location in those rows",
            "should find the summation of county in those rows",
            "should find the summation of year in those rows",
            "should find the summation of campus fee in those rows",
            "should find the summation of discipline in those rows",
            "should find the summation of undergraduate in those rows",
            "should find the summation of graduate in those rows",
            "should find the summation of totalenrollment ay in those rows",
            "should find the summation of fte ay in those rows"
        ],
        "neg_len": 16
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "additionally use the information from the addresses table besides the student addresses table . find for each value of student addresses 's address id . additionally find line 1 .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                24
            ],
            [
                25,
                29
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "You need to use line 1 in addresses rather than average monthly rental.",
        "negative_examples": [
            "you need to use teacher id in student addresses rather than average monthly rental .",
            "you need to use notes id in reference address types rather than average monthly rental .",
            "you need to use notes id in reference detention type rather than average monthly rental .",
            "you need to use text of notes in assessment notes rather than average monthly rental .",
            "you need to use other student details in teachers rather than average monthly rental .",
            "you need to use middle name in students rather than average monthly rental .",
            "you need to use address type description in addresses rather than average monthly rental .",
            "you need to use line 2 in reference detention type rather than average monthly rental .",
            "you need to use first name in reference incident type rather than average monthly rental .",
            "you need to use notes id in addresses rather than average monthly rental .",
            "you need to use date address to in behavior incident rather than average monthly rental .",
            "you need to use monthly rental in student addresses rather than average monthly rental .",
            "you need to use incident type description in reference incident type rather than average monthly rental .",
            "you need to use cell mobile number in reference incident type rather than average monthly rental .",
            "you need to use email address in students rather than average monthly rental .",
            "you need to use other student details in students in detention rather than average monthly rental .",
            "you need to use cell mobile number in reference detention type rather than average monthly rental .",
            "you need to use other student details in reference address types rather than average monthly rental .",
            "you need to use datetime detention end in behavior incident rather than average monthly rental .",
            "you need to use date first rental in students in detention rather than average monthly rental .",
            "you need to use incident id in addresses rather than average monthly rental .",
            "you need to use student id in students rather than average monthly rental .",
            "you need to use detention type code in students rather than average monthly rental .",
            "you need to use middle name in teachers rather than average monthly rental .",
            "you need to use address id in detention rather than average monthly rental .",
            "you need to use incident type code in reference detention type rather than average monthly rental .",
            "you need to use date left university in student addresses rather than average monthly rental .",
            "you need to use datetime detention start in assessment notes rather than average monthly rental .",
            "you need to use email address in behavior incident rather than average monthly rental .",
            "you need to use incident type description in behavior incident rather than average monthly rental .",
            "you need to use date first rental in addresses rather than average monthly rental .",
            "you need to use student id in teachers rather than average monthly rental .",
            "you need to use other details in assessment notes rather than average monthly rental .",
            "you need to use incident summary in teachers rather than average monthly rental .",
            "you need to use country in addresses rather than average monthly rental .",
            "you need to use city in reference address types rather than average monthly rental .",
            "you need to use other address details in reference detention type rather than average monthly rental .",
            "you need to use line 2 in assessment notes rather than average monthly rental .",
            "you need to use state province county in reference address types rather than average monthly rental .",
            "you need to use date incident start in detention rather than average monthly rental .",
            "you need to use date address from in student addresses rather than average monthly rental .",
            "you need to use line 2 in students in detention rather than average monthly rental .",
            "you need to use line 2 in reference address types rather than average monthly rental .",
            "you need to use date of notes in reference incident type rather than average monthly rental .",
            "you need to use date incident end in detention rather than average monthly rental .",
            "you need to use date left university in students rather than average monthly rental .",
            "you need to use student id in detention rather than average monthly rental .",
            "you need to use gender in assessment notes rather than average monthly rental .",
            "you need to use country in reference detention type rather than average monthly rental .",
            "you need to use other address details in student addresses rather than average monthly rental ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , do not use the addresses table and staff table . in step 2 , remove the staff 's last name equals Sawayn conditions . in step 3 , do not use the customers table and addresses table . in step 4 , remove the staff 's last name equals Sawayn conditions . find staff 's last name in place of customers 's last name .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                46,
                55
            ],
            [
                56,
                60
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                32,
                41
            ],
            [
                61,
                68
            ]
        ],
        "positive_example": "Step 2 should only find Customers's last name and step 3 only should find Staff's last name .",
        "negative_examples": [
            "step 2 should only find customers 's date of birth and step 3 only should find vehicles 's last date of birth",
            "step 2 should only find customers 's date joined staff and step 3 only should find staff 's last name .",
            "step 2 should only find lessons 's date became customer and step 3 only should find staff 's last date became customer",
            "step 2 should only find customers 's staff id and step 3 only should find vehicles 's last staff id",
            "step 2 should only find customers 's datetime payment and step 3 only should find customer payments 's last datetime payment",
            "step 2 should only find vehicles 's first name and step 3 only should find staff 's last first name",
            "step 2 should only find customers 's phone number and step 3 only should find staff 's last name .",
            "step 2 should only find lessons 's vehicle id and step 3 only should find staff 's last vehicle id",
            "step 2 should only find customers 's country and step 3 only should find vehicles 's last country",
            "step 2 should only find vehicles 's last name and step 3 only should find staff 's last name .",
            "step 2 should only find customer payments 's amount outstanding and step 3 only should find staff 's last amount outstanding",
            "step 2 should only find customer payments 's price and step 3 only should find staff 's last price",
            "step 2 should only find customers 's zip postcode and step 3 only should find staff 's last name .",
            "step 2 should only find customers 's nickname and step 3 only should find lessons 's last nickname",
            "step 2 should only find addresses 's state province county and step 3 only should find staff 's last state province county",
            "step 2 should only find lessons 's cell mobile phone number and step 3 only should find staff 's last cell mobile phone number",
            "step 2 should only find customers 's date left staff and step 3 only should find staff 's last name .",
            "step 2 should only find customers 's city and step 3 only should find vehicles 's last city",
            "step 2 should only find lessons 's city and step 3 only should find staff 's last city",
            "step 2 should only find customer payments 's phone number and step 3 only should find staff 's last phone number",
            "step 2 should only find addresses 's customer address id and step 3 only should find staff 's last customer address id",
            "step 2 should only find customer payments 's lesson time and step 3 only should find staff 's last lesson time",
            "step 2 should only find vehicles 's date of birth and step 3 only should find staff 's last date of birth",
            "step 2 should only find vehicles 's phone number and step 3 only should find staff 's last phone number",
            "step 2 should only find customer payments 's date became customer and step 3 only should find staff 's last date became customer",
            "step 2 should only find customer payments 's date left staff and step 3 only should find staff 's last date left staff",
            "step 2 should only find customers 's email address and step 3 only should find addresses 's last email address",
            "step 2 should only find customer payments 's staff address id and step 3 only should find staff 's last staff address id",
            "step 2 should only find customers 's date left staff and step 3 only should find addresses 's last date left staff",
            "step 2 should only find addresses 's address id and step 3 only should find staff 's last address id",
            "step 2 should only find customers 's date of birth and step 3 only should find staff 's last name .",
            "step 2 should only find customer payments 's country and step 3 only should find staff 's last country",
            "step 2 should only find customers 's middle name and step 3 only should find addresses 's last middle name",
            "step 2 should only find vehicles 's lesson time and step 3 only should find staff 's last lesson time",
            "step 2 should only find customers 's lesson date and step 3 only should find addresses 's last lesson date",
            "step 2 should only find customers 's lesson time and step 3 only should find vehicles 's last lesson time",
            "step 2 should only find customers 's address id and step 3 only should find staff 's last name .",
            "step 2 should only find customer payments 's staff id and step 3 only should find staff 's last staff id",
            "step 2 should only find customers 's lesson id and step 3 only should find addresses 's last lesson id",
            "step 2 should only find lessons 's last name and step 3 only should find staff 's last name .",
            "step 2 should only find customer payments 's customer status code and step 3 only should find staff 's last customer status code",
            "step 2 should only find addresses 's amount outstanding and step 3 only should find staff 's last amount outstanding",
            "step 2 should only find lessons 's lesson status code and step 3 only should find staff 's last lesson status code",
            "step 2 should only find customer payments 's amount payment and step 3 only should find staff 's last amount payment",
            "step 2 should only find customers 's customer status code and step 3 only should find vehicles 's last customer status code",
            "step 2 should only find customers 's line 1 number building and step 3 only should find lessons 's last line 1 number building",
            "step 2 should only find lessons 's staff id and step 3 only should find staff 's last staff id",
            "step 2 should only find customers 's vehicle id and step 3 only should find customer payments 's last vehicle id",
            "step 2 should only find customers 's email address and step 3 only should find vehicles 's last email address",
            "step 2 should only find customers 's zip postcode and step 3 only should find vehicles 's last zip postcode"
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find number of different birth place in place of number of different birth date .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                14
            ]
        ],
        "positive_example": "birth date must be replaced by birth place .",
        "negative_examples": [
            "body builder id must be replaced by birth place .",
            "people id must be replaced by birth place .",
            "snatch must be replaced by birth place .",
            "clean jerk must be replaced by birth place .",
            "total must be replaced by birth place .",
            "name must be replaced by birth place .",
            "height must be replaced by birth place .",
            "weight must be replaced by birth place .",
            "birth date must be replaced by body builder id .",
            "birth date must be replaced by people id .",
            "birth date must be replaced by snatch .",
            "birth date must be replaced by clean jerk .",
            "birth date must be replaced by total .",
            "birth date must be replaced by name .",
            "birth date must be replaced by height .",
            "birth date must be replaced by weight ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use staff table in place of customers table in step 2 , consider the staff 's first name equals Janessa and staff 's last name equals Sawayn conditions in place of the customers 's last name equals Sawayn and customers 's first name equals Janessa conditions .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                31
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                32,
                50
            ]
        ],
        "positive_example": "Remove customers table and put staff table.",
        "negative_examples": [
            "remove customers table and put addresses table .",
            "remove customers table and put vehicles table .",
            "remove customers table and put customer payments table .",
            "remove customers table and put lessons table .",
            "remove addresses table and put staff table .",
            "remove vehicles table and put staff table .",
            "remove customer payments table and put staff table .",
            "remove lessons table and put staff table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the order items table besides the products table . find summation of product quantity in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "In order item table you need to look for the addition of product quantity for each Id of product.",
        "negative_examples": [
            "in order item table you need to look for the addition of customer id for each id of product .",
            "in order item table you need to look for the addition of customer first name for each id of product .",
            "in order item table you need to look for the addition of customer middle initial for each id of product .",
            "in order item table you need to look for the addition of customer last name for each id of product .",
            "in order item table you need to look for the addition of gender for each id of product .",
            "in order item table you need to look for the addition of email address for each id of product .",
            "in order item table you need to look for the addition of login name for each id of product .",
            "in order item table you need to look for the addition of login password for each id of product .",
            "in order item table you need to look for the addition of phone number for each id of product .",
            "in order item table you need to look for the addition of town city for each id of product .",
            "in order item table you need to look for the addition of state county province for each id of product .",
            "in order item table you need to look for the addition of country for each id of product .",
            "in order item table you need to look for the addition of order id for each id of product .",
            "in order item table you need to look for the addition of date order placed for each id of product .",
            "in order item table you need to look for the addition of order details for each id of product .",
            "in order item table you need to look for the addition of invoice number for each id of product .",
            "in order item table you need to look for the addition of invoice date for each id of product .",
            "in order item table you need to look for the addition of account id for each id of product .",
            "in order item table you need to look for the addition of date account opened for each id of product .",
            "in order item table you need to look for the addition of account name for each id of product .",
            "in order item table you need to look for the addition of other account details for each id of product .",
            "in order item table you need to look for the addition of production type code for each id of product .",
            "in order item table you need to look for the addition of product type description for each id of product .",
            "in order item table you need to look for the addition of vat rating for each id of product .",
            "in order item table you need to look for the addition of product id for each id of product .",
            "in order item table you need to look for the addition of parent product id for each id of product .",
            "in order item table you need to look for the addition of unit price for each id of product .",
            "in order item table you need to look for the addition of product name for each id of product .",
            "in order item table you need to look for the addition of product color for each id of product .",
            "in order item table you need to look for the addition of product size for each id of product .",
            "in order item table you need to look for the addition of transaction id for each id of product .",
            "in order item table you need to look for the addition of transaction type for each id of product .",
            "in order item table you need to look for the addition of transaction date for each id of product .",
            "in order item table you need to look for the addition of transaction amount for each id of product .",
            "in order item table you need to look for the addition of transaction comment for each id of product .",
            "in order item table you need to look for the addition of other transaction details for each id of product .",
            "in order item table you need to look for the addition of order item id for each id of product .",
            "in order item table you need to look for the addition of other order item details for each id of product .",
            "in order item table you need to look for the addition of product title for each id of product .",
            "in order item table you need to look for the addition of product price for each id of product .",
            "in order item table you need to look for the addition of derived product cost for each id of product .",
            "in order item table you need to look for the addition of derived vat payable for each id of product .",
            "in order item table you need to look for the addition of derived total cost for each id of product ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2002 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "In step 2 Delete faculty 's year equals 2002\".",
        "negative_examples": [
            "in step 2 delete enrollments 's id equals 2002 \" .",
            "in step 2 delete campuses 's id equals 2002 \" .",
            "in step 2 delete degrees 's county equals 2002 \" .",
            "in step 2 delete degrees 's discipline equals 2002 \" .",
            "in step 2 delete discipline enrollments 's undergraduate equals 2002 \" .",
            "in step 2 delete degrees 's undergraduate equals 2002 \" .",
            "in step 2 delete degrees 's campus fee equals 2002 \" .",
            "in step 2 delete campus fee 's year equals 2002 \" .",
            "in step 2 delete discipline enrollments 's totalenrollment ay equals 2002 \" .",
            "in step 2 delete faculty 's degrees equals 2002 \" .",
            "in step 2 delete faculty 's undergraduate equals 2002 \" .",
            "in step 2 delete campuses 's year equals 2002 \" .",
            "in step 2 delete csu fees 's campus fee equals 2002 \" .",
            "in step 2 delete enrollments 's totalenrollment ay equals 2002 \" .",
            "in step 2 delete campus 's year equals 2002 \" .",
            "in step 2 delete csu fees 's totalenrollment ay equals 2002 \" .",
            "in step 2 delete enrollments 's fte ay equals 2002 \" .",
            "in step 2 delete csu fees 's location equals 2002 \" .",
            "in step 2 delete degrees 's id equals 2002 \" .",
            "in step 2 delete campuses 's county equals 2002 \" .",
            "in step 2 delete enrollments 's campus fee equals 2002 \" .",
            "in step 2 delete faculty 's id equals 2002 \" .",
            "in step 2 delete degrees 's degrees equals 2002 \" .",
            "in step 2 delete campuses 's campus fee equals 2002 \" .",
            "in step 2 delete csu fees 's degrees equals 2002 \" .",
            "in step 2 delete graduate 's year equals 2002 \" .",
            "in step 2 delete csu fees 's campus equals 2002 \" .",
            "in step 2 delete discipline enrollments 's degrees equals 2002 \" .",
            "in step 2 delete csu fees 's fte ay equals 2002 \" .",
            "in step 2 delete faculty 's campus equals 2002 \" .",
            "in step 2 delete totalenrollment ay 's year equals 2002 \" .",
            "in step 2 delete degrees 's totalenrollment ay equals 2002 \" .",
            "in step 2 delete csu fees 's year equals 2002 \" .",
            "in step 2 delete csu fees 's undergraduate equals 2002 \" .",
            "in step 2 delete discipline enrollments 's year equals 2002 \" .",
            "in step 2 delete discipline enrollments 's id equals 2002 \" .",
            "in step 2 delete degrees 's fte ay equals 2002 \" .",
            "in step 2 delete degrees 's location equals 2002 \" .",
            "in step 2 delete discipline enrollments 's location equals 2002 \" .",
            "in step 2 delete campuses 's fte ay equals 2002 \" .",
            "in step 2 delete discipline enrollments 's campus fee equals 2002 \" .",
            "in step 2 delete enrollments 's graduate equals 2002 \" .",
            "in step 2 delete faculty 's graduate equals 2002 \" .",
            "in step 2 delete discipline enrollments 's discipline equals 2002 \" .",
            "in step 2 delete enrollments 's degrees equals 2002 \" .",
            "in step 2 delete degrees 's graduate equals 2002 \" .",
            "in step 2 delete faculty 's discipline equals 2002 \" .",
            "in step 2 delete enrollments 's undergraduate equals 2002 \" .",
            "in step 2 delete campuses 's location equals 2002 \" .",
            "in step 2 delete faculty 's totalenrollment ay equals 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "Instead of faculty 's year , use csu fees year . Remove \"and faculty 's campuses equals 1\" in step 2.",
        "negative_examples": [
            "instead of campuses 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of csu fees 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of degrees 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of discipline enrollments 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of enrollments 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of id 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of location 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of county 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of year 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of campus fee 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of discipline 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of undergraduate 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of graduate 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of totalenrollment ay 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of fte ay 's year , use csu fees year . remove \" and faculty 's campuses equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's id equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's location equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's county equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's year equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's campus fee equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's degrees equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's discipline equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's undergraduate equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's graduate equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's totalenrollment ay equals 1 \" in step 2 .",
            "instead of faculty 's year , use csu fees year . remove \" and faculty 's fte ay equals 1 \" in step 2 ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director not equals null conditions in place of the title equals null conditions . find for each value of director whose number of rows equals 1 . find director in place of name .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ],
            [
                34,
                46
            ],
            [
                47,
                48
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                33
            ],
            [
                49,
                53
            ]
        ],
        "positive_example": "Replace name with director , director not equals to null and created only one movie .",
        "negative_examples": [
            "replace name with movie id , director not equals to null and created only one movie .",
            "replace name with title , director not equals to null and created only one movie .",
            "replace name with year , director not equals to null and created only one movie .",
            "replace name with reviewer id , director not equals to null and created only one movie .",
            "replace name with rating stars , director not equals to null and created only one movie .",
            "replace name with rating date , director not equals to null and created only one movie .",
            "replace movie id with director , director not equals to null and created only one movie .",
            "replace title with director , director not equals to null and created only one movie .",
            "replace year with director , director not equals to null and created only one movie .",
            "replace reviewer id with director , director not equals to null and created only one movie .",
            "replace rating stars with director , director not equals to null and created only one movie .",
            "replace rating date with director , director not equals to null and created only one movie ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table and degrees table besides the faculty table . consider the faculty 's year equals 2001 conditions in place of the faculty 's year equals 1 conditions . find faculty in place of number of rows . find the result with the smallest degrees .",
        "primary_span": [
            [
                0,
                10
            ],
            [
                16,
                23
            ],
            [
                35,
                36
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                11,
                15
            ],
            [
                24,
                34
            ],
            [
                37,
                43
            ]
        ],
        "positive_example": "Make sure year equals 2001 , make sure least number of degrees were given by them",
        "negative_examples": [
            "make sure totalenrollment ay equals 2001 , make sure least number of enrollments were given by them",
            "make sure county equals 2001 , make sure least number of campuses were given by them",
            "make sure id equals 2001 , make sure least number of enrollments were given by them",
            "make sure year equals 2001 , make sure least number of county were given by them",
            "make sure year equals 2001 , make sure least number of location were given by them",
            "make sure discipline equals 2001 , make sure least number of csu fees were given by them",
            "make sure faculty equals 2001 , make sure least number of csu fees were given by them",
            "make sure location equals 2001 , make sure least number of enrollments were given by them",
            "make sure totalenrollment ay equals 2001 , make sure least number of campuses were given by them",
            "make sure undergraduate equals 2001 , make sure least number of campuses were given by them",
            "make sure undergraduate equals 2001 , make sure least number of discipline enrollments were given by them",
            "make sure fte ay equals 2001 , make sure least number of faculty were given by them",
            "make sure discipline equals 2001 , make sure least number of campuses were given by them",
            "make sure id equals 2001 , make sure least number of discipline enrollments were given by them",
            "make sure totalenrollment ay equals 2001 , make sure least number of csu fees were given by them",
            "make sure campus equals 2001 , make sure least number of campuses were given by them",
            "make sure campus fee equals 2001 , make sure least number of enrollments were given by them",
            "make sure undergraduate equals 2001 , make sure least number of csu fees were given by them",
            "make sure fte ay equals 2001 , make sure least number of enrollments were given by them",
            "make sure year equals 2001 , make sure least number of campus were given by them",
            "make sure graduate equals 2001 , make sure least number of campuses were given by them",
            "make sure location equals 2001 , make sure least number of campuses were given by them",
            "make sure county equals 2001 , make sure least number of enrollments were given by them",
            "make sure county equals 2001 , make sure least number of csu fees were given by them",
            "make sure fte ay equals 2001 , make sure least number of degrees were given by them",
            "make sure campus equals 2001 , make sure least number of discipline enrollments were given by them",
            "make sure discipline equals 2001 , make sure least number of degrees were given by them",
            "make sure county equals 2001 , make sure least number of faculty were given by them",
            "make sure faculty equals 2001 , make sure least number of faculty were given by them",
            "make sure location equals 2001 , make sure least number of faculty were given by them",
            "make sure year equals 2001 , make sure least number of id were given by them",
            "make sure undergraduate equals 2001 , make sure least number of enrollments were given by them",
            "make sure year equals 2001 , make sure least number of faculty were given by them",
            "make sure id equals 2001 , make sure least number of campuses were given by them",
            "make sure year equals 2001 , make sure least number of csu fees were given by them",
            "make sure fte ay equals 2001 , make sure least number of campuses were given by them",
            "make sure year equals 2001 , make sure least number of campus fee were given by them",
            "make sure graduate equals 2001 , make sure least number of enrollments were given by them",
            "make sure county equals 2001 , make sure least number of degrees were given by them",
            "make sure location equals 2001 , make sure least number of csu fees were given by them",
            "make sure campus fee equals 2001 , make sure least number of degrees were given by them",
            "make sure faculty equals 2001 , make sure least number of campuses were given by them",
            "make sure totalenrollment ay equals 2001 , make sure least number of discipline enrollments were given by them",
            "make sure campus equals 2001 , make sure least number of enrollments were given by them",
            "make sure id equals 2001 , make sure least number of degrees were given by them",
            "make sure campus equals 2001 , make sure least number of degrees were given by them",
            "make sure undergraduate equals 2001 , make sure least number of degrees were given by them",
            "make sure year equals 2001 , make sure least number of graduate were given by them",
            "make sure year equals 2001 , make sure least number of discipline enrollments were given by them",
            "make sure id equals 2001 , make sure least number of faculty were given by them"
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find invoice date in place of date order placed .",
        "primary_span": [
            [
                4,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                13
            ]
        ],
        "positive_example": "In step 2 Exchange date order placed with invoice date .",
        "negative_examples": [
            "in step 2 exchange date order placed with derived vat payable .",
            "in step 2 exchange date order placed with vat rating .",
            "in step 2 exchange date order placed with customer first name .",
            "in step 2 exchange account id with invoice date .",
            "in step 2 exchange order item id with invoice date .",
            "in step 2 exchange date order placed with state county province .",
            "in step 2 exchange date order placed with parent product id .",
            "in step 2 exchange customer last name with invoice date .",
            "in step 2 exchange date account opened with invoice date .",
            "in step 2 exchange date order placed with invoice number .",
            "in step 2 exchange parent product id with invoice date .",
            "in step 2 exchange login name with invoice date .",
            "in step 2 exchange date order placed with product quantity .",
            "in step 2 exchange order id with invoice date .",
            "in step 2 exchange date order placed with date account opened .",
            "in step 2 exchange product price with invoice date .",
            "in step 2 exchange date order placed with customer last name .",
            "in step 2 exchange phone number with invoice date .",
            "in step 2 exchange date order placed with customer middle initial .",
            "in step 2 exchange date order placed with product price .",
            "in step 2 exchange date order placed with transaction comment .",
            "in step 2 exchange date order placed with other order item details .",
            "in step 2 exchange date order placed with customer id .",
            "in step 2 exchange date order placed with product name .",
            "in step 2 exchange other transaction details with invoice date .",
            "in step 2 exchange date order placed with product color .",
            "in step 2 exchange date order placed with transaction amount .",
            "in step 2 exchange product color with invoice date .",
            "in step 2 exchange date order placed with product type description .",
            "in step 2 exchange date order placed with login name .",
            "in step 2 exchange production type code with invoice date .",
            "in step 2 exchange product id with invoice date .",
            "in step 2 exchange date order placed with account id .",
            "in step 2 exchange customer middle initial with invoice date .",
            "in step 2 exchange account name with invoice date .",
            "in step 2 exchange date order placed with transaction type .",
            "in step 2 exchange product size with invoice date .",
            "in step 2 exchange product type description with invoice date .",
            "in step 2 exchange derived vat payable with invoice date .",
            "in step 2 exchange date order placed with transaction date .",
            "in step 2 exchange other order item details with invoice date .",
            "in step 2 exchange customer first name with invoice date .",
            "in step 2 exchange date order placed with other transaction details .",
            "in step 2 exchange transaction comment with invoice date .",
            "in step 2 exchange email address with invoice date .",
            "in step 2 exchange derived product cost with invoice date .",
            "in step 2 exchange date order placed with login password .",
            "in step 2 exchange derived total cost with invoice date .",
            "in step 2 exchange date order placed with town city .",
            "in step 2 exchange product name with invoice date ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally use the information from the movie table besides the rating table . additionally make sure that director equals James Cameron .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                25
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 1 it should find average rating stars for movie's director equals James Cameron .",
        "negative_examples": [
            "in step 1 it should find average rating stars for reviewer 's director equals james cameron .",
            "in step 1 it should find average rating stars for rating 's director equals james cameron .",
            "in step 1 it should find average rating stars for movie 's movie id equals james cameron .",
            "in step 1 it should find average rating stars for movie 's title equals james cameron .",
            "in step 1 it should find average rating stars for movie 's year equals james cameron .",
            "in step 1 it should find average rating stars for movie 's reviewer id equals james cameron .",
            "in step 1 it should find average rating stars for movie 's name equals james cameron .",
            "in step 1 it should find average rating stars for movie 's rating stars equals james cameron .",
            "in step 1 it should find average rating stars for movie 's rating date equals james cameron .",
            "in step 1 it should find average rating stars for reviewer 's movie id equals james cameron .",
            "in step 1 it should find average rating stars for reviewer 's title equals james cameron .",
            "in step 1 it should find average rating stars for reviewer 's year equals james cameron .",
            "in step 1 it should find average rating stars for reviewer 's reviewer id equals james cameron .",
            "in step 1 it should find average rating stars for reviewer 's name equals james cameron .",
            "in step 1 it should find average rating stars for reviewer 's rating stars equals james cameron .",
            "in step 1 it should find average rating stars for reviewer 's rating date equals james cameron .",
            "in step 1 it should find average rating stars for rating 's movie id equals james cameron .",
            "in step 1 it should find average rating stars for rating 's title equals james cameron .",
            "in step 1 it should find average rating stars for rating 's year equals james cameron .",
            "in step 1 it should find average rating stars for rating 's reviewer id equals james cameron .",
            "in step 1 it should find average rating stars for rating 's name equals james cameron .",
            "in step 1 it should find average rating stars for rating 's rating stars equals james cameron .",
            "in step 1 it should find average rating stars for rating 's rating date equals james cameron ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation conditions . find hardware model name in place of company name . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                24
            ],
            [
                35,
                38
            ],
            [
                45,
                52
            ]
        ],
        "secondary_span": [
            [
                25,
                34
            ],
            [
                39,
                44
            ]
        ],
        "positive_example": "Replace company name with hardware model name , type equals Nokia Corporation with company name equals Nokia Corporation , and with or",
        "negative_examples": [
            "replace ram mib with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , ram mib equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with launch year , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with chip model , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace map with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , date equals nokia corporation with company name equals nokia corporation , and with or",
            "replace date with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace wifi with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , rom mib equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , screen mode equals nokia corporation with company name equals nokia corporation , and with or",
            "replace launch year with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with map , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace graphics mode with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace pixels with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , wifi equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , graphics mode equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , slots equals nokia corporation with company name equals nokia corporation , and with or",
            "replace accreditation level with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with slots , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with accreditation type , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , chip model equals nokia corporation with company name equals nokia corporation , and with or",
            "replace bluetooth with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace chip model with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with screen mode , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace slots with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , accreditation type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with ram mib , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , pixels equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with used kb , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace char cells with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace used kb with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , map equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with rom mib , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with graphics mode , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace accreditation type with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with date , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , bluetooth equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , char cells equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , launch year equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with pixels , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace rom mib with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , accreditation level equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , model name equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , hardware colours equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware colours , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with wifi , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with accreditation level , type equals nokia corporation with company name equals nokia corporation , and with or",
            "replace company name with hardware model name , used kb equals nokia corporation with company name equals nokia corporation , and with or",
            "replace hardware colours with hardware model name , type equals nokia corporation with company name equals nokia corporation , and with or"
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and undergraduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "In step 2 Swap undergraduate with \"Year\" and discipline enrollments year with campus of campuses",
        "negative_examples": [
            "in step 2 swap campus fee with \" year \" and discipline enrollments year with campus of campuses",
            "in step 2 swap undergraduate with \" id \" and campuses id with campus of campuses",
            "in step 2 swap fte ay with \" year \" and degrees year with campus of campuses",
            "in step 2 swap undergraduate with \" county \" and faculty county with campus of campuses",
            "in step 2 swap undergraduate with \" id \" and discipline enrollments year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and campuses year with county of campuses",
            "in step 2 swap undergraduate with \" graduate \" and csu fees graduate with campus of campuses",
            "in step 2 swap undergraduate with \" county \" and csu fees county with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and degrees year with id of campuses",
            "in step 2 swap undergraduate with \" discipline \" and enrollments discipline with campus of campuses",
            "in step 2 swap campus fee with \" year \" and faculty year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and enrollments year with fte ay of campuses",
            "in step 2 swap undergraduate with \" year \" and degrees year with totalenrollment ay of campuses",
            "in step 2 swap undergraduate with \" totalenrollment ay \" and campuses totalenrollment ay with campus of campuses",
            "in step 2 swap undergraduate with \" faculty \" and enrollments faculty with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and degrees year with degrees of campuses",
            "in step 2 swap graduate with \" year \" and enrollments year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and faculty year with graduate of campuses",
            "in step 2 swap id with \" year \" and discipline enrollments year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and faculty year with county of campuses",
            "in step 2 swap faculty with \" year \" and enrollments year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and degrees year with county of campuses",
            "in step 2 swap graduate with \" year \" and discipline enrollments year with campus of campuses",
            "in step 2 swap discipline with \" year \" and campuses year with campus of campuses",
            "in step 2 swap fte ay with \" year \" and campuses year with campus of campuses",
            "in step 2 swap degrees with \" year \" and faculty year with campus of campuses",
            "in step 2 swap county with \" year \" and discipline enrollments year with campus of campuses",
            "in step 2 swap county with \" year \" and degrees year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and degrees year with location of campuses",
            "in step 2 swap undergraduate with \" year \" and discipline enrollments year with id of campuses",
            "in step 2 swap undergraduate with \" year \" and faculty year with fte ay of campuses",
            "in step 2 swap totalenrollment ay with \" year \" and campuses year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and degrees year with discipline of campuses",
            "in step 2 swap undergraduate with \" year \" and csu fees year with location of campuses",
            "in step 2 swap undergraduate with \" year \" and county year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and campuses year with fte ay of campuses",
            "in step 2 swap undergraduate with \" year \" and csu fees year with degrees of campuses",
            "in step 2 swap undergraduate with \" faculty \" and degrees faculty with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and enrollments year with campus fee of campuses",
            "in step 2 swap campus fee with \" year \" and enrollments year with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and degrees year with campus fee of campuses",
            "in step 2 swap undergraduate with \" year \" and faculty year with id of campuses",
            "in step 2 swap undergraduate with \" county \" and discipline enrollments year with campus of campuses",
            "in step 2 swap undergraduate with \" graduate \" and enrollments graduate with campus of campuses",
            "in step 2 swap id with \" year \" and degrees year with campus of campuses",
            "in step 2 swap undergraduate with \" fte ay \" and faculty fte ay with campus of campuses",
            "in step 2 swap undergraduate with \" year \" and faculty year with discipline of campuses",
            "in step 2 swap undergraduate with \" year \" and campuses year with totalenrollment ay of campuses",
            "in step 2 swap undergraduate with \" graduate \" and faculty graduate with campus of campuses",
            "in step 2 swap undergraduate with \" totalenrollment ay \" and discipline enrollments year with campus of campuses"
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the customers table . additionally make sure that lesson status code equals Completed .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                22
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "You have to ensure than code of Lesson's lesson status is equivalent to completed.",
        "negative_examples": [
            "you have to ensure than code of addresses 's lesson status is equivalent to completed .",
            "you have to ensure than code of staff 's lesson status is equivalent to completed .",
            "you have to ensure than code of vehicles 's lesson status is equivalent to completed .",
            "you have to ensure than code of customers 's lesson status is equivalent to completed .",
            "you have to ensure than code of customer payments 's lesson status is equivalent to completed ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions . find campuses 's campus in place of rows .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ],
            [
                43,
                46
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ],
            [
                47,
                51
            ]
        ],
        "positive_example": "Find the campuses 's campuses whose county equals Los Angeles and campuses 's year greater than 1950.",
        "negative_examples": [
            "find the id 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the location 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the county 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the campus fee 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the degrees 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the discipline 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the undergraduate 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the graduate 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the totalenrollment ay 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the fte ay 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the faculty 's campuses whose county equals los angeles and campuses 's year greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's id greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's location greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's county greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's campus fee greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's degrees greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's discipline greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's undergraduate greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's graduate greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's totalenrollment ay greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's fte ay greater than 1950 .",
            "find the campuses 's campuses whose county equals los angeles and campuses 's faculty greater than 1950 ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "should find the summation of faculty in those rows",
        "negative_examples": [
            "should find the summation of campuses in those rows",
            "should find the summation of csu fees in those rows",
            "should find the summation of degrees in those rows",
            "should find the summation of discipline enrollments in those rows",
            "should find the summation of enrollments in those rows",
            "should find the summation of id in those rows",
            "should find the summation of campus in those rows",
            "should find the summation of location in those rows",
            "should find the summation of county in those rows",
            "should find the summation of year in those rows",
            "should find the summation of campus fee in those rows",
            "should find the summation of discipline in those rows",
            "should find the summation of undergraduate in those rows",
            "should find the summation of graduate in those rows",
            "should find the summation of totalenrollment ay in those rows",
            "should find the summation of fte ay in those rows"
        ],
        "neg_len": 16
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "use apartment bookings table in place of apartment buildings table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "I want the apartment bookings table not apartment buildings table.",
        "negative_examples": [
            "i want the apartment bookings table not apartments table .",
            "i want the apartment bookings table not apartment facilities table .",
            "i want the apartment bookings table not guests table .",
            "i want the apartment bookings table not apartment bookings table .",
            "i want the apartment bookings table not view unit status table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the screen mode table besides the phone table . additionally make sure that type equals Graphics or company name equals Nokia Corporation . make sure no repetition in the results .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                27
            ],
            [
                28,
                35
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ]
        ],
        "positive_example": "Ensure company name equals Nokia Corporation or screen mode 's type equals Graphics .",
        "negative_examples": [
            "ensure company name equals nokia corporation or phone 's chip model equals graphics .",
            "ensure hardware colours equals nokia corporation or chip model 's type equals graphics .",
            "ensure pixels equals nokia corporation or chip model 's type equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's graphics mode equals graphics .",
            "ensure graphics mode equals nokia corporation or phone 's type equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's accreditation type equals graphics .",
            "ensure slots equals nokia corporation or screen mode 's type equals graphics .",
            "ensure company name equals nokia corporation or chip model 's chip model equals graphics .",
            "ensure company name equals nokia corporation or used kb 's type equals graphics .",
            "ensure company name equals nokia corporation or chip model 's graphics mode equals graphics .",
            "ensure accreditation type equals nokia corporation or phone 's type equals graphics .",
            "ensure chip model equals nokia corporation or screen mode 's type equals graphics .",
            "ensure company name equals nokia corporation or accreditation type 's type equals graphics .",
            "ensure ram mib equals nokia corporation or chip model 's type equals graphics .",
            "ensure company name equals nokia corporation or phone 's hardware colours equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's ram mib equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's hardware colours equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's map equals graphics .",
            "ensure hardware colours equals nokia corporation or phone 's type equals graphics .",
            "ensure ram mib equals nokia corporation or screen mode 's type equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's launch year equals graphics .",
            "ensure slots equals nokia corporation or phone 's type equals graphics .",
            "ensure model name equals nokia corporation or phone 's type equals graphics .",
            "ensure pixels equals nokia corporation or screen mode 's type equals graphics .",
            "ensure wifi equals nokia corporation or phone 's type equals graphics .",
            "ensure company name equals nokia corporation or chip model 's ram mib equals graphics .",
            "ensure company name equals nokia corporation or phone 's accreditation level equals graphics .",
            "ensure chip model equals nokia corporation or chip model 's type equals graphics .",
            "ensure company name equals nokia corporation or phone 's launch year equals graphics .",
            "ensure company name equals nokia corporation or chip model 's used kb equals graphics .",
            "ensure hardware colours equals nokia corporation or screen mode 's type equals graphics .",
            "ensure accreditation type equals nokia corporation or screen mode 's type equals graphics .",
            "ensure model name equals nokia corporation or chip model 's type equals graphics .",
            "ensure company name equals nokia corporation or hardware model name 's type equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's rom mib equals graphics .",
            "ensure bluetooth equals nokia corporation or screen mode 's type equals graphics .",
            "ensure company name equals nokia corporation or chip model 's type equals graphics .",
            "ensure char cells equals nokia corporation or screen mode 's type equals graphics .",
            "ensure rom mib equals nokia corporation or phone 's type equals graphics .",
            "ensure company name equals nokia corporation or wifi 's type equals graphics .",
            "ensure company name equals nokia corporation or phone 's pixels equals graphics .",
            "ensure date equals nokia corporation or chip model 's type equals graphics .",
            "ensure company name equals nokia corporation or phone 's date equals graphics .",
            "ensure company name equals nokia corporation or screen mode 's pixels equals graphics .",
            "ensure rom mib equals nokia corporation or chip model 's type equals graphics .",
            "ensure company name equals nokia corporation or chip model 's accreditation level equals graphics .",
            "ensure chip model equals nokia corporation or phone 's type equals graphics .",
            "ensure ram mib equals nokia corporation or phone 's type equals graphics .",
            "ensure company name equals nokia corporation or chip model 's hardware model name equals graphics .",
            "ensure company name equals nokia corporation or phone 's ram mib equals graphics ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Normandie Court and apartment number equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "In step 2 Swap bathroom count with bedroom count , apartment number with building short name . Remove building short name contains Normandie Court\".",
        "negative_examples": [
            "in step 2 swap bathroom count with bedroom count , apartment number with building id . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with building full name . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with building description . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with building address . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with building manager . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with building phone . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with apartment id . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with apartment type code . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with apartment number . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with bedroom count . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with room count . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with facility code . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with guest id . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with gender code . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with guest first name . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with guest last name . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with date of birth . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with apartment booking id . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with booking status code . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with booking start date . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with booking end date . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with status date . remove building short name contains normandie court \" .",
            "in step 2 swap bathroom count with bedroom count , apartment number with available yes or no . remove building short name contains normandie court \" .",
            "in step 2 swap building id with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap building full name with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap building description with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap building address with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap building manager with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap building phone with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap apartment id with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap apartment type code with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap apartment number with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap bedroom count with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap room count with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap facility code with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap guest id with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap gender code with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap guest first name with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap guest last name with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap date of birth with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap apartment booking id with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap booking status code with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap booking start date with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap booking end date with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap status date with bedroom count , apartment number with building short name . remove building short name contains normandie court \" .",
            "in step 2 swap available yes or no with bedroom count , apartment number with building short name . remove building short name contains normandie court \" ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , additionally use the information from the order items table besides the products table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "Replace product name of products table with order item id of order items .",
        "negative_examples": [
            "replace product name of products table with order item id of customers .",
            "replace product name of products table with order item id of orders .",
            "replace product name of products table with order item id of invoices .",
            "replace product name of products table with order item id of accounts .",
            "replace product name of products table with order item id of product categories .",
            "replace product name of products table with order item id of products .",
            "replace product name of products table with order item id of financial transactions .",
            "replace product name of products table with order item id of invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the accreditation type equals Graphics and type equals Nokia Corporation conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "In step 2 exchange accreditation type with type and type with company name .",
        "negative_examples": [
            "in step 2 exchange accreditation type with type and type with model name .",
            "in step 2 exchange accreditation type with type and type with launch year .",
            "in step 2 exchange accreditation type with type and type with ram mib .",
            "in step 2 exchange accreditation type with type and type with rom mib .",
            "in step 2 exchange accreditation type with type and type with slots .",
            "in step 2 exchange accreditation type with type and type with wifi .",
            "in step 2 exchange accreditation type with type and type with bluetooth .",
            "in step 2 exchange accreditation type with type and type with graphics mode .",
            "in step 2 exchange accreditation type with type and type with char cells .",
            "in step 2 exchange accreditation type with type and type with pixels .",
            "in step 2 exchange accreditation type with type and type with hardware colours .",
            "in step 2 exchange accreditation type with type and type with used kb .",
            "in step 2 exchange accreditation type with type and type with map .",
            "in step 2 exchange accreditation type with type and type with type .",
            "in step 2 exchange accreditation type with type and type with hardware model name .",
            "in step 2 exchange accreditation type with type and type with accreditation level .",
            "in step 2 exchange accreditation type with type and type with date .",
            "in step 2 exchange accreditation type with type and type with chip model .",
            "in step 2 exchange accreditation type with type and type with screen mode .",
            "in step 2 exchange model name with type and type with company name .",
            "in step 2 exchange launch year with type and type with company name .",
            "in step 2 exchange ram mib with type and type with company name .",
            "in step 2 exchange rom mib with type and type with company name .",
            "in step 2 exchange slots with type and type with company name .",
            "in step 2 exchange wifi with type and type with company name .",
            "in step 2 exchange bluetooth with type and type with company name .",
            "in step 2 exchange graphics mode with type and type with company name .",
            "in step 2 exchange char cells with type and type with company name .",
            "in step 2 exchange pixels with type and type with company name .",
            "in step 2 exchange hardware colours with type and type with company name .",
            "in step 2 exchange used kb with type and type with company name .",
            "in step 2 exchange map with type and type with company name .",
            "in step 2 exchange type with type and type with company name .",
            "in step 2 exchange hardware model name with type and type with company name .",
            "in step 2 exchange accreditation level with type and type with company name .",
            "in step 2 exchange date with type and type with company name .",
            "in step 2 exchange chip model with type and type with company name .",
            "in step 2 exchange screen mode with type and type with company name ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , do not find for each value of city . in step 2 , order the results by city in place of number of rows .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                17,
                21
            ]
        ],
        "secondary_span": [
            [
                22,
                28
            ]
        ],
        "positive_example": "In step 1, confirm that the value of city is clear.",
        "negative_examples": [
            "in step 1 , confirm that the value of address type code is clear .",
            "in step 1 , confirm that the value of address type description is clear .",
            "in step 1 , confirm that the value of detention type code is clear .",
            "in step 1 , confirm that the value of detention type description is clear .",
            "in step 1 , confirm that the value of incident type code is clear .",
            "in step 1 , confirm that the value of incident type description is clear .",
            "in step 1 , confirm that the value of address id is clear .",
            "in step 1 , confirm that the value of line 1 is clear .",
            "in step 1 , confirm that the value of line 2 is clear .",
            "in step 1 , confirm that the value of line 3 is clear .",
            "in step 1 , confirm that the value of zip postcode is clear .",
            "in step 1 , confirm that the value of state province county is clear .",
            "in step 1 , confirm that the value of country is clear .",
            "in step 1 , confirm that the value of other address details is clear .",
            "in step 1 , confirm that the value of student id is clear .",
            "in step 1 , confirm that the value of first name is clear .",
            "in step 1 , confirm that the value of middle name is clear .",
            "in step 1 , confirm that the value of last name is clear .",
            "in step 1 , confirm that the value of cell mobile number is clear .",
            "in step 1 , confirm that the value of email address is clear .",
            "in step 1 , confirm that the value of date first rental is clear .",
            "in step 1 , confirm that the value of date left university is clear .",
            "in step 1 , confirm that the value of other student details is clear .",
            "in step 1 , confirm that the value of teacher id is clear .",
            "in step 1 , confirm that the value of gender is clear .",
            "in step 1 , confirm that the value of other details is clear .",
            "in step 1 , confirm that the value of notes id is clear .",
            "in step 1 , confirm that the value of date of notes is clear .",
            "in step 1 , confirm that the value of text of notes is clear .",
            "in step 1 , confirm that the value of incident id is clear .",
            "in step 1 , confirm that the value of date incident start is clear .",
            "in step 1 , confirm that the value of date incident end is clear .",
            "in step 1 , confirm that the value of incident summary is clear .",
            "in step 1 , confirm that the value of recommendations is clear .",
            "in step 1 , confirm that the value of detention id is clear .",
            "in step 1 , confirm that the value of datetime detention start is clear .",
            "in step 1 , confirm that the value of datetime detention end is clear .",
            "in step 1 , confirm that the value of detention summary is clear .",
            "in step 1 , confirm that the value of date address from is clear .",
            "in step 1 , confirm that the value of date address to is clear .",
            "in step 1 , confirm that the value of monthly rental is clear ."
        ],
        "neg_len": 41
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building manager equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "In step 2 find summation of bedroom count in step 1 's results whose building short name equals Columbus Square .",
        "negative_examples": [
            "in step 2 find summation of bedroom count in step 1 's results whose building id equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose building full name equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose building description equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose building address equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose building manager equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose building phone equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose apartment id equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose apartment type code equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose apartment number equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose bathroom count equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose bedroom count equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose room count equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose facility code equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose guest id equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose gender code equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose guest first name equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose guest last name equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose date of birth equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose apartment booking id equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose booking status code equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose booking start date equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose booking end date equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose status date equals columbus square .",
            "in step 2 find summation of bedroom count in step 1 's results whose available yes or no equals columbus square ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use customer payments table in place of lessons table .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "There should be customer payments table instead of lessons table .",
        "negative_examples": [
            "there should be addresses table instead of lessons table .",
            "there should be staff table instead of lessons table .",
            "there should be vehicles table instead of lessons table .",
            "there should be customers table instead of lessons table .",
            "there should be customer payments table instead of addresses table .",
            "there should be customer payments table instead of staff table .",
            "there should be customer payments table instead of vehicles table .",
            "there should be customer payments table instead of customers table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the city population greater than 100000 conditions in place of the headquartered city equals Attock City conditions .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                18
            ]
        ],
        "positive_example": "city population should be larger then 100000",
        "negative_examples": [
            "product id should be larger then 100000",
            "product should be larger then 100000",
            "dimensions should be larger then 100000",
            "dpi should be larger then 100000",
            "pages per minute color should be larger then 100000",
            "max page size should be larger then 100000",
            "interface should be larger then 100000",
            "store id should be larger then 100000",
            "store name should be larger then 100000",
            "type should be larger then 100000",
            "area size should be larger then 100000",
            "number of product category should be larger then 100000",
            "ranking should be larger then 100000",
            "district id should be larger then 100000",
            "district name should be larger then 100000",
            "headquartered city should be larger then 100000",
            "city area should be larger then 100000"
        ],
        "neg_len": 17
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 2002 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Instead of faculty 's year equals 2002\" , Use and ensure campuses equals CSU in step 2.",
        "negative_examples": [
            "instead of campuses 's graduate equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of faculty 's fte ay equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's location equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's fte ay equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of discipline enrollments 's id equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of faculty 's undergraduate equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of degrees 's campus fee equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of degrees 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's campus fee equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of faculty 's graduate equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of location 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's undergraduate equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of discipline enrollments 's graduate equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of degrees 's location equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of graduate 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of degrees 's degrees equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's degrees equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of discipline 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of faculty 's degrees equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of totalenrollment ay 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of faculty 's discipline equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of id 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's degrees equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's county equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campuses 's campus fee equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's discipline equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's totalenrollment ay equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's fte ay equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of degrees 's campus equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of degrees 's discipline equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's undergraduate equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campus fee 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's campus equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campuses 's totalenrollment ay equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campuses 's fte ay equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's totalenrollment ay equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's graduate equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campuses 's campus equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of discipline enrollments 's campus fee equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of csu fees 's campus fee equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of county 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campuses 's location equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of faculty 's id equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of discipline enrollments 's degrees equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campuses 's county equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of undergraduate 's year equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of enrollments 's id equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of campuses 's discipline equals 2002 \" , use and ensure campuses equals csu in step 2 .",
            "instead of fte ay 's year equals 2002 \" , use and ensure campuses equals csu in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find phone number in place of cell mobile phone number .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                10
            ]
        ],
        "positive_example": "You need to use phone number.",
        "negative_examples": [
            "you need to use address id .",
            "you need to use line 1 number building .",
            "you need to use city .",
            "you need to use zip postcode .",
            "you need to use state province county .",
            "you need to use country .",
            "you need to use staff id .",
            "you need to use staff address id .",
            "you need to use nickname .",
            "you need to use first name .",
            "you need to use middle name .",
            "you need to use last name .",
            "you need to use date of birth .",
            "you need to use date joined staff .",
            "you need to use date left staff .",
            "you need to use vehicle id .",
            "you need to use vehicle details .",
            "you need to use customer id .",
            "you need to use customer address id .",
            "you need to use customer status code .",
            "you need to use date became customer .",
            "you need to use amount outstanding .",
            "you need to use email address .",
            "you need to use cell mobile phone number .",
            "you need to use datetime payment .",
            "you need to use payment method code .",
            "you need to use amount payment .",
            "you need to use lesson id .",
            "you need to use lesson status code .",
            "you need to use lesson date .",
            "you need to use lesson time .",
            "you need to use price ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 or max page size equals A4 conditions in place of the dpi less than A4 or dpi greater than 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "List the product that has max page size of A4 or pages per minute is less than 5.",
        "negative_examples": [
            "list the product that has product id of a4 or pages per minute is less than 5 .",
            "list the product that has product of a4 or pages per minute is less than 5 .",
            "list the product that has dimensions of a4 or pages per minute is less than 5 .",
            "list the product that has dpi of a4 or pages per minute is less than 5 .",
            "list the product that has pages per minute color of a4 or pages per minute is less than 5 .",
            "list the product that has interface of a4 or pages per minute is less than 5 .",
            "list the product that has store id of a4 or pages per minute is less than 5 .",
            "list the product that has store name of a4 or pages per minute is less than 5 .",
            "list the product that has type of a4 or pages per minute is less than 5 .",
            "list the product that has area size of a4 or pages per minute is less than 5 .",
            "list the product that has number of product category of a4 or pages per minute is less than 5 .",
            "list the product that has ranking of a4 or pages per minute is less than 5 .",
            "list the product that has district id of a4 or pages per minute is less than 5 .",
            "list the product that has district name of a4 or pages per minute is less than 5 .",
            "list the product that has headquartered city of a4 or pages per minute is less than 5 .",
            "list the product that has city population of a4 or pages per minute is less than 5 .",
            "list the product that has city area of a4 or pages per minute is less than 5 ."
        ],
        "neg_len": 17
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table and discipline enrollments table in place of faculty table . consider the campuses 's campus equals San Jose State University and discipline enrollments 's year equals 2004 conditions in place of the faculty 's year equals 2004 conditions . find summation of undergraduate in place of number of rows .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                30
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                31,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "Find the summation of undergraduate from San Jose State.",
        "negative_examples": [
            "find the summation of id from san jose state .",
            "find the summation of campus from san jose state .",
            "find the summation of location from san jose state .",
            "find the summation of county from san jose state .",
            "find the summation of year from san jose state .",
            "find the summation of campus fee from san jose state .",
            "find the summation of degrees from san jose state .",
            "find the summation of discipline from san jose state .",
            "find the summation of graduate from san jose state .",
            "find the summation of totalenrollment ay from san jose state .",
            "find the summation of fte ay from san jose state .",
            "find the summation of faculty from san jose state ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation and chip model equals Graphics conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "Determine type instead of chip model and company name.",
        "negative_examples": [
            "determine ram mib instead of screen mode and company name .",
            "determine char cells instead of chip model and company name .",
            "determine model name instead of chip model and company name .",
            "determine type instead of screen mode and accreditation level .",
            "determine launch year instead of phone and company name .",
            "determine type instead of screen mode and rom mib .",
            "determine rom mib instead of screen mode and company name .",
            "determine type instead of phone and hardware colours .",
            "determine type instead of phone and date .",
            "determine type instead of hardware model name and company name .",
            "determine launch year instead of screen mode and company name .",
            "determine type instead of launch year and company name .",
            "determine hardware model name instead of chip model and company name .",
            "determine screen mode instead of chip model and company name .",
            "determine type instead of graphics mode and company name .",
            "determine type instead of ram mib and company name .",
            "determine type instead of phone and rom mib .",
            "determine type instead of screen mode and date .",
            "determine type instead of phone and map .",
            "determine type instead of screen mode and ram mib .",
            "determine type instead of chip model and map .",
            "determine wifi instead of phone and company name .",
            "determine screen mode instead of phone and company name .",
            "determine hardware colours instead of chip model and company name .",
            "determine type instead of chip model and slots .",
            "determine type instead of screen mode and used kb .",
            "determine screen mode instead of screen mode and company name .",
            "determine used kb instead of phone and company name .",
            "determine date instead of screen mode and company name .",
            "determine type instead of screen mode and wifi .",
            "determine type instead of phone and pixels .",
            "determine ram mib instead of phone and company name .",
            "determine type instead of phone and graphics mode .",
            "determine type instead of screen mode and map .",
            "determine rom mib instead of phone and company name .",
            "determine date instead of chip model and company name .",
            "determine slots instead of chip model and company name .",
            "determine type instead of chip model and model name .",
            "determine pixels instead of phone and company name .",
            "determine model name instead of screen mode and company name .",
            "determine char cells instead of phone and company name .",
            "determine graphics mode instead of chip model and company name .",
            "determine launch year instead of chip model and company name .",
            "determine type instead of rom mib and company name .",
            "determine type instead of chip model and bluetooth .",
            "determine ram mib instead of chip model and company name .",
            "determine type instead of phone and bluetooth .",
            "determine accreditation type instead of chip model and company name .",
            "determine type instead of phone and company name .",
            "determine accreditation level instead of chip model and company name ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table .",
        "primary_span": [
            [
                4,
                13
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Use campuses ' campuses in place of faculty 's campuses in step 3.",
        "negative_examples": [
            "use campuses ' campuses in place of campuses 's campuses in step 3 .",
            "use campuses ' campuses in place of csu fees 's campuses in step 3 .",
            "use campuses ' campuses in place of degrees 's campuses in step 3 .",
            "use campuses ' campuses in place of discipline enrollments 's campuses in step 3 .",
            "use campuses ' campuses in place of enrollments 's campuses in step 3 .",
            "use campuses ' campuses in place of id 's campuses in step 3 .",
            "use campuses ' campuses in place of campus 's campuses in step 3 .",
            "use campuses ' campuses in place of location 's campuses in step 3 .",
            "use campuses ' campuses in place of county 's campuses in step 3 .",
            "use campuses ' campuses in place of year 's campuses in step 3 .",
            "use campuses ' campuses in place of campus fee 's campuses in step 3 .",
            "use campuses ' campuses in place of discipline 's campuses in step 3 .",
            "use campuses ' campuses in place of undergraduate 's campuses in step 3 .",
            "use campuses ' campuses in place of graduate 's campuses in step 3 .",
            "use campuses ' campuses in place of totalenrollment ay 's campuses in step 3 .",
            "use campuses ' campuses in place of fte ay 's campuses in step 3 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , do not use the addresses table and staff table . in step 2 , remove the staff 's last name equals Sawayn conditions . in step 3 , do not use the customers table and addresses table . in step 4 , remove the staff 's last name equals Sawayn conditions . find staff 's last name in place of customers 's last name .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ],
            [
                46,
                55
            ],
            [
                56,
                60
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                32,
                41
            ],
            [
                61,
                68
            ]
        ],
        "positive_example": "I want last name of consumer's and last name of staff's in step 2 and 3 respectively.",
        "negative_examples": [
            "i want zip postcode of consumer 's and last zip postcode customers 's in step 2 and 3 respectively .",
            "i want price of consumer 's and last price addresses 's in step 2 and 3 respectively .",
            "i want city of consumer 's and last city customers 's in step 2 and 3 respectively .",
            "i want vehicle details of consumer 's and last vehicle details customer payments 's in step 2 and 3 respectively .",
            "i want price of consumer 's and last price customer payments 's in step 2 and 3 respectively .",
            "i want country of consumer 's and last country addresses 's in step 2 and 3 respectively .",
            "i want country of consumer 's and last country vehicles 's in step 2 and 3 respectively .",
            "i want date became customer of consumer 's and last name of staff 's in step 2 and 3 respectively .",
            "i want lesson id of consumer 's and last lesson id customer payments 's in step 2 and 3 respectively .",
            "i want date left staff of consumer 's and last name of staff 's in step 2 and 3 respectively .",
            "i want lesson date of consumer 's and last lesson date customer payments 's in step 2 and 3 respectively .",
            "i want address id of consumer 's and last name of staff 's in step 2 and 3 respectively .",
            "i want lesson date of consumer 's and last name of staff 's in step 2 and 3 respectively .",
            "i want datetime payment of consumer 's and last datetime payment vehicles 's in step 2 and 3 respectively .",
            "i want lesson time of consumer 's and last lesson time vehicles 's in step 2 and 3 respectively .",
            "i want date joined staff of consumer 's and last date joined staff lessons 's in step 2 and 3 respectively .",
            "i want staff id of consumer 's and last staff id vehicles 's in step 2 and 3 respectively .",
            "i want email address of consumer 's and last email address vehicles 's in step 2 and 3 respectively .",
            "i want address id of consumer 's and last address id customer payments 's in step 2 and 3 respectively .",
            "i want staff address id of consumer 's and last staff address id customers 's in step 2 and 3 respectively .",
            "i want nickname of consumer 's and last nickname addresses 's in step 2 and 3 respectively .",
            "i want datetime payment of consumer 's and last datetime payment lessons 's in step 2 and 3 respectively .",
            "i want customer id of consumer 's and last name of staff 's in step 2 and 3 respectively .",
            "i want state province county of consumer 's and last state province county addresses 's in step 2 and 3 respectively .",
            "i want payment method code of consumer 's and last payment method code vehicles 's in step 2 and 3 respectively .",
            "i want email address of consumer 's and last email address lessons 's in step 2 and 3 respectively .",
            "i want vehicle id of consumer 's and last vehicle id addresses 's in step 2 and 3 respectively .",
            "i want middle name of consumer 's and last middle name customers 's in step 2 and 3 respectively .",
            "i want line 1 number building of consumer 's and last line 1 number building addresses 's in step 2 and 3 respectively .",
            "i want zip postcode of consumer 's and last zip postcode vehicles 's in step 2 and 3 respectively .",
            "i want middle name of consumer 's and last middle name lessons 's in step 2 and 3 respectively .",
            "i want amount outstanding of consumer 's and last amount outstanding vehicles 's in step 2 and 3 respectively .",
            "i want price of consumer 's and last price lessons 's in step 2 and 3 respectively .",
            "i want phone number of consumer 's and last phone number customers 's in step 2 and 3 respectively .",
            "i want customer address id of consumer 's and last customer address id addresses 's in step 2 and 3 respectively .",
            "i want last name of consumer 's and last name of addresses 's in step 2 and 3 respectively .",
            "i want cell mobile phone number of consumer 's and last cell mobile phone number customer payments 's in step 2 and 3 respectively .",
            "i want phone number of consumer 's and last name of staff 's in step 2 and 3 respectively .",
            "i want lesson time of consumer 's and last name of staff 's in step 2 and 3 respectively .",
            "i want amount outstanding of consumer 's and last amount outstanding lessons 's in step 2 and 3 respectively .",
            "i want customer id of consumer 's and last customer id customer payments 's in step 2 and 3 respectively .",
            "i want last name of consumer 's and last name of customer payments 's in step 2 and 3 respectively .",
            "i want staff address id of consumer 's and last staff address id lessons 's in step 2 and 3 respectively .",
            "i want lesson id of consumer 's and last lesson id addresses 's in step 2 and 3 respectively .",
            "i want city of consumer 's and last city vehicles 's in step 2 and 3 respectively .",
            "i want amount payment of consumer 's and last amount payment addresses 's in step 2 and 3 respectively .",
            "i want customer address id of consumer 's and last customer address id customer payments 's in step 2 and 3 respectively .",
            "i want amount payment of consumer 's and last amount payment vehicles 's in step 2 and 3 respectively .",
            "i want email address of consumer 's and last email address customer payments 's in step 2 and 3 respectively .",
            "i want datetime payment of consumer 's and last datetime payment customers 's in step 2 and 3 respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of faculty table . in step 2 , find degrees 's campus in place of faculty . order the results by summation of degrees in place of average faculty 's year .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                17,
                20
            ],
            [
                26,
                32
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                21,
                25
            ],
            [
                33,
                40
            ]
        ],
        "positive_example": "You need to use degrees table and utilize campus degrees.",
        "negative_examples": [
            "you need to use location table and utilize campus degrees .",
            "you need to use campuses table and utilize undergraduate degrees .",
            "you need to use csu fees table and utilize campus fee degrees .",
            "you need to use degrees table and utilize year degrees .",
            "you need to use campuses table and utilize year degrees .",
            "you need to use discipline table and utilize campus degrees .",
            "you need to use discipline enrollments table and utilize year degrees .",
            "you need to use degrees table and utilize discipline degrees .",
            "you need to use degrees table and utilize county degrees .",
            "you need to use degrees table and utilize id degrees .",
            "you need to use totalenrollment ay table and utilize campus degrees .",
            "you need to use csu fees table and utilize location degrees .",
            "you need to use faculty table and utilize campus fee degrees .",
            "you need to use faculty table and utilize graduate degrees .",
            "you need to use csu fees table and utilize undergraduate degrees .",
            "you need to use campuses table and utilize faculty degrees .",
            "you need to use faculty table and utilize county degrees .",
            "you need to use degrees table and utilize graduate degrees .",
            "you need to use undergraduate table and utilize campus degrees .",
            "you need to use csu fees table and utilize discipline degrees .",
            "you need to use id table and utilize campus degrees .",
            "you need to use faculty table and utilize discipline degrees .",
            "you need to use csu fees table and utilize totalenrollment ay degrees .",
            "you need to use faculty table and utilize year degrees .",
            "you need to use faculty table and utilize campus degrees .",
            "you need to use discipline enrollments table and utilize location degrees .",
            "you need to use faculty table and utilize undergraduate degrees .",
            "you need to use faculty table and utilize faculty degrees .",
            "you need to use enrollments table and utilize year degrees .",
            "you need to use campuses table and utilize campus fee degrees .",
            "you need to use enrollments table and utilize totalenrollment ay degrees .",
            "you need to use discipline enrollments table and utilize fte ay degrees .",
            "you need to use discipline enrollments table and utilize totalenrollment ay degrees .",
            "you need to use year table and utilize campus degrees .",
            "you need to use csu fees table and utilize year degrees .",
            "you need to use enrollments table and utilize campus degrees .",
            "you need to use discipline enrollments table and utilize id degrees .",
            "you need to use campuses table and utilize totalenrollment ay degrees .",
            "you need to use enrollments table and utilize undergraduate degrees .",
            "you need to use csu fees table and utilize county degrees .",
            "you need to use campuses table and utilize fte ay degrees .",
            "you need to use campuses table and utilize id degrees .",
            "you need to use csu fees table and utilize graduate degrees .",
            "you need to use discipline enrollments table and utilize campus degrees .",
            "you need to use faculty table and utilize totalenrollment ay degrees .",
            "you need to use enrollments table and utilize campus fee degrees .",
            "you need to use enrollments table and utilize faculty degrees .",
            "you need to use csu fees table and utilize faculty degrees .",
            "you need to use degrees table and utilize fte ay degrees .",
            "you need to use enrollments table and utilize graduate degrees ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Make sure that campus should be CSU and delete \"faculty equals 357.1\".",
        "negative_examples": [
            "make sure that campus should be csu and delete \" campuses equals 357.1 \" .",
            "make sure that campus should be csu and delete \" csu fees equals 357.1 \" .",
            "make sure that campus should be csu and delete \" degrees equals 357.1 \" .",
            "make sure that campus should be csu and delete \" discipline enrollments equals 357.1 \" .",
            "make sure that campus should be csu and delete \" enrollments equals 357.1 \" .",
            "make sure that campus should be csu and delete \" id equals 357.1 \" .",
            "make sure that campus should be csu and delete \" campus equals 357.1 \" .",
            "make sure that campus should be csu and delete \" location equals 357.1 \" .",
            "make sure that campus should be csu and delete \" county equals 357.1 \" .",
            "make sure that campus should be csu and delete \" year equals 357.1 \" .",
            "make sure that campus should be csu and delete \" campus fee equals 357.1 \" .",
            "make sure that campus should be csu and delete \" discipline equals 357.1 \" .",
            "make sure that campus should be csu and delete \" undergraduate equals 357.1 \" .",
            "make sure that campus should be csu and delete \" graduate equals 357.1 \" .",
            "make sure that campus should be csu and delete \" totalenrollment ay equals 357.1 \" .",
            "make sure that campus should be csu and delete \" fte ay equals 357.1 \" ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the degrees table . additionally make sure that degrees 's year equals 2001 and campuses 's campus equals San Francisco State University . find degrees in place of maximum degrees .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                31
            ],
            [
                32,
                33
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                34,
                39
            ]
        ],
        "positive_example": "I want the total number of degrees allocated for 2001 at San Francisco State University.",
        "negative_examples": [
            "i want the total number of campuses allocated for 2001 at san francisco state university .",
            "i want the total number of csu fees allocated for 2001 at san francisco state university .",
            "i want the total number of discipline enrollments allocated for 2001 at san francisco state university .",
            "i want the total number of enrollments allocated for 2001 at san francisco state university .",
            "i want the total number of faculty allocated for 2001 at san francisco state university .",
            "i want the total number of id allocated for 2001 at san francisco state university .",
            "i want the total number of campus allocated for 2001 at san francisco state university .",
            "i want the total number of location allocated for 2001 at san francisco state university .",
            "i want the total number of county allocated for 2001 at san francisco state university .",
            "i want the total number of year allocated for 2001 at san francisco state university .",
            "i want the total number of campus fee allocated for 2001 at san francisco state university .",
            "i want the total number of discipline allocated for 2001 at san francisco state university .",
            "i want the total number of undergraduate allocated for 2001 at san francisco state university .",
            "i want the total number of graduate allocated for 2001 at san francisco state university .",
            "i want the total number of totalenrollment ay allocated for 2001 at san francisco state university .",
            "i want the total number of fte ay allocated for 2001 at san francisco state university ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the county equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                26
            ]
        ],
        "positive_example": "I want campuses in place of county.",
        "negative_examples": [
            "i want id in place of county .",
            "i want location in place of county .",
            "i want year in place of county .",
            "i want campus fee in place of county .",
            "i want degrees in place of county .",
            "i want discipline in place of county .",
            "i want undergraduate in place of county .",
            "i want graduate in place of county .",
            "i want totalenrollment ay in place of county .",
            "i want fte ay in place of county .",
            "i want faculty in place of county .",
            "i want campuses in place of id .",
            "i want campuses in place of location .",
            "i want campuses in place of year .",
            "i want campuses in place of campus fee .",
            "i want campuses in place of degrees .",
            "i want campuses in place of discipline .",
            "i want campuses in place of undergraduate .",
            "i want campuses in place of graduate .",
            "i want campuses in place of totalenrollment ay .",
            "i want campuses in place of fte ay .",
            "i want campuses in place of faculty ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "Remove faculty 's year equals 1996\" , need to find campuses equals CSU along with csu fees 's year .",
        "negative_examples": [
            "remove campuses 's discipline equals 1996 \" , need to find campuses equals csu along with csu fees 's discipline .",
            "remove faculty 's discipline equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove csu fees 's campus fee equals 1996 \" , need to find campuses equals csu along with csu fees 's campus fee .",
            "remove discipline enrollments 's campus fee equals 1996 \" , need to find campuses equals csu along with csu fees 's campus fee .",
            "remove degrees 's location equals 1996 \" , need to find campuses equals csu along with csu fees 's location .",
            "remove discipline enrollments 's undergraduate equals 1996 \" , need to find campuses equals csu along with csu fees 's undergraduate .",
            "remove enrollments 's undergraduate equals 1996 \" , need to find campuses equals csu along with csu fees 's undergraduate .",
            "remove discipline enrollments 's location equals 1996 \" , need to find campuses equals csu along with csu fees 's location .",
            "remove csu fees 's graduate equals 1996 \" , need to find campuses equals csu along with csu fees 's graduate .",
            "remove location 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove campuses 's location equals 1996 \" , need to find campuses equals csu along with csu fees 's location .",
            "remove csu fees 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove campuses 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove faculty 's fte ay equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove faculty 's undergraduate equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove faculty 's totalenrollment ay equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove discipline enrollments 's fte ay equals 1996 \" , need to find campuses equals csu along with csu fees 's fte ay .",
            "remove csu fees 's county equals 1996 \" , need to find campuses equals csu along with csu fees 's county .",
            "remove campuses 's fte ay equals 1996 \" , need to find campuses equals csu along with csu fees 's fte ay .",
            "remove degrees 's graduate equals 1996 \" , need to find campuses equals csu along with csu fees 's graduate .",
            "remove campuses 's degrees equals 1996 \" , need to find campuses equals csu along with csu fees 's degrees .",
            "remove faculty 's campus fee equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove degrees 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove enrollments 's county equals 1996 \" , need to find campuses equals csu along with csu fees 's county .",
            "remove enrollments 's location equals 1996 \" , need to find campuses equals csu along with csu fees 's location .",
            "remove graduate 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove csu fees 's totalenrollment ay equals 1996 \" , need to find campuses equals csu along with csu fees 's totalenrollment ay .",
            "remove faculty 's county equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove faculty 's id equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove faculty 's location equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove totalenrollment ay 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove campuses 's totalenrollment ay equals 1996 \" , need to find campuses equals csu along with csu fees 's totalenrollment ay .",
            "remove faculty 's graduate equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove enrollments 's id equals 1996 \" , need to find campuses equals csu along with csu fees 's id .",
            "remove id 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove degrees 's campus equals 1996 \" , need to find campuses equals csu along with csu fees 's campus .",
            "remove discipline enrollments 's county equals 1996 \" , need to find campuses equals csu along with csu fees 's county .",
            "remove discipline enrollments 's id equals 1996 \" , need to find campuses equals csu along with csu fees 's id .",
            "remove fte ay 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove discipline 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year .",
            "remove discipline enrollments 's campus equals 1996 \" , need to find campuses equals csu along with csu fees 's campus .",
            "remove campuses 's id equals 1996 \" , need to find campuses equals csu along with csu fees 's id .",
            "remove degrees 's discipline equals 1996 \" , need to find campuses equals csu along with csu fees 's discipline .",
            "remove enrollments 's totalenrollment ay equals 1996 \" , need to find campuses equals csu along with csu fees 's totalenrollment ay .",
            "remove campuses 's county equals 1996 \" , need to find campuses equals csu along with csu fees 's county .",
            "remove degrees 's fte ay equals 1996 \" , need to find campuses equals csu along with csu fees 's fte ay .",
            "remove discipline enrollments 's totalenrollment ay equals 1996 \" , need to find campuses equals csu along with csu fees 's totalenrollment ay .",
            "remove degrees 's degrees equals 1996 \" , need to find campuses equals csu along with csu fees 's degrees .",
            "remove csu fees 's location equals 1996 \" , need to find campuses equals csu along with csu fees 's location .",
            "remove county 's year equals 1996 \" , need to find campuses equals csu along with csu fees 's year ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table in place of faculty table . consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year greater than or equals 1939 and faculty 's year less than or equals 1935 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                28
            ],
            [
                52,
                55
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                29,
                51
            ],
            [
                56,
                62
            ]
        ],
        "positive_example": "Campuses table should be replaced by faculty table.",
        "negative_examples": [
            "campuses table should be replaced by campuses table .",
            "campuses table should be replaced by csu fees table .",
            "campuses table should be replaced by degrees table .",
            "campuses table should be replaced by discipline enrollments table .",
            "campuses table should be replaced by enrollments table .",
            "campuses table should be replaced by id table .",
            "campuses table should be replaced by location table .",
            "campuses table should be replaced by county table .",
            "campuses table should be replaced by year table .",
            "campuses table should be replaced by campus fee table .",
            "campuses table should be replaced by discipline table .",
            "campuses table should be replaced by undergraduate table .",
            "campuses table should be replaced by graduate table .",
            "campuses table should be replaced by totalenrollment ay table .",
            "campuses table should be replaced by fte ay table .",
            "id table should be replaced by faculty table .",
            "location table should be replaced by faculty table .",
            "county table should be replaced by faculty table .",
            "year table should be replaced by faculty table .",
            "campus fee table should be replaced by faculty table .",
            "degrees table should be replaced by faculty table .",
            "discipline table should be replaced by faculty table .",
            "undergraduate table should be replaced by faculty table .",
            "graduate table should be replaced by faculty table .",
            "totalenrollment ay table should be replaced by faculty table .",
            "fte ay table should be replaced by faculty table ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , use assessment notes table in place of reference detention type table and detention table in step 2 , find text of notes in place of detention type description .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                22,
                25
            ]
        ],
        "secondary_span": [
            [
                8,
                17
            ],
            [
                26,
                32
            ]
        ],
        "positive_example": "There should be text of notes instead of detention type description in step 2.",
        "negative_examples": [
            "there should be text of notes instead of country in step 2 .",
            "there should be text of notes instead of address type code in step 2 .",
            "there should be line 2 instead of detention type description in step 2 .",
            "there should be middle name instead of detention type description in step 2 .",
            "there should be gender instead of detention type description in step 2 .",
            "there should be student id instead of detention type description in step 2 .",
            "there should be text of notes instead of date incident start in step 2 .",
            "there should be text of notes instead of last name in step 2 .",
            "there should be zip postcode instead of detention type description in step 2 .",
            "there should be text of notes instead of first name in step 2 .",
            "there should be state province county instead of detention type description in step 2 .",
            "there should be text of notes instead of incident type description in step 2 .",
            "there should be detention id instead of detention type description in step 2 .",
            "there should be text of notes instead of email address in step 2 .",
            "there should be text of notes instead of datetime detention start in step 2 .",
            "there should be text of notes instead of detention id in step 2 .",
            "there should be incident id instead of detention type description in step 2 .",
            "there should be text of notes instead of date address from in step 2 .",
            "there should be address type description instead of detention type description in step 2 .",
            "there should be text of notes instead of address type description in step 2 .",
            "there should be text of notes instead of recommendations in step 2 .",
            "there should be datetime detention start instead of detention type description in step 2 .",
            "there should be incident summary instead of detention type description in step 2 .",
            "there should be text of notes instead of monthly rental in step 2 .",
            "there should be text of notes instead of date address to in step 2 .",
            "there should be text of notes instead of line 2 in step 2 .",
            "there should be datetime detention end instead of detention type description in step 2 .",
            "there should be address id instead of detention type description in step 2 .",
            "there should be date left university instead of detention type description in step 2 .",
            "there should be text of notes instead of line 3 in step 2 .",
            "there should be text of notes instead of datetime detention end in step 2 .",
            "there should be text of notes instead of incident summary in step 2 .",
            "there should be text of notes instead of other student details in step 2 .",
            "there should be date address to instead of detention type description in step 2 .",
            "there should be date incident end instead of detention type description in step 2 .",
            "there should be text of notes instead of incident id in step 2 .",
            "there should be other details instead of detention type description in step 2 .",
            "there should be text of notes instead of cell mobile number in step 2 .",
            "there should be text of notes instead of date of notes in step 2 .",
            "there should be text of notes instead of detention summary in step 2 .",
            "there should be email address instead of detention type description in step 2 .",
            "there should be text of notes instead of other details in step 2 .",
            "there should be text of notes instead of line 1 in step 2 .",
            "there should be text of notes instead of student id in step 2 .",
            "there should be text of notes instead of other address details in step 2 .",
            "there should be text of notes instead of date incident end in step 2 .",
            "there should be text of notes instead of city in step 2 .",
            "there should be incident type code instead of detention type description in step 2 .",
            "there should be notes id instead of detention type description in step 2 .",
            "there should be text of notes instead of address id in step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the csu fees 's year equals 1996 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                44
            ]
        ],
        "positive_example": "Use csu fees 's year in place of faculty 's year , ensure that campuses equals CSU , remove\"csu fees 's year equals 1996\".",
        "negative_examples": [
            "use csu fees 's degrees in place of enrollments 's degrees , ensure that campuses equals csu , remove \" csu fees 's degrees equals 1996 \" .",
            "use csu fees 's discipline in place of degrees 's discipline , ensure that campuses equals csu , remove \" csu fees 's discipline equals 1996 \" .",
            "use csu fees 's undergraduate in place of csu fees 's undergraduate , ensure that campuses equals csu , remove \" csu fees 's undergraduate equals 1996 \" .",
            "use csu fees 's totalenrollment ay in place of discipline enrollments 's totalenrollment ay , ensure that campuses equals csu , remove \" csu fees 's totalenrollment ay equals 1996 \" .",
            "use csu fees 's location in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's year in place of campus fee 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's location in place of degrees 's location , ensure that campuses equals csu , remove \" csu fees 's location equals 1996 \" .",
            "use csu fees 's totalenrollment ay in place of campuses 's totalenrollment ay , ensure that campuses equals csu , remove \" csu fees 's totalenrollment ay equals 1996 \" .",
            "use csu fees 's graduate in place of campuses 's graduate , ensure that campuses equals csu , remove \" csu fees 's graduate equals 1996 \" .",
            "use csu fees 's campus in place of discipline enrollments 's campus , ensure that campuses equals csu , remove \" csu fees 's campus equals 1996 \" .",
            "use csu fees 's location in place of csu fees 's location , ensure that campuses equals csu , remove \" csu fees 's location equals 1996 \" .",
            "use csu fees 's campus in place of enrollments 's campus , ensure that campuses equals csu , remove \" csu fees 's campus equals 1996 \" .",
            "use csu fees 's campus in place of csu fees 's campus , ensure that campuses equals csu , remove \" csu fees 's campus equals 1996 \" .",
            "use csu fees 's discipline in place of enrollments 's discipline , ensure that campuses equals csu , remove \" csu fees 's discipline equals 1996 \" .",
            "use csu fees 's id in place of campuses 's id , ensure that campuses equals csu , remove \" csu fees 's id equals 1996 \" .",
            "use csu fees 's fte ay in place of csu fees 's fte ay , ensure that campuses equals csu , remove \" csu fees 's fte ay equals 1996 \" .",
            "use csu fees 's id in place of csu fees 's id , ensure that campuses equals csu , remove \" csu fees 's id equals 1996 \" .",
            "use csu fees 's campus in place of campuses 's campus , ensure that campuses equals csu , remove \" csu fees 's campus equals 1996 \" .",
            "use csu fees 's campus fee in place of discipline enrollments 's campus fee , ensure that campuses equals csu , remove \" csu fees 's campus fee equals 1996 \" .",
            "use csu fees 's year in place of discipline 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's undergraduate in place of enrollments 's undergraduate , ensure that campuses equals csu , remove \" csu fees 's undergraduate equals 1996 \" .",
            "use csu fees 's totalenrollment ay in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's totalenrollment ay in place of csu fees 's totalenrollment ay , ensure that campuses equals csu , remove \" csu fees 's totalenrollment ay equals 1996 \" .",
            "use csu fees 's graduate in place of enrollments 's graduate , ensure that campuses equals csu , remove \" csu fees 's graduate equals 1996 \" .",
            "use csu fees 's id in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's degrees in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's fte ay in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's id in place of degrees 's id , ensure that campuses equals csu , remove \" csu fees 's id equals 1996 \" .",
            "use csu fees 's county in place of discipline enrollments 's county , ensure that campuses equals csu , remove \" csu fees 's county equals 1996 \" .",
            "use csu fees 's graduate in place of csu fees 's graduate , ensure that campuses equals csu , remove \" csu fees 's graduate equals 1996 \" .",
            "use csu fees 's undergraduate in place of degrees 's undergraduate , ensure that campuses equals csu , remove \" csu fees 's undergraduate equals 1996 \" .",
            "use csu fees 's discipline in place of csu fees 's discipline , ensure that campuses equals csu , remove \" csu fees 's discipline equals 1996 \" .",
            "use csu fees 's campus in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's graduate in place of discipline enrollments 's graduate , ensure that campuses equals csu , remove \" csu fees 's graduate equals 1996 \" .",
            "use csu fees 's totalenrollment ay in place of degrees 's totalenrollment ay , ensure that campuses equals csu , remove \" csu fees 's totalenrollment ay equals 1996 \" .",
            "use csu fees 's campus fee in place of campuses 's campus fee , ensure that campuses equals csu , remove \" csu fees 's campus fee equals 1996 \" .",
            "use csu fees 's degrees in place of degrees 's degrees , ensure that campuses equals csu , remove \" csu fees 's degrees equals 1996 \" .",
            "use csu fees 's graduate in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's year in place of fte ay 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's fte ay in place of discipline enrollments 's fte ay , ensure that campuses equals csu , remove \" csu fees 's fte ay equals 1996 \" .",
            "use csu fees 's year in place of id 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's undergraduate in place of discipline enrollments 's undergraduate , ensure that campuses equals csu , remove \" csu fees 's undergraduate equals 1996 \" .",
            "use csu fees 's campus fee in place of faculty 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's campus fee in place of csu fees 's campus fee , ensure that campuses equals csu , remove \" csu fees 's campus fee equals 1996 \" .",
            "use csu fees 's discipline in place of discipline enrollments 's discipline , ensure that campuses equals csu , remove \" csu fees 's discipline equals 1996 \" .",
            "use csu fees 's county in place of campuses 's county , ensure that campuses equals csu , remove \" csu fees 's county equals 1996 \" .",
            "use csu fees 's location in place of campuses 's location , ensure that campuses equals csu , remove \" csu fees 's location equals 1996 \" .",
            "use csu fees 's county in place of enrollments 's county , ensure that campuses equals csu , remove \" csu fees 's county equals 1996 \" .",
            "use csu fees 's year in place of county 's year , ensure that campuses equals csu , remove \" csu fees 's year equals 1996 \" .",
            "use csu fees 's fte ay in place of enrollments 's fte ay , ensure that campuses equals csu , remove \" csu fees 's fte ay equals 1996 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "additionally use the information from the accounts table besides the customers table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Make sure customers have accounts .",
        "negative_examples": [
            "make sure customers have customers .",
            "make sure customers have orders .",
            "make sure customers have invoices .",
            "make sure customers have product categories .",
            "make sure customers have products .",
            "make sure customers have financial transactions .",
            "make sure customers have order items .",
            "make sure customers have invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year greater than 2002 and faculty 's year greater than 1950 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ]
        ],
        "positive_example": "Delete the phrase \"and faculty's year greater than 2002\".",
        "negative_examples": [
            "delete the phrase \" and degrees 's fte ay greater than 2002 \" .",
            "delete the phrase \" and csu fees 's degrees greater than 2002 \" .",
            "delete the phrase \" and enrollments 's discipline greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's location greater than 2002 \" .",
            "delete the phrase \" and county 's year greater than 2002 \" .",
            "delete the phrase \" and enrollments 's campus greater than 2002 \" .",
            "delete the phrase \" and campuses 's campus greater than 2002 \" .",
            "delete the phrase \" and enrollments 's graduate greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's id greater than 2002 \" .",
            "delete the phrase \" and campuses 's id greater than 2002 \" .",
            "delete the phrase \" and degrees 's undergraduate greater than 2002 \" .",
            "delete the phrase \" and degrees 's discipline greater than 2002 \" .",
            "delete the phrase \" and degrees 's id greater than 2002 \" .",
            "delete the phrase \" and graduate 's year greater than 2002 \" .",
            "delete the phrase \" and degrees 's year greater than 2002 \" .",
            "delete the phrase \" and discipline 's year greater than 2002 \" .",
            "delete the phrase \" and degrees 's graduate greater than 2002 \" .",
            "delete the phrase \" and campuses 's year greater than 2002 \" .",
            "delete the phrase \" and csu fees 's county greater than 2002 \" .",
            "delete the phrase \" and degrees 's campus greater than 2002 \" .",
            "delete the phrase \" and enrollments 's campus fee greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's fte ay greater than 2002 \" .",
            "delete the phrase \" and campuses 's graduate greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's campus fee greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's graduate greater than 2002 \" .",
            "delete the phrase \" and campuses 's discipline greater than 2002 \" .",
            "delete the phrase \" and degrees 's county greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's campus greater than 2002 \" .",
            "delete the phrase \" and degrees 's location greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's discipline greater than 2002 \" .",
            "delete the phrase \" and enrollments 's degrees greater than 2002 \" .",
            "delete the phrase \" and csu fees 's id greater than 2002 \" .",
            "delete the phrase \" and fte ay 's year greater than 2002 \" .",
            "delete the phrase \" and csu fees 's location greater than 2002 \" .",
            "delete the phrase \" and csu fees 's graduate greater than 2002 \" .",
            "delete the phrase \" and degrees 's totalenrollment ay greater than 2002 \" .",
            "delete the phrase \" and faculty 's fte ay greater than 2002 \" .",
            "delete the phrase \" and campuses 's location greater than 2002 \" .",
            "delete the phrase \" and campuses 's campus fee greater than 2002 \" .",
            "delete the phrase \" and faculty 's undergraduate greater than 2002 \" .",
            "delete the phrase \" and degrees 's degrees greater than 2002 \" .",
            "delete the phrase \" and faculty 's discipline greater than 2002 \" .",
            "delete the phrase \" and enrollments 's year greater than 2002 \" .",
            "delete the phrase \" and faculty 's campus greater than 2002 \" .",
            "delete the phrase \" and discipline enrollments 's undergraduate greater than 2002 \" .",
            "delete the phrase \" and faculty 's degrees greater than 2002 \" .",
            "delete the phrase \" and enrollments 's fte ay greater than 2002 \" .",
            "delete the phrase \" and csu fees 's undergraduate greater than 2002 \" .",
            "delete the phrase \" and csu fees 's discipline greater than 2002 \" .",
            "delete the phrase \" and campuses 's county greater than 2002 \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the store table and store district table besides the district table . consider the type equals City Mall conditions in place of the headquartered city equals City Mall conditions .",
        "primary_span": [
            [
                4,
                15
            ],
            [
                21,
                27
            ]
        ],
        "secondary_span": [
            [
                16,
                20
            ],
            [
                28,
                38
            ]
        ],
        "positive_example": "You have to use relative type of store instead of headquartered city in step 1.",
        "negative_examples": [
            "you have to use relative type of store product instead of ranking in step 1 .",
            "you have to use relative type of store district instead of store id in step 1 .",
            "you have to use relative type of store product instead of store name in step 1 .",
            "you have to use relative city population of store instead of headquartered city in step 1 .",
            "you have to use relative type of dimensions instead of headquartered city in step 1 .",
            "you have to use relative dimensions of store product instead of headquartered city in step 1 .",
            "you have to use relative type of district id instead of headquartered city in step 1 .",
            "you have to use relative product id of store district instead of headquartered city in step 1 .",
            "you have to use relative type of dpi instead of headquartered city in step 1 .",
            "you have to use relative store name of product instead of headquartered city in step 1 .",
            "you have to use relative type of product instead of area size in step 1 .",
            "you have to use relative product id of store product instead of headquartered city in step 1 .",
            "you have to use relative type of store product instead of city area in step 1 .",
            "you have to use relative district name of district instead of headquartered city in step 1 .",
            "you have to use relative interface of store instead of headquartered city in step 1 .",
            "you have to use relative number of product category of store instead of headquartered city in step 1 .",
            "you have to use relative city population of store product instead of headquartered city in step 1 .",
            "you have to use relative type of product instead of district id in step 1 .",
            "you have to use relative dimensions of store instead of headquartered city in step 1 .",
            "you have to use relative dimensions of district instead of headquartered city in step 1 .",
            "you have to use relative type of store instead of dimensions in step 1 .",
            "you have to use relative dpi of district instead of headquartered city in step 1 .",
            "you have to use relative type of product instead of ranking in step 1 .",
            "you have to use relative area size of product instead of headquartered city in step 1 .",
            "you have to use relative type of district instead of number of product category in step 1 .",
            "you have to use relative type of store district instead of pages per minute color in step 1 .",
            "you have to use relative city population of product instead of headquartered city in step 1 .",
            "you have to use relative store id of store product instead of headquartered city in step 1 .",
            "you have to use relative interface of store product instead of headquartered city in step 1 .",
            "you have to use relative type of store district instead of product id in step 1 .",
            "you have to use relative type of store instead of store name in step 1 .",
            "you have to use relative max page size of store instead of headquartered city in step 1 .",
            "you have to use relative type of store product instead of product in step 1 .",
            "you have to use relative ranking of product instead of headquartered city in step 1 .",
            "you have to use relative type of store district instead of district id in step 1 .",
            "you have to use relative type of product instead of store id in step 1 .",
            "you have to use relative max page size of district instead of headquartered city in step 1 .",
            "you have to use relative type of city population instead of headquartered city in step 1 .",
            "you have to use relative dimensions of product instead of headquartered city in step 1 .",
            "you have to use relative type of store instead of area size in step 1 .",
            "you have to use relative type of district instead of district name in step 1 .",
            "you have to use relative type of district instead of dpi in step 1 .",
            "you have to use relative type of store district instead of city population in step 1 .",
            "you have to use relative city area of district instead of headquartered city in step 1 .",
            "you have to use relative store id of store district instead of headquartered city in step 1 .",
            "you have to use relative type of product instead of district name in step 1 .",
            "you have to use relative type of product instead of number of product category in step 1 .",
            "you have to use relative type of product instead of interface in step 1 .",
            "you have to use relative type of store product instead of interface in step 1 .",
            "you have to use relative type of store district instead of store name in step 1 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the year less than 1980 or director equals James Cameron conditions in place of the year greater than 1980 or name equals James Cameron conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                29
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                30,
                44
            ]
        ],
        "positive_example": "Replace greater than with less than and name of reviewer with director of movie table .",
        "negative_examples": [
            "replace greater than with less than and name of movie with director of movie table .",
            "replace greater than with less than and name of rating with director of movie table .",
            "replace greater than with less than and name of reviewer with movie id of movie table .",
            "replace greater than with less than and name of reviewer with title of movie table .",
            "replace greater than with less than and name of reviewer with year of movie table .",
            "replace greater than with less than and name of reviewer with reviewer id of movie table .",
            "replace greater than with less than and name of reviewer with rating stars of movie table .",
            "replace greater than with less than and name of reviewer with rating date of movie table .",
            "replace greater than with less than and movie id of reviewer with director of movie table .",
            "replace greater than with less than and title of reviewer with director of movie table .",
            "replace greater than with less than and year of reviewer with director of movie table .",
            "replace greater than with less than and reviewer id of reviewer with director of movie table .",
            "replace greater than with less than and rating stars of reviewer with director of movie table .",
            "replace greater than with less than and rating date of reviewer with director of movie table .",
            "replace greater than with less than and name of movie with movie id of movie table .",
            "replace greater than with less than and name of movie with title of movie table .",
            "replace greater than with less than and name of movie with year of movie table .",
            "replace greater than with less than and name of movie with reviewer id of movie table .",
            "replace greater than with less than and name of movie with rating stars of movie table .",
            "replace greater than with less than and name of movie with rating date of movie table .",
            "replace greater than with less than and movie id of movie with director of movie table .",
            "replace greater than with less than and title of movie with director of movie table .",
            "replace greater than with less than and year of movie with director of movie table .",
            "replace greater than with less than and reviewer id of movie with director of movie table .",
            "replace greater than with less than and rating stars of movie with director of movie table .",
            "replace greater than with less than and rating date of movie with director of movie table .",
            "replace greater than with less than and name of rating with movie id of movie table .",
            "replace greater than with less than and name of rating with title of movie table .",
            "replace greater than with less than and name of rating with year of movie table .",
            "replace greater than with less than and name of rating with reviewer id of movie table .",
            "replace greater than with less than and name of rating with rating stars of movie table .",
            "replace greater than with less than and name of rating with rating date of movie table .",
            "replace greater than with less than and movie id of rating with director of movie table .",
            "replace greater than with less than and title of rating with director of movie table .",
            "replace greater than with less than and year of rating with director of movie table .",
            "replace greater than with less than and reviewer id of rating with director of movie table .",
            "replace greater than with less than and rating stars of rating with director of movie table .",
            "replace greater than with less than and rating date of rating with director of movie table ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "In step 2 Erase faculty equals 357. 1\".",
        "negative_examples": [
            "in step 2 erase campuses equals 357 . 1 \" .",
            "in step 2 erase csu fees equals 357 . 1 \" .",
            "in step 2 erase degrees equals 357 . 1 \" .",
            "in step 2 erase discipline enrollments equals 357 . 1 \" .",
            "in step 2 erase enrollments equals 357 . 1 \" .",
            "in step 2 erase id equals 357 . 1 \" .",
            "in step 2 erase campus equals 357 . 1 \" .",
            "in step 2 erase location equals 357 . 1 \" .",
            "in step 2 erase county equals 357 . 1 \" .",
            "in step 2 erase year equals 357 . 1 \" .",
            "in step 2 erase campus fee equals 357 . 1 \" .",
            "in step 2 erase discipline equals 357 . 1 \" .",
            "in step 2 erase undergraduate equals 357 . 1 \" .",
            "in step 2 erase graduate equals 357 . 1 \" .",
            "in step 2 erase totalenrollment ay equals 357 . 1 \" .",
            "in step 2 erase fte ay equals 357 . 1 \" ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "in step 2 , consider the district name equals Khanewal District conditions in place of the headquartered city equals Khanewal District conditions .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                22
            ]
        ],
        "positive_example": "Headquartered city have to be replaced by district name.",
        "negative_examples": [
            "headquartered city have to be replaced by product id .",
            "headquartered city have to be replaced by product .",
            "headquartered city have to be replaced by dimensions .",
            "headquartered city have to be replaced by dpi .",
            "headquartered city have to be replaced by pages per minute color .",
            "headquartered city have to be replaced by max page size .",
            "headquartered city have to be replaced by interface .",
            "headquartered city have to be replaced by store id .",
            "headquartered city have to be replaced by store name .",
            "headquartered city have to be replaced by type .",
            "headquartered city have to be replaced by area size .",
            "headquartered city have to be replaced by number of product category .",
            "headquartered city have to be replaced by ranking .",
            "headquartered city have to be replaced by district id .",
            "headquartered city have to be replaced by city population .",
            "headquartered city have to be replaced by city area .",
            "product id have to be replaced by district name .",
            "product have to be replaced by district name .",
            "dimensions have to be replaced by district name .",
            "dpi have to be replaced by district name .",
            "pages per minute color have to be replaced by district name .",
            "max page size have to be replaced by district name .",
            "interface have to be replaced by district name .",
            "store id have to be replaced by district name .",
            "store name have to be replaced by district name .",
            "type have to be replaced by district name .",
            "area size have to be replaced by district name .",
            "number of product category have to be replaced by district name .",
            "ranking have to be replaced by district name .",
            "district id have to be replaced by district name .",
            "city population have to be replaced by district name .",
            "city area have to be replaced by district name ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2002 and faculty 's year equals 2005 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                43
            ]
        ],
        "positive_example": "Omit the phrase \"faculty year equals 2002 from step 2.",
        "negative_examples": [
            "omit the phrase \" csu fees discipline equals 2002 from step 2 .",
            "omit the phrase \" degrees graduate equals 2002 from step 2 .",
            "omit the phrase \" csu fees location equals 2002 from step 2 .",
            "omit the phrase \" faculty fte ay equals 2002 from step 2 .",
            "omit the phrase \" degrees campus fee equals 2002 from step 2 .",
            "omit the phrase \" csu fees degrees equals 2002 from step 2 .",
            "omit the phrase \" faculty graduate equals 2002 from step 2 .",
            "omit the phrase \" discipline enrollments id equals 2002 from step 2 .",
            "omit the phrase \" campuses graduate equals 2002 from step 2 .",
            "omit the phrase \" csu fees year equals 2002 from step 2 .",
            "omit the phrase \" faculty campus fee equals 2002 from step 2 .",
            "omit the phrase \" campuses degrees equals 2002 from step 2 .",
            "omit the phrase \" faculty id equals 2002 from step 2 .",
            "omit the phrase \" campuses campus fee equals 2002 from step 2 .",
            "omit the phrase \" faculty totalenrollment ay equals 2002 from step 2 .",
            "omit the phrase \" csu fees id equals 2002 from step 2 .",
            "omit the phrase \" csu fees campus fee equals 2002 from step 2 .",
            "omit the phrase \" degrees discipline equals 2002 from step 2 .",
            "omit the phrase \" degrees undergraduate equals 2002 from step 2 .",
            "omit the phrase \" campuses id equals 2002 from step 2 .",
            "omit the phrase \" enrollments county equals 2002 from step 2 .",
            "omit the phrase \" degrees id equals 2002 from step 2 .",
            "omit the phrase \" csu fees undergraduate equals 2002 from step 2 .",
            "omit the phrase \" enrollments campus equals 2002 from step 2 .",
            "omit the phrase \" enrollments id equals 2002 from step 2 .",
            "omit the phrase \" enrollments discipline equals 2002 from step 2 .",
            "omit the phrase \" county year equals 2002 from step 2 .",
            "omit the phrase \" csu fees campus equals 2002 from step 2 .",
            "omit the phrase \" campuses undergraduate equals 2002 from step 2 .",
            "omit the phrase \" csu fees county equals 2002 from step 2 .",
            "omit the phrase \" faculty degrees equals 2002 from step 2 .",
            "omit the phrase \" discipline year equals 2002 from step 2 .",
            "omit the phrase \" degrees location equals 2002 from step 2 .",
            "omit the phrase \" discipline enrollments graduate equals 2002 from step 2 .",
            "omit the phrase \" degrees year equals 2002 from step 2 .",
            "omit the phrase \" id year equals 2002 from step 2 .",
            "omit the phrase \" degrees county equals 2002 from step 2 .",
            "omit the phrase \" discipline enrollments totalenrollment ay equals 2002 from step 2 .",
            "omit the phrase \" location year equals 2002 from step 2 .",
            "omit the phrase \" discipline enrollments year equals 2002 from step 2 .",
            "omit the phrase \" degrees fte ay equals 2002 from step 2 .",
            "omit the phrase \" campuses totalenrollment ay equals 2002 from step 2 .",
            "omit the phrase \" enrollments campus fee equals 2002 from step 2 .",
            "omit the phrase \" discipline enrollments county equals 2002 from step 2 .",
            "omit the phrase \" discipline enrollments location equals 2002 from step 2 .",
            "omit the phrase \" enrollments fte ay equals 2002 from step 2 .",
            "omit the phrase \" degrees degrees equals 2002 from step 2 .",
            "omit the phrase \" csu fees totalenrollment ay equals 2002 from step 2 .",
            "omit the phrase \" campuses discipline equals 2002 from step 2 .",
            "omit the phrase \" campus fee year equals 2002 from step 2 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use accounts table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "I want the accounts table in place of customer table.",
        "negative_examples": [
            "i want the accounts table in place of orders table .",
            "i want the accounts table in place of invoices table .",
            "i want the accounts table in place of product categories table .",
            "i want the accounts table in place of products table .",
            "i want the accounts table in place of financial transactions table .",
            "i want the accounts table in place of order items table .",
            "i want the accounts table in place of invoice line items table .",
            "i want the orders table in place of customer table .",
            "i want the invoices table in place of customer table .",
            "i want the product categories table in place of customer table .",
            "i want the products table in place of customer table .",
            "i want the financial transactions table in place of customer table .",
            "i want the order items table in place of customer table .",
            "i want the invoice line items table in place of customer table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 1 , do not use the chip model table . in step 2 , find hardware model name in place of bluetooth .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                19
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                20,
                24
            ]
        ],
        "positive_example": "I want hardware model name.",
        "negative_examples": [
            "i want model name .",
            "i want launch year .",
            "i want ram mib .",
            "i want rom mib .",
            "i want slots .",
            "i want wifi .",
            "i want bluetooth .",
            "i want graphics mode .",
            "i want char cells .",
            "i want pixels .",
            "i want hardware colours .",
            "i want used kb .",
            "i want map .",
            "i want type .",
            "i want company name .",
            "i want accreditation type .",
            "i want accreditation level .",
            "i want date .",
            "i want chip model .",
            "i want screen mode ."
        ],
        "neg_len": 20
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "You should delete Id and use campus only.",
        "negative_examples": [
            "you should delete id and use id only .",
            "you should delete id and use location only .",
            "you should delete id and use county only .",
            "you should delete id and use year only .",
            "you should delete id and use campus fee only .",
            "you should delete id and use degrees only .",
            "you should delete id and use discipline only .",
            "you should delete id and use undergraduate only .",
            "you should delete id and use graduate only .",
            "you should delete id and use totalenrollment ay only .",
            "you should delete id and use fte ay only .",
            "you should delete id and use faculty only ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , use degrees table in place of csu fees table , campuses table , and discipline enrollments table in step 2 , find for each value of degrees 's year in place of csu fees 's year . in step 3 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average undergraduate .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                25,
                32
            ],
            [
                45,
                48
            ],
            [
                57,
                63
            ]
        ],
        "secondary_span": [
            [
                7,
                20
            ],
            [
                33,
                40
            ],
            [
                49,
                56
            ],
            [
                64,
                69
            ]
        ],
        "positive_example": "You need to find the year of degrees having greatest value from degrees table. ",
        "negative_examples": [
            "you need to find the year of campuses having greatest value from degrees table .",
            "you need to find the year of csu fees having greatest value from degrees table .",
            "you need to find the year of discipline enrollments having greatest value from degrees table .",
            "you need to find the year of enrollments having greatest value from degrees table .",
            "you need to find the year of faculty having greatest value from degrees table .",
            "you need to find the year of id having greatest value from degrees table .",
            "you need to find the year of campus having greatest value from degrees table .",
            "you need to find the year of location having greatest value from degrees table .",
            "you need to find the year of county having greatest value from degrees table .",
            "you need to find the year of year having greatest value from degrees table .",
            "you need to find the year of campus fee having greatest value from degrees table .",
            "you need to find the year of discipline having greatest value from degrees table .",
            "you need to find the year of undergraduate having greatest value from degrees table .",
            "you need to find the year of graduate having greatest value from degrees table .",
            "you need to find the year of totalenrollment ay having greatest value from degrees table .",
            "you need to find the year of fte ay having greatest value from degrees table ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , use order items table in place of products table and product categories table in step 2 , find for each value of order id in place of parent product id . find order id and summation of product quantity in place of summation of vat rating and parent product id .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                21,
                27
            ],
            [
                35,
                42
            ]
        ],
        "secondary_span": [
            [
                8,
                16
            ],
            [
                28,
                34
            ],
            [
                43,
                54
            ]
        ],
        "positive_example": "You should use order items, order id and product quantity instead of product categories, parent product id and vat rating respectively.",
        "negative_examples": [
            "you should use order items , gender and product quantity instead of products , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of financial transactions , parent product id and customer first name respectively .",
            "you should use order items , production type code and product quantity instead of financial transactions , parent product id and vat rating respectively .",
            "you should use financial transactions , order id and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of invoices , login name and vat rating respectively .",
            "you should use orders , order id and product quantity instead of product categories , product color and vat rating respectively .",
            "you should use order items , order id and product quantity instead of products , login password and vat rating respectively .",
            "you should use order items , order id and product quantity instead of customers , parent product id and product id respectively .",
            "you should use products , order id and product quantity instead of product categories , parent product id and transaction date respectively .",
            "you should use order items , order id and product quantity instead of invoice line items , parent product id and gender respectively .",
            "you should use orders , product name and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , order id and product type description instead of customers , parent product id and vat rating respectively .",
            "you should use invoices , derived vat payable and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of invoices , parent product id and account name respectively .",
            "you should use invoices , email address and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use financial transactions , order id and customer id instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of financial transactions , account name and vat rating respectively .",
            "you should use order items , order id and state county province instead of orders , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of product categories , parent product id and transaction type respectively .",
            "you should use invoice line items , order id and product quantity instead of product categories , customer id and vat rating respectively .",
            "you should use order items , transaction type and product quantity instead of financial transactions , parent product id and vat rating respectively .",
            "you should use products , order id and product quantity instead of product categories , parent product id and customer id respectively .",
            "you should use accounts , order id and customer last name instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , order id and login password instead of products , parent product id and vat rating respectively .",
            "you should use order items , product type description and product quantity instead of products , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of invoices , other account details and vat rating respectively .",
            "you should use order items , other transaction details and product quantity instead of products , parent product id and vat rating respectively .",
            "you should use accounts , order details and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use invoices , order id and login password instead of product categories , parent product id and vat rating respectively .",
            "you should use invoices , order id and product quantity instead of product categories , parent product id and customer id respectively .",
            "you should use accounts , customer last name and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of accounts , parent product id and date order placed respectively .",
            "you should use invoices , order id and product quantity instead of product categories , login password and vat rating respectively .",
            "you should use order items , order id and product quantity instead of orders , product title and vat rating respectively .",
            "you should use customers , order id and product quantity instead of product categories , phone number and vat rating respectively .",
            "you should use invoices , order id and product title instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of accounts , order details and vat rating respectively .",
            "you should use order items , order id and product quantity instead of customers , parent product id and invoice date respectively .",
            "you should use order items , order id and product quantity instead of invoice line items , parent product id and transaction comment respectively .",
            "you should use products , order id and product quantity instead of product categories , product color and vat rating respectively .",
            "you should use order items , invoice date and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use invoice line items , product price and product quantity instead of product categories , parent product id and vat rating respectively .",
            "you should use financial transactions , order id and derived vat payable instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , product color and product quantity instead of invoices , parent product id and vat rating respectively .",
            "you should use customers , order id and gender instead of product categories , parent product id and vat rating respectively .",
            "you should use customers , order id and product quantity instead of product categories , parent product id and product id respectively .",
            "you should use accounts , order id and product quantity instead of product categories , product price and vat rating respectively .",
            "you should use order items , order id and date order placed instead of product categories , parent product id and vat rating respectively .",
            "you should use order items , product id and product quantity instead of accounts , parent product id and vat rating respectively .",
            "you should use order items , order id and product quantity instead of customers , state county province and vat rating respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "additionally use the information from the body builder table besides the people table . consider the snatch greater than 140 conditions in place of the height greater than 140 conditions .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                20
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                21,
                30
            ]
        ],
        "positive_example": "Use body builder and snatch instead of people table and 1st height respectively.",
        "negative_examples": [
            "use body builder and body builder id instead of people table and 1st height respectively .",
            "use body builder and people id instead of people table and 1st height respectively .",
            "use body builder and clean jerk instead of people table and 1st height respectively .",
            "use body builder and total instead of people table and 1st height respectively .",
            "use body builder and name instead of people table and 1st height respectively .",
            "use body builder and weight instead of people table and 1st height respectively .",
            "use body builder and birth date instead of people table and 1st height respectively .",
            "use body builder and birth place instead of people table and 1st height respectively .",
            "use body builder and snatch instead of people table and 1st body builder id respectively .",
            "use body builder and snatch instead of people table and 1st people id respectively .",
            "use body builder and snatch instead of people table and 1st clean jerk respectively .",
            "use body builder and snatch instead of people table and 1st total respectively .",
            "use body builder and snatch instead of people table and 1st name respectively .",
            "use body builder and snatch instead of people table and 1st weight respectively .",
            "use body builder and snatch instead of people table and 1st birth date respectively .",
            "use body builder and snatch instead of people table and 1st birth place respectively ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use customers table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "I want table of customers instead of table of addresses.",
        "negative_examples": [
            "i want table of customers instead of table of staff .",
            "i want table of customers instead of table of vehicles .",
            "i want table of customers instead of table of customer payments .",
            "i want table of customers instead of table of lessons .",
            "i want table of staff instead of table of addresses .",
            "i want table of vehicles instead of table of addresses .",
            "i want table of customer payments instead of table of addresses .",
            "i want table of lessons instead of table of addresses ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "in step 1 , do not use the body builder table . in step 2 , order the results by height in place of total .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                20
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                21,
                25
            ]
        ],
        "positive_example": "I want the height instead of total.",
        "negative_examples": [
            "i want the height instead of body builder id .",
            "i want the height instead of people id .",
            "i want the height instead of snatch .",
            "i want the height instead of clean jerk .",
            "i want the height instead of name .",
            "i want the height instead of weight .",
            "i want the height instead of birth date .",
            "i want the height instead of birth place .",
            "i want the body builder id instead of total .",
            "i want the people id instead of total .",
            "i want the snatch instead of total .",
            "i want the clean jerk instead of total .",
            "i want the name instead of total .",
            "i want the weight instead of total .",
            "i want the birth date instead of total .",
            "i want the birth place instead of total ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use invoices table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Put invoices table in place of customers table .",
        "negative_examples": [
            "put invoices table in place of orders table .",
            "put invoices table in place of accounts table .",
            "put invoices table in place of product categories table .",
            "put invoices table in place of products table .",
            "put invoices table in place of financial transactions table .",
            "put invoices table in place of order items table .",
            "put invoices table in place of invoice line items table .",
            "put orders table in place of customers table .",
            "put accounts table in place of customers table .",
            "put product categories table in place of customers table .",
            "put products table in place of customers table .",
            "put financial transactions table in place of customers table .",
            "put order items table in place of customers table .",
            "put invoice line items table in place of customers table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , additionally use the information from the reviewer table . in step 2 , consider the name equals Sarah Martinez conditions in place of the rating stars equals Sarah Martinez conditions .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                17,
                23
            ]
        ],
        "secondary_span": [
            [
                24,
                34
            ]
        ],
        "positive_example": "In step 1 Also add reviewer table and Change rating stars with name .",
        "negative_examples": [
            "in step 1 also add movie table and change rating stars with name .",
            "in step 1 also add rating table and change rating stars with name .",
            "in step 1 also add reviewer table and change movie id with name .",
            "in step 1 also add reviewer table and change title with name .",
            "in step 1 also add reviewer table and change year with name .",
            "in step 1 also add reviewer table and change director with name .",
            "in step 1 also add reviewer table and change reviewer id with name .",
            "in step 1 also add reviewer table and change rating date with name .",
            "in step 1 also add reviewer table and change rating stars with movie id .",
            "in step 1 also add reviewer table and change rating stars with title .",
            "in step 1 also add reviewer table and change rating stars with year .",
            "in step 1 also add reviewer table and change rating stars with director .",
            "in step 1 also add reviewer table and change rating stars with reviewer id .",
            "in step 1 also add reviewer table and change rating stars with rating date .",
            "in step 1 also add movie table and change movie id with name .",
            "in step 1 also add movie table and change title with name .",
            "in step 1 also add movie table and change year with name .",
            "in step 1 also add movie table and change director with name .",
            "in step 1 also add movie table and change reviewer id with name .",
            "in step 1 also add movie table and change rating date with name .",
            "in step 1 also add movie table and change rating stars with movie id .",
            "in step 1 also add movie table and change rating stars with title .",
            "in step 1 also add movie table and change rating stars with year .",
            "in step 1 also add movie table and change rating stars with director .",
            "in step 1 also add movie table and change rating stars with reviewer id .",
            "in step 1 also add movie table and change rating stars with rating date .",
            "in step 1 also add rating table and change movie id with name .",
            "in step 1 also add rating table and change title with name .",
            "in step 1 also add rating table and change year with name .",
            "in step 1 also add rating table and change director with name .",
            "in step 1 also add rating table and change reviewer id with name .",
            "in step 1 also add rating table and change rating date with name .",
            "in step 1 also add rating table and change rating stars with movie id .",
            "in step 1 also add rating table and change rating stars with title .",
            "in step 1 also add rating table and change rating stars with year .",
            "in step 1 also add rating table and change rating stars with director .",
            "in step 1 also add rating table and change rating stars with reviewer id .",
            "in step 1 also add rating table and change rating stars with rating date ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number like Columbus Square conditions .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ]
        ],
        "positive_example": "Use corresponding apartment buildings's short name in place of apartment number.",
        "negative_examples": [
            "use corresponding apartment buildings 's short name in place of building id .",
            "use corresponding apartment buildings 's short name in place of building short name .",
            "use corresponding apartment buildings 's short name in place of building full name .",
            "use corresponding apartment buildings 's short name in place of building description .",
            "use corresponding apartment buildings 's short name in place of building address .",
            "use corresponding apartment buildings 's short name in place of building manager .",
            "use corresponding apartment buildings 's short name in place of building phone .",
            "use corresponding apartment buildings 's short name in place of apartment id .",
            "use corresponding apartment buildings 's short name in place of apartment type code .",
            "use corresponding apartment buildings 's short name in place of bathroom count .",
            "use corresponding apartment buildings 's short name in place of bedroom count .",
            "use corresponding apartment buildings 's short name in place of room count .",
            "use corresponding apartment buildings 's short name in place of facility code .",
            "use corresponding apartment buildings 's short name in place of guest id .",
            "use corresponding apartment buildings 's short name in place of gender code .",
            "use corresponding apartment buildings 's short name in place of guest first name .",
            "use corresponding apartment buildings 's short name in place of guest last name .",
            "use corresponding apartment buildings 's short name in place of date of birth .",
            "use corresponding apartment buildings 's short name in place of apartment booking id .",
            "use corresponding apartment buildings 's short name in place of booking status code .",
            "use corresponding apartment buildings 's short name in place of booking start date .",
            "use corresponding apartment buildings 's short name in place of booking end date .",
            "use corresponding apartment buildings 's short name in place of status date .",
            "use corresponding apartment buildings 's short name in place of available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals San Jose State University and faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                52
            ]
        ],
        "positive_example": "Change 1st faculty year with csu fees year and 2nd faculty year with campuses .",
        "negative_examples": [
            "change 1st graduate year with csu fees year and 2nd faculty year with campuses .",
            "change 1st degrees degrees with csu fees degrees and 2nd faculty degrees with campuses .",
            "change 1st csu fees location with csu fees location and 2nd faculty location with campuses .",
            "change 1st degrees year with csu fees year and 2nd faculty year with campuses .",
            "change 1st campuses undergraduate with csu fees undergraduate and 2nd faculty undergraduate with campuses .",
            "change 1st faculty year with csu fees year and 2nd faculty year with location .",
            "change 1st county year with csu fees year and 2nd faculty year with campuses .",
            "change 1st faculty id with csu fees year and 2nd faculty year with campuses .",
            "change 1st campuses graduate with csu fees graduate and 2nd faculty graduate with campuses .",
            "change 1st discipline enrollments county with csu fees county and 2nd faculty county with campuses .",
            "change 1st degrees fte ay with csu fees fte ay and 2nd faculty fte ay with campuses .",
            "change 1st faculty undergraduate with csu fees year and 2nd faculty year with campuses .",
            "change 1st csu fees degrees with csu fees degrees and 2nd faculty degrees with campuses .",
            "change 1st enrollments id with csu fees id and 2nd faculty id with campuses .",
            "change 1st campuses id with csu fees id and 2nd faculty id with campuses .",
            "change 1st discipline enrollments graduate with csu fees graduate and 2nd faculty graduate with campuses .",
            "change 1st campuses discipline with csu fees discipline and 2nd faculty discipline with campuses .",
            "change 1st discipline enrollments id with csu fees id and 2nd faculty id with campuses .",
            "change 1st csu fees county with csu fees county and 2nd faculty county with campuses .",
            "change 1st faculty year with csu fees year and 2nd faculty year with totalenrollment ay .",
            "change 1st discipline year with csu fees year and 2nd faculty year with campuses .",
            "change 1st faculty year with csu fees year and 2nd faculty year with fte ay .",
            "change 1st faculty degrees with csu fees year and 2nd faculty year with campuses .",
            "change 1st campuses county with csu fees county and 2nd faculty county with campuses .",
            "change 1st discipline enrollments undergraduate with csu fees undergraduate and 2nd faculty undergraduate with campuses .",
            "change 1st faculty location with csu fees year and 2nd faculty year with campuses .",
            "change 1st enrollments location with csu fees location and 2nd faculty location with campuses .",
            "change 1st faculty year with csu fees year and 2nd faculty year with campus fee .",
            "change 1st discipline enrollments totalenrollment ay with csu fees totalenrollment ay and 2nd faculty totalenrollment ay with campuses .",
            "change 1st enrollments campus fee with csu fees campus fee and 2nd faculty campus fee with campuses .",
            "change 1st csu fees id with csu fees id and 2nd faculty id with campuses .",
            "change 1st campuses degrees with csu fees degrees and 2nd faculty degrees with campuses .",
            "change 1st discipline enrollments year with csu fees year and 2nd faculty year with campuses .",
            "change 1st discipline enrollments campus fee with csu fees campus fee and 2nd faculty campus fee with campuses .",
            "change 1st csu fees campus fee with csu fees campus fee and 2nd faculty campus fee with campuses .",
            "change 1st degrees graduate with csu fees graduate and 2nd faculty graduate with campuses .",
            "change 1st campuses year with csu fees year and 2nd faculty year with campuses .",
            "change 1st enrollments graduate with csu fees graduate and 2nd faculty graduate with campuses .",
            "change 1st faculty totalenrollment ay with csu fees year and 2nd faculty year with campuses .",
            "change 1st faculty graduate with csu fees year and 2nd faculty year with campuses .",
            "change 1st degrees county with csu fees county and 2nd faculty county with campuses .",
            "change 1st enrollments county with csu fees county and 2nd faculty county with campuses .",
            "change 1st faculty year with csu fees year and 2nd faculty year with id .",
            "change 1st discipline enrollments location with csu fees location and 2nd faculty location with campuses .",
            "change 1st degrees id with csu fees id and 2nd faculty id with campuses .",
            "change 1st discipline enrollments discipline with csu fees discipline and 2nd faculty discipline with campuses .",
            "change 1st faculty year with csu fees year and 2nd faculty year with county .",
            "change 1st degrees discipline with csu fees discipline and 2nd faculty discipline with campuses .",
            "change 1st campuses campus fee with csu fees campus fee and 2nd faculty campus fee with campuses .",
            "change 1st enrollments fte ay with csu fees fte ay and 2nd faculty fte ay with campuses ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building full name equals Columbus Square conditions .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                31
            ]
        ],
        "positive_example": "Substitute building full name with building short name . Omit \"and building short name equals Normandie Court\".",
        "negative_examples": [
            "substitute building full name with building id . omit \" and building short name equals normandie court \" .",
            "substitute building full name with building description . omit \" and building short name equals normandie court \" .",
            "substitute building full name with building address . omit \" and building short name equals normandie court \" .",
            "substitute building full name with building manager . omit \" and building short name equals normandie court \" .",
            "substitute building full name with building phone . omit \" and building short name equals normandie court \" .",
            "substitute building full name with apartment id . omit \" and building short name equals normandie court \" .",
            "substitute building full name with apartment type code . omit \" and building short name equals normandie court \" .",
            "substitute building full name with apartment number . omit \" and building short name equals normandie court \" .",
            "substitute building full name with bathroom count . omit \" and building short name equals normandie court \" .",
            "substitute building full name with bedroom count . omit \" and building short name equals normandie court \" .",
            "substitute building full name with room count . omit \" and building short name equals normandie court \" .",
            "substitute building full name with facility code . omit \" and building short name equals normandie court \" .",
            "substitute building full name with guest id . omit \" and building short name equals normandie court \" .",
            "substitute building full name with gender code . omit \" and building short name equals normandie court \" .",
            "substitute building full name with guest first name . omit \" and building short name equals normandie court \" .",
            "substitute building full name with guest last name . omit \" and building short name equals normandie court \" .",
            "substitute building full name with date of birth . omit \" and building short name equals normandie court \" .",
            "substitute building full name with apartment booking id . omit \" and building short name equals normandie court \" .",
            "substitute building full name with booking status code . omit \" and building short name equals normandie court \" .",
            "substitute building full name with booking start date . omit \" and building short name equals normandie court \" .",
            "substitute building full name with booking end date . omit \" and building short name equals normandie court \" .",
            "substitute building full name with status date . omit \" and building short name equals normandie court \" .",
            "substitute building full name with available yes or no . omit \" and building short name equals normandie court \" .",
            "substitute building id with building short name . omit \" and building short name equals normandie court \" .",
            "substitute building description with building short name . omit \" and building short name equals normandie court \" .",
            "substitute building address with building short name . omit \" and building short name equals normandie court \" .",
            "substitute building manager with building short name . omit \" and building short name equals normandie court \" .",
            "substitute building phone with building short name . omit \" and building short name equals normandie court \" .",
            "substitute apartment id with building short name . omit \" and building short name equals normandie court \" .",
            "substitute apartment type code with building short name . omit \" and building short name equals normandie court \" .",
            "substitute apartment number with building short name . omit \" and building short name equals normandie court \" .",
            "substitute bathroom count with building short name . omit \" and building short name equals normandie court \" .",
            "substitute bedroom count with building short name . omit \" and building short name equals normandie court \" .",
            "substitute room count with building short name . omit \" and building short name equals normandie court \" .",
            "substitute facility code with building short name . omit \" and building short name equals normandie court \" .",
            "substitute guest id with building short name . omit \" and building short name equals normandie court \" .",
            "substitute gender code with building short name . omit \" and building short name equals normandie court \" .",
            "substitute guest first name with building short name . omit \" and building short name equals normandie court \" .",
            "substitute guest last name with building short name . omit \" and building short name equals normandie court \" .",
            "substitute date of birth with building short name . omit \" and building short name equals normandie court \" .",
            "substitute apartment booking id with building short name . omit \" and building short name equals normandie court \" .",
            "substitute booking status code with building short name . omit \" and building short name equals normandie court \" .",
            "substitute booking start date with building short name . omit \" and building short name equals normandie court \" .",
            "substitute booking end date with building short name . omit \" and building short name equals normandie court \" .",
            "substitute status date with building short name . omit \" and building short name equals normandie court \" .",
            "substitute available yes or no with building short name . omit \" and building short name equals normandie court \" ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , additionally use the information from the campuses table besides the faculty table . in step 2 , do not find for each value of faculty 's campus . in step 3 , find campuses 's campus in place of faculty . order the results by faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                31
            ],
            [
                36,
                39
            ],
            [
                45,
                49
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                40,
                44
            ],
            [
                50,
                56
            ]
        ],
        "positive_example": "step 2 should order by summation of faculty also it should find campus not faculty in step 2",
        "negative_examples": [
            "step 2 should order by summation of year also it should find campus not faculty in step 2",
            "step 2 should order by summation of enrollments also it should find campus not faculty in step 2",
            "step 2 should order by summation of faculty also it should find discipline not faculty in step 2",
            "step 2 should order by summation of faculty also it should find year not faculty in step 2",
            "step 2 should order by summation of campuses also it should find campus fee not faculty in step 2",
            "step 2 should order by summation of degrees also it should find year not faculty in step 2",
            "step 2 should order by summation of degrees also it should find degrees not faculty in step 2",
            "step 2 should order by summation of faculty also it should find campus fee not faculty in step 2",
            "step 2 should order by summation of faculty also it should find graduate not faculty in step 2",
            "step 2 should order by summation of enrollments also it should find degrees not faculty in step 2",
            "step 2 should order by summation of enrollments also it should find campus fee not faculty in step 2",
            "step 2 should order by summation of id also it should find campus not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find graduate not faculty in step 2",
            "step 2 should order by summation of fte ay also it should find campus not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find undergraduate not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find location not faculty in step 2",
            "step 2 should order by summation of faculty also it should find location not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find campus not faculty in step 2",
            "step 2 should order by summation of degrees also it should find totalenrollment ay not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find county not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find degrees not faculty in step 2",
            "step 2 should order by summation of campuses also it should find id not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find id not faculty in step 2",
            "step 2 should order by summation of campuses also it should find county not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find campus not faculty in step 2",
            "step 2 should order by summation of undergraduate also it should find campus not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find undergraduate not faculty in step 2",
            "step 2 should order by summation of degrees also it should find county not faculty in step 2",
            "step 2 should order by summation of graduate also it should find campus not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find campus fee not faculty in step 2",
            "step 2 should order by summation of campuses also it should find year not faculty in step 2",
            "step 2 should order by summation of enrollments also it should find discipline not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find year not faculty in step 2",
            "step 2 should order by summation of campuses also it should find totalenrollment ay not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find totalenrollment ay not faculty in step 2",
            "step 2 should order by summation of faculty also it should find totalenrollment ay not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find fte ay not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find location not faculty in step 2",
            "step 2 should order by summation of campuses also it should find location not faculty in step 2",
            "step 2 should order by summation of enrollments also it should find county not faculty in step 2",
            "step 2 should order by summation of faculty also it should find id not faculty in step 2",
            "step 2 should order by summation of degrees also it should find campus fee not faculty in step 2",
            "step 2 should order by summation of campuses also it should find campus not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find campus fee not faculty in step 2",
            "step 2 should order by summation of csu fees also it should find id not faculty in step 2",
            "step 2 should order by summation of degrees also it should find discipline not faculty in step 2",
            "step 2 should order by summation of discipline enrollments also it should find discipline not faculty in step 2",
            "step 2 should order by summation of campuses also it should find discipline not faculty in step 2",
            "step 2 should order by summation of campuses also it should find undergraduate not faculty in step 2",
            "step 2 should order by summation of enrollments also it should find location not faculty in step 2"
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , additionally use the information from the orders table besides the customers table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 1 instead of customers table , use orders table .",
        "negative_examples": [
            "in step 1 instead of customers table , use customers table .",
            "in step 1 instead of customers table , use invoices table .",
            "in step 1 instead of customers table , use accounts table .",
            "in step 1 instead of customers table , use product categories table .",
            "in step 1 instead of customers table , use products table .",
            "in step 1 instead of customers table , use financial transactions table .",
            "in step 1 instead of customers table , use order items table .",
            "in step 1 instead of customers table , use invoice line items table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not find for each value of director . in step 2 , additionally make sure that title not equals title . additionally find director . order the results ascending by title and director .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                17,
                25
            ],
            [
                26,
                29
            ],
            [
                30,
                38
            ]
        ],
        "secondary_span": [],
        "positive_example": "Replace second title with director , make sure to order by director name then movie title",
        "negative_examples": [
            "replace second movie id with director , make sure to order by director name then movie title",
            "replace second year with director , make sure to order by director name then movie title",
            "replace second reviewer id with director , make sure to order by director name then movie title",
            "replace second name with director , make sure to order by director name then movie title",
            "replace second rating stars with director , make sure to order by director name then movie title",
            "replace second rating date with director , make sure to order by director name then movie title",
            "replace second title with movie id , make sure to order by director name then movie title",
            "replace second title with year , make sure to order by director name then movie title",
            "replace second title with reviewer id , make sure to order by director name then movie title",
            "replace second title with name , make sure to order by director name then movie title",
            "replace second title with rating stars , make sure to order by director name then movie title",
            "replace second title with rating date , make sure to order by director name then movie title"
        ],
        "neg_len": 12
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "use store table and store district table in place of district table . additionally make sure that store district 's district id is equals district 's district id district with largest city population . find store name in place of district name . you should not find the largest of the results . show me all the results .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                33
            ],
            [
                34,
                36
            ],
            [
                43,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                37,
                42
            ]
        ],
        "positive_example": "I want name of store's store .",
        "negative_examples": [
            "i want name of product 's store .",
            "i want name of district 's store .",
            "i want name of store product 's store .",
            "i want name of store district 's store .",
            "i want name of product id 's store .",
            "i want name of dimensions 's store .",
            "i want name of dpi 's store .",
            "i want name of pages per minute color 's store .",
            "i want name of max page size 's store .",
            "i want name of interface 's store .",
            "i want name of store id 's store .",
            "i want name of store name 's store .",
            "i want name of type 's store .",
            "i want name of area size 's store .",
            "i want name of number of product category 's store .",
            "i want name of ranking 's store .",
            "i want name of district id 's store .",
            "i want name of district name 's store .",
            "i want name of headquartered city 's store .",
            "i want name of city population 's store .",
            "i want name of city area 's store ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment facilities table . do not find for each value of facility code . in step 2 , additionally make sure that bedroom count greater than 4 .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                27
            ],
            [
                32,
                41
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ]
        ],
        "positive_example": "Make sure to find number of bedroom in apartments for all apartment id.",
        "negative_examples": [
            "make sure to find number of bedroom in apartment buildings for all apartment id .",
            "make sure to find number of bedroom in apartment facilities for all apartment id .",
            "make sure to find number of bedroom in guests for all apartment id .",
            "make sure to find number of bedroom in apartment bookings for all apartment id .",
            "make sure to find number of bedroom in view unit status for all apartment id ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , use order items table in place of products table and product categories table in step 2 , find for each value of order id in place of parent product id . find order id and summation of product quantity in place of summation of vat rating and parent product id .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                21,
                27
            ],
            [
                35,
                42
            ]
        ],
        "secondary_span": [
            [
                8,
                16
            ],
            [
                28,
                34
            ],
            [
                43,
                54
            ]
        ],
        "positive_example": "Replace product categories with order items , parent product id with order id , vat rating with product quantity .",
        "negative_examples": [
            "replace customers with order items , parent product id with order id , vat rating with date account opened .",
            "replace product categories with customers , parent product id with product title , vat rating with product quantity .",
            "replace financial transactions with order items , state county province with order id , vat rating with product quantity .",
            "replace invoices with order items , derived product cost with order id , vat rating with product quantity .",
            "replace products with order items , parent product id with order id , customer middle initial with product quantity .",
            "replace product categories with customers , gender with order id , vat rating with product quantity .",
            "replace customers with order items , parent product id with customer id , vat rating with product quantity .",
            "replace product categories with invoice line items , parent product id with order id , transaction amount with product quantity .",
            "replace customers with order items , parent product id with order id , vat rating with order details .",
            "replace accounts with order items , parent product id with order id , other transaction details with product quantity .",
            "replace invoices with order items , parent product id with order id , vat rating with product price .",
            "replace product categories with products , parent product id with order id , derived product cost with product quantity .",
            "replace product categories with financial transactions , parent product id with order id , date order placed with product quantity .",
            "replace accounts with order items , parent product id with product color , vat rating with product quantity .",
            "replace product categories with invoice line items , product id with order id , vat rating with product quantity .",
            "replace product categories with products , parent product id with product price , vat rating with product quantity .",
            "replace product categories with order items , transaction comment with order id , vat rating with product quantity .",
            "replace product categories with financial transactions , parent product id with order id , vat rating with product name .",
            "replace product categories with products , parent product id with order id , vat rating with product title .",
            "replace product categories with customers , parent product id with order id , vat rating with customer middle initial .",
            "replace product categories with customers , parent product id with order id , transaction amount with product quantity .",
            "replace product categories with products , parent product id with transaction id , vat rating with product quantity .",
            "replace product categories with accounts , parent product id with order id , transaction date with product quantity .",
            "replace product categories with order items , parent product id with order id , customer id with product quantity .",
            "replace orders with order items , date order placed with order id , vat rating with product quantity .",
            "replace customers with order items , product color with order id , vat rating with product quantity .",
            "replace product categories with accounts , order item id with order id , vat rating with product quantity .",
            "replace invoices with order items , parent product id with order id , account name with product quantity .",
            "replace invoices with order items , parent product id with phone number , vat rating with product quantity .",
            "replace product categories with orders , parent product id with order item id , vat rating with product quantity .",
            "replace product categories with invoice line items , customer first name with order id , vat rating with product quantity .",
            "replace product categories with customers , customer middle initial with order id , vat rating with product quantity .",
            "replace customers with order items , parent product id with derived product cost , vat rating with product quantity .",
            "replace product categories with order items , parent product id with order id , transaction date with product quantity .",
            "replace accounts with order items , customer first name with order id , vat rating with product quantity .",
            "replace orders with order items , parent product id with country , vat rating with product quantity .",
            "replace invoice line items with order items , invoice date with order id , vat rating with product quantity .",
            "replace product categories with accounts , derived vat payable with order id , vat rating with product quantity .",
            "replace product categories with invoice line items , customer id with order id , vat rating with product quantity .",
            "replace product categories with customers , parent product id with product id , vat rating with product quantity .",
            "replace product categories with customers , parent product id with order id , customer first name with product quantity .",
            "replace product categories with financial transactions , parent product id with order id , vat rating with product size .",
            "replace invoice line items with order items , parent product id with product color , vat rating with product quantity .",
            "replace invoice line items with order items , parent product id with country , vat rating with product quantity .",
            "replace product categories with financial transactions , parent product id with order id , derived product cost with product quantity .",
            "replace product categories with customers , transaction comment with order id , vat rating with product quantity .",
            "replace product categories with customers , product id with order id , vat rating with product quantity .",
            "replace financial transactions with order items , parent product id with order id , vat rating with product quantity .",
            "replace invoices with order items , transaction id with order id , vat rating with product quantity .",
            "replace product categories with customers , parent product id with order id , derived total cost with product quantity ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and graduate equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                52
            ]
        ],
        "positive_example": "Find csu fees campus fee whose campuses equals San Jose State University and csu fees year equals 1996.",
        "negative_examples": [
            "find csu fees campus fee whose campuses equals san jose state university and csu fees id equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees campus equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees location equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees county equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees campus fee equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees degrees equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees discipline equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees undergraduate equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees graduate equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees totalenrollment ay equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees fte ay equals 1996 .",
            "find csu fees campus fee whose campuses equals san jose state university and csu fees faculty equals 1996 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use accounts table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Drop the customers table and use accounts table.",
        "negative_examples": [
            "drop the orders table and use accounts table .",
            "drop the invoices table and use accounts table .",
            "drop the product categories table and use accounts table .",
            "drop the products table and use accounts table .",
            "drop the financial transactions table and use accounts table .",
            "drop the order items table and use accounts table .",
            "drop the invoice line items table and use accounts table .",
            "drop the customers table and use orders table .",
            "drop the customers table and use invoices table .",
            "drop the customers table and use product categories table .",
            "drop the customers table and use products table .",
            "drop the customers table and use financial transactions table .",
            "drop the customers table and use order items table .",
            "drop the customers table and use invoice line items table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , you shoud consider either of the conditions rather than both of them . consider the type equals Graphics or company name equals Nokia Corporation conditions in place of the type equals Nokia Corporation and screen mode equals Graphics conditions . make sure no repetition in the results .",
        "primary_span": [
            [
                4,
                16
            ],
            [
                17,
                28
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                29,
                43
            ]
        ],
        "positive_example": "In step 2, use \"Type\" instead of screen mode and company name in place of \"Type\".",
        "negative_examples": [
            "in step 2 , use \" type \" instead of chip model and model name in place of \" type \" .",
            "in step 2 , use \" pixels \" instead of phone and company name in place of \" pixels \" .",
            "in step 2 , use \" type \" instead of screen mode and wifi in place of \" type \" .",
            "in step 2 , use \" launch year \" instead of chip model and company name in place of \" launch year \" .",
            "in step 2 , use \" launch year \" instead of phone and company name in place of \" launch year \" .",
            "in step 2 , use \" type \" instead of phone and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of phone and hardware colours in place of \" type \" .",
            "in step 2 , use \" chip model \" instead of phone and company name in place of \" chip model \" .",
            "in step 2 , use \" char cells \" instead of chip model and company name in place of \" char cells \" .",
            "in step 2 , use \" type \" instead of accreditation level and company name in place of \" type \" .",
            "in step 2 , use \" rom mib \" instead of phone and company name in place of \" rom mib \" .",
            "in step 2 , use \" type \" instead of screen mode and used kb in place of \" type \" .",
            "in step 2 , use \" type \" instead of chip model and char cells in place of \" type \" .",
            "in step 2 , use \" type \" instead of char cells and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of screen mode and char cells in place of \" type \" .",
            "in step 2 , use \" type \" instead of chip model and pixels in place of \" type \" .",
            "in step 2 , use \" type \" instead of screen mode and pixels in place of \" type \" .",
            "in step 2 , use \" launch year \" instead of screen mode and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of screen mode and model name in place of \" type \" .",
            "in step 2 , use \" type \" instead of chip model and bluetooth in place of \" type \" .",
            "in step 2 , use \" hardware colours \" instead of chip model and company name in place of \" hardware colours \" .",
            "in step 2 , use \" type \" instead of phone and rom mib in place of \" type \" .",
            "in step 2 , use \" type \" instead of chip model and rom mib in place of \" type \" .",
            "in step 2 , use \" bluetooth \" instead of chip model and company name in place of \" bluetooth \" .",
            "in step 2 , use \" type \" instead of accreditation type and company name in place of \" type \" .",
            "in step 2 , use \" hardware model name \" instead of chip model and company name in place of \" hardware model name \" .",
            "in step 2 , use \" type \" instead of map and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of chip model and slots in place of \" type \" .",
            "in step 2 , use \" type \" instead of wifi and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of phone and bluetooth in place of \" type \" .",
            "in step 2 , use \" slots \" instead of phone and company name in place of \" slots \" .",
            "in step 2 , use \" type \" instead of screen mode and rom mib in place of \" type \" .",
            "in step 2 , use \" accreditation type \" instead of phone and company name in place of \" accreditation type \" .",
            "in step 2 , use \" type \" instead of slots and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of pixels and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of hardware colours and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of chip model and chip model in place of \" type \" .",
            "in step 2 , use \" type \" instead of phone and map in place of \" type \" .",
            "in step 2 , use \" chip model \" instead of screen mode and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of phone and ram mib in place of \" type \" .",
            "in step 2 , use \" hardware colours \" instead of screen mode and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of chip model and ram mib in place of \" type \" .",
            "in step 2 , use \" chip model \" instead of chip model and company name in place of \" chip model \" .",
            "in step 2 , use \" accreditation type \" instead of screen mode and company name in place of \" type \" .",
            "in step 2 , use \" ram mib \" instead of chip model and company name in place of \" ram mib \" .",
            "in step 2 , use \" map \" instead of chip model and company name in place of \" map \" .",
            "in step 2 , use \" type \" instead of hardware model name and company name in place of \" type \" .",
            "in step 2 , use \" type \" instead of rom mib and company name in place of \" type \" .",
            "in step 2 , use \" graphics mode \" instead of phone and company name in place of \" graphics mode \" .",
            "in step 2 , use \" graphics mode \" instead of chip model and company name in place of \" graphics mode \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building full name . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building short name .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                45
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "In step 1, looking for the count of bathroom in apartments's. Also,swap short name of building with address in step 2. ",
        "negative_examples": [
            "in step 1 , looking for the count of bathroom in apartment buildings 's . also , swap short name of building with address in step 2 .",
            "in step 1 , looking for the count of bathroom in apartment facilities 's . also , swap short name of building with address in step 2 .",
            "in step 1 , looking for the count of bathroom in guests 's . also , swap short name of building with address in step 2 .",
            "in step 1 , looking for the count of bathroom in apartment bookings 's . also , swap short name of building with address in step 2 .",
            "in step 1 , looking for the count of bathroom in view unit status 's . also , swap short name of building with address in step 2 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "additionally use the information from the lessons table besides the staff table . consider the first name like % a % conditions in place of the first name like a conditions .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                21
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                22,
                31
            ]
        ],
        "positive_example": "You should replace staff table with lessons table.",
        "negative_examples": [
            "you should replace staff table with addresses table .",
            "you should replace staff table with staff table .",
            "you should replace staff table with vehicles table .",
            "you should replace staff table with customers table .",
            "you should replace staff table with customer payments table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use accounts table in place of customers table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace customers table with accounts table .",
        "negative_examples": [
            "replace orders table with accounts table .",
            "replace invoices table with accounts table .",
            "replace product categories table with accounts table .",
            "replace products table with accounts table .",
            "replace financial transactions table with accounts table .",
            "replace order items table with accounts table .",
            "replace invoice line items table with accounts table .",
            "replace customers table with orders table .",
            "replace customers table with invoices table .",
            "replace customers table with product categories table .",
            "replace customers table with products table .",
            "replace customers table with financial transactions table .",
            "replace customers table with order items table .",
            "replace customers table with invoice line items table ."
        ],
        "neg_len": 14
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "use order items table in place of orders table . find summation of product quantity in place of summation of rows .",
        "primary_span": [
            [
                0,
                3
            ],
            [
                10,
                14
            ]
        ],
        "secondary_span": [
            [
                4,
                9
            ],
            [
                15,
                21
            ]
        ],
        "positive_example": "For every order id, you need to search adjacent rows of order items.",
        "negative_examples": [
            "for every order id , you need to search adjacent rows of customers .",
            "for every order id , you need to search adjacent rows of orders .",
            "for every order id , you need to search adjacent rows of invoices .",
            "for every order id , you need to search adjacent rows of accounts .",
            "for every order id , you need to search adjacent rows of product categories .",
            "for every order id , you need to search adjacent rows of products .",
            "for every order id , you need to search adjacent rows of financial transactions .",
            "for every order id , you need to search adjacent rows of invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find average snatch in place of average clean jerk .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                9
            ]
        ],
        "positive_example": "Replace clean jerk with snatch .",
        "negative_examples": [
            "replace body builder id with snatch .",
            "replace people id with snatch .",
            "replace total with snatch .",
            "replace name with snatch .",
            "replace height with snatch .",
            "replace weight with snatch .",
            "replace birth date with snatch .",
            "replace birth place with snatch .",
            "replace clean jerk with body builder id .",
            "replace clean jerk with people id .",
            "replace clean jerk with total .",
            "replace clean jerk with name .",
            "replace clean jerk with height .",
            "replace clean jerk with weight .",
            "replace clean jerk with birth date .",
            "replace clean jerk with birth place ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customer payments table besides the customers table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "I want table of customer payments in step 1.",
        "negative_examples": [
            "i want table of addresses in step 1 .",
            "i want table of staff in step 1 .",
            "i want table of vehicles in step 1 .",
            "i want table of customers in step 1 .",
            "i want table of lessons in step 1 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year less than 2002 and faculty 's year greater than 1950 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ]
        ],
        "positive_example": "Be sure that campuses ' year is greater than 1950. Remove both faculty 's year conditions .",
        "negative_examples": [
            "be sure that campuses ' fte ay is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' graduate is greater than 1950. remove both campuses 's graduate conditions .",
            "be sure that campuses ' discipline is greater than 1950. remove both campuses 's discipline conditions .",
            "be sure that campuses ' year is greater than 1950. remove both discipline 's year conditions .",
            "be sure that campuses ' id is greater than 1950. remove both csu fees 's id conditions .",
            "be sure that campuses ' year is greater than 1950. remove both graduate 's year conditions .",
            "be sure that campuses ' year is greater than 1950. remove both csu fees 's year conditions .",
            "be sure that campuses ' id is greater than 1950. remove both discipline enrollments 's id conditions .",
            "be sure that campuses ' degrees is greater than 1950. remove both enrollments 's degrees conditions .",
            "be sure that campuses ' county is greater than 1950. remove both enrollments 's county conditions .",
            "be sure that campuses ' id is greater than 1950. remove both campuses 's id conditions .",
            "be sure that campuses ' year is greater than 1950. remove both fte ay 's year conditions .",
            "be sure that campuses ' location is greater than 1950. remove both degrees 's location conditions .",
            "be sure that campuses ' location is greater than 1950. remove both campuses 's location conditions .",
            "be sure that campuses ' fte ay is greater than 1950. remove both discipline enrollments 's fte ay conditions .",
            "be sure that campuses ' year is greater than 1950. remove both totalenrollment ay 's year conditions .",
            "be sure that campuses ' year is greater than 1950. remove both enrollments 's year conditions .",
            "be sure that campuses ' campus fee is greater than 1950. remove both campuses 's campus fee conditions .",
            "be sure that campuses ' county is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' undergraduate is greater than 1950. remove both csu fees 's undergraduate conditions .",
            "be sure that campuses ' campus fee is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' discipline is greater than 1950. remove both csu fees 's discipline conditions .",
            "be sure that campuses ' id is greater than 1950. remove both enrollments 's id conditions .",
            "be sure that campuses ' graduate is greater than 1950. remove both degrees 's graduate conditions .",
            "be sure that campuses ' year is greater than 1950. remove both campus 's year conditions .",
            "be sure that campuses ' year is greater than 1950. remove both discipline enrollments 's year conditions .",
            "be sure that campuses ' location is greater than 1950. remove both enrollments 's location conditions .",
            "be sure that campuses ' fte ay is greater than 1950. remove both degrees 's fte ay conditions .",
            "be sure that campuses ' id is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' location is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' totalenrollment ay is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' graduate is greater than 1950. remove both csu fees 's graduate conditions .",
            "be sure that campuses ' undergraduate is greater than 1950. remove both campuses 's undergraduate conditions .",
            "be sure that campuses ' id is greater than 1950. remove both degrees 's id conditions .",
            "be sure that campuses ' graduate is greater than 1950. remove both discipline enrollments 's graduate conditions .",
            "be sure that campuses ' campus is greater than 1950. remove both discipline enrollments 's campus conditions .",
            "be sure that campuses ' degrees is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' year is greater than 1950. remove both degrees 's year conditions .",
            "be sure that campuses ' fte ay is greater than 1950. remove both csu fees 's fte ay conditions .",
            "be sure that campuses ' location is greater than 1950. remove both csu fees 's location conditions .",
            "be sure that campuses ' degrees is greater than 1950. remove both campuses 's degrees conditions .",
            "be sure that campuses ' campus is greater than 1950. remove both enrollments 's campus conditions .",
            "be sure that campuses ' degrees is greater than 1950. remove both discipline enrollments 's degrees conditions .",
            "be sure that campuses ' county is greater than 1950. remove both discipline enrollments 's county conditions .",
            "be sure that campuses ' year is greater than 1950. remove both campuses 's year conditions .",
            "be sure that campuses ' degrees is greater than 1950. remove both csu fees 's degrees conditions .",
            "be sure that campuses ' campus is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' totalenrollment ay is greater than 1950. remove both enrollments 's totalenrollment ay conditions .",
            "be sure that campuses ' undergraduate is greater than 1950. remove both faculty 's year conditions .",
            "be sure that campuses ' fte ay is greater than 1950. remove both enrollments 's fte ay conditions ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the county equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                26
            ]
        ],
        "positive_example": "Need to replace county with campus .",
        "negative_examples": [
            "need to replace county with id .",
            "need to replace county with location .",
            "need to replace county with year .",
            "need to replace county with campus fee .",
            "need to replace county with degrees .",
            "need to replace county with discipline .",
            "need to replace county with undergraduate .",
            "need to replace county with graduate .",
            "need to replace county with totalenrollment ay .",
            "need to replace county with fte ay .",
            "need to replace county with faculty .",
            "need to replace id with campus .",
            "need to replace location with campus .",
            "need to replace year with campus .",
            "need to replace campus fee with campus .",
            "need to replace degrees with campus .",
            "need to replace discipline with campus .",
            "need to replace undergraduate with campus .",
            "need to replace graduate with campus .",
            "need to replace totalenrollment ay with campus .",
            "need to replace fte ay with campus .",
            "need to replace faculty with campus ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use staff table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "You should look for staff table and not the addresses table.",
        "negative_examples": [
            "you should look for staff table and not the vehicles table .",
            "you should look for staff table and not the customers table .",
            "you should look for staff table and not the customer payments table .",
            "you should look for staff table and not the lessons table .",
            "you should look for vehicles table and not the addresses table .",
            "you should look for customers table and not the addresses table .",
            "you should look for customer payments table and not the addresses table .",
            "you should look for lessons table and not the addresses table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table in place of faculty table . consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year between 1939 and 1935 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                28
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                29,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "You should use campuses in place of faculty table and also ensure the year is between 1935 and 1939.",
        "negative_examples": [
            "you should use campuses in place of fte ay table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of enrollments table and also ensure the totalenrollment ay is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the id is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the county is between 1935 and 1939 .",
            "you should use campuses in place of enrollments table and also ensure the id is between 1935 and 1939 .",
            "you should use campuses in place of enrollments table and also ensure the county is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the totalenrollment ay is between 1935 and 1939 .",
            "you should use campuses in place of county table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the discipline is between 1935 and 1939 .",
            "you should use campuses in place of undergraduate table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of enrollments table and also ensure the fte ay is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the county is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the fte ay is between 1935 and 1939 .",
            "you should use campuses in place of csu fees table and also ensure the location is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the campus fee is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the location is between 1935 and 1939 .",
            "you should use campuses in place of totalenrollment ay table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the campus fee is between 1935 and 1939 .",
            "you should use campuses in place of graduate table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of campus fee table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the degrees is between 1935 and 1939 .",
            "you should use campuses in place of csu fees table and also ensure the totalenrollment ay is between 1935 and 1939 .",
            "you should use campuses in place of enrollments table and also ensure the location is between 1935 and 1939 .",
            "you should use location in place of faculty table and also ensure the year is between 1935 and 1939 .",
            "you should use totalenrollment ay in place of faculty table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of csu fees table and also ensure the degrees is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the discipline is between 1935 and 1939 .",
            "you should use campuses in place of discipline enrollments table and also ensure the campus fee is between 1935 and 1939 .",
            "you should use campuses in place of csu fees table and also ensure the id is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the fte ay is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the totalenrollment ay is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the undergraduate is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the id is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the id is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the undergraduate is between 1935 and 1939 .",
            "you should use fte ay in place of faculty table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of csu fees table and also ensure the fte ay is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the location is between 1935 and 1939 .",
            "you should use campuses in place of discipline enrollments table and also ensure the location is between 1935 and 1939 .",
            "you should use campuses in place of campuses table and also ensure the totalenrollment ay is between 1935 and 1939 .",
            "you should use campuses in place of discipline enrollments table and also ensure the year is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the graduate is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the discipline is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the undergraduate is between 1935 and 1939 .",
            "you should use campuses in place of csu fees table and also ensure the undergraduate is between 1935 and 1939 .",
            "you should use campuses in place of faculty table and also ensure the campus fee is between 1935 and 1939 .",
            "you should use campuses in place of degrees table and also ensure the graduate is between 1935 and 1939 .",
            "you should use campuses in place of enrollments table and also ensure the undergraduate is between 1935 and 1939 .",
            "you should use campuses in place of csu fees table and also ensure the graduate is between 1935 and 1939 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartment buildings table besides the apartments table . consider the building short name equals Columbus Square conditions in place of the apartment number like Columbus Square conditions .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                22
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                23,
                33
            ]
        ],
        "positive_example": "Switch apartment number with \"Corresponding apartment buildings 's building short name",
        "negative_examples": [
            "switch apartment number with \" corresponding guests 's bedroom count",
            "switch apartment number with \" corresponding view unit status 's gender code",
            "switch apartment number with \" corresponding apartments 's facility code",
            "switch apartment number with \" corresponding apartment buildings 's building id",
            "switch apartment number with \" corresponding apartments 's apartment booking id",
            "switch apartment number with \" corresponding apartment buildings 's building phone",
            "switch apartment number with \" corresponding apartment facilities 's booking status code",
            "switch apartment number with \" corresponding view unit status 's apartment type code",
            "switch apartment number with \" corresponding guests 's building manager",
            "switch apartment number with \" corresponding guests 's booking start date",
            "switch apartment number with \" corresponding apartment facilities 's booking end date",
            "switch apartment number with \" corresponding apartment facilities 's booking start date",
            "switch apartment number with \" corresponding apartments 's building manager",
            "switch apartment number with \" corresponding apartment facilities 's facility code",
            "switch apartment number with \" corresponding apartment buildings 's booking start date",
            "switch apartment number with \" corresponding view unit status 's booking end date",
            "switch apartment number with \" corresponding apartments 's guest id",
            "switch apartment number with \" corresponding apartments 's guest first name",
            "switch apartment number with \" corresponding guests 's bathroom count",
            "switch apartment number with \" corresponding view unit status 's booking start date",
            "switch apartment number with \" corresponding apartment buildings 's apartment number",
            "switch apartment number with \" corresponding apartments 's apartment number",
            "switch apartment number with \" corresponding guests 's available yes or no",
            "switch apartment number with \" corresponding view unit status 's guest id",
            "switch apartment number with \" corresponding apartment buildings 's bathroom count",
            "switch apartment number with \" corresponding apartment bookings 's status date",
            "switch apartment number with \" corresponding view unit status 's status date",
            "switch apartment number with \" corresponding apartment facilities 's building manager",
            "switch apartment number with \" corresponding apartment facilities 's building id",
            "switch apartment number with \" corresponding view unit status 's room count",
            "switch apartment number with \" corresponding apartment facilities 's building short name",
            "switch apartment number with \" corresponding apartment bookings 's gender code",
            "switch apartment number with \" corresponding view unit status 's bathroom count",
            "switch apartment number with \" corresponding apartment buildings 's status date",
            "switch apartment number with \" corresponding apartment bookings 's building id",
            "switch apartment number with \" corresponding apartments 's guest last name",
            "switch apartment number with \" corresponding apartment facilities 's apartment number",
            "switch apartment number with \" corresponding guests 's apartment type code",
            "switch apartment number with \" corresponding apartments 's gender code",
            "switch apartment number with \" corresponding guests 's booking status code",
            "switch apartment number with \" corresponding apartment buildings 's building description",
            "switch apartment number with \" corresponding apartment facilities 's apartment type code",
            "switch apartment number with \" corresponding guests 's building address",
            "switch apartment number with \" corresponding apartment bookings 's building short name",
            "switch apartment number with \" corresponding apartment bookings 's apartment id",
            "switch apartment number with \" corresponding apartment buildings 's guest first name",
            "switch apartment number with \" corresponding view unit status 's building description",
            "switch apartment number with \" corresponding apartment bookings 's booking status code",
            "switch apartment number with \" corresponding guests 's booking end date",
            "switch apartment number with \" corresponding guests 's facility code"
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 2 , additionally make sure that nickname like % s % .",
        "primary_span": [
            [
                4,
                13
            ]
        ],
        "secondary_span": [],
        "positive_example": "Make sure nickname contains letter \"s\" for that staff .",
        "negative_examples": [
            "make sure address id contains letter \" s \" for that staff .",
            "make sure line 1 number building contains letter \" s \" for that staff .",
            "make sure city contains letter \" s \" for that staff .",
            "make sure zip postcode contains letter \" s \" for that staff .",
            "make sure state province county contains letter \" s \" for that staff .",
            "make sure country contains letter \" s \" for that staff .",
            "make sure staff id contains letter \" s \" for that staff .",
            "make sure staff address id contains letter \" s \" for that staff .",
            "make sure first name contains letter \" s \" for that staff .",
            "make sure middle name contains letter \" s \" for that staff .",
            "make sure last name contains letter \" s \" for that staff .",
            "make sure date of birth contains letter \" s \" for that staff .",
            "make sure date joined staff contains letter \" s \" for that staff .",
            "make sure date left staff contains letter \" s \" for that staff .",
            "make sure vehicle id contains letter \" s \" for that staff .",
            "make sure vehicle details contains letter \" s \" for that staff .",
            "make sure customer id contains letter \" s \" for that staff .",
            "make sure customer address id contains letter \" s \" for that staff .",
            "make sure customer status code contains letter \" s \" for that staff .",
            "make sure date became customer contains letter \" s \" for that staff .",
            "make sure amount outstanding contains letter \" s \" for that staff .",
            "make sure email address contains letter \" s \" for that staff .",
            "make sure phone number contains letter \" s \" for that staff .",
            "make sure cell mobile phone number contains letter \" s \" for that staff .",
            "make sure datetime payment contains letter \" s \" for that staff .",
            "make sure payment method code contains letter \" s \" for that staff .",
            "make sure amount payment contains letter \" s \" for that staff .",
            "make sure lesson id contains letter \" s \" for that staff .",
            "make sure lesson status code contains letter \" s \" for that staff .",
            "make sure lesson date contains letter \" s \" for that staff .",
            "make sure lesson time contains letter \" s \" for that staff .",
            "make sure price contains letter \" s \" for that staff ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building full name like Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                25,
                29
            ]
        ],
        "secondary_span": [
            [
                13,
                24
            ],
            [
                30,
                37
            ]
        ],
        "positive_example": "Change bathroom count with bedroom count and building full name contains Columbus Square\" with building short name equals Columbus Square\".",
        "negative_examples": [
            "change bathroom count with bedroom count and building full name contains columbus square \" with guest first name equals columbus square \" .",
            "change bathroom count with bedroom count and building manager contains columbus square \" with building short name equals columbus square \" .",
            "change status date with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with guest last name equals columbus square \" .",
            "change bathroom count with bedroom count and date of birth contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with status date equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with apartment booking id equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with building address equals columbus square \" .",
            "change bathroom count with bedroom count and room count contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and apartment id contains columbus square \" with building short name equals columbus square \" .",
            "change building manager with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with available yes or no equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with apartment number equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with building description equals columbus square \" .",
            "change bathroom count with bedroom count and building description contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and gender code contains columbus square \" with building short name equals columbus square \" .",
            "change apartment id with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and available yes or no contains columbus square \" with building short name equals columbus square \" .",
            "change guest first name with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with booking start date equals columbus square \" .",
            "change bathroom count with bedroom count and bedroom count contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with booking end date equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with gender code equals columbus square \" .",
            "change booking status code with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building address contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with guest id equals columbus square \" .",
            "change bathroom count with bedroom count and status date contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with building phone equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with building id equals columbus square \" .",
            "change guest id with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change building address with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change available yes or no with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and booking start date contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with building manager equals columbus square \" .",
            "change apartment type code with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with bedroom count equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with room count equals columbus square \" .",
            "change bathroom count with bedroom count and building phone contains columbus square \" with building short name equals columbus square \" .",
            "change bedroom count with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with booking status code equals columbus square \" .",
            "change bathroom count with bedroom count and guest id contains columbus square \" with building short name equals columbus square \" .",
            "change apartment number with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change building phone with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change facility code with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change building description with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and apartment number contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and building full name contains columbus square \" with apartment id equals columbus square \" .",
            "change bathroom count with bedroom count and facility code contains columbus square \" with building short name equals columbus square \" .",
            "change booking end date with bedroom count and building full name contains columbus square \" with building short name equals columbus square \" .",
            "change bathroom count with bedroom count and apartment booking id contains columbus square \" with building short name equals columbus square \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "find product size in place of product color .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "I want product size in place of product color.",
        "negative_examples": [
            "i want customer middle initial in place of product color .",
            "i want product size in place of vat rating .",
            "i want product size in place of date order placed .",
            "i want product size in place of derived total cost .",
            "i want product size in place of state county province .",
            "i want transaction type in place of product color .",
            "i want product size in place of customer id .",
            "i want other order item details in place of product color .",
            "i want product size in place of derived vat payable .",
            "i want product size in place of invoice number .",
            "i want product size in place of other account details .",
            "i want account name in place of product color .",
            "i want product size in place of transaction date .",
            "i want product size in place of derived product cost .",
            "i want gender in place of product color .",
            "i want product size in place of customer first name .",
            "i want derived vat payable in place of product color .",
            "i want customer last name in place of product color .",
            "i want product size in place of parent product id .",
            "i want product size in place of unit price .",
            "i want product quantity in place of product color .",
            "i want transaction date in place of product color .",
            "i want product size in place of gender .",
            "i want product size in place of product price .",
            "i want product size in place of account name .",
            "i want order details in place of product color .",
            "i want invoice number in place of product color .",
            "i want product size in place of product name .",
            "i want product size in place of login password .",
            "i want product size in place of product title .",
            "i want derived total cost in place of product color .",
            "i want transaction comment in place of product color .",
            "i want derived product cost in place of product color .",
            "i want unit price in place of product color .",
            "i want product size in place of product type description .",
            "i want product price in place of product color .",
            "i want customer id in place of product color .",
            "i want other transaction details in place of product color .",
            "i want product size in place of login name .",
            "i want product size in place of country .",
            "i want product size in place of customer middle initial .",
            "i want town city in place of product color .",
            "i want product size in place of production type code .",
            "i want login password in place of product color .",
            "i want order item id in place of product color .",
            "i want transaction id in place of product color .",
            "i want product size in place of transaction amount .",
            "i want product size in place of transaction comment .",
            "i want product size in place of transaction id .",
            "i want product size in place of account id ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the csu fees 's year equals San Jose State University and campuses 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                21
            ]
        ],
        "secondary_span": [
            [
                22,
                42
            ]
        ],
        "positive_example": "csu fees ' year equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
        "negative_examples": [
            "csu fees ' year equals 1996 , not id 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not location 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not county 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not campus fee 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not degrees 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not discipline 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not undergraduate 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not graduate 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not totalenrollment ay 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not fte ay 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' year equals 1996 , not faculty 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' id equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' location equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' county equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' campus fee equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' degrees equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' discipline equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' undergraduate equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' graduate equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' totalenrollment ay equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' fte ay equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses .",
            "csu fees ' faculty equals 1996 , not campuses 's year and replace csu fees 's year with campuses ' campuses ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the county equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                26
            ]
        ],
        "positive_example": "Exchange county with campuses .",
        "negative_examples": [
            "exchange county with id .",
            "exchange county with location .",
            "exchange county with year .",
            "exchange county with campus fee .",
            "exchange county with degrees .",
            "exchange county with discipline .",
            "exchange county with undergraduate .",
            "exchange county with graduate .",
            "exchange county with totalenrollment ay .",
            "exchange county with fte ay .",
            "exchange county with faculty .",
            "exchange id with campuses .",
            "exchange location with campuses .",
            "exchange year with campuses .",
            "exchange campus fee with campuses .",
            "exchange degrees with campuses .",
            "exchange discipline with campuses .",
            "exchange undergraduate with campuses .",
            "exchange graduate with campuses .",
            "exchange totalenrollment ay with campuses .",
            "exchange fte ay with campuses .",
            "exchange faculty with campuses ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the district name equals Khanewal District conditions in place of the headquartered city equals Khanewal District conditions . find store name in place of district name .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                24
            ],
            [
                36,
                38
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                25,
                35
            ],
            [
                39,
                44
            ]
        ],
        "positive_example": "Replace district name of district table and headquartered city with store name of store table and district name respectively .",
        "negative_examples": [
            "replace district name of district table and headquartered city with product id of store table and district name respectively .",
            "replace district name of district table and headquartered city with product of store table and district name respectively .",
            "replace district name of district table and headquartered city with dimensions of store table and district name respectively .",
            "replace district name of district table and headquartered city with dpi of store table and district name respectively .",
            "replace district name of district table and headquartered city with pages per minute color of store table and district name respectively .",
            "replace district name of district table and headquartered city with max page size of store table and district name respectively .",
            "replace district name of district table and headquartered city with interface of store table and district name respectively .",
            "replace district name of district table and headquartered city with store id of store table and district name respectively .",
            "replace district name of district table and headquartered city with type of store table and district name respectively .",
            "replace district name of district table and headquartered city with area size of store table and district name respectively .",
            "replace district name of district table and headquartered city with number of product category of store table and district name respectively .",
            "replace district name of district table and headquartered city with ranking of store table and district name respectively .",
            "replace district name of district table and headquartered city with district id of store table and district name respectively .",
            "replace district name of district table and headquartered city with city population of store table and district name respectively .",
            "replace district name of district table and headquartered city with city area of store table and district name respectively .",
            "replace product id of district table and headquartered city with store name of store table and district name respectively .",
            "replace product of district table and headquartered city with store name of store table and district name respectively .",
            "replace dimensions of district table and headquartered city with store name of store table and district name respectively .",
            "replace dpi of district table and headquartered city with store name of store table and district name respectively .",
            "replace pages per minute color of district table and headquartered city with store name of store table and district name respectively .",
            "replace max page size of district table and headquartered city with store name of store table and district name respectively .",
            "replace interface of district table and headquartered city with store name of store table and district name respectively .",
            "replace store id of district table and headquartered city with store name of store table and district name respectively .",
            "replace type of district table and headquartered city with store name of store table and district name respectively .",
            "replace area size of district table and headquartered city with store name of store table and district name respectively .",
            "replace number of product category of district table and headquartered city with store name of store table and district name respectively .",
            "replace ranking of district table and headquartered city with store name of store table and district name respectively .",
            "replace district id of district table and headquartered city with store name of store table and district name respectively .",
            "replace city population of district table and headquartered city with store name of store table and district name respectively .",
            "replace city area of district table and headquartered city with store name of store table and district name respectively .",
            "replace district name of district table and product id with store name of store table and district name respectively .",
            "replace district name of district table and product with store name of store table and district name respectively .",
            "replace district name of district table and dimensions with store name of store table and district name respectively .",
            "replace district name of district table and dpi with store name of store table and district name respectively .",
            "replace district name of district table and pages per minute color with store name of store table and district name respectively .",
            "replace district name of district table and max page size with store name of store table and district name respectively .",
            "replace district name of district table and interface with store name of store table and district name respectively .",
            "replace district name of district table and store id with store name of store table and district name respectively .",
            "replace district name of district table and type with store name of store table and district name respectively .",
            "replace district name of district table and area size with store name of store table and district name respectively .",
            "replace district name of district table and number of product category with store name of store table and district name respectively .",
            "replace district name of district table and ranking with store name of store table and district name respectively .",
            "replace district name of district table and district id with store name of store table and district name respectively .",
            "replace district name of district table and city population with store name of store table and district name respectively .",
            "replace district name of district table and city area with store name of store table and district name respectively ."
        ],
        "neg_len": 45
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "You need to use campus in place of ID.",
        "negative_examples": [
            "you need to use id in place of id .",
            "you need to use location in place of id .",
            "you need to use county in place of id .",
            "you need to use year in place of id .",
            "you need to use campus fee in place of id .",
            "you need to use degrees in place of id .",
            "you need to use discipline in place of id .",
            "you need to use undergraduate in place of id .",
            "you need to use graduate in place of id .",
            "you need to use totalenrollment ay in place of id .",
            "you need to use fte ay in place of id .",
            "you need to use faculty in place of id ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "Remove \"Faculty equals 357. 1\" part .",
        "negative_examples": [
            "remove \" campuses equals 357 . 1 \" part .",
            "remove \" csu fees equals 357 . 1 \" part .",
            "remove \" degrees equals 357 . 1 \" part .",
            "remove \" discipline enrollments equals 357 . 1 \" part .",
            "remove \" enrollments equals 357 . 1 \" part .",
            "remove \" id equals 357 . 1 \" part .",
            "remove \" campus equals 357 . 1 \" part .",
            "remove \" location equals 357 . 1 \" part .",
            "remove \" county equals 357 . 1 \" part .",
            "remove \" year equals 357 . 1 \" part .",
            "remove \" campus fee equals 357 . 1 \" part .",
            "remove \" discipline equals 357 . 1 \" part .",
            "remove \" undergraduate equals 357 . 1 \" part .",
            "remove \" graduate equals 357 . 1 \" part .",
            "remove \" totalenrollment ay equals 357 . 1 \" part .",
            "remove \" fte ay equals 357 . 1 \" part ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the discipline enrollments 's year equals San Jose State University and discipline enrollments 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                33
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                34,
                55
            ]
        ],
        "positive_example": "Find campus fee whose csu fees 's year equals 1996 and campuses equals San Jose State University .",
        "negative_examples": [
            "find campus fee whose csu fees 's id equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's campus equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's location equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's county equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's campus fee equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's degrees equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's discipline equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's undergraduate equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's graduate equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's totalenrollment ay equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's fte ay equals 1996 and campuses equals san jose state university .",
            "find campus fee whose csu fees 's faculty equals 1996 and campuses equals san jose state university ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 2 , remove the discipline equals 4 conditions .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                25
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ]
        ],
        "positive_example": "Remove discipline equals 4 , find campuses equals CSU in place of that .",
        "negative_examples": [
            "remove id equals 4 , find campuses equals csu in place of that .",
            "remove campus equals 4 , find campuses equals csu in place of that .",
            "remove location equals 4 , find campuses equals csu in place of that .",
            "remove county equals 4 , find campuses equals csu in place of that .",
            "remove year equals 4 , find campuses equals csu in place of that .",
            "remove campus fee equals 4 , find campuses equals csu in place of that .",
            "remove degrees equals 4 , find campuses equals csu in place of that .",
            "remove undergraduate equals 4 , find campuses equals csu in place of that .",
            "remove graduate equals 4 , find campuses equals csu in place of that .",
            "remove totalenrollment ay equals 4 , find campuses equals csu in place of that .",
            "remove fte ay equals 4 , find campuses equals csu in place of that .",
            "remove faculty equals 4 , find campuses equals csu in place of that ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals Steven Spielberg conditions in place of the name equals Steven Spielberg conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "There should be director of movie table instead of name .",
        "negative_examples": [
            "there should be movie id of movie table instead of name .",
            "there should be title of movie table instead of name .",
            "there should be year of movie table instead of name .",
            "there should be reviewer id of movie table instead of name .",
            "there should be rating stars of movie table instead of name .",
            "there should be rating date of movie table instead of name .",
            "there should be director of movie table instead of movie id .",
            "there should be director of movie table instead of title .",
            "there should be director of movie table instead of year .",
            "there should be director of movie table instead of reviewer id .",
            "there should be director of movie table instead of rating stars .",
            "there should be director of movie table instead of rating date ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find summation of faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Find summation of faculty of faculty table whose year equals 2002.",
        "negative_examples": [
            "find summation of campuses of faculty table whose year equals 2002 .",
            "find summation of csu fees of faculty table whose year equals 2002 .",
            "find summation of degrees of faculty table whose year equals 2002 .",
            "find summation of discipline enrollments of faculty table whose year equals 2002 .",
            "find summation of enrollments of faculty table whose year equals 2002 .",
            "find summation of id of faculty table whose year equals 2002 .",
            "find summation of campus of faculty table whose year equals 2002 .",
            "find summation of location of faculty table whose year equals 2002 .",
            "find summation of county of faculty table whose year equals 2002 .",
            "find summation of year of faculty table whose year equals 2002 .",
            "find summation of campus fee of faculty table whose year equals 2002 .",
            "find summation of discipline of faculty table whose year equals 2002 .",
            "find summation of undergraduate of faculty table whose year equals 2002 .",
            "find summation of graduate of faculty table whose year equals 2002 .",
            "find summation of totalenrollment ay of faculty table whose year equals 2002 .",
            "find summation of fte ay of faculty table whose year equals 2002 ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "find product size in place of product color .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace product color with product size .",
        "negative_examples": [
            "replace invoice number with product size .",
            "replace product color with date account opened .",
            "replace parent product id with product size .",
            "replace product color with town city .",
            "replace product color with account id .",
            "replace product color with transaction date .",
            "replace town city with product size .",
            "replace product color with other account details .",
            "replace customer first name with product size .",
            "replace product color with phone number .",
            "replace product color with invoice date .",
            "replace email address with product size .",
            "replace product color with email address .",
            "replace product color with account name .",
            "replace product color with transaction type .",
            "replace product color with login password .",
            "replace product color with transaction comment .",
            "replace product color with product title .",
            "replace transaction comment with product size .",
            "replace product color with other order item details .",
            "replace product color with production type code .",
            "replace customer last name with product size .",
            "replace vat rating with product size .",
            "replace product price with product size .",
            "replace product color with parent product id .",
            "replace order item id with product size .",
            "replace other account details with product size .",
            "replace transaction id with product size .",
            "replace product color with vat rating .",
            "replace product color with order details .",
            "replace product color with unit price .",
            "replace product title with product size .",
            "replace product color with product type description .",
            "replace product color with state county province .",
            "replace product color with customer middle initial .",
            "replace product color with order item id .",
            "replace product color with invoice number .",
            "replace production type code with product size .",
            "replace product color with transaction amount .",
            "replace product color with date order placed .",
            "replace product color with country .",
            "replace product color with transaction id .",
            "replace product color with login name .",
            "replace other order item details with product size .",
            "replace product color with order id .",
            "replace product color with product quantity .",
            "replace derived product cost with product size .",
            "replace login name with product size .",
            "replace phone number with product size .",
            "replace customer middle initial with product size ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the campuses table and discipline enrollments table . in step 3 , find degrees 's year in place of discipline enrollments 's year . order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                14
            ],
            [
                19,
                22
            ],
            [
                31,
                37
            ]
        ],
        "secondary_span": [
            [
                4,
                14
            ],
            [
                23,
                30
            ],
            [
                38,
                43
            ]
        ],
        "positive_example": "In step 2 No need to find average value of degrees .",
        "negative_examples": [
            "in step 2 no need to find average value of campuses .",
            "in step 2 no need to find average value of csu fees .",
            "in step 2 no need to find average value of discipline enrollments .",
            "in step 2 no need to find average value of enrollments .",
            "in step 2 no need to find average value of faculty .",
            "in step 2 no need to find average value of id .",
            "in step 2 no need to find average value of campus .",
            "in step 2 no need to find average value of location .",
            "in step 2 no need to find average value of county .",
            "in step 2 no need to find average value of year .",
            "in step 2 no need to find average value of campus fee .",
            "in step 2 no need to find average value of discipline .",
            "in step 2 no need to find average value of undergraduate .",
            "in step 2 no need to find average value of graduate .",
            "in step 2 no need to find average value of totalenrollment ay .",
            "in step 2 no need to find average value of fte ay ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use customer payments table in place of lessons table .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "You should supplant customer payments table in replacement of lessons table.",
        "negative_examples": [
            "you should supplant addresses table in replacement of lessons table .",
            "you should supplant staff table in replacement of lessons table .",
            "you should supplant vehicles table in replacement of lessons table .",
            "you should supplant customers table in replacement of lessons table .",
            "you should supplant customer payments table in replacement of addresses table .",
            "you should supplant customer payments table in replacement of staff table .",
            "you should supplant customer payments table in replacement of vehicles table .",
            "you should supplant customer payments table in replacement of customers table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally make sure that year equals 2005 .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [],
        "positive_example": "Also ensure year equals 2005.",
        "negative_examples": [
            "also ensure id equals 2005 .",
            "also ensure campus equals 2005 .",
            "also ensure location equals 2005 .",
            "also ensure county equals 2005 .",
            "also ensure campus fee equals 2005 .",
            "also ensure degrees equals 2005 .",
            "also ensure discipline equals 2005 .",
            "also ensure undergraduate equals 2005 .",
            "also ensure graduate equals 2005 .",
            "also ensure totalenrollment ay equals 2005 .",
            "also ensure fte ay equals 2005 .",
            "also ensure faculty equals 2005 ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartments table besides the apartment buildings table . consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building full name equals Columbus Square conditions . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                22
            ],
            [
                42,
                46
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                23,
                41
            ],
            [
                47,
                53
            ]
        ],
        "positive_example": "Find summation of room count of apartments where building short name equals Columbus Square .",
        "negative_examples": [
            "find summation of apartment number of guests where building short name equals columbus square .",
            "find summation of facility code of guests where building short name equals columbus square .",
            "find summation of facility code of apartment buildings where building short name equals columbus square .",
            "find summation of room count of apartments where guest last name equals columbus square .",
            "find summation of gender code of guests where building short name equals columbus square .",
            "find summation of facility code of apartment facilities where building short name equals columbus square .",
            "find summation of building address of view unit status where building short name equals columbus square .",
            "find summation of room count of apartment buildings where guest first name equals columbus square .",
            "find summation of room count of apartment bookings where building id equals columbus square .",
            "find summation of gender code of apartments where building short name equals columbus square .",
            "find summation of room count of apartment bookings where building manager equals columbus square .",
            "find summation of building id of apartment buildings where building short name equals columbus square .",
            "find summation of room count of apartments where bedroom count equals columbus square .",
            "find summation of building manager of apartment bookings where building short name equals columbus square .",
            "find summation of apartment id of apartments where building short name equals columbus square .",
            "find summation of building id of apartment facilities where building short name equals columbus square .",
            "find summation of room count of guests where building full name equals columbus square .",
            "find summation of facility code of apartments where building short name equals columbus square .",
            "find summation of apartment type code of view unit status where building short name equals columbus square .",
            "find summation of bedroom count of guests where building short name equals columbus square .",
            "find summation of room count of apartment bookings where building address equals columbus square .",
            "find summation of room count of apartment facilities where gender code equals columbus square .",
            "find summation of room count of apartments where building full name equals columbus square .",
            "find summation of room count of apartment buildings where gender code equals columbus square .",
            "find summation of room count of apartment bookings where apartment number equals columbus square .",
            "find summation of building id of apartment bookings where building short name equals columbus square .",
            "find summation of apartment booking id of apartment bookings where building short name equals columbus square .",
            "find summation of guest id of apartment facilities where building short name equals columbus square .",
            "find summation of room count of view unit status where status date equals columbus square .",
            "find summation of room count of apartments where building phone equals columbus square .",
            "find summation of room count of apartments where guest id equals columbus square .",
            "find summation of room count of apartment facilities where available yes or no equals columbus square .",
            "find summation of apartment number of apartment buildings where building short name equals columbus square .",
            "find summation of building phone of apartment buildings where building short name equals columbus square .",
            "find summation of room count of apartment buildings where available yes or no equals columbus square .",
            "find summation of booking end date of guests where building short name equals columbus square .",
            "find summation of room count of apartments where guest first name equals columbus square .",
            "find summation of room count of guests where building phone equals columbus square .",
            "find summation of room count of apartments where building id equals columbus square .",
            "find summation of room count of apartments where building description equals columbus square .",
            "find summation of building phone of apartments where building short name equals columbus square .",
            "find summation of building full name of apartment buildings where building short name equals columbus square .",
            "find summation of booking start date of apartment bookings where building short name equals columbus square .",
            "find summation of room count of apartment buildings where building full name equals columbus square .",
            "find summation of room count of apartments where booking status code equals columbus square .",
            "find summation of building description of apartment facilities where building short name equals columbus square .",
            "find summation of apartment id of apartment buildings where building short name equals columbus square .",
            "find summation of room count of view unit status where apartment id equals columbus square .",
            "find summation of room count of apartments where booking start date equals columbus square .",
            "find summation of room count of apartment bookings where apartment type code equals columbus square ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "use apartment bookings table in place of apartment buildings table .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Count total rows of table and use apartment bookings in place of apartment buildings. ",
        "negative_examples": [
            "count total rows of table and use apartment bookings in place of apartments .",
            "count total rows of table and use apartment bookings in place of apartment facilities .",
            "count total rows of table and use apartment bookings in place of guests .",
            "count total rows of table and use apartment bookings in place of apartment bookings .",
            "count total rows of table and use apartment bookings in place of view unit status ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table .",
        "primary_span": [
            [
                0,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "You have to calculate the number of stores for every city.",
        "negative_examples": [
            "you have to calculate the number of product for every city .",
            "you have to calculate the number of district for every city .",
            "you have to calculate the number of store product for every city .",
            "you have to calculate the number of store district for every city .",
            "you have to calculate the number of product id for every city .",
            "you have to calculate the number of dimensions for every city .",
            "you have to calculate the number of dpi for every city .",
            "you have to calculate the number of pages per minute color for every city .",
            "you have to calculate the number of max page size for every city .",
            "you have to calculate the number of interface for every city .",
            "you have to calculate the number of store id for every city .",
            "you have to calculate the number of store name for every city .",
            "you have to calculate the number of type for every city .",
            "you have to calculate the number of area size for every city .",
            "you have to calculate the number of number of product category for every city .",
            "you have to calculate the number of ranking for every city .",
            "you have to calculate the number of district id for every city .",
            "you have to calculate the number of district name for every city .",
            "you have to calculate the number of headquartered city for every city .",
            "you have to calculate the number of city population for every city .",
            "you have to calculate the number of city area for every city ."
        ],
        "neg_len": 21
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , additionally find account name .",
        "primary_span": [
            [
                4,
                8
            ]
        ],
        "secondary_span": [],
        "positive_example": "You should also add account name in Step 2.",
        "negative_examples": [
            "you should also add customer id in step 2 .",
            "you should also add customer first name in step 2 .",
            "you should also add customer middle initial in step 2 .",
            "you should also add customer last name in step 2 .",
            "you should also add gender in step 2 .",
            "you should also add email address in step 2 .",
            "you should also add login name in step 2 .",
            "you should also add login password in step 2 .",
            "you should also add phone number in step 2 .",
            "you should also add town city in step 2 .",
            "you should also add state county province in step 2 .",
            "you should also add country in step 2 .",
            "you should also add order id in step 2 .",
            "you should also add date order placed in step 2 .",
            "you should also add order details in step 2 .",
            "you should also add invoice number in step 2 .",
            "you should also add invoice date in step 2 .",
            "you should also add account id in step 2 .",
            "you should also add date account opened in step 2 .",
            "you should also add other account details in step 2 .",
            "you should also add production type code in step 2 .",
            "you should also add product type description in step 2 .",
            "you should also add vat rating in step 2 .",
            "you should also add product id in step 2 .",
            "you should also add parent product id in step 2 .",
            "you should also add unit price in step 2 .",
            "you should also add product name in step 2 .",
            "you should also add product color in step 2 .",
            "you should also add product size in step 2 .",
            "you should also add transaction id in step 2 .",
            "you should also add transaction type in step 2 .",
            "you should also add transaction date in step 2 .",
            "you should also add transaction amount in step 2 .",
            "you should also add transaction comment in step 2 .",
            "you should also add other transaction details in step 2 .",
            "you should also add order item id in step 2 .",
            "you should also add product quantity in step 2 .",
            "you should also add other order item details in step 2 .",
            "you should also add product title in step 2 .",
            "you should also add product price in step 2 .",
            "you should also add derived product cost in step 2 .",
            "you should also add derived vat payable in step 2 .",
            "you should also add derived total cost in step 2 ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "find campus in place of id .",
        "primary_span": [
            [
                0,
                1
            ]
        ],
        "secondary_span": [
            [
                2,
                6
            ]
        ],
        "positive_example": "Replace id with campus .",
        "negative_examples": [
            "replace id with id .",
            "replace id with location .",
            "replace id with county .",
            "replace id with year .",
            "replace id with campus fee .",
            "replace id with degrees .",
            "replace id with discipline .",
            "replace id with undergraduate .",
            "replace id with graduate .",
            "replace id with totalenrollment ay .",
            "replace id with fte ay .",
            "replace id with faculty ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table besides the faculty table . consider the campuses 's campus equals San Francisco State University and faculty 's year equals 2004 conditions in place of the faculty 's year equals San Francisco State University and faculty 's campus equals 2004 conditions . find faculty in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                13,
                29
            ],
            [
                50,
                51
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ],
            [
                30,
                49
            ],
            [
                52,
                58
            ]
        ],
        "positive_example": "Ensure ( for)faculty's faculty whose Campuses's campus equals San Francisco State University and year equals 2004.",
        "negative_examples": [
            "ensure ( for ) campuses 's faculty whose campuses 's campus equals san francisco state university and id equals 2004 .",
            "ensure ( for ) campuses 's faculty whose campuses 's campus equals san francisco state university and county equals 2004 .",
            "ensure ( for ) faculty 's faculty whose id 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) csu fees 's faculty whose campuses 's campus equals san francisco state university and location equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and location equals 2004 .",
            "ensure ( for ) faculty 's faculty whose campuses 's campus equals san francisco state university and campus fee equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and degrees equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's location equals san francisco state university and year equals 2004 .",
            "ensure ( for ) fte ay 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) campuses 's faculty whose campuses 's campus equals san francisco state university and campus fee equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and totalenrollment ay equals 2004 .",
            "ensure ( for ) campuses 's faculty whose campuses 's undergraduate equals san francisco state university and year equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's totalenrollment ay equals san francisco state university and year equals 2004 .",
            "ensure ( for ) faculty 's faculty whose campuses 's campus equals san francisco state university and degrees equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and id equals 2004 .",
            "ensure ( for ) discipline enrollments 's faculty whose campuses 's campus equals san francisco state university and discipline equals 2004 .",
            "ensure ( for ) campuses 's faculty whose campuses 's graduate equals san francisco state university and year equals 2004 .",
            "ensure ( for ) enrollments 's faculty whose campuses 's campus equals san francisco state university and campus fee equals 2004 .",
            "ensure ( for ) csu fees 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and graduate equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and campus fee equals 2004 .",
            "ensure ( for ) discipline enrollments 's faculty whose campuses 's campus equals san francisco state university and totalenrollment ay equals 2004 .",
            "ensure ( for ) discipline enrollments 's faculty whose campuses 's graduate equals san francisco state university and year equals 2004 .",
            "ensure ( for ) enrollments 's faculty whose campuses 's campus equals san francisco state university and graduate equals 2004 .",
            "ensure ( for ) enrollments 's faculty whose campuses 's campus fee equals san francisco state university and year equals 2004 .",
            "ensure ( for ) enrollments 's faculty whose campuses 's campus equals san francisco state university and county equals 2004 .",
            "ensure ( for ) enrollments 's faculty whose campuses 's county equals san francisco state university and year equals 2004 .",
            "ensure ( for ) discipline enrollments 's faculty whose campuses 's fte ay equals san francisco state university and year equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus equals san francisco state university and discipline equals 2004 .",
            "ensure ( for ) discipline enrollments 's faculty whose campuses 's county equals san francisco state university and year equals 2004 .",
            "ensure ( for ) id 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) discipline enrollments 's faculty whose campuses 's campus fee equals san francisco state university and year equals 2004 .",
            "ensure ( for ) enrollments 's faculty whose campuses 's degrees equals san francisco state university and year equals 2004 .",
            "ensure ( for ) csu fees 's faculty whose campuses 's degrees equals san francisco state university and year equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's undergraduate equals san francisco state university and year equals 2004 .",
            "ensure ( for ) faculty 's faculty whose location 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) county 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) discipline enrollments 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) csu fees 's faculty whose campuses 's fte ay equals san francisco state university and year equals 2004 .",
            "ensure ( for ) enrollments 's faculty whose campuses 's campus equals san francisco state university and fte ay equals 2004 .",
            "ensure ( for ) degrees 's faculty whose campuses 's campus fee equals san francisco state university and year equals 2004 .",
            "ensure ( for ) campuses 's faculty whose campuses 's degrees equals san francisco state university and year equals 2004 .",
            "ensure ( for ) undergraduate 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) csu fees 's faculty whose campuses 's location equals san francisco state university and year equals 2004 .",
            "ensure ( for ) discipline 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) csu fees 's faculty whose campuses 's campus equals san francisco state university and undergraduate equals 2004 .",
            "ensure ( for ) faculty 's faculty whose undergraduate 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) campus fee 's faculty whose campuses 's campus equals san francisco state university and year equals 2004 .",
            "ensure ( for ) faculty 's faculty whose totalenrollment ay 's campus equals san francisco state university and year equals 2004 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find minimum snatch in place of minimum clean jerk .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                9
            ]
        ],
        "positive_example": "Find snatch by swapping it with clean jerk.",
        "negative_examples": [
            "find snatch by swapping it with body builder id .",
            "find snatch by swapping it with people id .",
            "find snatch by swapping it with total .",
            "find snatch by swapping it with name .",
            "find snatch by swapping it with height .",
            "find snatch by swapping it with weight .",
            "find snatch by swapping it with birth date .",
            "find snatch by swapping it with birth place .",
            "find body builder id by swapping it with clean jerk .",
            "find people id by swapping it with clean jerk .",
            "find total by swapping it with clean jerk .",
            "find name by swapping it with clean jerk .",
            "find height by swapping it with clean jerk .",
            "find weight by swapping it with clean jerk .",
            "find birth date by swapping it with clean jerk .",
            "find birth place by swapping it with clean jerk ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's campus equals 1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "You need to delete faculty's campuses equals 1 from step 2.",
        "negative_examples": [
            "you need to delete campuses 's campuses equals 1 from step 2 .",
            "you need to delete csu fees 's campuses equals 1 from step 2 .",
            "you need to delete degrees 's campuses equals 1 from step 2 .",
            "you need to delete discipline enrollments 's campuses equals 1 from step 2 .",
            "you need to delete enrollments 's campuses equals 1 from step 2 .",
            "you need to delete id 's campuses equals 1 from step 2 .",
            "you need to delete location 's campuses equals 1 from step 2 .",
            "you need to delete county 's campuses equals 1 from step 2 .",
            "you need to delete year 's campuses equals 1 from step 2 .",
            "you need to delete campus fee 's campuses equals 1 from step 2 .",
            "you need to delete discipline 's campuses equals 1 from step 2 .",
            "you need to delete undergraduate 's campuses equals 1 from step 2 .",
            "you need to delete graduate 's campuses equals 1 from step 2 .",
            "you need to delete totalenrollment ay 's campuses equals 1 from step 2 .",
            "you need to delete fte ay 's campuses equals 1 from step 2 .",
            "you need to delete faculty 's id equals 1 from step 2 .",
            "you need to delete faculty 's location equals 1 from step 2 .",
            "you need to delete faculty 's county equals 1 from step 2 .",
            "you need to delete faculty 's year equals 1 from step 2 .",
            "you need to delete faculty 's campus fee equals 1 from step 2 .",
            "you need to delete faculty 's degrees equals 1 from step 2 .",
            "you need to delete faculty 's discipline equals 1 from step 2 .",
            "you need to delete faculty 's undergraduate equals 1 from step 2 .",
            "you need to delete faculty 's graduate equals 1 from step 2 .",
            "you need to delete faculty 's totalenrollment ay equals 1 from step 2 .",
            "you need to delete faculty 's fte ay equals 1 from step 2 ."
        ],
        "neg_len": 26
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , additionally use the information from the rating table besides the movie table . consider the rating stars greater than or equals 4 conditions in place of the year less than or equals 1939 conditions . do not return title . make sure no repetition in the results . order the results ascending . in step 1 , show me all the results .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                17,
                26
            ],
            [
                39,
                43
            ],
            [
                44,
                51
            ],
            [
                52,
                56
            ],
            [
                61,
                66
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                27,
                38
            ]
        ],
        "positive_example": "Only need to find movie id with 4 or 5 star rating , also arrange it in ascending order",
        "negative_examples": [
            "only need to find movie id with 4 or 5 star movie , also arrange it in ascending order",
            "only need to find movie id with 4 or 5 star reviewer , also arrange it in ascending order"
        ],
        "neg_len": 2
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "use rating table in place of movie table . additionally make sure that rating stars greater than 3 .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                18
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Count the number of rows of rating table whose rating date equals or greater than 3.",
        "negative_examples": [
            "count the number of rows of movie table whose rating date equals or greater than 3 .",
            "count the number of rows of reviewer table whose rating date equals or greater than 3 ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 2000 conditions in place of the csu fees 's year equals San Jose State University and faculty 's year equals 2000 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "You should use csu fees's year instead of faculty's year and  search campus of campuses table. ",
        "negative_examples": [
            "you should use csu fees 's location instead of discipline enrollments 's location and search campus of campuses table .",
            "you should use csu fees 's id instead of degrees 's id and search campus of campuses table .",
            "you should use csu fees 's year instead of discipline enrollments 's year and search county of campuses table .",
            "you should use csu fees 's year instead of degrees 's year and search location of campuses table .",
            "you should use csu fees 's year instead of csu fees 's year and search campus of campuses table .",
            "you should use csu fees 's discipline instead of campuses 's discipline and search campus of campuses table .",
            "you should use csu fees 's year instead of faculty 's year and search fte ay of campuses table .",
            "you should use csu fees 's year instead of csu fees 's year and search graduate of campuses table .",
            "you should use csu fees 's fte ay instead of discipline enrollments 's fte ay and search campus of campuses table .",
            "you should use csu fees 's year instead of campuses 's year and search undergraduate of campuses table .",
            "you should use csu fees 's year instead of discipline enrollments 's year and search location of campuses table .",
            "you should use csu fees 's year instead of discipline enrollments 's year and search undergraduate of campuses table .",
            "you should use csu fees 's year instead of faculty 's year and search location of campuses table .",
            "you should use csu fees 's year instead of enrollments 's year and search county of campuses table .",
            "you should use csu fees 's year instead of degrees 's year and search id of campuses table .",
            "you should use csu fees 's county instead of discipline enrollments 's county and search campus of campuses table .",
            "you should use csu fees 's undergraduate instead of csu fees 's undergraduate and search campus of campuses table .",
            "you should use csu fees 's year instead of location 's year and search campus of campuses table .",
            "you should use csu fees 's graduate instead of faculty 's year and search campus of campuses table .",
            "you should use csu fees 's degrees instead of enrollments 's degrees and search campus of campuses table .",
            "you should use csu fees 's discipline instead of faculty 's year and search campus of campuses table .",
            "you should use csu fees 's graduate instead of degrees 's graduate and search campus of campuses table .",
            "you should use csu fees 's year instead of csu fees 's year and search county of campuses table .",
            "you should use csu fees 's year instead of faculty 's year and search campus fee of campuses table .",
            "you should use csu fees 's year instead of campuses 's year and search graduate of campuses table .",
            "you should use csu fees 's fte ay instead of enrollments 's fte ay and search campus of campuses table .",
            "you should use csu fees 's discipline instead of enrollments 's discipline and search campus of campuses table .",
            "you should use csu fees 's year instead of csu fees 's year and search campus fee of campuses table .",
            "you should use csu fees 's year instead of enrollments 's year and search graduate of campuses table .",
            "you should use csu fees 's year instead of enrollments 's year and search degrees of campuses table .",
            "you should use csu fees 's undergraduate instead of faculty 's year and search campus of campuses table .",
            "you should use csu fees 's graduate instead of discipline enrollments 's graduate and search campus of campuses table .",
            "you should use csu fees 's year instead of enrollments 's year and search location of campuses table .",
            "you should use csu fees 's year instead of discipline enrollments 's year and search id of campuses table .",
            "you should use csu fees 's location instead of campuses 's location and search campus of campuses table .",
            "you should use csu fees 's year instead of csu fees 's year and search id of campuses table .",
            "you should use csu fees 's fte ay instead of csu fees 's fte ay and search campus of campuses table .",
            "you should use csu fees 's fte ay instead of faculty 's year and search campus of campuses table .",
            "you should use csu fees 's county instead of csu fees 's county and search campus of campuses table .",
            "you should use csu fees 's year instead of degrees 's year and search totalenrollment ay of campuses table .",
            "you should use csu fees 's year instead of faculty 's year and search id of campuses table .",
            "you should use csu fees 's year instead of faculty 's year and search graduate of campuses table .",
            "you should use csu fees 's location instead of degrees 's location and search campus of campuses table .",
            "you should use csu fees 's year instead of degrees 's year and search discipline of campuses table .",
            "you should use csu fees 's year instead of csu fees 's year and search totalenrollment ay of campuses table .",
            "you should use csu fees 's year instead of campuses 's year and search degrees of campuses table .",
            "you should use csu fees 's year instead of csu fees 's year and search degrees of campuses table .",
            "you should use csu fees 's degrees instead of campuses 's degrees and search campus of campuses table .",
            "you should use csu fees 's undergraduate instead of enrollments 's undergraduate and search campus of campuses table .",
            "you should use csu fees 's year instead of enrollments 's year and search campus of campuses table ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , additionally find bedroom count . find bathroom count in place of summation of bathroom count . order the results by summation of room count in place of number of rows .",
        "primary_span": [
            [
                4,
                8
            ],
            [
                9,
                11
            ],
            [
                20,
                27
            ]
        ],
        "secondary_span": [
            [
                12,
                19
            ],
            [
                28,
                34
            ]
        ],
        "positive_example": "In step 1 , calculate the total room count , also count total bedroom count in step 2.",
        "negative_examples": [
            "in step 1 , calculate the total room count , also count total building id in step 2 .",
            "in step 1 , calculate the total room count , also count total building short name in step 2 .",
            "in step 1 , calculate the total room count , also count total building full name in step 2 .",
            "in step 1 , calculate the total room count , also count total building description in step 2 .",
            "in step 1 , calculate the total room count , also count total building address in step 2 .",
            "in step 1 , calculate the total room count , also count total building manager in step 2 .",
            "in step 1 , calculate the total room count , also count total building phone in step 2 .",
            "in step 1 , calculate the total room count , also count total apartment id in step 2 .",
            "in step 1 , calculate the total room count , also count total apartment type code in step 2 .",
            "in step 1 , calculate the total room count , also count total apartment number in step 2 .",
            "in step 1 , calculate the total room count , also count total bathroom count in step 2 .",
            "in step 1 , calculate the total room count , also count total facility code in step 2 .",
            "in step 1 , calculate the total room count , also count total guest id in step 2 .",
            "in step 1 , calculate the total room count , also count total gender code in step 2 .",
            "in step 1 , calculate the total room count , also count total guest first name in step 2 .",
            "in step 1 , calculate the total room count , also count total guest last name in step 2 .",
            "in step 1 , calculate the total room count , also count total date of birth in step 2 .",
            "in step 1 , calculate the total room count , also count total apartment booking id in step 2 .",
            "in step 1 , calculate the total room count , also count total booking status code in step 2 .",
            "in step 1 , calculate the total room count , also count total booking start date in step 2 .",
            "in step 1 , calculate the total room count , also count total booking end date in step 2 .",
            "in step 1 , calculate the total room count , also count total status date in step 2 .",
            "in step 1 , calculate the total room count , also count total available yes or no in step 2 .",
            "in step 1 , calculate the total building id , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total building short name , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total building full name , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total building description , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total building address , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total building manager , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total building phone , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total apartment id , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total apartment type code , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total apartment number , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total bathroom count , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total facility code , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total guest id , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total gender code , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total guest first name , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total guest last name , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total date of birth , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total apartment booking id , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total booking status code , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total booking start date , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total booking end date , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total status date , also count total bedroom count in step 2 .",
            "in step 1 , calculate the total available yes or no , also count total bedroom count in step 2 ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find transaction id in place of account id .",
        "primary_span": [
            [
                4,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ]
        ],
        "positive_example": "Need to use transaction id.",
        "negative_examples": [
            "need to use customer id .",
            "need to use customer first name .",
            "need to use customer middle initial .",
            "need to use customer last name .",
            "need to use gender .",
            "need to use email address .",
            "need to use login name .",
            "need to use login password .",
            "need to use phone number .",
            "need to use town city .",
            "need to use state county province .",
            "need to use country .",
            "need to use order id .",
            "need to use date order placed .",
            "need to use order details .",
            "need to use invoice number .",
            "need to use invoice date .",
            "need to use account id .",
            "need to use date account opened .",
            "need to use account name .",
            "need to use other account details .",
            "need to use production type code .",
            "need to use product type description .",
            "need to use vat rating .",
            "need to use product id .",
            "need to use parent product id .",
            "need to use unit price .",
            "need to use product name .",
            "need to use product color .",
            "need to use product size .",
            "need to use transaction type .",
            "need to use transaction date .",
            "need to use transaction amount .",
            "need to use transaction comment .",
            "need to use other transaction details .",
            "need to use order item id .",
            "need to use product quantity .",
            "need to use other order item details .",
            "need to use product title .",
            "need to use product price .",
            "need to use derived product cost .",
            "need to use derived vat payable .",
            "need to use derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "additionally use the information from the addresses table besides the student addresses table . find for each value of student addresses 's address id . additionally find line 1 .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                24
            ],
            [
                25,
                29
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "Switch first average monthly rental with line 1 in addresses .",
        "negative_examples": [
            "switch first average monthly rental with incident type description in reference detention type .",
            "switch first average monthly rental with city in students in detention .",
            "switch first average monthly rental with detention summary in student addresses .",
            "switch first average monthly rental with monthly rental in reference incident type .",
            "switch first average monthly rental with date first rental in students .",
            "switch first average monthly rental with first name in reference detention type .",
            "switch first average monthly rental with incident id in assessment notes .",
            "switch first average monthly rental with detention type description in reference incident type .",
            "switch first average monthly rental with email address in reference incident type .",
            "switch first average monthly rental with date left university in students .",
            "switch first average monthly rental with zip postcode in reference address types .",
            "switch first average monthly rental with other address details in detention .",
            "switch first average monthly rental with notes id in reference incident type .",
            "switch first average monthly rental with country in reference address types .",
            "switch first average monthly rental with detention id in reference detention type .",
            "switch first average monthly rental with line 1 in reference incident type .",
            "switch first average monthly rental with student id in assessment notes .",
            "switch first average monthly rental with date incident end in teachers .",
            "switch first average monthly rental with datetime detention start in reference incident type .",
            "switch first average monthly rental with line 3 in students .",
            "switch first average monthly rental with date address to in detention .",
            "switch first average monthly rental with middle name in reference address types .",
            "switch first average monthly rental with city in reference address types .",
            "switch first average monthly rental with city in reference incident type .",
            "switch first average monthly rental with date of notes in reference detention type .",
            "switch first average monthly rental with middle name in students in detention .",
            "switch first average monthly rental with date incident start in student addresses .",
            "switch first average monthly rental with incident type description in detention .",
            "switch first average monthly rental with other address details in reference incident type .",
            "switch first average monthly rental with other address details in students in detention .",
            "switch first average monthly rental with recommendations in students .",
            "switch first average monthly rental with address type code in teachers .",
            "switch first average monthly rental with line 2 in reference detention type .",
            "switch first average monthly rental with date address to in addresses .",
            "switch first average monthly rental with date left university in detention .",
            "switch first average monthly rental with detention summary in teachers .",
            "switch first average monthly rental with incident summary in teachers .",
            "switch first average monthly rental with incident summary in reference detention type .",
            "switch first average monthly rental with student id in behavior incident .",
            "switch first average monthly rental with last name in reference detention type .",
            "switch first average monthly rental with monthly rental in students in detention .",
            "switch first average monthly rental with date incident start in reference incident type .",
            "switch first average monthly rental with teacher id in reference detention type .",
            "switch first average monthly rental with date address to in students in detention .",
            "switch first average monthly rental with address type code in reference detention type .",
            "switch first average monthly rental with line 1 in reference address types .",
            "switch first average monthly rental with address type code in student addresses .",
            "switch first average monthly rental with student id in students in detention .",
            "switch first average monthly rental with address type description in students in detention .",
            "switch first average monthly rental with line 1 in reference detention type ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 3 , order the results by summation of degrees in place of average degrees .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                30
            ]
        ],
        "positive_example": "You should use campuses of campuses instead of campuses of faculty in step 3 and in step 2, use summation of degrees instead of average.",
        "negative_examples": [
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of discipline instead of average .",
            "you should use campuses of campuses instead of campuses of csu fees in step 3 and in step 2 , use summation of county instead of average .",
            "you should use campuses of campuses instead of campuses of graduate in step 3 and in step 2 , use summation of csu fees instead of average .",
            "you should use campuses of campuses instead of campuses of location in step 3 and in step 2 , use summation of discipline enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of year in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of year in step 3 and in step 2 , use summation of enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of enrollments in step 3 and in step 2 , use summation of totalenrollment ay instead of average .",
            "you should use campuses of campuses instead of campuses of discipline in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of campus in step 3 and in step 2 , use summation of discipline enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of campus fee instead of average .",
            "you should use campuses of campuses instead of campuses of faculty in step 3 and in step 2 , use summation of id instead of average .",
            "you should use campuses of campuses instead of campuses of enrollments in step 3 and in step 2 , use summation of fte ay instead of average .",
            "you should use campuses of campuses instead of campuses of fte ay in step 3 and in step 2 , use summation of discipline enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of graduate instead of average .",
            "you should use campuses of campuses instead of campuses of csu fees in step 3 and in step 2 , use summation of campus instead of average .",
            "you should use campuses of campuses instead of campuses of county in step 3 and in step 2 , use summation of csu fees instead of average .",
            "you should use campuses of campuses instead of campuses of faculty in step 3 and in step 2 , use summation of discipline instead of average .",
            "you should use campuses of campuses instead of campuses of enrollments in step 3 and in step 2 , use summation of location instead of average .",
            "you should use campuses of campuses instead of campuses of enrollments in step 3 and in step 2 , use summation of year instead of average .",
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of location instead of average .",
            "you should use campuses of campuses instead of campuses of totalenrollment ay in step 3 and in step 2 , use summation of csu fees instead of average .",
            "you should use campuses of campuses instead of campuses of id in step 3 and in step 2 , use summation of campuses instead of average .",
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of county in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of campus fee in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of discipline enrollments in step 3 and in step 2 , use summation of county instead of average .",
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of undergraduate instead of average .",
            "you should use campuses of campuses instead of campuses of year in step 3 and in step 2 , use summation of campuses instead of average .",
            "you should use campuses of campuses instead of campuses of totalenrollment ay in step 3 and in step 2 , use summation of enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of graduate in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of discipline in step 3 and in step 2 , use summation of discipline enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of totalenrollment ay in step 3 and in step 2 , use summation of campuses instead of average .",
            "you should use campuses of campuses instead of campuses of year in step 3 and in step 2 , use summation of discipline enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of faculty in step 3 and in step 2 , use summation of campus fee instead of average .",
            "you should use campuses of campuses instead of campuses of csu fees in step 3 and in step 2 , use summation of graduate instead of average .",
            "you should use campuses of campuses instead of campuses of campus fee in step 3 and in step 2 , use summation of campuses instead of average .",
            "you should use campuses of campuses instead of campuses of faculty in step 3 and in step 2 , use summation of county instead of average .",
            "you should use campuses of campuses instead of campuses of csu fees in step 3 and in step 2 , use summation of discipline instead of average .",
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of id instead of average .",
            "you should use campuses of campuses instead of campuses of undergraduate in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of id in step 3 and in step 2 , use summation of degrees instead of average .",
            "you should use campuses of campuses instead of campuses of county in step 3 and in step 2 , use summation of discipline enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of csu fees in step 3 and in step 2 , use summation of id instead of average .",
            "you should use campuses of campuses instead of campuses of csu fees in step 3 and in step 2 , use summation of totalenrollment ay instead of average .",
            "you should use campuses of campuses instead of campuses of faculty in step 3 and in step 2 , use summation of enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of campus fee in step 3 and in step 2 , use summation of enrollments instead of average .",
            "you should use campuses of campuses instead of campuses of discipline in step 3 and in step 2 , use summation of csu fees instead of average .",
            "you should use campuses of campuses instead of campuses of campuses in step 3 and in step 2 , use summation of totalenrollment ay instead of average .",
            "you should use campuses of campuses instead of campuses of faculty in step 3 and in step 2 , use summation of campuses instead of average .",
            "you should use campuses of campuses instead of campuses of enrollments in step 3 and in step 2 , use summation of id instead of average ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , additionally use the information from the campuses table besides the faculty table . in step 2 , do not find for each value of faculty 's campus . in step 3 , find campuses 's campus in place of faculty . order the results by faculty in place of number of rows .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                21,
                31
            ],
            [
                36,
                39
            ],
            [
                45,
                49
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                40,
                44
            ],
            [
                50,
                56
            ]
        ],
        "positive_example": "Arrange step 2 by number of faculty and search for campus. ",
        "negative_examples": [
            "arrange step 2 by number of csu fees and search for county .",
            "arrange step 2 by number of faculty and search for id .",
            "arrange step 2 by number of csu fees and search for campus fee .",
            "arrange step 2 by number of faculty and search for year .",
            "arrange step 2 by number of campuses and search for degrees .",
            "arrange step 2 by number of faculty and search for degrees .",
            "arrange step 2 by number of degrees and search for discipline .",
            "arrange step 2 by number of discipline enrollments and search for discipline .",
            "arrange step 2 by number of degrees and search for totalenrollment ay .",
            "arrange step 2 by number of discipline and search for campus .",
            "arrange step 2 by number of enrollments and search for graduate .",
            "arrange step 2 by number of campuses and search for totalenrollment ay .",
            "arrange step 2 by number of faculty and search for graduate .",
            "arrange step 2 by number of degrees and search for id .",
            "arrange step 2 by number of degrees and search for degrees .",
            "arrange step 2 by number of faculty and search for undergraduate .",
            "arrange step 2 by number of discipline enrollments and search for year .",
            "arrange step 2 by number of faculty and search for location .",
            "arrange step 2 by number of degrees and search for undergraduate .",
            "arrange step 2 by number of campuses and search for county .",
            "arrange step 2 by number of degrees and search for campus .",
            "arrange step 2 by number of campuses and search for id .",
            "arrange step 2 by number of discipline enrollments and search for totalenrollment ay .",
            "arrange step 2 by number of enrollments and search for discipline .",
            "arrange step 2 by number of campuses and search for undergraduate .",
            "arrange step 2 by number of faculty and search for fte ay .",
            "arrange step 2 by number of enrollments and search for county .",
            "arrange step 2 by number of campus fee and search for campus .",
            "arrange step 2 by number of id and search for campus .",
            "arrange step 2 by number of degrees and search for campus fee .",
            "arrange step 2 by number of degrees and search for graduate .",
            "arrange step 2 by number of degrees and search for location .",
            "arrange step 2 by number of enrollments and search for totalenrollment ay .",
            "arrange step 2 by number of faculty and search for discipline .",
            "arrange step 2 by number of csu fees and search for discipline .",
            "arrange step 2 by number of faculty and search for campus fee .",
            "arrange step 2 by number of undergraduate and search for campus .",
            "arrange step 2 by number of campuses and search for graduate .",
            "arrange step 2 by number of discipline enrollments and search for id .",
            "arrange step 2 by number of year and search for campus .",
            "arrange step 2 by number of csu fees and search for undergraduate .",
            "arrange step 2 by number of discipline enrollments and search for fte ay .",
            "arrange step 2 by number of csu fees and search for degrees .",
            "arrange step 2 by number of faculty and search for totalenrollment ay .",
            "arrange step 2 by number of discipline enrollments and search for location .",
            "arrange step 2 by number of enrollments and search for year .",
            "arrange step 2 by number of enrollments and search for fte ay .",
            "arrange step 2 by number of discipline enrollments and search for graduate .",
            "arrange step 2 by number of csu fees and search for location .",
            "arrange step 2 by number of csu fees and search for fte ay ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "additionally use the information from the store table and store district table besides the district table . consider the district name equals Khanewal District conditions in place of the headquartered city equals Khanewal District conditions . find store name in place of district name .",
        "primary_span": [
            [
                0,
                11
            ],
            [
                17,
                24
            ],
            [
                36,
                38
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ],
            [
                25,
                35
            ],
            [
                39,
                44
            ]
        ],
        "positive_example": "I want store name of store table and district name.",
        "negative_examples": [
            "i want product id of store table and district name .",
            "i want product of store table and district name .",
            "i want dimensions of store table and district name .",
            "i want dpi of store table and district name .",
            "i want pages per minute color of store table and district name .",
            "i want max page size of store table and district name .",
            "i want interface of store table and district name .",
            "i want store id of store table and district name .",
            "i want type of store table and district name .",
            "i want area size of store table and district name .",
            "i want number of product category of store table and district name .",
            "i want ranking of store table and district name .",
            "i want district id of store table and district name .",
            "i want headquartered city of store table and district name .",
            "i want city population of store table and district name .",
            "i want city area of store table and district name .",
            "i want store name of store table and product id .",
            "i want store name of store table and product .",
            "i want store name of store table and dimensions .",
            "i want store name of store table and dpi .",
            "i want store name of store table and pages per minute color .",
            "i want store name of store table and max page size .",
            "i want store name of store table and interface .",
            "i want store name of store table and store id .",
            "i want store name of store table and type .",
            "i want store name of store table and area size .",
            "i want store name of store table and number of product category .",
            "i want store name of store table and ranking .",
            "i want store name of store table and district id .",
            "i want store name of store table and headquartered city .",
            "i want store name of store table and city population .",
            "i want store name of store table and city area ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "find product size in place of product color .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "supplant product color with product size .",
        "negative_examples": [
            "supplant account id with product size .",
            "supplant date account opened with product size .",
            "supplant product color with derived product cost .",
            "supplant date order placed with product size .",
            "supplant product color with town city .",
            "supplant customer middle initial with product size .",
            "supplant product price with product size .",
            "supplant product color with account name .",
            "supplant login name with product size .",
            "supplant product quantity with product size .",
            "supplant product name with product size .",
            "supplant product color with invoice number .",
            "supplant invoice date with product size .",
            "supplant product color with other account details .",
            "supplant product color with customer middle initial .",
            "supplant gender with product size .",
            "supplant production type code with product size .",
            "supplant product color with state county province .",
            "supplant product color with transaction id .",
            "supplant customer id with product size .",
            "supplant product color with country .",
            "supplant product color with product title .",
            "supplant derived vat payable with product size .",
            "supplant other account details with product size .",
            "supplant product color with order details .",
            "supplant order item id with product size .",
            "supplant product color with product quantity .",
            "supplant unit price with product size .",
            "supplant product color with product id .",
            "supplant product color with account id .",
            "supplant product color with product name .",
            "supplant product color with order id .",
            "supplant login password with product size .",
            "supplant vat rating with product size .",
            "supplant customer first name with product size .",
            "supplant product color with transaction type .",
            "supplant product color with derived total cost .",
            "supplant product color with login password .",
            "supplant country with product size .",
            "supplant derived product cost with product size .",
            "supplant transaction date with product size .",
            "supplant product color with customer first name .",
            "supplant product color with product price .",
            "supplant product color with parent product id .",
            "supplant product color with product type description .",
            "supplant product color with transaction amount .",
            "supplant product color with invoice date .",
            "supplant product color with production type code .",
            "supplant product color with order item id .",
            "supplant product color with phone number ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and apartment number equals Columbus Square conditions . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                42
            ]
        ],
        "positive_example": "In step 2 find summation of bedroom count whose building short name equals Columbus Square .",
        "negative_examples": [
            "in step 2 find summation of bedroom count whose building id equals columbus square .",
            "in step 2 find summation of bedroom count whose building full name equals columbus square .",
            "in step 2 find summation of bedroom count whose building description equals columbus square .",
            "in step 2 find summation of bedroom count whose building address equals columbus square .",
            "in step 2 find summation of bedroom count whose building manager equals columbus square .",
            "in step 2 find summation of bedroom count whose building phone equals columbus square .",
            "in step 2 find summation of bedroom count whose apartment id equals columbus square .",
            "in step 2 find summation of bedroom count whose apartment type code equals columbus square .",
            "in step 2 find summation of bedroom count whose apartment number equals columbus square .",
            "in step 2 find summation of bedroom count whose bathroom count equals columbus square .",
            "in step 2 find summation of bedroom count whose bedroom count equals columbus square .",
            "in step 2 find summation of bedroom count whose room count equals columbus square .",
            "in step 2 find summation of bedroom count whose facility code equals columbus square .",
            "in step 2 find summation of bedroom count whose guest id equals columbus square .",
            "in step 2 find summation of bedroom count whose gender code equals columbus square .",
            "in step 2 find summation of bedroom count whose guest first name equals columbus square .",
            "in step 2 find summation of bedroom count whose guest last name equals columbus square .",
            "in step 2 find summation of bedroom count whose date of birth equals columbus square .",
            "in step 2 find summation of bedroom count whose apartment booking id equals columbus square .",
            "in step 2 find summation of bedroom count whose booking status code equals columbus square .",
            "in step 2 find summation of bedroom count whose booking start date equals columbus square .",
            "in step 2 find summation of bedroom count whose booking end date equals columbus square .",
            "in step 2 find summation of bedroom count whose status date equals columbus square .",
            "in step 2 find summation of bedroom count whose available yes or no equals columbus square ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's year greater than 1950 conditions in place of the faculty 's year less than 2002 and faculty 's year greater than 1950 conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                23
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                24,
                42
            ]
        ],
        "positive_example": "You need to drop the conditions of year in faculty table and also make sure that year is higher than 1950.",
        "negative_examples": [
            "you need to drop the conditions of degrees in discipline enrollments table and also make sure that degrees is higher than 1950 .",
            "you need to drop the conditions of campus fee in enrollments table and also make sure that campus fee is higher than 1950 .",
            "you need to drop the conditions of totalenrollment ay in csu fees table and also make sure that totalenrollment ay is higher than 1950 .",
            "you need to drop the conditions of campus in faculty table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of year in fte ay table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of totalenrollment ay in discipline enrollments table and also make sure that totalenrollment ay is higher than 1950 .",
            "you need to drop the conditions of year in campus table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of id in csu fees table and also make sure that id is higher than 1950 .",
            "you need to drop the conditions of year in csu fees table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of graduate in discipline enrollments table and also make sure that graduate is higher than 1950 .",
            "you need to drop the conditions of graduate in degrees table and also make sure that graduate is higher than 1950 .",
            "you need to drop the conditions of county in enrollments table and also make sure that county is higher than 1950 .",
            "you need to drop the conditions of campus in csu fees table and also make sure that campus is higher than 1950 .",
            "you need to drop the conditions of year in graduate table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of campus fee in degrees table and also make sure that campus fee is higher than 1950 .",
            "you need to drop the conditions of undergraduate in csu fees table and also make sure that undergraduate is higher than 1950 .",
            "you need to drop the conditions of year in id table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of year in undergraduate table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of undergraduate in enrollments table and also make sure that undergraduate is higher than 1950 .",
            "you need to drop the conditions of id in degrees table and also make sure that id is higher than 1950 .",
            "you need to drop the conditions of year in campus fee table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of year in location table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of id in discipline enrollments table and also make sure that id is higher than 1950 .",
            "you need to drop the conditions of degrees in enrollments table and also make sure that degrees is higher than 1950 .",
            "you need to drop the conditions of fte ay in faculty table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of fte ay in degrees table and also make sure that fte ay is higher than 1950 .",
            "you need to drop the conditions of totalenrollment ay in faculty table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of campus in degrees table and also make sure that campus is higher than 1950 .",
            "you need to drop the conditions of year in enrollments table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of location in discipline enrollments table and also make sure that location is higher than 1950 .",
            "you need to drop the conditions of campus fee in discipline enrollments table and also make sure that campus fee is higher than 1950 .",
            "you need to drop the conditions of degrees in csu fees table and also make sure that degrees is higher than 1950 .",
            "you need to drop the conditions of undergraduate in campuses table and also make sure that undergraduate is higher than 1950 .",
            "you need to drop the conditions of location in faculty table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of year in discipline table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of graduate in csu fees table and also make sure that graduate is higher than 1950 .",
            "you need to drop the conditions of campus fee in csu fees table and also make sure that campus fee is higher than 1950 .",
            "you need to drop the conditions of undergraduate in discipline enrollments table and also make sure that undergraduate is higher than 1950 .",
            "you need to drop the conditions of id in enrollments table and also make sure that id is higher than 1950 .",
            "you need to drop the conditions of year in county table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of graduate in enrollments table and also make sure that graduate is higher than 1950 .",
            "you need to drop the conditions of county in discipline enrollments table and also make sure that county is higher than 1950 .",
            "you need to drop the conditions of id in campuses table and also make sure that id is higher than 1950 .",
            "you need to drop the conditions of fte ay in campuses table and also make sure that fte ay is higher than 1950 .",
            "you need to drop the conditions of location in degrees table and also make sure that location is higher than 1950 .",
            "you need to drop the conditions of graduate in faculty table and also make sure that year is higher than 1950 .",
            "you need to drop the conditions of discipline in discipline enrollments table and also make sure that discipline is higher than 1950 .",
            "you need to drop the conditions of fte ay in csu fees table and also make sure that fte ay is higher than 1950 .",
            "you need to drop the conditions of undergraduate in degrees table and also make sure that undergraduate is higher than 1950 .",
            "you need to drop the conditions of graduate in campuses table and also make sure that graduate is higher than 1950 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the movie table and rating table besides the reviewer table . additionally make sure that title equals Gone with the Wind .",
        "primary_span": [
            [
                0,
                10
            ],
            [
                16,
                26
            ]
        ],
        "secondary_span": [
            [
                11,
                15
            ]
        ],
        "positive_example": "Need to make sure that they have reviewed Gone with the Wind movie .",
        "negative_examples": [
            "need to make sure that they have reviewed gone with the wind reviewer .",
            "need to make sure that they have reviewed gone with the wind rating ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 1 , additionally use the information from the apartments table besides the apartment buildings table . do not find for each value of building short name . in step 2 , additionally make sure that bathroom count greater than 2 . find building address in place of building description .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                18,
                28
            ],
            [
                33,
                42
            ],
            [
                43,
                45
            ]
        ],
        "secondary_span": [
            [
                12,
                17
            ],
            [
                46,
                51
            ]
        ],
        "positive_example": "You need to search address of building instead of description and count of bathroom for all apartments of building id in step 1.",
        "negative_examples": [
            "you need to search address of building instead of description and count of bathroom for all apartment buildings of building id in step 1 .",
            "you need to search address of building instead of description and count of bathroom for all apartment facilities of building id in step 1 .",
            "you need to search address of building instead of description and count of bathroom for all guests of building id in step 1 .",
            "you need to search address of building instead of description and count of bathroom for all apartment bookings of building id in step 1 .",
            "you need to search address of building instead of description and count of bathroom for all view unit status of building id in step 1 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the discipline enrollments table . in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the discipline enrollments 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                16,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                11
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "I want the fees of csu campuses.",
        "negative_examples": [
            "i want the fees of csu id .",
            "i want the fees of csu location .",
            "i want the fees of csu county .",
            "i want the fees of csu year .",
            "i want the fees of csu campus fee .",
            "i want the fees of csu degrees .",
            "i want the fees of csu discipline .",
            "i want the fees of csu undergraduate .",
            "i want the fees of csu graduate .",
            "i want the fees of csu totalenrollment ay .",
            "i want the fees of csu fte ay .",
            "i want the fees of csu faculty ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , additionally use the information from the movie table . in step 2 , additionally make sure that title equals Gone with the Wind . make sure no repetition in the results . you should not find the smallest of the results . show me all the results .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                17,
                27
            ],
            [
                28,
                35
            ],
            [
                36,
                51
            ]
        ],
        "secondary_span": [],
        "positive_example": "Add movie table In step 1 , Be sure to find rating stars for title equals Gone with the Wind .",
        "negative_examples": [
            "add reviewer table in step 1 , be sure to find rating stars for title equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for title equals gone with the wind .",
            "add movie table in step 1 , be sure to find rating stars for movie id equals gone with the wind .",
            "add movie table in step 1 , be sure to find rating stars for year equals gone with the wind .",
            "add movie table in step 1 , be sure to find rating stars for director equals gone with the wind .",
            "add movie table in step 1 , be sure to find rating stars for reviewer id equals gone with the wind .",
            "add movie table in step 1 , be sure to find rating stars for name equals gone with the wind .",
            "add movie table in step 1 , be sure to find rating stars for rating stars equals gone with the wind .",
            "add movie table in step 1 , be sure to find rating stars for rating date equals gone with the wind .",
            "add reviewer table in step 1 , be sure to find rating stars for movie id equals gone with the wind .",
            "add reviewer table in step 1 , be sure to find rating stars for year equals gone with the wind .",
            "add reviewer table in step 1 , be sure to find rating stars for director equals gone with the wind .",
            "add reviewer table in step 1 , be sure to find rating stars for reviewer id equals gone with the wind .",
            "add reviewer table in step 1 , be sure to find rating stars for name equals gone with the wind .",
            "add reviewer table in step 1 , be sure to find rating stars for rating stars equals gone with the wind .",
            "add reviewer table in step 1 , be sure to find rating stars for rating date equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for movie id equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for year equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for director equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for reviewer id equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for name equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for rating stars equals gone with the wind .",
            "add rating table in step 1 , be sure to find rating stars for rating date equals gone with the wind ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "behavior_monitoring",
        "tabel_names": [
            "reference address types",
            "reference detention type",
            "reference incident type",
            "addresses",
            "students",
            "teachers",
            "assessment notes",
            "behavior incident",
            "detention",
            "student addresses",
            "students in detention"
        ],
        "column_names": [
            "address type code",
            "address type description",
            "detention type code",
            "detention type description",
            "incident type code",
            "incident type description",
            "address id",
            "line 1",
            "line 2",
            "line 3",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "other address details",
            "student id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "cell mobile number",
            "email address",
            "date first rental",
            "date left university",
            "other student details",
            "teacher id",
            "address id",
            "first name",
            "middle name",
            "last name",
            "gender",
            "cell mobile number",
            "email address",
            "other details",
            "notes id",
            "student id",
            "teacher id",
            "date of notes",
            "text of notes",
            "other details",
            "incident id",
            "incident type code",
            "student id",
            "date incident start",
            "date incident end",
            "incident summary",
            "recommendations",
            "other details",
            "detention id",
            "detention type code",
            "teacher id",
            "datetime detention start",
            "datetime detention end",
            "detention summary",
            "other details",
            "student id",
            "address id",
            "date address from",
            "date address to",
            "monthly rental",
            "other details",
            "student id",
            "detention id",
            "incident id"
        ],
        "template_feedback": "in step 1 , additionally use the information from the assessment notes table besides the teachers table .",
        "primary_span": [
            [
                4,
                12
            ]
        ],
        "secondary_span": [
            [
                13,
                17
            ]
        ],
        "positive_example": "In step 1 use assessment notes table instead of teachers table .",
        "negative_examples": [
            "in step 1 use reference address types table instead of teachers table .",
            "in step 1 use reference detention type table instead of teachers table .",
            "in step 1 use reference incident type table instead of teachers table .",
            "in step 1 use addresses table instead of teachers table .",
            "in step 1 use students table instead of teachers table .",
            "in step 1 use teachers table instead of teachers table .",
            "in step 1 use behavior incident table instead of teachers table .",
            "in step 1 use detention table instead of teachers table .",
            "in step 1 use student addresses table instead of teachers table .",
            "in step 1 use students in detention table instead of teachers table ."
        ],
        "neg_len": 10
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table and discipline enrollments table in place of faculty table . consider the campuses 's campus equals San Jose State University and discipline enrollments 's year equals 2004 conditions in place of the faculty 's year equals San Jose State University and faculty 's campus equals 2004 conditions . find summation of undergraduate in place of number of rows .",
        "primary_span": [
            [
                0,
                6
            ],
            [
                13,
                30
            ],
            [
                51,
                54
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ],
            [
                31,
                50
            ],
            [
                55,
                61
            ]
        ],
        "positive_example": "Find undergraduate and replace faculty table , campus and year with discipline enrollments table , year and campus respectively",
        "negative_examples": [
            "find undergraduate and replace degrees table , campus and discipline with discipline enrollments table , discipline and campus respectively",
            "find graduate and replace faculty table , campus and year with enrollments table , year and campus respectively",
            "find undergraduate and replace faculty table , campus and discipline with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace discipline table , campus and year with campuses table , year and campus respectively",
            "find degrees and replace campuses table , campus and year with discipline enrollments table , year and campus respectively",
            "find graduate and replace campuses table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace campuses table , campus fee and year with discipline enrollments table , year and campus fee respectively",
            "find undergraduate and replace faculty table , campus and fte ay with discipline enrollments table , year and campus respectively",
            "find id and replace enrollments table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace campus fee table , campus and year with degrees table , year and campus respectively",
            "find undergraduate and replace faculty table , county and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace degrees table , campus and graduate with discipline enrollments table , graduate and campus respectively",
            "find undergraduate and replace degrees table , campus and county with discipline enrollments table , county and campus respectively",
            "find undergraduate and replace csu fees table , discipline and year with discipline enrollments table , year and discipline respectively",
            "find undergraduate and replace fte ay table , campus and year with enrollments table , year and campus respectively",
            "find undergraduate and replace faculty table , campus and year with id table , year and campus respectively",
            "find fte ay and replace campuses table , campus and year with discipline enrollments table , year and campus respectively",
            "find fte ay and replace faculty table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace csu fees table , fte ay and year with discipline enrollments table , year and fte ay respectively",
            "find undergraduate and replace graduate table , campus and year with degrees table , year and campus respectively",
            "find undergraduate and replace faculty table , county and year with enrollments table , year and county respectively",
            "find undergraduate and replace degrees table , totalenrollment ay and year with discipline enrollments table , year and totalenrollment ay respectively",
            "find undergraduate and replace enrollments table , campus and totalenrollment ay with discipline enrollments table , totalenrollment ay and campus respectively",
            "find undergraduate and replace degrees table , campus and year with degrees table , year and campus respectively",
            "find undergraduate and replace degrees table , campus and campus fee with discipline enrollments table , campus fee and campus respectively",
            "find county and replace enrollments table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace id table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace campuses table , campus and campus fee with discipline enrollments table , campus fee and campus respectively",
            "find undergraduate and replace id table , campus and year with enrollments table , year and campus respectively",
            "find undergraduate and replace faculty table , campus and year with enrollments table , year and campus respectively",
            "find undergraduate and replace faculty table , campus and year with fte ay table , year and campus respectively",
            "find undergraduate and replace faculty table , degrees and year with degrees table , year and degrees respectively",
            "find undergraduate and replace faculty table , campus and campus fee with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace enrollments table , county and year with discipline enrollments table , year and county respectively",
            "find undergraduate and replace faculty table , discipline and year with csu fees table , year and discipline respectively",
            "find discipline and replace enrollments table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace csu fees table , campus and degrees with discipline enrollments table , degrees and campus respectively",
            "find undergraduate and replace faculty table , id and year with csu fees table , year and id respectively",
            "find undergraduate and replace totalenrollment ay table , campus and year with campuses table , year and campus respectively",
            "find discipline and replace faculty table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace csu fees table , county and year with discipline enrollments table , year and county respectively",
            "find degrees and replace faculty table , campus and year with csu fees table , year and campus respectively",
            "find undergraduate and replace campuses table , totalenrollment ay and year with discipline enrollments table , year and totalenrollment ay respectively",
            "find undergraduate and replace degrees table , campus and location with discipline enrollments table , location and campus respectively",
            "find location and replace faculty table , campus and year with degrees table , year and campus respectively",
            "find undergraduate and replace faculty table , degrees and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace faculty table , totalenrollment ay and year with campuses table , year and totalenrollment ay respectively",
            "find location and replace degrees table , campus and year with discipline enrollments table , year and campus respectively",
            "find undergraduate and replace totalenrollment ay table , campus and year with enrollments table , year and campus respectively",
            "find undergraduate and replace faculty table , graduate and year with enrollments table , year and graduate respectively"
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "find apartment number in place of bathroom count . order the results by room count in place of bathroom count .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                14
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                15,
                20
            ]
        ],
        "positive_example": "respectively, you need to use id of apartment and room count on behalf of bathroom count.",
        "negative_examples": [
            "respectively , you need to use id of apartment and room count on behalf of building id .",
            "respectively , you need to use id of apartment and room count on behalf of building short name .",
            "respectively , you need to use id of apartment and room count on behalf of building full name .",
            "respectively , you need to use id of apartment and room count on behalf of building description .",
            "respectively , you need to use id of apartment and room count on behalf of building address .",
            "respectively , you need to use id of apartment and room count on behalf of building manager .",
            "respectively , you need to use id of apartment and room count on behalf of building phone .",
            "respectively , you need to use id of apartment and room count on behalf of apartment id .",
            "respectively , you need to use id of apartment and room count on behalf of apartment type code .",
            "respectively , you need to use id of apartment and room count on behalf of apartment number .",
            "respectively , you need to use id of apartment and room count on behalf of bedroom count .",
            "respectively , you need to use id of apartment and room count on behalf of facility code .",
            "respectively , you need to use id of apartment and room count on behalf of guest id .",
            "respectively , you need to use id of apartment and room count on behalf of gender code .",
            "respectively , you need to use id of apartment and room count on behalf of guest first name .",
            "respectively , you need to use id of apartment and room count on behalf of guest last name .",
            "respectively , you need to use id of apartment and room count on behalf of date of birth .",
            "respectively , you need to use id of apartment and room count on behalf of apartment booking id .",
            "respectively , you need to use id of apartment and room count on behalf of booking status code .",
            "respectively , you need to use id of apartment and room count on behalf of booking start date .",
            "respectively , you need to use id of apartment and room count on behalf of booking end date .",
            "respectively , you need to use id of apartment and room count on behalf of status date .",
            "respectively , you need to use id of apartment and room count on behalf of available yes or no .",
            "respectively , you need to use id of apartment and building id on behalf of bathroom count .",
            "respectively , you need to use id of apartment and building short name on behalf of bathroom count .",
            "respectively , you need to use id of apartment and building full name on behalf of bathroom count .",
            "respectively , you need to use id of apartment and building description on behalf of bathroom count .",
            "respectively , you need to use id of apartment and building address on behalf of bathroom count .",
            "respectively , you need to use id of apartment and building manager on behalf of bathroom count .",
            "respectively , you need to use id of apartment and building phone on behalf of bathroom count .",
            "respectively , you need to use id of apartment and apartment id on behalf of bathroom count .",
            "respectively , you need to use id of apartment and apartment type code on behalf of bathroom count .",
            "respectively , you need to use id of apartment and apartment number on behalf of bathroom count .",
            "respectively , you need to use id of apartment and bedroom count on behalf of bathroom count .",
            "respectively , you need to use id of apartment and facility code on behalf of bathroom count .",
            "respectively , you need to use id of apartment and guest id on behalf of bathroom count .",
            "respectively , you need to use id of apartment and gender code on behalf of bathroom count .",
            "respectively , you need to use id of apartment and guest first name on behalf of bathroom count .",
            "respectively , you need to use id of apartment and guest last name on behalf of bathroom count .",
            "respectively , you need to use id of apartment and date of birth on behalf of bathroom count .",
            "respectively , you need to use id of apartment and apartment booking id on behalf of bathroom count .",
            "respectively , you need to use id of apartment and booking status code on behalf of bathroom count .",
            "respectively , you need to use id of apartment and booking start date on behalf of bathroom count .",
            "respectively , you need to use id of apartment and booking end date on behalf of bathroom count .",
            "respectively , you need to use id of apartment and status date on behalf of bathroom count .",
            "respectively , you need to use id of apartment and available yes or no on behalf of bathroom count ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , use movie table in place of reviewer table in step 2 , find for each value of rating 's reviewer id . find title , rating 's reviewer id , and minimum rating stars in place of name . you should not find the smallest of the results . show me all the results .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                25
            ],
            [
                26,
                37
            ],
            [
                43,
                58
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                38,
                42
            ]
        ],
        "positive_example": "swap name with id of reviewer, additionally in step 1 correlate movie table.",
        "negative_examples": [
            "swap name with id of reviewer , additionally in step 1 correlate rating table .",
            "swap name with id of rating , additionally in step 1 correlate movie table .",
            "swap movie id with id of reviewer , additionally in step 1 correlate movie table .",
            "swap title with id of reviewer , additionally in step 1 correlate movie table .",
            "swap year with id of reviewer , additionally in step 1 correlate movie table .",
            "swap director with id of reviewer , additionally in step 1 correlate movie table .",
            "swap reviewer id with id of reviewer , additionally in step 1 correlate movie table .",
            "swap rating stars with id of reviewer , additionally in step 1 correlate movie table .",
            "swap rating date with id of reviewer , additionally in step 1 correlate movie table .",
            "swap movie id with id of reviewer , additionally in step 1 correlate rating table .",
            "swap title with id of reviewer , additionally in step 1 correlate rating table .",
            "swap year with id of reviewer , additionally in step 1 correlate rating table .",
            "swap director with id of reviewer , additionally in step 1 correlate rating table .",
            "swap reviewer id with id of reviewer , additionally in step 1 correlate rating table .",
            "swap rating stars with id of reviewer , additionally in step 1 correlate rating table .",
            "swap rating date with id of reviewer , additionally in step 1 correlate rating table .",
            "swap movie id with id of rating , additionally in step 1 correlate movie table .",
            "swap title with id of rating , additionally in step 1 correlate movie table .",
            "swap year with id of rating , additionally in step 1 correlate movie table .",
            "swap director with id of rating , additionally in step 1 correlate movie table .",
            "swap reviewer id with id of rating , additionally in step 1 correlate movie table .",
            "swap rating stars with id of rating , additionally in step 1 correlate movie table .",
            "swap rating date with id of rating , additionally in step 1 correlate movie table ."
        ],
        "neg_len": 23
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 2 , consider the campuses 's campus equals San Jose State University conditions in place of the county equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                14
            ]
        ],
        "secondary_span": [
            [
                15,
                26
            ]
        ],
        "positive_example": "In step 2, you should use campuses in place of county.",
        "negative_examples": [
            "in step 2 , you should use id in place of county .",
            "in step 2 , you should use location in place of county .",
            "in step 2 , you should use year in place of county .",
            "in step 2 , you should use campus fee in place of county .",
            "in step 2 , you should use degrees in place of county .",
            "in step 2 , you should use discipline in place of county .",
            "in step 2 , you should use undergraduate in place of county .",
            "in step 2 , you should use graduate in place of county .",
            "in step 2 , you should use totalenrollment ay in place of county .",
            "in step 2 , you should use fte ay in place of county .",
            "in step 2 , you should use faculty in place of county .",
            "in step 2 , you should use campuses in place of id .",
            "in step 2 , you should use campuses in place of location .",
            "in step 2 , you should use campuses in place of year .",
            "in step 2 , you should use campuses in place of campus fee .",
            "in step 2 , you should use campuses in place of degrees .",
            "in step 2 , you should use campuses in place of discipline .",
            "in step 2 , you should use campuses in place of undergraduate .",
            "in step 2 , you should use campuses in place of graduate .",
            "in step 2 , you should use campuses in place of totalenrollment ay .",
            "in step 2 , you should use campuses in place of fte ay .",
            "in step 2 , you should use campuses in place of faculty ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , do not use the reviewer table and rating table . in step 2 , consider the director equals James Cameron conditions in place of the name equals James Cameron conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                25,
                34
            ]
        ],
        "positive_example": "Replace name of reviewer table with director of movie table .",
        "negative_examples": [
            "replace name of movie table with director of movie table .",
            "replace name of rating table with director of movie table .",
            "replace name of reviewer table with movie id of movie table .",
            "replace name of reviewer table with title of movie table .",
            "replace name of reviewer table with year of movie table .",
            "replace name of reviewer table with reviewer id of movie table .",
            "replace name of reviewer table with rating stars of movie table .",
            "replace name of reviewer table with rating date of movie table .",
            "replace movie id of reviewer table with director of movie table .",
            "replace title of reviewer table with director of movie table .",
            "replace year of reviewer table with director of movie table .",
            "replace reviewer id of reviewer table with director of movie table .",
            "replace rating stars of reviewer table with director of movie table .",
            "replace rating date of reviewer table with director of movie table .",
            "replace name of movie table with movie id of movie table .",
            "replace name of movie table with title of movie table .",
            "replace name of movie table with year of movie table .",
            "replace name of movie table with reviewer id of movie table .",
            "replace name of movie table with rating stars of movie table .",
            "replace name of movie table with rating date of movie table .",
            "replace movie id of movie table with director of movie table .",
            "replace title of movie table with director of movie table .",
            "replace year of movie table with director of movie table .",
            "replace reviewer id of movie table with director of movie table .",
            "replace rating stars of movie table with director of movie table .",
            "replace rating date of movie table with director of movie table .",
            "replace name of rating table with movie id of movie table .",
            "replace name of rating table with title of movie table .",
            "replace name of rating table with year of movie table .",
            "replace name of rating table with reviewer id of movie table .",
            "replace name of rating table with rating stars of movie table .",
            "replace name of rating table with rating date of movie table .",
            "replace movie id of rating table with director of movie table .",
            "replace title of rating table with director of movie table .",
            "replace year of rating table with director of movie table .",
            "replace reviewer id of rating table with director of movie table .",
            "replace rating stars of rating table with director of movie table .",
            "replace rating date of rating table with director of movie table ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the lessons table besides the vehicles table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "In step 1 find number of rows of each value of vehicle id in lessons table .",
        "negative_examples": [
            "in step 1 find number of rows of each value of vehicle id in addresses table .",
            "in step 1 find number of rows of each value of vehicle id in staff table .",
            "in step 1 find number of rows of each value of vehicle id in vehicles table .",
            "in step 1 find number of rows of each value of vehicle id in customers table .",
            "in step 1 find number of rows of each value of vehicle id in customer payments table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "csu fees's year equals 1996 , not faculty's year and change csu fees's year to Campuses' campus .",
        "negative_examples": [
            "csu fees 's campus fee equals 1996 , not degrees 's campus fee and change csu fees 's campus fee to campuses ' campus .",
            "csu fees 's year equals 1996 , not undergraduate 's year and change csu fees 's year to campuses ' campus .",
            "csu fees 's year equals 1996 , not csu fees 's year and change csu fees 's year to campuses ' degrees .",
            "csu fees 's year equals 1996 , not degrees 's year and change csu fees 's year to campuses ' discipline .",
            "csu fees 's campus fee equals 1996 , not discipline enrollments 's campus fee and change csu fees 's campus fee to campuses ' campus .",
            "csu fees 's year equals 1996 , not campus fee 's year and change csu fees 's year to campuses ' campus .",
            "csu fees 's campus fee equals 1996 , not enrollments 's campus fee and change csu fees 's campus fee to campuses ' campus .",
            "csu fees 's degrees equals 1996 , not campuses 's degrees and change csu fees 's degrees to campuses ' campus .",
            "csu fees 's campus fee equals 1996 , not csu fees 's campus fee and change csu fees 's campus fee to campuses ' campus .",
            "csu fees 's location equals 1996 , not discipline enrollments 's location and change csu fees 's location to campuses ' campus .",
            "csu fees 's year equals 1996 , not discipline enrollments 's year and change csu fees 's year to campuses ' undergraduate .",
            "csu fees 's year equals 1996 , not enrollments 's year and change csu fees 's year to campuses ' fte ay .",
            "csu fees 's year equals 1996 , not campuses 's year and change csu fees 's year to campuses ' fte ay .",
            "csu fees 's year equals 1996 , not enrollments 's year and change csu fees 's year to campuses ' graduate .",
            "csu fees 's location equals 1996 , not csu fees 's location and change csu fees 's location to campuses ' campus .",
            "csu fees 's year equals 1996 , not discipline 's year and change csu fees 's year to campuses ' campus .",
            "csu fees 's discipline equals 1996 , not campuses 's discipline and change csu fees 's discipline to campuses ' campus .",
            "csu fees 's year equals 1996 , not campuses 's year and change csu fees 's year to campuses ' graduate .",
            "csu fees 's location equals 1996 , not degrees 's location and change csu fees 's location to campuses ' campus .",
            "csu fees 's year equals 1996 , not campuses 's year and change csu fees 's year to campuses ' discipline .",
            "csu fees 's year equals 1996 , not campuses 's year and change csu fees 's year to campuses ' county .",
            "csu fees 's fte ay equals 1996 , not csu fees 's fte ay and change csu fees 's fte ay to campuses ' campus .",
            "csu fees 's year equals 1996 , not degrees 's year and change csu fees 's year to campuses ' county .",
            "csu fees 's year equals 1996 , not discipline enrollments 's year and change csu fees 's year to campuses ' degrees .",
            "csu fees 's year equals 1996 , not csu fees 's year and change csu fees 's year to campuses ' location .",
            "csu fees 's campus fee equals 1996 , not faculty 's year and change csu fees 's year to campuses ' campus .",
            "csu fees 's discipline equals 1996 , not degrees 's discipline and change csu fees 's discipline to campuses ' campus .",
            "csu fees 's year equals 1996 , not faculty 's year and change csu fees 's year to undergraduate ' campus .",
            "csu fees 's id equals 1996 , not csu fees 's id and change csu fees 's id to campuses ' campus .",
            "csu fees 's year equals 1996 , not csu fees 's year and change csu fees 's year to campuses ' campus fee .",
            "csu fees 's discipline equals 1996 , not enrollments 's discipline and change csu fees 's discipline to campuses ' campus .",
            "csu fees 's id equals 1996 , not faculty 's year and change csu fees 's year to campuses ' campus .",
            "csu fees 's undergraduate equals 1996 , not degrees 's undergraduate and change csu fees 's undergraduate to campuses ' campus .",
            "csu fees 's county equals 1996 , not csu fees 's county and change csu fees 's county to campuses ' campus .",
            "csu fees 's year equals 1996 , not degrees 's year and change csu fees 's year to campuses ' campus .",
            "csu fees 's year equals 1996 , not csu fees 's year and change csu fees 's year to campuses ' fte ay .",
            "csu fees 's id equals 1996 , not degrees 's id and change csu fees 's id to campuses ' campus .",
            "csu fees 's year equals 1996 , not faculty 's year and change csu fees 's year to fte ay ' campus .",
            "csu fees 's year equals 1996 , not faculty 's year and change csu fees 's year to campus fee ' campus .",
            "csu fees 's year equals 1996 , not discipline enrollments 's year and change csu fees 's year to campuses ' county .",
            "csu fees 's year equals 1996 , not campuses 's year and change csu fees 's year to campuses ' degrees .",
            "csu fees 's fte ay equals 1996 , not campuses 's fte ay and change csu fees 's fte ay to campuses ' campus .",
            "csu fees 's totalenrollment ay equals 1996 , not campuses 's totalenrollment ay and change csu fees 's totalenrollment ay to campuses ' campus .",
            "csu fees 's year equals 1996 , not campuses 's year and change csu fees 's year to campuses ' id .",
            "csu fees 's graduate equals 1996 , not discipline enrollments 's graduate and change csu fees 's graduate to campuses ' campus .",
            "csu fees 's year equals 1996 , not discipline enrollments 's year and change csu fees 's year to campuses ' campus fee .",
            "csu fees 's undergraduate equals 1996 , not enrollments 's undergraduate and change csu fees 's undergraduate to campuses ' campus .",
            "csu fees 's discipline equals 1996 , not faculty 's year and change csu fees 's year to campuses ' campus .",
            "csu fees 's fte ay equals 1996 , not discipline enrollments 's fte ay and change csu fees 's fte ay to campuses ' campus .",
            "csu fees 's year equals 1996 , not degrees 's year and change csu fees 's year to campuses ' campus fee ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 1 , use movie table in place of reviewer table in step 2 , find director and title in place of name .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                19
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                20,
                24
            ]
        ],
        "positive_example": "Need to find director and title of movie table",
        "negative_examples": [
            "need to find director and title of reviewer table",
            "need to find director and title of rating table",
            "need to find director and movie id of movie table",
            "need to find director and year of movie table",
            "need to find director and reviewer id of movie table",
            "need to find director and name of movie table",
            "need to find director and rating stars of movie table",
            "need to find director and rating date of movie table",
            "need to find movie id and title of movie table",
            "need to find year and title of movie table",
            "need to find reviewer id and title of movie table",
            "need to find name and title of movie table",
            "need to find rating stars and title of movie table",
            "need to find rating date and title of movie table",
            "need to find director and movie id of reviewer table",
            "need to find director and year of reviewer table",
            "need to find director and reviewer id of reviewer table",
            "need to find director and name of reviewer table",
            "need to find director and rating stars of reviewer table",
            "need to find director and rating date of reviewer table",
            "need to find movie id and title of reviewer table",
            "need to find year and title of reviewer table",
            "need to find reviewer id and title of reviewer table",
            "need to find name and title of reviewer table",
            "need to find rating stars and title of reviewer table",
            "need to find rating date and title of reviewer table",
            "need to find director and movie id of rating table",
            "need to find director and year of rating table",
            "need to find director and reviewer id of rating table",
            "need to find director and name of rating table",
            "need to find director and rating stars of rating table",
            "need to find director and rating date of rating table",
            "need to find movie id and title of rating table",
            "need to find year and title of rating table",
            "need to find reviewer id and title of rating table",
            "need to find name and title of rating table",
            "need to find rating stars and title of rating table",
            "need to find rating date and title of rating table"
        ],
        "neg_len": 38
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "consider the building full name like % court % conditions in place of the building short name like court conditions .",
        "primary_span": [
            [
                0,
                9
            ]
        ],
        "secondary_span": [
            [
                10,
                20
            ]
        ],
        "positive_example": "the building full name should be implanted in place of building full name.",
        "negative_examples": [
            "the building id should be implanted in place of building full name .",
            "the building short name should be implanted in place of building full name .",
            "the building description should be implanted in place of building full name .",
            "the building address should be implanted in place of building full name .",
            "the building manager should be implanted in place of building full name .",
            "the building phone should be implanted in place of building full name .",
            "the apartment id should be implanted in place of building full name .",
            "the apartment type code should be implanted in place of building full name .",
            "the apartment number should be implanted in place of building full name .",
            "the bathroom count should be implanted in place of building full name .",
            "the bedroom count should be implanted in place of building full name .",
            "the room count should be implanted in place of building full name .",
            "the facility code should be implanted in place of building full name .",
            "the guest id should be implanted in place of building full name .",
            "the gender code should be implanted in place of building full name .",
            "the guest first name should be implanted in place of building full name .",
            "the guest last name should be implanted in place of building full name .",
            "the date of birth should be implanted in place of building full name .",
            "the apartment booking id should be implanted in place of building full name .",
            "the booking status code should be implanted in place of building full name .",
            "the booking start date should be implanted in place of building full name .",
            "the booking end date should be implanted in place of building full name .",
            "the status date should be implanted in place of building full name .",
            "the available yes or no should be implanted in place of building full name ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "find district name in place of headquartered city .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Should find district name instead of headquartered city .",
        "negative_examples": [
            "should find product id instead of headquartered city .",
            "should find product instead of headquartered city .",
            "should find dimensions instead of headquartered city .",
            "should find dpi instead of headquartered city .",
            "should find pages per minute color instead of headquartered city .",
            "should find max page size instead of headquartered city .",
            "should find interface instead of headquartered city .",
            "should find store id instead of headquartered city .",
            "should find store name instead of headquartered city .",
            "should find type instead of headquartered city .",
            "should find area size instead of headquartered city .",
            "should find number of product category instead of headquartered city .",
            "should find ranking instead of headquartered city .",
            "should find district id instead of headquartered city .",
            "should find city population instead of headquartered city .",
            "should find city area instead of headquartered city .",
            "should find district name instead of product id .",
            "should find district name instead of product .",
            "should find district name instead of dimensions .",
            "should find district name instead of dpi .",
            "should find district name instead of pages per minute color .",
            "should find district name instead of max page size .",
            "should find district name instead of interface .",
            "should find district name instead of store id .",
            "should find district name instead of store name .",
            "should find district name instead of type .",
            "should find district name instead of area size .",
            "should find district name instead of number of product category .",
            "should find district name instead of ranking .",
            "should find district name instead of district id .",
            "should find district name instead of city population .",
            "should find district name instead of city area ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , do not find for each value of apartments 's apartment id . in step 3 , additionally make sure that bedroom count greater than 4 .",
        "primary_span": [
            [
                4,
                15
            ],
            [
                20,
                29
            ]
        ],
        "secondary_span": [],
        "positive_example": "instead of using apartment id, you should use bedroom count.",
        "negative_examples": [
            "instead of using building id , you should use bedroom count .",
            "instead of using building short name , you should use bedroom count .",
            "instead of using building full name , you should use bedroom count .",
            "instead of using building description , you should use bedroom count .",
            "instead of using building address , you should use bedroom count .",
            "instead of using building manager , you should use bedroom count .",
            "instead of using building phone , you should use bedroom count .",
            "instead of using apartment type code , you should use bedroom count .",
            "instead of using apartment number , you should use bedroom count .",
            "instead of using bathroom count , you should use bedroom count .",
            "instead of using room count , you should use bedroom count .",
            "instead of using facility code , you should use bedroom count .",
            "instead of using guest id , you should use bedroom count .",
            "instead of using gender code , you should use bedroom count .",
            "instead of using guest first name , you should use bedroom count .",
            "instead of using guest last name , you should use bedroom count .",
            "instead of using date of birth , you should use bedroom count .",
            "instead of using apartment booking id , you should use bedroom count .",
            "instead of using booking status code , you should use bedroom count .",
            "instead of using booking start date , you should use bedroom count .",
            "instead of using booking end date , you should use bedroom count .",
            "instead of using status date , you should use bedroom count .",
            "instead of using available yes or no , you should use bedroom count .",
            "instead of using apartment id , you should use building id .",
            "instead of using apartment id , you should use building short name .",
            "instead of using apartment id , you should use building full name .",
            "instead of using apartment id , you should use building description .",
            "instead of using apartment id , you should use building address .",
            "instead of using apartment id , you should use building manager .",
            "instead of using apartment id , you should use building phone .",
            "instead of using apartment id , you should use apartment type code .",
            "instead of using apartment id , you should use apartment number .",
            "instead of using apartment id , you should use bathroom count .",
            "instead of using apartment id , you should use room count .",
            "instead of using apartment id , you should use facility code .",
            "instead of using apartment id , you should use guest id .",
            "instead of using apartment id , you should use gender code .",
            "instead of using apartment id , you should use guest first name .",
            "instead of using apartment id , you should use guest last name .",
            "instead of using apartment id , you should use date of birth .",
            "instead of using apartment id , you should use apartment booking id .",
            "instead of using apartment id , you should use booking status code .",
            "instead of using apartment id , you should use booking start date .",
            "instead of using apartment id , you should use booking end date .",
            "instead of using apartment id , you should use status date .",
            "instead of using apartment id , you should use available yes or no ."
        ],
        "neg_len": 46
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , consider the csu fees 's year equals 2005 conditions in place of the faculty 's year equals 2005 and faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ],
            [
                27,
                41
            ]
        ],
        "positive_example": "Replace \"Faculty equals 357. 1\" with \"Campuses's campus equals CSU\".",
        "negative_examples": [
            "replace \" campuses equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" csu fees equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" degrees equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" discipline enrollments equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" enrollments equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" id equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" campus equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" location equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" county equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" year equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" campus fee equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" discipline equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" undergraduate equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" graduate equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" totalenrollment ay equals 357 . 1 \" with \" campuses 's campus equals csu \" .",
            "replace \" fte ay equals 357 . 1 \" with \" campuses 's campus equals csu \" ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty 's year equals 1996 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                26
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "You need to find CSU campus and not faculty year equals 1996.",
        "negative_examples": [
            "you need to find csu campus and not campuses year equals 1996 .",
            "you need to find csu campus and not campuses county equals 1996 .",
            "you need to find csu campus and not degrees degrees equals 1996 .",
            "you need to find csu campus and not enrollments county equals 1996 .",
            "you need to find csu campus and not faculty fte ay equals 1996 .",
            "you need to find csu campus and not csu fees year equals 1996 .",
            "you need to find csu campus and not discipline enrollments campus fee equals 1996 .",
            "you need to find csu campus and not discipline enrollments county equals 1996 .",
            "you need to find csu campus and not campuses degrees equals 1996 .",
            "you need to find csu campus and not campuses totalenrollment ay equals 1996 .",
            "you need to find csu campus and not degrees totalenrollment ay equals 1996 .",
            "you need to find csu campus and not county year equals 1996 .",
            "you need to find csu campus and not enrollments undergraduate equals 1996 .",
            "you need to find csu campus and not csu fees discipline equals 1996 .",
            "you need to find csu campus and not fte ay year equals 1996 .",
            "you need to find csu campus and not id year equals 1996 .",
            "you need to find csu campus and not discipline enrollments graduate equals 1996 .",
            "you need to find csu campus and not campuses fte ay equals 1996 .",
            "you need to find csu campus and not campuses graduate equals 1996 .",
            "you need to find csu campus and not csu fees campus equals 1996 .",
            "you need to find csu campus and not enrollments campus equals 1996 .",
            "you need to find csu campus and not campus year equals 1996 .",
            "you need to find csu campus and not campuses discipline equals 1996 .",
            "you need to find csu campus and not degrees graduate equals 1996 .",
            "you need to find csu campus and not enrollments year equals 1996 .",
            "you need to find csu campus and not faculty county equals 1996 .",
            "you need to find csu campus and not csu fees campus fee equals 1996 .",
            "you need to find csu campus and not degrees campus fee equals 1996 .",
            "you need to find csu campus and not campuses undergraduate equals 1996 .",
            "you need to find csu campus and not faculty undergraduate equals 1996 .",
            "you need to find csu campus and not campuses campus equals 1996 .",
            "you need to find csu campus and not degrees location equals 1996 .",
            "you need to find csu campus and not faculty id equals 1996 .",
            "you need to find csu campus and not discipline enrollments campus equals 1996 .",
            "you need to find csu campus and not campuses location equals 1996 .",
            "you need to find csu campus and not faculty totalenrollment ay equals 1996 .",
            "you need to find csu campus and not totalenrollment ay year equals 1996 .",
            "you need to find csu campus and not degrees discipline equals 1996 .",
            "you need to find csu campus and not degrees campus equals 1996 .",
            "you need to find csu campus and not enrollments campus fee equals 1996 .",
            "you need to find csu campus and not degrees year equals 1996 .",
            "you need to find csu campus and not csu fees degrees equals 1996 .",
            "you need to find csu campus and not faculty location equals 1996 .",
            "you need to find csu campus and not discipline enrollments degrees equals 1996 .",
            "you need to find csu campus and not discipline enrollments year equals 1996 .",
            "you need to find csu campus and not faculty discipline equals 1996 .",
            "you need to find csu campus and not enrollments degrees equals 1996 .",
            "you need to find csu campus and not undergraduate year equals 1996 .",
            "you need to find csu campus and not csu fees totalenrollment ay equals 1996 .",
            "you need to find csu campus and not discipline enrollments fte ay equals 1996 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the discipline enrollments table besides the campuses table . additionally make sure that campuses 's campus equals San Francisco State University and discipline enrollments 's year equals 2004 . find summation of graduate in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                33
            ],
            [
                34,
                37
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                38,
                44
            ]
        ],
        "positive_example": "Find discipline enrollments graduate whose campuses campuses equals San Francisco State University and year equals 2004.",
        "negative_examples": [
            "find csu fees graduate whose campuses campuses equals san francisco state university and county equals 2004 .",
            "find discipline enrollments graduate whose discipline campuses equals san francisco state university and year equals 2004 .",
            "find csu fees graduate whose campuses campuses equals san francisco state university and discipline equals 2004 .",
            "find enrollments graduate whose campuses campuses equals san francisco state university and county equals 2004 .",
            "find faculty graduate whose campuses campuses equals san francisco state university and totalenrollment ay equals 2004 .",
            "find enrollments graduate whose campuses campuses equals san francisco state university and campus fee equals 2004 .",
            "find degrees undergraduate whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find campuses discipline whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find csu fees county whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find campuses graduate whose campuses campuses equals san francisco state university and id equals 2004 .",
            "find faculty campus fee whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find enrollments graduate whose campuses campuses equals san francisco state university and degrees equals 2004 .",
            "find faculty id whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find discipline enrollments graduate whose totalenrollment ay campuses equals san francisco state university and year equals 2004 .",
            "find faculty graduate whose campuses campuses equals san francisco state university and location equals 2004 .",
            "find discipline enrollments graduate whose campuses campuses equals san francisco state university and discipline equals 2004 .",
            "find discipline enrollments graduate whose fte ay campuses equals san francisco state university and year equals 2004 .",
            "find discipline enrollments graduate whose campuses campuses equals san francisco state university and campus fee equals 2004 .",
            "find campuses graduate whose campuses campuses equals san francisco state university and undergraduate equals 2004 .",
            "find csu fees graduate whose campuses campuses equals san francisco state university and faculty equals 2004 .",
            "find faculty graduate whose campuses campuses equals san francisco state university and degrees equals 2004 .",
            "find enrollments graduate whose campuses campuses equals san francisco state university and undergraduate equals 2004 .",
            "find faculty location whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find enrollments fte ay whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find campuses graduate whose campuses campuses equals san francisco state university and faculty equals 2004 .",
            "find csu fees graduate whose campuses campuses equals san francisco state university and totalenrollment ay equals 2004 .",
            "find campuses graduate whose campuses campuses equals san francisco state university and totalenrollment ay equals 2004 .",
            "find faculty graduate whose campuses campuses equals san francisco state university and campus fee equals 2004 .",
            "find enrollments discipline whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find discipline enrollments graduate whose campuses campuses equals san francisco state university and location equals 2004 .",
            "find campuses fte ay whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find faculty graduate whose campuses campuses equals san francisco state university and undergraduate equals 2004 .",
            "find discipline enrollments graduate whose faculty campuses equals san francisco state university and year equals 2004 .",
            "find csu fees campus fee whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find location graduate whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find campuses faculty whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find csu fees graduate whose campuses campuses equals san francisco state university and location equals 2004 .",
            "find enrollments undergraduate whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find degrees graduate whose campuses campuses equals san francisco state university and totalenrollment ay equals 2004 .",
            "find degrees location whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find enrollments graduate whose campuses campuses equals san francisco state university and totalenrollment ay equals 2004 .",
            "find enrollments graduate whose campuses campuses equals san francisco state university and fte ay equals 2004 .",
            "find csu fees faculty whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find faculty graduate whose campuses campuses equals san francisco state university and fte ay equals 2004 .",
            "find enrollments faculty whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find totalenrollment ay graduate whose campuses campuses equals san francisco state university and year equals 2004 .",
            "find campuses graduate whose campuses campuses equals san francisco state university and county equals 2004 .",
            "find discipline enrollments graduate whose campuses campuses equals san francisco state university and degrees equals 2004 .",
            "find degrees graduate whose campuses campuses equals san francisco state university and id equals 2004 .",
            "find faculty undergraduate whose campuses campuses equals san francisco state university and year equals 2004 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use staff table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "Replace addresses table with staff table .",
        "negative_examples": [
            "replace vehicles table with staff table .",
            "replace customers table with staff table .",
            "replace customer payments table with staff table .",
            "replace lessons table with staff table .",
            "replace addresses table with vehicles table .",
            "replace addresses table with customers table .",
            "replace addresses table with customer payments table .",
            "replace addresses table with lessons table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally use the information from the apartments table besides the apartment facilities table . find summation of room count in place of number of rows .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                18
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                19,
                25
            ]
        ],
        "positive_example": "Need to find total rooms in apartments table instead of apartment facilities table .",
        "negative_examples": [
            "need to find total rooms in apartment buildings table instead of apartment facilities table .",
            "need to find total rooms in apartment facilities table instead of apartment facilities table .",
            "need to find total rooms in guests table instead of apartment facilities table .",
            "need to find total rooms in apartment bookings table instead of apartment facilities table .",
            "need to find total rooms in view unit status table instead of apartment facilities table ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "use vehicles table in place of addresses table .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "There should be vehicles table instead of addresses table .",
        "negative_examples": [
            "there should be vehicles table instead of staff table .",
            "there should be vehicles table instead of customers table .",
            "there should be vehicles table instead of customer payments table .",
            "there should be vehicles table instead of lessons table .",
            "there should be staff table instead of addresses table .",
            "there should be customers table instead of addresses table .",
            "there should be customer payments table instead of addresses table .",
            "there should be lessons table instead of addresses table ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "additionally use the information from the rating table besides the movie table .",
        "primary_span": [
            [
                0,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                12
            ]
        ],
        "positive_example": "Should correspond number of rows to each value of movie id in rating table .",
        "negative_examples": [
            "should correspond number of rows to each value of movie id in movie table .",
            "should correspond number of rows to each value of movie id in reviewer table ."
        ],
        "neg_len": 2
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find minimum snatch in place of minimum total .",
        "primary_span": [
            [
                0,
                2
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ]
        ],
        "positive_example": "total is wrong . Take snatch in place of it .",
        "negative_examples": [
            "total is wrong . take body builder id in place of it .",
            "total is wrong . take people id in place of it .",
            "total is wrong . take clean jerk in place of it .",
            "total is wrong . take name in place of it .",
            "total is wrong . take height in place of it .",
            "total is wrong . take weight in place of it .",
            "total is wrong . take birth date in place of it .",
            "total is wrong . take birth place in place of it .",
            "body builder id is wrong . take snatch in place of it .",
            "people id is wrong . take snatch in place of it .",
            "clean jerk is wrong . take snatch in place of it .",
            "name is wrong . take snatch in place of it .",
            "height is wrong . take snatch in place of it .",
            "weight is wrong . take snatch in place of it .",
            "birth date is wrong . take snatch in place of it .",
            "birth place is wrong . take snatch in place of it ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "movie_1",
        "tabel_names": [
            "movie",
            "reviewer",
            "rating"
        ],
        "column_names": [
            "movie id",
            "title",
            "year",
            "director",
            "reviewer id",
            "name",
            "reviewer id",
            "movie id",
            "rating stars",
            "rating date"
        ],
        "template_feedback": "in step 2 , additionally find director . find rating stars in place of maximum rating stars . find minimum rating stars in place of maximum rating stars .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                8,
                10
            ],
            [
                18,
                21
            ]
        ],
        "secondary_span": [
            [
                11,
                17
            ],
            [
                22,
                28
            ]
        ],
        "positive_example": "Find each value of director along with rating stars and title whose lowest value in rating stars .",
        "negative_examples": [
            "find each value of director along with movie id and title whose lowest value in rating stars .",
            "find each value of director along with title and title whose lowest value in rating stars .",
            "find each value of director along with year and title whose lowest value in rating stars .",
            "find each value of director along with reviewer id and title whose lowest value in rating stars .",
            "find each value of director along with name and title whose lowest value in rating stars .",
            "find each value of director along with rating date and title whose lowest value in rating stars .",
            "find each value of movie id along with rating stars and title whose lowest value in rating stars .",
            "find each value of title along with rating stars and title whose lowest value in rating stars .",
            "find each value of year along with rating stars and title whose lowest value in rating stars .",
            "find each value of reviewer id along with rating stars and title whose lowest value in rating stars .",
            "find each value of name along with rating stars and title whose lowest value in rating stars .",
            "find each value of rating date along with rating stars and title whose lowest value in rating stars ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , use staff table in place of customers table in step 2 , consider the staff 's first name equals Janessa and staff 's last name equals Sawayn conditions in place of the state province county equals Sawayn and customers 's first name equals Janessa conditions . additionally find state province county .",
        "primary_span": [
            [
                4,
                6
            ],
            [
                16,
                31
            ],
            [
                50,
                55
            ]
        ],
        "secondary_span": [
            [
                7,
                11
            ],
            [
                32,
                49
            ]
        ],
        "positive_example": "In step 1 replace customers with staff , In step 2 replace state province county with last name , find state province county too .",
        "negative_examples": [
            "in step 1 replace customers with customer payments , in step 2 replace country with last name , find state province country",
            "in step 1 replace customers with vehicles , in step 2 replace state province county with phone number , find state province county too .",
            "in step 1 replace addresses with staff , in step 2 replace customer status code with last name , find state province customer status code",
            "in step 1 replace vehicles with staff , in step 2 replace date joined staff with last name , find state province date joined staff",
            "in step 1 replace customers with addresses , in step 2 replace amount payment with last name , find state province amount payment",
            "in step 1 replace customers with addresses , in step 2 replace state province county with nickname , find state province county too .",
            "in step 1 replace customers with addresses , in step 2 replace state province county with lesson status code , find state province county too .",
            "in step 1 replace vehicles with staff , in step 2 replace state province county with country , find state province county too .",
            "in step 1 replace lessons with staff , in step 2 replace state province county with datetime payment , find state province county too .",
            "in step 1 replace customer payments with staff , in step 2 replace lesson status code with last name , find state province lesson status code",
            "in step 1 replace customers with lessons , in step 2 replace lesson time with last name , find state province lesson time",
            "in step 1 replace vehicles with staff , in step 2 replace phone number with last name , find state province phone number",
            "in step 1 replace customers with staff , in step 2 replace state province county with payment method code , find state province county too .",
            "in step 1 replace customers with addresses , in step 2 replace state province county with address id , find state province county too .",
            "in step 1 replace customers with lessons , in step 2 replace state province county with country , find state province county too .",
            "in step 1 replace customers with lessons , in step 2 replace state province county with line 1 number building , find state province county too .",
            "in step 1 replace addresses with staff , in step 2 replace state province county with date of birth , find state province county too .",
            "in step 1 replace customers with customer payments , in step 2 replace state province county with lesson status code , find state province county too .",
            "in step 1 replace customers with lessons , in step 2 replace phone number with last name , find state province phone number",
            "in step 1 replace customers with customer payments , in step 2 replace state province county with customer status code , find state province county too .",
            "in step 1 replace customer payments with staff , in step 2 replace amount outstanding with last name , find state province amount outstanding",
            "in step 1 replace customer payments with staff , in step 2 replace state province county with vehicle id , find state province county too .",
            "in step 1 replace customers with vehicles , in step 2 replace state province county with cell mobile phone number , find state province county too .",
            "in step 1 replace customers with staff , in step 2 replace zip postcode with last name , find state province county too .",
            "in step 1 replace customer payments with staff , in step 2 replace date of birth with last name , find state province date of birth",
            "in step 1 replace customers with lessons , in step 2 replace state province county with first name , find state province county too .",
            "in step 1 replace customers with staff , in step 2 replace state province county with lesson date , find state province county too .",
            "in step 1 replace customer payments with staff , in step 2 replace state province county with first name , find state province county too .",
            "in step 1 replace lessons with staff , in step 2 replace state province county with vehicle id , find state province county too .",
            "in step 1 replace customers with addresses , in step 2 replace state province county with customer status code , find state province county too .",
            "in step 1 replace customers with lessons , in step 2 replace line 1 number building with last name , find state province line 1 number building",
            "in step 1 replace customer payments with staff , in step 2 replace customer address id with last name , find state province customer address id",
            "in step 1 replace customers with addresses , in step 2 replace email address with last name , find state province email address",
            "in step 1 replace customers with lessons , in step 2 replace state province county with lesson status code , find state province county too .",
            "in step 1 replace customers with lessons , in step 2 replace date joined staff with last name , find state province date joined staff",
            "in step 1 replace customers with staff , in step 2 replace state province county with zip postcode , find state province county too .",
            "in step 1 replace customers with customer payments , in step 2 replace customer address id with last name , find state province customer address id",
            "in step 1 replace customers with vehicles , in step 2 replace state province county with customer address id , find state province county too .",
            "in step 1 replace customers with customer payments , in step 2 replace state province county with price , find state province county too .",
            "in step 1 replace customers with lessons , in step 2 replace state province county with date joined staff , find state province county too .",
            "in step 1 replace customers with staff , in step 2 replace date of birth with last name , find state province county too .",
            "in step 1 replace addresses with staff , in step 2 replace lesson id with last name , find state province lesson id",
            "in step 1 replace customer payments with staff , in step 2 replace state province county with staff address id , find state province county too .",
            "in step 1 replace customer payments with staff , in step 2 replace state province county with last name , find state province county too .",
            "in step 1 replace customers with addresses , in step 2 replace price with last name , find state province price",
            "in step 1 replace customer payments with staff , in step 2 replace staff address id with last name , find state province staff address id",
            "in step 1 replace customer payments with staff , in step 2 replace state province county with vehicle details , find state province county too .",
            "in step 1 replace customers with staff , in step 2 replace state province county with line 1 number building , find state province county too .",
            "in step 1 replace addresses with staff , in step 2 replace state province county with staff id , find state province county too .",
            "in step 1 replace customers with addresses , in step 2 replace amount outstanding with last name , find state province amount outstanding"
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , order the results by average room count in place of average bathroom count .",
        "primary_span": [
            [
                4,
                10
            ]
        ],
        "secondary_span": [
            [
                11,
                17
            ]
        ],
        "positive_example": "Replace bathroom count with room count .",
        "negative_examples": [
            "replace building id with room count .",
            "replace building short name with room count .",
            "replace building full name with room count .",
            "replace building description with room count .",
            "replace building address with room count .",
            "replace building manager with room count .",
            "replace building phone with room count .",
            "replace apartment id with room count .",
            "replace apartment type code with room count .",
            "replace apartment number with room count .",
            "replace bedroom count with room count .",
            "replace room count with room count .",
            "replace facility code with room count .",
            "replace guest id with room count .",
            "replace gender code with room count .",
            "replace guest first name with room count .",
            "replace guest last name with room count .",
            "replace date of birth with room count .",
            "replace apartment booking id with room count .",
            "replace booking status code with room count .",
            "replace booking start date with room count .",
            "replace booking end date with room count .",
            "replace status date with room count .",
            "replace available yes or no with room count ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the campuses table and degrees table besides the faculty table . consider the faculty 's year equals 2001 conditions in place of the faculty 's year equals 1 conditions . find faculty in place of number of rows . find the result with the smallest degrees .",
        "primary_span": [
            [
                0,
                10
            ],
            [
                16,
                23
            ],
            [
                35,
                36
            ],
            [
                44,
                51
            ]
        ],
        "secondary_span": [
            [
                11,
                15
            ],
            [
                24,
                34
            ],
            [
                37,
                43
            ]
        ],
        "positive_example": "I want 2001 and ensure that from degree table every faculty has lowest degrees.",
        "negative_examples": [
            "i want 2001 and ensure that from degree table every id has lowest enrollments .",
            "i want 2001 and ensure that from degree table every id has lowest discipline enrollments .",
            "i want 2001 and ensure that from degree table every campuses has lowest totalenrollment ay .",
            "i want 2001 and ensure that from degree table every csu fees has lowest degrees .",
            "i want 2001 and ensure that from degree table every undergraduate has lowest degrees .",
            "i want 2001 and ensure that from degree table every year has lowest csu fees .",
            "i want 2001 and ensure that from degree table every faculty has lowest fte ay .",
            "i want 2001 and ensure that from degree table every discipline enrollments has lowest location .",
            "i want 2001 and ensure that from degree table every faculty has lowest graduate .",
            "i want 2001 and ensure that from degree table every county has lowest enrollments .",
            "i want 2001 and ensure that from degree table every faculty has lowest county .",
            "i want 2001 and ensure that from degree table every campuses has lowest campus .",
            "i want 2001 and ensure that from degree table every graduate has lowest discipline enrollments .",
            "i want 2001 and ensure that from degree table every faculty has lowest campuses .",
            "i want 2001 and ensure that from degree table every enrollments has lowest discipline .",
            "i want 2001 and ensure that from degree table every discipline has lowest discipline enrollments .",
            "i want 2001 and ensure that from degree table every enrollments has lowest undergraduate .",
            "i want 2001 and ensure that from degree table every faculty has lowest totalenrollment ay .",
            "i want 2001 and ensure that from degree table every undergraduate has lowest csu fees .",
            "i want 2001 and ensure that from degree table every discipline has lowest enrollments .",
            "i want 2001 and ensure that from degree table every campus fee has lowest degrees .",
            "i want 2001 and ensure that from degree table every fte ay has lowest degrees .",
            "i want 2001 and ensure that from degree table every totalenrollment ay has lowest csu fees .",
            "i want 2001 and ensure that from degree table every discipline enrollments has lowest undergraduate .",
            "i want 2001 and ensure that from degree table every campus has lowest csu fees .",
            "i want 2001 and ensure that from degree table every campus has lowest enrollments .",
            "i want 2001 and ensure that from degree table every discipline enrollments has lowest degrees .",
            "i want 2001 and ensure that from degree table every location has lowest enrollments .",
            "i want 2001 and ensure that from degree table every faculty has lowest undergraduate .",
            "i want 2001 and ensure that from degree table every totalenrollment ay has lowest degrees .",
            "i want 2001 and ensure that from degree table every csu fees has lowest year .",
            "i want 2001 and ensure that from degree table every undergraduate has lowest enrollments .",
            "i want 2001 and ensure that from degree table every campuses has lowest location .",
            "i want 2001 and ensure that from degree table every faculty has lowest id .",
            "i want 2001 and ensure that from degree table every location has lowest csu fees .",
            "i want 2001 and ensure that from degree table every campus fee has lowest campuses .",
            "i want 2001 and ensure that from degree table every location has lowest discipline enrollments .",
            "i want 2001 and ensure that from degree table every year has lowest campuses .",
            "i want 2001 and ensure that from degree table every campuses has lowest id .",
            "i want 2001 and ensure that from degree table every fte ay has lowest csu fees .",
            "i want 2001 and ensure that from degree table every totalenrollment ay has lowest discipline enrollments .",
            "i want 2001 and ensure that from degree table every campus has lowest degrees .",
            "i want 2001 and ensure that from degree table every campuses has lowest discipline .",
            "i want 2001 and ensure that from degree table every location has lowest degrees .",
            "i want 2001 and ensure that from degree table every discipline enrollments has lowest year .",
            "i want 2001 and ensure that from degree table every discipline enrollments has lowest campus fee .",
            "i want 2001 and ensure that from degree table every totalenrollment ay has lowest enrollments .",
            "i want 2001 and ensure that from degree table every campus fee has lowest discipline enrollments .",
            "i want 2001 and ensure that from degree table every year has lowest discipline enrollments .",
            "i want 2001 and ensure that from degree table every year has lowest degrees ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "in step 2 , consider the hardware model name equals LG-P760 conditions in place of the model name equals LG-P760 conditions . find wifi in place of graphics mode .",
        "primary_span": [
            [
                4,
                11
            ],
            [
                22,
                23
            ]
        ],
        "secondary_span": [
            [
                12,
                21
            ],
            [
                24,
                29
            ]
        ],
        "positive_example": "I want model name of hardware on behalf of model name and need to search for wifi.",
        "negative_examples": [
            "i want launch year of hardware on behalf of model name and need to search for wifi .",
            "i want ram mib of hardware on behalf of model name and need to search for wifi .",
            "i want rom mib of hardware on behalf of model name and need to search for wifi .",
            "i want slots of hardware on behalf of model name and need to search for wifi .",
            "i want bluetooth of hardware on behalf of model name and need to search for wifi .",
            "i want graphics mode of hardware on behalf of model name and need to search for wifi .",
            "i want char cells of hardware on behalf of model name and need to search for wifi .",
            "i want pixels of hardware on behalf of model name and need to search for wifi .",
            "i want hardware colours of hardware on behalf of model name and need to search for wifi .",
            "i want used kb of hardware on behalf of model name and need to search for wifi .",
            "i want map of hardware on behalf of model name and need to search for wifi .",
            "i want type of hardware on behalf of model name and need to search for wifi .",
            "i want company name of hardware on behalf of model name and need to search for wifi .",
            "i want hardware model name of hardware on behalf of model name and need to search for wifi .",
            "i want accreditation type of hardware on behalf of model name and need to search for wifi .",
            "i want accreditation level of hardware on behalf of model name and need to search for wifi .",
            "i want date of hardware on behalf of model name and need to search for wifi .",
            "i want chip model of hardware on behalf of model name and need to search for wifi .",
            "i want screen mode of hardware on behalf of model name and need to search for wifi .",
            "i want model name of hardware on behalf of model name and need to search for launch year .",
            "i want model name of hardware on behalf of model name and need to search for ram mib .",
            "i want model name of hardware on behalf of model name and need to search for rom mib .",
            "i want model name of hardware on behalf of model name and need to search for slots .",
            "i want model name of hardware on behalf of model name and need to search for bluetooth .",
            "i want model name of hardware on behalf of model name and need to search for graphics mode .",
            "i want model name of hardware on behalf of model name and need to search for char cells .",
            "i want model name of hardware on behalf of model name and need to search for pixels .",
            "i want model name of hardware on behalf of model name and need to search for hardware colours .",
            "i want model name of hardware on behalf of model name and need to search for used kb .",
            "i want model name of hardware on behalf of model name and need to search for map .",
            "i want model name of hardware on behalf of model name and need to search for type .",
            "i want model name of hardware on behalf of model name and need to search for company name .",
            "i want model name of hardware on behalf of model name and need to search for hardware model name .",
            "i want model name of hardware on behalf of model name and need to search for accreditation type .",
            "i want model name of hardware on behalf of model name and need to search for accreditation level .",
            "i want model name of hardware on behalf of model name and need to search for date .",
            "i want model name of hardware on behalf of model name and need to search for chip model .",
            "i want model name of hardware on behalf of model name and need to search for screen mode ."
        ],
        "neg_len": 38
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name like Normandie Court and building description equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "Step 2 Supersede bathroom count and building description with bedroom count and building short name respectively , clear building short name contains Normandie Court\".",
        "negative_examples": [
            "step 2 supersede bathroom count and building description with bedroom count and booking end date respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building phone with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede building id and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and booking status code with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede apartment number and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and building full name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building id with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede building full name and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and date of birth respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and gender code with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and guest last name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede building address and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and booking end date with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and guest id with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and gender code respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and apartment booking id with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede status date and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede facility code and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and building id respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and bedroom count with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and guest first name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and guest first name with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede booking status code and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and guest id respectively , clear building short name contains normandie court \" .",
            "step 2 supersede gender code and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and building phone respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building full name with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and bedroom count respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and facility code with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and building manager respectively , clear building short name contains normandie court \" .",
            "step 2 supersede booking start date and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede building manager and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and room count respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and booking start date with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede guest id and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and status date respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and guest last name with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and room count with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede building phone and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building manager with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and apartment id with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede date of birth and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and available yes or no respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and apartment number respectively , clear building short name contains normandie court \" .",
            "step 2 supersede guest last name and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and apartment type code with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and building address respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and apartment number with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bedroom count and building description with bedroom count and building short name respectively , clear building short name contains normandie court \" .",
            "step 2 supersede bathroom count and building description with bedroom count and booking start date respectively , clear building short name contains normandie court \" ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "additionally use the information from the discipline enrollments table besides the campuses table . consider the campuses 's campus equals San Jose State University and discipline enrollments 's year equals 2004 conditions in place of the county equals San Jose State University conditions . find summation of undergraduate in place of number of rows .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                14,
                31
            ],
            [
                44,
                47
            ]
        ],
        "secondary_span": [
            [
                9,
                13
            ],
            [
                32,
                43
            ],
            [
                48,
                54
            ]
        ],
        "positive_example": "You need to search for the enrollments of discipline undergraduate and county.",
        "negative_examples": [
            "you need to search for the enrollments of discipline undergraduate and id .",
            "you need to search for the enrollments of discipline undergraduate and campus .",
            "you need to search for the enrollments of discipline undergraduate and location .",
            "you need to search for the enrollments of discipline undergraduate and year .",
            "you need to search for the enrollments of discipline undergraduate and campus fee .",
            "you need to search for the enrollments of discipline undergraduate and degrees .",
            "you need to search for the enrollments of discipline undergraduate and discipline .",
            "you need to search for the enrollments of discipline undergraduate and graduate .",
            "you need to search for the enrollments of discipline undergraduate and totalenrollment ay .",
            "you need to search for the enrollments of discipline undergraduate and fte ay .",
            "you need to search for the enrollments of discipline undergraduate and faculty .",
            "you need to search for the enrollments of discipline id and county .",
            "you need to search for the enrollments of discipline campus and county .",
            "you need to search for the enrollments of discipline location and county .",
            "you need to search for the enrollments of discipline year and county .",
            "you need to search for the enrollments of discipline campus fee and county .",
            "you need to search for the enrollments of discipline degrees and county .",
            "you need to search for the enrollments of discipline discipline and county .",
            "you need to search for the enrollments of discipline graduate and county .",
            "you need to search for the enrollments of discipline totalenrollment ay and county .",
            "you need to search for the enrollments of discipline fte ay and county .",
            "you need to search for the enrollments of discipline faculty and county ."
        ],
        "neg_len": 22
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "in step 1 , additionally use the information from the customers table besides the addresses table .",
        "primary_span": [
            [
                4,
                11
            ]
        ],
        "secondary_span": [
            [
                12,
                16
            ]
        ],
        "positive_example": "You have to look for a city where customer resides in step 1.",
        "negative_examples": [
            "you have to look for a city where addresses resides in step 1 .",
            "you have to look for a city where staff resides in step 1 .",
            "you have to look for a city where vehicles resides in step 1 .",
            "you have to look for a city where customer payments resides in step 1 .",
            "you have to look for a city where lessons resides in step 1 ."
        ],
        "neg_len": 5
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the pages per minute color less than 5 and max page size equals A4 conditions in place of the dpi greater than A4 and dpi less than 5 conditions .",
        "primary_span": [
            [
                0,
                15
            ]
        ],
        "secondary_span": [
            [
                16,
                30
            ]
        ],
        "positive_example": "Replace \"dpi greater than\" with pages per minute color smaller than\" and \"dpi less than\" with max page size equals\"",
        "negative_examples": [
            "replace \" dpi greater than \" with product id smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with product smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with dimensions smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with interface smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with store id smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with store name smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with type smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with area size smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with number of product category smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with ranking smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with district id smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with district name smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with headquartered city smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with city population smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with city area smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with product id equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with product equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with dimensions equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with interface equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with store id equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with store name equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with type equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with area size equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with number of product category equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with ranking equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with district id equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with district name equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with headquartered city equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with city population equals \"",
            "replace \" dpi greater than \" with pages per minute color smaller than \" and \" dpi less than \" with city area equals \"",
            "replace \" product id greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" product greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" dimensions greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" interface greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" store id greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" store name greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" type greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" area size greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" number of product category greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" ranking greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" district id greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" district name greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" headquartered city greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" city population greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \"",
            "replace \" city area greater than \" with pages per minute color smaller than \" and \" dpi less than \" with max page size equals \""
        ],
        "neg_len": 45
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 2 , find transaction id in place of account id .",
        "primary_span": [
            [
                4,
                6
            ]
        ],
        "secondary_span": [
            [
                7,
                12
            ]
        ],
        "positive_example": "I want the id of transaction.",
        "negative_examples": [
            "i want the id of customer id .",
            "i want the id of customer first name .",
            "i want the id of customer middle initial .",
            "i want the id of customer last name .",
            "i want the id of gender .",
            "i want the id of email address .",
            "i want the id of login name .",
            "i want the id of login password .",
            "i want the id of phone number .",
            "i want the id of town city .",
            "i want the id of state county province .",
            "i want the id of country .",
            "i want the id of order id .",
            "i want the id of date order placed .",
            "i want the id of order details .",
            "i want the id of invoice number .",
            "i want the id of invoice date .",
            "i want the id of account id .",
            "i want the id of date account opened .",
            "i want the id of account name .",
            "i want the id of other account details .",
            "i want the id of production type code .",
            "i want the id of product type description .",
            "i want the id of vat rating .",
            "i want the id of product id .",
            "i want the id of parent product id .",
            "i want the id of unit price .",
            "i want the id of product name .",
            "i want the id of product color .",
            "i want the id of product size .",
            "i want the id of transaction type .",
            "i want the id of transaction date .",
            "i want the id of transaction amount .",
            "i want the id of transaction comment .",
            "i want the id of other transaction details .",
            "i want the id of order item id .",
            "i want the id of product quantity .",
            "i want the id of other order item details .",
            "i want the id of product title .",
            "i want the id of product price .",
            "i want the id of derived product cost .",
            "i want the id of derived vat payable .",
            "i want the id of derived total cost ."
        ],
        "neg_len": 43
    },
    {
        "db_id": "body_builder",
        "tabel_names": [
            "body builder",
            "people"
        ],
        "column_names": [
            "body builder id",
            "people id",
            "snatch",
            "clean jerk",
            "total",
            "people id",
            "name",
            "height",
            "weight",
            "birth date",
            "birth place"
        ],
        "template_feedback": "find number of different birth place in place of number of different birth date .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [
            [
                6,
                14
            ]
        ],
        "positive_example": "You must use birth place instead of birth date.",
        "negative_examples": [
            "you must use birth place instead of body builder id .",
            "you must use birth place instead of people id .",
            "you must use birth place instead of snatch .",
            "you must use birth place instead of clean jerk .",
            "you must use birth place instead of total .",
            "you must use birth place instead of name .",
            "you must use birth place instead of height .",
            "you must use birth place instead of weight .",
            "you must use body builder id instead of birth date .",
            "you must use people id instead of birth date .",
            "you must use snatch instead of birth date .",
            "you must use clean jerk instead of birth date .",
            "you must use total instead of birth date .",
            "you must use name instead of birth date .",
            "you must use height instead of birth date .",
            "you must use weight instead of birth date ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table . in step 2 , consider the campuses 's campus equals San Jose State University and csu fees 's year equals 1996 conditions in place of the faculty 's year equals 1996 and csu fees 's year equals San Jose State University conditions .",
        "primary_span": [
            [
                4,
                10
            ],
            [
                15,
                32
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ],
            [
                33,
                53
            ]
        ],
        "positive_example": "Verify that the csu fees year is 1996 for San Jose State University.",
        "negative_examples": [
            "verify that the csu fees id is 1996 for san jose state university .",
            "verify that the csu fees campus is 1996 for san jose state university .",
            "verify that the csu fees location is 1996 for san jose state university .",
            "verify that the csu fees county is 1996 for san jose state university .",
            "verify that the csu fees campus fee is 1996 for san jose state university .",
            "verify that the csu fees degrees is 1996 for san jose state university .",
            "verify that the csu fees discipline is 1996 for san jose state university .",
            "verify that the csu fees undergraduate is 1996 for san jose state university .",
            "verify that the csu fees graduate is 1996 for san jose state university .",
            "verify that the csu fees totalenrollment ay is 1996 for san jose state university .",
            "verify that the csu fees fte ay is 1996 for san jose state university .",
            "verify that the csu fees faculty is 1996 for san jose state university ."
        ],
        "neg_len": 12
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building description like Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                24,
                28
            ]
        ],
        "secondary_span": [
            [
                13,
                23
            ],
            [
                29,
                36
            ]
        ],
        "positive_example": "Replace bathroom count and building description contains\" with bedroom count and building short name equals\" respectively .",
        "negative_examples": [
            "replace bathroom count and bedroom count contains \" with bedroom count and building short name equals \" respectively .",
            "replace date of birth and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and building phone equals \" respectively .",
            "replace bathroom count and status date contains \" with bedroom count and building short name equals \" respectively .",
            "replace guest first name and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and apartment type code contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and building id equals \" respectively .",
            "replace available yes or no and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and apartment id contains \" with bedroom count and building short name equals \" respectively .",
            "replace guest id and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building manager contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and available yes or no equals \" respectively .",
            "replace gender code and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and facility code contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and building manager equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and building full name equals \" respectively .",
            "replace building phone and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace booking start date and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and guest id contains \" with bedroom count and building short name equals \" respectively .",
            "replace booking end date and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and booking end date equals \" respectively .",
            "replace building address and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and booking start date contains \" with bedroom count and building short name equals \" respectively .",
            "replace room count and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and status date equals \" respectively .",
            "replace bathroom count and building id contains \" with bedroom count and building short name equals \" respectively .",
            "replace building id and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and booking status code equals \" respectively .",
            "replace apartment number and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and apartment number equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and booking start date equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and facility code equals \" respectively .",
            "replace bathroom count and booking end date contains \" with bedroom count and building short name equals \" respectively .",
            "replace bedroom count and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace building full name and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building phone contains \" with bedroom count and building short name equals \" respectively .",
            "replace guest last name and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and apartment type code equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and apartment id equals \" respectively .",
            "replace bathroom count and apartment number contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and guest last name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and guest id equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and bedroom count equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and apartment booking id equals \" respectively .",
            "replace apartment booking id and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building full name contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and date of birth equals \" respectively .",
            "replace apartment id and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace apartment type code and building description contains \" with bedroom count and building short name equals \" respectively .",
            "replace bathroom count and building description contains \" with bedroom count and building address equals \" respectively ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "in step 2 , consider the building short name equals Columbus Square conditions in place of the building short name equals Normandie Court and building manager equals Columbus Square conditions . find summation of room count in place of summation of bathroom count .",
        "primary_span": [
            [
                4,
                12
            ],
            [
                31,
                35
            ]
        ],
        "secondary_span": [
            [
                13,
                30
            ],
            [
                36,
                43
            ]
        ],
        "positive_example": "In step 2, determine that the aggregate of bedroom count from step 1 where building short name is Columbus Square.",
        "negative_examples": [
            "in step 2 , determine that the aggregate of bedroom count from step 1 where building id is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where building full name is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where building description is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where building address is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where building manager is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where building phone is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where apartment id is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where apartment type code is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where apartment number is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where bathroom count is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where bedroom count is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where room count is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where facility code is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where guest id is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where gender code is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where guest first name is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where guest last name is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where date of birth is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where apartment booking id is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where booking status code is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where booking start date is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where booking end date is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where status date is columbus square .",
            "in step 2 , determine that the aggregate of bedroom count from step 1 where available yes or no is columbus square ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "store_product",
        "tabel_names": [
            "product",
            "store",
            "district",
            "store product",
            "store district"
        ],
        "column_names": [
            "product id",
            "product",
            "dimensions",
            "dpi",
            "pages per minute color",
            "max page size",
            "interface",
            "store id",
            "store name",
            "type",
            "area size",
            "number of product category",
            "ranking",
            "district id",
            "district name",
            "headquartered city",
            "city population",
            "city area",
            "store id",
            "product id",
            "store id",
            "district id"
        ],
        "template_feedback": "consider the city population between 200000 and 2000000 conditions in place of the city population between 2000000 and 200000 conditions . find city population in place of headquartered city .",
        "primary_span": [
            [
                0,
                8
            ],
            [
                21,
                23
            ]
        ],
        "secondary_span": [
            [
                9,
                20
            ],
            [
                24,
                29
            ]
        ],
        "positive_example": "You should use city population in place of headquartered city and also ensure it is between 200000 and 2000000.",
        "negative_examples": [
            "you should use city population in place of product id and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of product and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of dimensions and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of dpi and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of pages per minute color and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of max page size and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of interface and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of store id and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of store name and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of type and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of area size and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of number of product category and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of ranking and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of district id and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of district name and also ensure it is between 200000 and 2000000 .",
            "you should use city population in place of city area and also ensure it is between 200000 and 2000000 .",
            "you should use product id in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use product in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use dimensions in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use dpi in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use pages per minute color in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use max page size in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use interface in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use store id in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use store name in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use type in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use area size in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use number of product category in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use ranking in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use district id in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use district name in place of headquartered city and also ensure it is between 200000 and 2000000 .",
            "you should use city area in place of headquartered city and also ensure it is between 200000 and 2000000 ."
        ],
        "neg_len": 32
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "use campuses table in place of faculty table . consider the campuses 's year less than or equals 1939 and campuses 's year greater than or equals 1935 conditions in place of the faculty 's year between 1939 and 1935 conditions . find campuses 's campus in place of faculty 's campus .",
        "primary_span": [
            [
                0,
                2
            ],
            [
                9,
                28
            ],
            [
                42,
                45
            ]
        ],
        "secondary_span": [
            [
                3,
                8
            ],
            [
                29,
                41
            ],
            [
                46,
                52
            ]
        ],
        "positive_example": "Replace faculty table with campuses and need to find year between 1935 and 1939.",
        "negative_examples": [
            "replace csu fees table with campuses and need to find id between 1935 and 1939 .",
            "replace enrollments table with campuses and need to find fte ay between 1935 and 1939 .",
            "replace graduate table with campuses and need to find year between 1935 and 1939 .",
            "replace csu fees table with campuses and need to find degrees between 1935 and 1939 .",
            "replace id table with campuses and need to find year between 1935 and 1939 .",
            "replace enrollments table with campuses and need to find campus fee between 1935 and 1939 .",
            "replace degrees table with campuses and need to find degrees between 1935 and 1939 .",
            "replace enrollments table with campuses and need to find discipline between 1935 and 1939 .",
            "replace totalenrollment ay table with campuses and need to find year between 1935 and 1939 .",
            "replace faculty table with degrees and need to find year between 1935 and 1939 .",
            "replace csu fees table with campuses and need to find campus fee between 1935 and 1939 .",
            "replace enrollments table with campuses and need to find graduate between 1935 and 1939 .",
            "replace campuses table with campuses and need to find graduate between 1935 and 1939 .",
            "replace degrees table with campuses and need to find id between 1935 and 1939 .",
            "replace discipline enrollments table with campuses and need to find undergraduate between 1935 and 1939 .",
            "replace faculty table with campuses and need to find totalenrollment ay between 1935 and 1939 .",
            "replace faculty table with graduate and need to find year between 1935 and 1939 .",
            "replace discipline enrollments table with campuses and need to find county between 1935 and 1939 .",
            "replace campuses table with campuses and need to find totalenrollment ay between 1935 and 1939 .",
            "replace csu fees table with campuses and need to find year between 1935 and 1939 .",
            "replace faculty table with campuses and need to find campus fee between 1935 and 1939 .",
            "replace faculty table with campuses and need to find fte ay between 1935 and 1939 .",
            "replace faculty table with campuses and need to find county between 1935 and 1939 .",
            "replace location table with campuses and need to find year between 1935 and 1939 .",
            "replace degrees table with campuses and need to find graduate between 1935 and 1939 .",
            "replace undergraduate table with campuses and need to find year between 1935 and 1939 .",
            "replace faculty table with campuses and need to find location between 1935 and 1939 .",
            "replace csu fees table with campuses and need to find county between 1935 and 1939 .",
            "replace csu fees table with campuses and need to find fte ay between 1935 and 1939 .",
            "replace faculty table with discipline and need to find year between 1935 and 1939 .",
            "replace campuses table with campuses and need to find degrees between 1935 and 1939 .",
            "replace csu fees table with campuses and need to find undergraduate between 1935 and 1939 .",
            "replace enrollments table with campuses and need to find totalenrollment ay between 1935 and 1939 .",
            "replace degrees table with campuses and need to find totalenrollment ay between 1935 and 1939 .",
            "replace discipline enrollments table with campuses and need to find totalenrollment ay between 1935 and 1939 .",
            "replace degrees table with campuses and need to find discipline between 1935 and 1939 .",
            "replace discipline enrollments table with campuses and need to find id between 1935 and 1939 .",
            "replace fte ay table with campuses and need to find year between 1935 and 1939 .",
            "replace discipline enrollments table with campuses and need to find fte ay between 1935 and 1939 .",
            "replace csu fees table with campuses and need to find discipline between 1935 and 1939 .",
            "replace degrees table with campuses and need to find campus fee between 1935 and 1939 .",
            "replace degrees table with campuses and need to find fte ay between 1935 and 1939 .",
            "replace faculty table with campuses and need to find degrees between 1935 and 1939 .",
            "replace campuses table with campuses and need to find id between 1935 and 1939 .",
            "replace enrollments table with campuses and need to find year between 1935 and 1939 .",
            "replace faculty table with location and need to find year between 1935 and 1939 .",
            "replace degrees table with campuses and need to find county between 1935 and 1939 .",
            "replace campuses table with campuses and need to find discipline between 1935 and 1939 .",
            "replace discipline enrollments table with campuses and need to find degrees between 1935 and 1939 .",
            "replace degrees table with campuses and need to find location between 1935 and 1939 ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "phone_1",
        "tabel_names": [
            "chip model",
            "screen mode",
            "phone"
        ],
        "column_names": [
            "model name",
            "launch year",
            "ram mib",
            "rom mib",
            "slots",
            "wifi",
            "bluetooth",
            "graphics mode",
            "char cells",
            "pixels",
            "hardware colours",
            "used kb",
            "map",
            "type",
            "company name",
            "hardware model name",
            "accreditation type",
            "accreditation level",
            "date",
            "chip model",
            "screen mode"
        ],
        "template_feedback": "additionally use the information from the phone table besides the chip model table . consider the launch year equals 2002 conditions in place of the launch year equals 1 conditions . find hardware model name in place of model name . find the result with the largest ram mib .",
        "primary_span": [
            [
                0,
                7
            ],
            [
                14,
                20
            ],
            [
                31,
                34
            ],
            [
                41,
                49
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                21,
                30
            ],
            [
                35,
                40
            ]
        ],
        "positive_example": "Look for the name of hardware model of phone which has launch year 2002 and ram mib is topmost.",
        "negative_examples": [
            "look for the name of hardware model of chip model which has screen mode 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and date is topmost .",
            "look for the name of hardware model of phone which has launch year 2002 and rom mib is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and map is topmost .",
            "look for the name of hardware model of phone which has company name 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and chip model is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and graphics mode is topmost .",
            "look for the name of hardware model of screen mode which has graphics mode 2002 and ram mib is topmost .",
            "look for the name of hardware model of type which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has hardware model name 2002 and ram mib is topmost .",
            "look for the name of hardware model of phone which has slots 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and accreditation type is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and rom mib is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and screen mode is topmost .",
            "look for the name of hardware model of phone which has rom mib 2002 and ram mib is topmost .",
            "look for the name of hardware model of phone which has launch year 2002 and used kb is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and slots is topmost .",
            "look for the name of hardware model of map which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of phone which has hardware colours 2002 and ram mib is topmost .",
            "look for the name of hardware model of wifi which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of phone which has launch year 2002 and char cells is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and wifi is topmost .",
            "look for the name of hardware model of graphics mode which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of hardware colours which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has bluetooth 2002 and ram mib is topmost .",
            "look for the name of hardware model of phone which has wifi 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has map 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and type is topmost .",
            "look for the name of hardware model of accreditation level which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and pixels is topmost .",
            "look for the name of hardware model of chip model which has date 2002 and ram mib is topmost .",
            "look for the name of hardware model of phone which has launch year 2002 and slots is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and accreditation level is topmost .",
            "look for the name of hardware model of screen mode which has type 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has hardware model name 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and company name is topmost .",
            "look for the name of hardware model of screen mode which has accreditation type 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and wifi is topmost .",
            "look for the name of hardware model of phone which has date 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and hardware colours is topmost .",
            "look for the name of hardware model of screen mode which has launch year 2002 and accreditation type is topmost .",
            "look for the name of hardware model of phone which has launch year 2002 and date is topmost .",
            "look for the name of hardware model of used kb which has launch year 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has launch year 2002 and model name is topmost .",
            "look for the name of hardware model of chip model which has char cells 2002 and ram mib is topmost .",
            "look for the name of hardware model of phone which has type 2002 and ram mib is topmost .",
            "look for the name of hardware model of chip model which has wifi 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has used kb 2002 and ram mib is topmost .",
            "look for the name of hardware model of screen mode which has accreditation level 2002 and ram mib is topmost ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "csu_1",
        "tabel_names": [
            "campuses",
            "csu fees",
            "degrees",
            "discipline enrollments",
            "enrollments",
            "faculty"
        ],
        "column_names": [
            "id",
            "campus",
            "location",
            "county",
            "year",
            "campus",
            "year",
            "campus fee",
            "year",
            "campus",
            "degrees",
            "campus",
            "discipline",
            "year",
            "undergraduate",
            "graduate",
            "campus",
            "year",
            "totalenrollment ay",
            "fte ay",
            "campus",
            "year",
            "faculty"
        ],
        "template_feedback": "in step 1 , do not use the faculty table and campuses table . in step 2 , remove the faculty equals 357.1 conditions .",
        "primary_span": [
            [
                4,
                13
            ],
            [
                18,
                24
            ]
        ],
        "secondary_span": [
            [
                4,
                13
            ]
        ],
        "positive_example": "You should delete faculty equals 357.1 and verify that CSU should be the campus.",
        "negative_examples": [
            "you should delete campuses equals 357.1 and verify that csu should be the campus .",
            "you should delete csu fees equals 357.1 and verify that csu should be the campus .",
            "you should delete degrees equals 357.1 and verify that csu should be the campus .",
            "you should delete discipline enrollments equals 357.1 and verify that csu should be the campus .",
            "you should delete enrollments equals 357.1 and verify that csu should be the campus .",
            "you should delete id equals 357.1 and verify that csu should be the campus .",
            "you should delete campus equals 357.1 and verify that csu should be the campus .",
            "you should delete location equals 357.1 and verify that csu should be the campus .",
            "you should delete county equals 357.1 and verify that csu should be the campus .",
            "you should delete year equals 357.1 and verify that csu should be the campus .",
            "you should delete campus fee equals 357.1 and verify that csu should be the campus .",
            "you should delete discipline equals 357.1 and verify that csu should be the campus .",
            "you should delete undergraduate equals 357.1 and verify that csu should be the campus .",
            "you should delete graduate equals 357.1 and verify that csu should be the campus .",
            "you should delete totalenrollment ay equals 357.1 and verify that csu should be the campus .",
            "you should delete fte ay equals 357.1 and verify that csu should be the campus ."
        ],
        "neg_len": 16
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , use order items table in place of product categories table in step 2 , find summation of product quantity in place of summation of vat rating .",
        "primary_span": [
            [
                4,
                7
            ],
            [
                18,
                22
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ],
            [
                23,
                30
            ]
        ],
        "positive_example": "Replace vat rating with product quantity of order items .",
        "negative_examples": [
            "replace vat rating with derived vat payable of invoices .",
            "replace vat rating with product id of financial transactions .",
            "replace customer id with product quantity of orders .",
            "replace vat rating with state county province of accounts .",
            "replace vat rating with customer middle initial of customers .",
            "replace vat rating with customer middle initial of orders .",
            "replace customer first name with product quantity of order items .",
            "replace derived vat payable with product quantity of invoice line items .",
            "replace production type code with product quantity of accounts .",
            "replace vat rating with order details of accounts .",
            "replace vat rating with product name of order items .",
            "replace invoice number with product quantity of orders .",
            "replace email address with product quantity of invoices .",
            "replace phone number with product quantity of invoices .",
            "replace derived product cost with product quantity of customers .",
            "replace vat rating with town city of products .",
            "replace vat rating with date account opened of accounts .",
            "replace vat rating with derived total cost of accounts .",
            "replace phone number with product quantity of invoice line items .",
            "replace vat rating with transaction date of accounts .",
            "replace vat rating with state county province of orders .",
            "replace town city with product quantity of orders .",
            "replace vat rating with production type code of invoice line items .",
            "replace vat rating with date order placed of orders .",
            "replace transaction id with product quantity of products .",
            "replace vat rating with transaction comment of invoice line items .",
            "replace transaction comment with product quantity of product categories .",
            "replace vat rating with derived product cost of product categories .",
            "replace transaction amount with product quantity of orders .",
            "replace vat rating with invoice date of invoice line items .",
            "replace country with product quantity of order items .",
            "replace vat rating with product title of invoices .",
            "replace vat rating with customer middle initial of products .",
            "replace vat rating with transaction date of order items .",
            "replace transaction date with product quantity of products .",
            "replace vat rating with phone number of customers .",
            "replace vat rating with product name of invoice line items .",
            "replace vat rating with date order placed of accounts .",
            "replace vat rating with production type code of invoices .",
            "replace invoice date with product quantity of accounts .",
            "replace vat rating with derived vat payable of accounts .",
            "replace vat rating with product size of orders .",
            "replace vat rating with email address of financial transactions .",
            "replace vat rating with order details of customers .",
            "replace phone number with product quantity of financial transactions .",
            "replace other transaction details with product quantity of invoice line items .",
            "replace vat rating with other order item details of orders .",
            "replace date account opened with product quantity of orders .",
            "replace vat rating with parent product id of order items .",
            "replace vat rating with email address of invoices ."
        ],
        "neg_len": 50
    },
    {
        "db_id": "customers_and_invoices",
        "tabel_names": [
            "customers",
            "orders",
            "invoices",
            "accounts",
            "product categories",
            "products",
            "financial transactions",
            "order items",
            "invoice line items"
        ],
        "column_names": [
            "customer id",
            "customer first name",
            "customer middle initial",
            "customer last name",
            "gender",
            "email address",
            "login name",
            "login password",
            "phone number",
            "town city",
            "state county province",
            "country",
            "order id",
            "customer id",
            "date order placed",
            "order details",
            "invoice number",
            "order id",
            "invoice date",
            "account id",
            "customer id",
            "date account opened",
            "account name",
            "other account details",
            "production type code",
            "product type description",
            "vat rating",
            "product id",
            "parent product id",
            "production type code",
            "unit price",
            "product name",
            "product color",
            "product size",
            "transaction id",
            "account id",
            "invoice number",
            "transaction type",
            "transaction date",
            "transaction amount",
            "transaction comment",
            "other transaction details",
            "order item id",
            "order id",
            "product id",
            "product quantity",
            "other order item details",
            "order item id",
            "invoice number",
            "product id",
            "product title",
            "product quantity",
            "product price",
            "derived product cost",
            "derived vat payable",
            "derived total cost"
        ],
        "template_feedback": "in step 1 , use order items table in place of products table .",
        "primary_span": [
            [
                4,
                7
            ]
        ],
        "secondary_span": [
            [
                8,
                13
            ]
        ],
        "positive_example": "In step 1, you should substitute items with product.",
        "negative_examples": [
            "in step 1 , you should substitute items with customers .",
            "in step 1 , you should substitute items with orders .",
            "in step 1 , you should substitute items with invoices .",
            "in step 1 , you should substitute items with accounts .",
            "in step 1 , you should substitute items with product categories .",
            "in step 1 , you should substitute items with financial transactions .",
            "in step 1 , you should substitute items with order items .",
            "in step 1 , you should substitute items with invoice line items ."
        ],
        "neg_len": 8
    },
    {
        "db_id": "apartment_rentals",
        "tabel_names": [
            "apartment buildings",
            "apartments",
            "apartment facilities",
            "guests",
            "apartment bookings",
            "view unit status"
        ],
        "column_names": [
            "building id",
            "building short name",
            "building full name",
            "building description",
            "building address",
            "building manager",
            "building phone",
            "apartment id",
            "building id",
            "apartment type code",
            "apartment number",
            "bathroom count",
            "bedroom count",
            "room count",
            "apartment id",
            "facility code",
            "guest id",
            "gender code",
            "guest first name",
            "guest last name",
            "date of birth",
            "apartment booking id",
            "apartment id",
            "guest id",
            "booking status code",
            "booking start date",
            "booking end date",
            "apartment id",
            "apartment booking id",
            "status date",
            "available yes or no"
        ],
        "template_feedback": "additionally find minimum bathroom count .",
        "primary_span": [
            [
                0,
                5
            ]
        ],
        "secondary_span": [],
        "positive_example": "i want minimum bathroom count.",
        "negative_examples": [
            "i want minimum building id .",
            "i want minimum building short name .",
            "i want minimum building full name .",
            "i want minimum building description .",
            "i want minimum building address .",
            "i want minimum building manager .",
            "i want minimum building phone .",
            "i want minimum apartment id .",
            "i want minimum apartment type code .",
            "i want minimum apartment number .",
            "i want minimum bedroom count .",
            "i want minimum room count .",
            "i want minimum facility code .",
            "i want minimum guest id .",
            "i want minimum gender code .",
            "i want minimum guest first name .",
            "i want minimum guest last name .",
            "i want minimum date of birth .",
            "i want minimum apartment booking id .",
            "i want minimum booking status code .",
            "i want minimum booking start date .",
            "i want minimum booking end date .",
            "i want minimum status date .",
            "i want minimum available yes or no ."
        ],
        "neg_len": 24
    },
    {
        "db_id": "driving_school",
        "tabel_names": [
            "addresses",
            "staff",
            "vehicles",
            "customers",
            "customer payments",
            "lessons"
        ],
        "column_names": [
            "address id",
            "line 1 number building",
            "city",
            "zip postcode",
            "state province county",
            "country",
            "staff id",
            "staff address id",
            "nickname",
            "first name",
            "middle name",
            "last name",
            "date of birth",
            "date joined staff",
            "date left staff",
            "vehicle id",
            "vehicle details",
            "customer id",
            "customer address id",
            "customer status code",
            "date became customer",
            "date of birth",
            "first name",
            "last name",
            "amount outstanding",
            "email address",
            "phone number",
            "cell mobile phone number",
            "customer id",
            "datetime payment",
            "payment method code",
            "amount payment",
            "lesson id",
            "customer id",
            "lesson status code",
            "staff id",
            "vehicle id",
            "lesson date",
            "lesson time",
            "price"
        ],
        "template_feedback": "find date of birth in place of date left staff .",
        "primary_span": [
            [
                0,
                3
            ]
        ],
        "secondary_span": [
            [
                4,
                10
            ]
        ],
        "positive_example": "Replace date left staff with date of birth .",
        "negative_examples": [
            "replace date left staff with address id .",
            "replace city with date of birth .",
            "replace date joined staff with date of birth .",
            "replace email address with date of birth .",
            "replace price with date of birth .",
            "replace state province county with date of birth .",
            "replace date left staff with state province county .",
            "replace date left staff with line 1 number building .",
            "replace zip postcode with date of birth .",
            "replace lesson status code with date of birth .",
            "replace date left staff with lesson date .",
            "replace staff address id with date of birth .",
            "replace first name with date of birth .",
            "replace date left staff with nickname .",
            "replace customer address id with date of birth .",
            "replace country with date of birth .",
            "replace line 1 number building with date of birth .",
            "replace date left staff with date became customer .",
            "replace date left staff with country .",
            "replace vehicle id with date of birth .",
            "replace date left staff with last name .",
            "replace date left staff with payment method code .",
            "replace vehicle details with date of birth .",
            "replace date left staff with vehicle details .",
            "replace customer status code with date of birth .",
            "replace nickname with date of birth .",
            "replace date left staff with vehicle id .",
            "replace date left staff with zip postcode .",
            "replace lesson time with date of birth .",
            "replace cell mobile phone number with date of birth .",
            "replace payment method code with date of birth .",
            "replace date left staff with cell mobile phone number .",
            "replace staff id with date of birth .",
            "replace lesson id with date of birth .",
            "replace date left staff with price .",
            "replace date left staff with staff id .",
            "replace date left staff with city .",
            "replace datetime payment with date of birth .",
            "replace date left staff with email address .",
            "replace customer id with date of birth .",
            "replace date left staff with amount outstanding .",
            "replace date left staff with lesson status code .",
            "replace date left staff with customer id .",
            "replace amount payment with date of birth .",
            "replace date became customer with date of birth .",
            "replace date left staff with datetime payment .",
            "replace date left staff with date joined staff .",
            "replace middle name with date of birth .",
            "replace date left staff with customer status code .",
            "replace date left staff with lesson time ."
        ],
        "neg_len": 50
    }
]