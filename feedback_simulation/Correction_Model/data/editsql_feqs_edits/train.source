[feedback] In step 1 , you should use election table instead of party table . [system description] Step 1 : find the party id in party table . Step 2 : find the party in party table whose party id not one of the results of step 1 . [question] Which parties did not have any delegates in elections ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] Make sure birth city equals New York City and birth year greater than 1980 . Also , verify that gender equals female . [system description] find the number of rows in actor table whose birth city equals " dummy value " and birth year greater than " dummy value " . [question] How many female actors were born in " New York City " after 1980 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search for the director having one movie produced by him or her . [system description] find the director in movie table . [question] What are the names of all directors who made one movie ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to search for the city name having alaska as the state name . [system description] find the city name in city table whose state name equals " dummy value " with smallest value of population . [question] what is the smallest city in alaska [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should find city name of city table in step 2 . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [question] how many cities are there in usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find border info 's state name equals kentucky instead of area equals dummy value , state table should have border . [system description] find the area in state table whose area equals " dummy value " . [question] what is the adjacent state of kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use open year and London as the city . [system description] find the minimum membership amount and maximum membership amount in branch table whose city equals " Oxford " or address road equals " Concord Road " . [question] What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city ( London ) [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 4 , you should use name and country in place of source airport and country respectively . [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table . Step 2 : only keep the results of step 1 whose country equals " Germany " . Step 3 : find the number of rows of each value of source airport the results of step 2 . Step 4 : find the source airport the results of step 2 with largest value in the results of step 3 . [question] Find the busiest source airport that runs most number of routes in China . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
[feedback] Make sure only one course is taken by the student . [system description] find the student first name in student table . [question] What are the first names of student who only took one course ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you should use customer name and in step 3 , the smallest value should be used in place of payment method and largest value respectively . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of payment method of the results of step 1 . Step 3 : find the payment method of the results of step 1 with largest value in the results of step 2 . [question] What is the payment method of the customer that has purchased the least quantity of items ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You should use area in place of country name . [system description] find the state name in state table whose country name equals " dummy value " with largest value of density . [question] what is the biggest state in continental us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use name of characteristic as hot . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " error " . [question] Count the number of products with the 'hot ' charactersitic . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( hot ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 2 , member 's party id should be 3 instead of party 's party id . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the member name of the results of step 1 whose party 's party id equals 4 . Step 3 : find the member name in member table whose member 's party id equals 1 . Step 4 : show the rows that are in both the results of step 2 and step 3 . [question] Show the member names which are in both the party with id 3 and the party with id 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You need to use the word greater instead of equals . [system description] Step 1 : for each row in gymnast table , find the corresponding rows in people table . Step 2 : find the number of rows of each value of hometown of the results of step 1 . Step 3 : find the hometown of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the hometowns that are shared by at least two gymnasts ? [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
[feedback] Remove whose city 's country name equals dummy value part . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the summation of state 's population of the results of step 1 whose city 's country name equals " dummy value " . [question] what is the combined population of all 50 states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace destination with origin , and also add destination equals Honolulu . [system description] find the departure date and arrival date in flight table whose destination equals " Los Angeles " and destination equals " New York " . [question] Show me the departure date and arrival date for all flights from Los Angeles to Honolulu . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles , Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to search for the city name having highest population density . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's country name equals " dummy value " with largest value of density . [question] which us city has the highest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should count the number of transaction made by the customers and also the invoice number . [system description] Step 1 : for each row in invoices table , find the corresponding rows in financial transactions table . Step 2 : find each value of invoices 's invoice number of the results of step 1 along with the number of the corresponding rows to each value . [question] Show the invoice number and the number of transactions for each invoice . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to determine the number of rows that correspond to each value of artist id from exhibition table . [system description] find each value of name in artist table along with the number of the corresponding rows to each value . [question] How many exhibitions has each artist had ? [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] You need to use club 's id , club name and club 's last name . [system description] find the number of rows in student table whose first name equals " Sarah " . [question] Count the number of clubs for which the student named " Eric Tai " is a member . [schema] [T] student [C] student id [C] last name ( Tai ) [C] first name ( Eric ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 1 , find number of rows of each value of instructor in course table . [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table with largest value in the results of step 1 . [question] Give the building that the instructor who teaches the greatest number of courses lives in . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to calculate the rows corresponding to each gender . [system description] find each value of gender in dorm table along with the summation of student capacity of the corresponding rows to each value . [question] How many dorms are there and what is the total capacity for each gender ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 1 , you should use the document table and drop project table . [system description] Step 1 : find the number of rows of each value of project id in projects table . Step 2 : find the project id and project details in projects table whose corresponding value in step 1 is greater than or equals 1 . [question] What is the project id and detail for the project with at least two documents ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 3 , use architect id and drop mill id . [system description] Step 1 : for each row in architect table , find the corresponding rows in mill table . Step 2 : find the number of rows of each value of mill 's id of the results of step 1 . Step 3 : find the mill 's id , architect 's name , nationality of the results of step 1 with largest value in the results of step 2 . [question] What is the id , name and nationality of the architect who built most mills ? [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
[feedback] Make sure star rating code equals 5 . [system description] find the average price range in hotels table whose pets allowed yn equals 1 . [question] What is the average price range of five star hotels that allow pets ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 2 , you should determine the title and maximum price of film . [system description] Step 1 : for each row in schedule table , find the corresponding rows in film table . Step 2 : find each value of film 's film id of the results of step 1 along with the title , maximum price , and price of the corresponding rows to each value . [question] What are the title and maximum price of each film ? [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
[feedback] You should use name of state as wyoming and drop the area . [system description] find the density in state table whose area equals " dummy value " . [question] what is the density of wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 4 , you need to use greater than . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose author 's name equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the conferences , which have more than 10 papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use length equivalent to 100 or replacement cost greater than 200 . [system description] Step 1 : find the title in film table whose replacement cost greater than 29.99 . Step 2 : find the title in film table whose rating greater than " G " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Find all the films longer than 100 minutes , or rated PG , except those who cost more than 200 for replacement . List the titles . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating ( PG ) [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to calculate the country in decline order . [system description] find the country in airports table ordered ascending by country . [question] What is the number of airports per country , ordered from most to least ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( PER ) [C] source airport id [C] source airport ( PER ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Peru ) [C] country ( Peru ) [C] x [C] y [C] elevation [C] iata ( PER ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( PER ) [C] call sign [C] country ( Peru ) [C] active
[feedback] In step 2 , you should use the author name and confirm that the conference 's name is VLDB . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the title of the results of step 1 whose conference 's name equals " dummy value " and author 's name equals " dummy value " . [question] return me the papers by " H. V. Jagadish " on VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use traverse in place of dummy value of state name and also make sure that river name should be from illinois . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in city table . Step 2 : find the river name of the results of step 1 whose city 's state name equals " dummy value " . [question] rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace date with venue . [system description] find the date and venue in workshop table ordered ascending by date . [question] Sort the each workshop in alphabetical order of the venue . Return the date and venue of each workshop . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [question] through which states does the ohio flow [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the number of company id of operate company for each airport . [system description] find each value of name in operate company table along with the number of the corresponding rows to each value . [question] How many companies operates airlines in each airport ? [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities ( Airline ) [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
[feedback] You should use match season 's player and not the player 's player and college equals Furman respectively . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 whose college equals " Furman " . [question] Show the players from college UCLA . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( UCLA ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 2 , I want bikes available and in step 3 , I want bike available as 7 . [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the different names for each station that has ever had 7 bikes available ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to use descending order only . [system description] find the name in captain table ordered ascending by age . [question] Sort all captain names by their ages from old to young . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Make sure whose player position equals goalie and not the college name whose enrollment less than 12000 . [system description] find the summation of enrollment in college table whose enrollment less than 12000 . [question] What is the total number of students enrolled in schools without any goalies ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
[feedback] In step 2 , you should use the author 's name which is equivalent to H. V. Jagadish . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the journal 's name of the results of step 1 whose author 's name equals " dummy value " . [question] return me the journals , which have papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the name of city springfield . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [question] what states have a city named springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure it is a city of state name . [system description] find the state name in city table with largest value of population . [question] what state has the city with the most population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use amount claimed in place of summation of created date . [system description] find the summation of created date in claims documents table with largest value of created date . [question] How much amount in total were claimed in the most recently created document ? [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code ( Document ) [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] Replace last name with stuid . [system description] find the last name in student table with largest value of age . [question] What student id corresponds to the oldest student ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You should use budget type code in place of it . [system description] find the number of budget type code in reference budget codes table . [question] How many budget types do we have ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You should use director table instead of actor table and make sure that director 's nationality is equivalent to director 's name . [system description] find the nationality in actor table whose name equals " dummy value " . [question] What is the nationality of " Kevin Spacey " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use captain 's age in-place of captain 's age . [system description] Step 1 : for each row in ship table , find the corresponding rows in captain table . Step 2 : find the ship 's name of the results of step 1 with largest value of age . [question] Find the name of the ship that is steered by the youngest captain . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] You need to use the amount claimed from claim headers table . [system description] find the customer details in customers table with largest value of customer details . [question] Which customer made the largest amount of claim in a single claim ? Return the customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] Replace organization table with journal table , oid with title , year less than 2000 with Name of journal equals PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of oid of the results of step 1 whose year less than " dummy value " and year less than " dummy value " . [question] return me the number of papers published on PVLDB before 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use tourist details of Vincent or Vivian instead of visit date equals 1990 11 12 00 : 54 : 50 . [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table and in tourist attractions table . Step 2 : find the name and visit date of the results of step 1 whose visitors 's tourist id equals 189 or visit date equals " 1990-11-12 00:54:50 " . [question] What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent , Vivian ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You need to search that how can be reach there by bus or address should be 254 Ottilie Junction . [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table . Step 2 : find the name of the results of step 1 whose address equals " 959 Feest Glen Suite 523 " or address equals " 770 Edd Lane Apt . 098 " . [question] What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address ( 254 Ottilie Junction ) [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 2 , you should use from date of active in place of to date of active and also change channel code as Fax . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the customer name and active to date of the results of step 1 whose channel code like " Fax " . [question] Find the name and active date of the customer that use email as the contact channel . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code ( Email ) [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Replace pid with title , organization with journal . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of pid of the results of step 1 whose name equals " dummy value " . [question] return me the number of papers on PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , name equals Divesh Srivastava and cited equals dummy value . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in publication keyword table and in keyword table and in cite table . Step 2 : only keep the results of step 1 whose name equals " dummy value " and cited equals " dummy value " . Step 3 : find the number of rows of each value of jid the results of step 2 . Step 4 : find the keyword and number of citation num the results of step 2 with largest value in the results of step 3 . [question] return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " with the most number of citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use Austin as the headquarter and in step 3 as Beijing as the headquarter . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the minimum revenue in manufacturers table whose founder equals " James " . Step 3 : find the products 's name of the results of step 1 whose revenue less than the results of step 2 and headquarter equals " Beijing " . [question] What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin ? [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You should use and citation num greater than 200 in place of and dummy value respectively . [system description] Step 1 : find rows in publication table whose year greater than " dummy value " . Step 2 : find each value of title the results of step 1 along with the of the corresponding rows to each value . [question] return me the paper after 2000 with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use greater than or equal to . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the year of the results of step 1 whose rating stars equals 2 or rating date equals " 2011-01-20 " ordered descending by rating date . [question] In what years did a movie receive a 4 or 5 star rating , and list the years from oldest to most recently ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to use release year and title of movie which is equivalent to Joy . [system description] find the name in director table whose birth year equals " dummy value " and birth year equals " dummy value " . [question] Who was the director of the movie Joy from 2015 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to find the latitude in decline order for each city . [system description] find the city in station table . [question] For each city , list their names in decreasing order by their highest station latitude . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , I want the staff id of Complaint table . [system description] Step 1 : for each row in complaints table , find the corresponding rows in staff table . Step 2 : find the number of rows of each value of complaints 's staff id of the results of step 1 . Step 3 : find the first name of the results of step 1 with largest value in the results of step 2 . [question] What is first names of the top 5 staff who have handled the greatest number of complaints ? [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] You need to use player id instead of player id . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name of the results of step 1 with largest value of enrollment . [question] Find the name of the tryout players who are from the college with largest size . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to verify that number of deaths should be more than or equivalent to 1 . [system description] find the name , dates active , number deaths in storm table . [question] List name , dates active , and number of deaths for all storms with at least 1 death . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 1 , use author table and name in place of cite table and dummy value respectively . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of year of the corresponding rows to each value . [question] return me the number of papers written by " H. V. Jagadish " in each year . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the name of river which runs through mississippi state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of states through which the mississippi runs [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use date claim made and amount claimed from settlements table . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the date claim made and date claim settled in claims table whose corresponding value in step 1 is equals 1 . [question] List the date the claim was made , the date it was settled and the amount settled for all the claims which had exactly one settlement . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] In step 3 , you need to use less than instead of greater than . [system description] Step 1 : for each row in country table , find the corresponding rows in roller coaster table . Step 2 : find the country 's name , area , population of the results of step 1 whose speed greater than 57 . Step 3 : find the country 's name and population in country table . Step 4 : show the rows that are in both the results of step 2 and step 3 . [question] What are the country names , area and population which has both roller coasters with speed higher [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
[feedback] You need to search for the largest country in the us . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city 's country name equals " dummy value " with largest value of density . [question] what is the largest state in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , claim status name in claims processing stages is wrong , there should be claim stage id in claims processing table . [system description] Step 1 : find the number of rows of each value of claim status name in claims processing stages table . Step 2 : find the claim status name in claims processing stages table with largest value in the results of step 1 . [question] Which claim processing stage has the most claims ? Show the claim status name . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] In step 2 , you should use supplier phone in place of supplier name . [system description] Step 1 : find the customer phone in customers table . Step 2 : find the supplier name in suppliers table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] Return the phone numbers for all customers and suppliers . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You need to use destination airport id and name of airport whose name is John F Kennedy International airport . [system description] find the number of route id in routes table whose destination airport equals " A " . [question] Find the number of routes that have destination John F Kennedy International Airport . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name ( John F Kennedy International Airport ) [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
[feedback] You need to use Linda Smith as the last name and Linda as the first name . [system description] find the number of rows in student table whose first name equals " Dinesh " . [question] How many clubs does " Linda Smith " belong to ? [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 2 , you should use Atsushi Ohori as the first name and also use the last name instead of Ralf . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose first name equals " Ralf " . [question] How many papers have " Atsushi Ohori " published ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ohori ) [C] first name ( Atsushi ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 1 , you should use faculty participates in table . [system description] Step 1 : find the number of rows of each value of activity name in activity table . Step 2 : find the activity name in activity table with largest value in the results of step 1 . [question] What is the name of the activity that has the most faculty members involved in ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , river name should be rio grande . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the length of the results of step 1 whose river name equals " dummy value " and area equals " dummy value " . [question] how long is the rio grande river in miles [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use sports info and in step 2 video games should be played by students . [system description] Step 1 : find the student id in plays games table . Step 2 : find the student id in plays games table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show ids of students who play video game and play sports . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to search for neighboring states that are within kentucky . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose area like " dummy value " . [question] what are the neighboring states for kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use sports info table in place of plays games table and also confirm that last name should be Shieber . [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table . Step 2 : find the summation of hours played and summation of hours played of the results of step 1 whose first name equals " David " and last name equals " Apap " . [question] Show total hours per week and number of games played for student David Shieber . [schema] [T] student [C] student id [C] last name ( Shieber ) [C] first name ( David ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You should use name of state in place of name of border info 's and density . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose border info 's state name equals " dummy value " and density equals " dummy value " . [question] what is the area of new mexico in square kilometers [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use author table and VLDB value of conference name . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the writes 's pid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [question] return me the authors who have papers in VLDB conference before 2002 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , use sex equals M instead of sex equals F . [system description] Step 1 : find rows in student table whose sex equals " F " . Step 2 : find each value of city code the results of step 1 along with the average age of the corresponding rows to each value . [question] Find the average age and number of male students ( with sex M ) from each city . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 4 , you should use title and cite num in place of jid and name respectively . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of name of each value of jid the results of step 2 . Step 4 : find the jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the paper in VLDB conference with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should count the number of rows of each value of product id from order items table . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table . Step 2 : find the number of rows of each value of order items 's product id of the results of step 1 . Step 3 : find the product name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Find the names of products that were bought by at least two distinct customers . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You need to search for the highest elevation in the highlow table . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest elevation . [question] which state has the highest elevation [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use statement id of accounts table . [system description] Step 1 : find the number of rows of each value of statement id in statements table . Step 2 : find the statement id and statement details in statements table with largest value in the results of step 1 . [question] What are the statement id and statement detail for the statement that has the most corresponding accounts ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to use faculty participates in table . [system description] find the number of rows in student table whose first name equals " Arthur " and last name equals " Simms " . [question] Find the number of activities Mark Giuliano is involved in . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You need to subtract from date of active and from date of active and only find the one with highest value . [system description] find the channel code and contact number in customer contact channels table with largest value of active from date . [question] Return the channel code and contact number of the customer contact channel whose active duration was the longest . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Find number of rows in border info table whose state name equals state name whose capital equals boston . [system description] find the number of rows in state table whose capital equals " dummy value " . [question] how many states border on the state whose capital is boston [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use date left staff and first name equals Janessa and last name equals Sawayn . [system description] find the date of birth in staff table whose first name equals " Lincoln " and last name equals " Mertz " . [question] When did the staff member Janessa Sawayn leave the company ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 3 , use name and balance of savings . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the average checking 's balance in checking table . Step 3 : find the savings 's balance of the results of step 1 whose checking 's balance greater than the results of step 2 . [question] Find the checking balance of the accounts whose savings balance is higher than the average savings balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] You need to determine the distinct value of race Id and its number of rows . [system description] find each value of name in track table along with the number of the corresponding rows to each value . [question] What are the names of different tracks , and how many races has each had ? [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
[feedback] Replace professor table with course table , professor extension with department name , professor extension with department name . [system description] find the number of rows in professor table whose professor extension equals 8665 . [question] How many students are enrolled in some classes that are taught by an accounting professor ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace organization with journal , name with PVLDB and year with year . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [question] return me the papers on PVLDB after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 and 3 , use captain 's class in place of type . [system description] Step 1 : for each row in ship table , find the corresponding rows in captain table . Step 2 : find the rank of the results of step 1 whose type equals " Panamax " . Step 3 : for each row in ship table , find the corresponding rows in captain table . Step 4 : find the rank of the results of step 3 whose type equals " Panamax " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the ranks of captains that are both in the Cutter and Armed schooner classes ? [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Armed schooner , Cutter ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] You should find city name of city table in place of state name of state table . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [question] how many cities does the usa have [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use length is equals minimum length river , not dummy value . [system description] find the river name in river table whose length equals " dummy value " with smallest value of length . [question] what is the shortest river in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that the departure airport and it 's correlated id are of unitedstates country and forget destination airport . [system description] find the route id and destination airport id in routes table whose source airport equals " TTQ " . [question] Find the id of routes whose source and destination airports are in the United States . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( UNITED , STATES ) [C] country ( United States ) [C] active
[feedback] You should use Ludie instead of Simeon . [system description] find the number of rows in staff table whose first name equals " Simeon " . [question] How many employees have a first name of Ludie ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Ludie ) [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to search for the name of river which runs through mississippi state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of the states through which the mississippi river runs [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use date , max temperature f minus min temperature f in place of time , max temperature f and mean temperature f respectively . [system description] Step 1 : for each row in weather table , find the corresponding rows in status table . Step 2 : find the time and mean temperature f of the results of step 1 with smallest value of mean temperature f . [question] What are the days that had the smallest temperature range , and what was that range ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search for the name of river which flows through state of alabama . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [question] what rivers flow through states that alabama borders [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that open year equals 2001 and membership amount greater than 100 . [system description] find the city in branch table whose open year equals 2014 and open year greater than 2001 . [question] What are the cities that have a branch that opened in 2001 and a branch with more than 100 members ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 3 , replace first name with salary . [system description] Step 1 : for each row in certificate table , find the corresponding rows in employee table . Step 2 : find the number of rows of each value of certificate 's employee id of the results of step 1 . Step 3 : find the name and name of the results of step 1 with largest value in the results of step 2 . [question] What is the salaray and name of the employee that is certified to fly the most planes ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] stuid should be 1004 , not city code . [system description] find the advisor in student table whose city code equals " NAR " . [question] Who is the advisor of student with ID 1004 ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You need to search for the city having highest population density . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose city 's state name equals " dummy value " with largest value of density . [question] what city in the united states has the highest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , also correspond checking table . In step 2 , find SAVINGS 's balance , CHECKING 's balance . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table . Step 2 : find the name , balance , balance of the results of step 1 . [question] What are the names , checking balances , and savings balances for all customers ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] In step 2 , You should use name of customer rather than name of customer . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the channel code of the results of step 1 whose customer name equals " Alexane Kilback " . [question] Which contact channel has been used by the customer with name " Tillman Ernser " ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Replace sex equals M with sex equals F , last name equals Kosaraju with rank equals Professor . [system description] find the number of rows in faculty table whose sex equals " M " and last name equals " Kosaraju " . [question] How many female Professors do we have ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] You need to use smallest value in place of largest value . [system description] find the name in club table with largest value of start year . [question] What are the names of all the clubs starting with the oldest ? [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] Replace cite table with author table , and cited with title , make sure name equals H. V. Jagadish . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table and in cite table . Step 2 : find the number of writes 's pid of the results of step 1 whose cited equals " dummy value " and year less than " dummy value " . [question] return me the number of papers written by " H. V. Jagadish " and " Divesh Srivastava " before 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to calculate total enrollment for each type of institution . [system description] find each value of type in institution table along with the number of the corresponding rows to each value . [question] Show institution types , along with the number of institutions and total enrollment for each type . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] In step 2 , you should use the loan type of loan which is equivalent to mortgages and drop number of loans . [system description] Step 1 : find the customer name in customer table . Step 2 : find the customer name in customer table whose number of loans equals 0 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of customers who have not taken a Mortage loan ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 1 and 2 , use class table and course code in place of professor table and department code respectively . [system description] Step 1 : find the department code in professor table whose department code equals " ACCT " . Step 2 : for each row in employee table , find the corresponding rows in professor table . Step 3 : find the employee first name of the results of step 2 whose department code equals " MATH " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] What is the first name of the professor who is teaching CIS-220 and QM-261 ? [schema] [T] class [C] class code [C] course code ( CIS-220 , QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 , QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to ensure that country should be Canada and also use year 2016 . [system description] Step 1 : for each row in people table , find the corresponding rows in wedding table . Step 2 : find the name of the results of step 1 whose year equals 2015 and year equals 2014 . [question] Show the names for all females from Canada having a wedding in year 2016 . [schema] [T] people [C] people id [C] name [C] country ( Canada ) [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] You should use cancelled instead of delivered in step 2 . [system description] Step 1 : for each row in customer orders table , find the corresponding rows in customers table . Step 2 : find the number of rows of the results of step 1 whose order status equals " Delivered " . [question] How many customers have at least one order with status " Cancelled " ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status ( Cancelled ) [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to use member of club 's last name and name . [system description] find the number of rows in club table whose club name equals " Bootup Baltimore " . [question] For how many clubs is " Tracy Kim " a member ? [schema] [T] student [C] student id [C] last name ( Kim ) [C] first name ( Tracy ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to use name of airlines table , and also remove airlines equals BJ . [system description] find the number of rows in routes table whose airline equals " BJ " . [question] How many routes does American Airlines operate ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country [C] active
[feedback] you need to use enroll table and confirm that student had taken course . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name and course description of the results of step 1 . [question] Find names of all students who took some course and the course description . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 and 2 , use department name and course table in place of student class and Jr respectively . [system description] Step 1 : find the student first name in student table whose student class equals " Sr " . Step 2 : find the student first name in student table whose student class equals " Jr " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the first names of all students taking accoutning and Computer Information Systems classes ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , Austin should be used in place of Andy . [system description] Step 1 : find the minimum revenue in manufacturers table whose founder equals " Andy " . Step 2 : find the name in manufacturers table whose revenue less than the results of step 1 and founder equals " Andy " . [question] Find the name of companies whose revenue is smaller than the revenue of all companies based in Austin . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 2 , make sure course name equals COMPUTER LITERACY and use last name in place of instructor . [system description] Step 1 : for each row in faculty table , find the corresponding rows in course table . Step 2 : find the first name and instructor of the results of step 1 . [question] Find the first name and last name of the instructor of course that has course name [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Replace name with college in both . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table . Step 2 : find the position of the results of step 1 whose name equals " Miami Fusion " or college equals " Concordia College " . [question] What are the different positions of players from UCLA or Duke colleges ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( Duke , UCLA ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You need to use friend instead of name of person . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name and age of the results of step 1 whose person friend 's name equals " Zach " or person friend 's name equals " Bob " . [question] What are the different names and ages of every friend of either Dan or alice ? [schema] [T] person [C] name ( Alice , Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice , Dan ) [C] year
[feedback] In step 2 , you should use traverse and drop dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [question] what is the river that cross over illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , replace department table with professor table and in step 2 , replace department name with department name of history department . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table . Step 2 : find the employee first name of the results of step 1 whose department name equals " Mathematics " . Step 3 : for each row in employee table , find the corresponding rows in department table . Step 4 : find the employee first name of the results of step 3 whose department name equals " Accounting " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [question] What is the first names of the professors from the history department who do not teach a class . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Find city name of city table whose state name equals mississippi runs through . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose river name equals " dummy value " . [question] what are the cities in states through which the mississippi runs [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use title in place of paper id . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose name equals " Indiana University " . [question] What are the papers published under the institution " Indiana University " ? [schema] [T] institution [C] institution id [C] name ( Indiana University ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to search for the country of artist having bangla language as a language . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the song 's country of the results of step 1 whose gender equals " Male " . [question] What countries are the female artists who sung in the language Bangla from ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
[feedback] Replace Year greater than Dummy value with Year greater than 2000 . [system description] find the title in publication table whose year greater than " dummy value " . [question] return me the papers after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you need to use last name as well as first name and also include the title . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Jeremy " . [question] Find the papers which have " Olin Shivers " as an author . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Shivers ) [C] first name ( Olin ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use title of domain author table and name of organization table respectively . [system description] find the number of oid in organization table whose name equals " dummy value " and name equals " dummy value " . [question] return me the number of papers in " University of Michigan " in Databases area . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use documents with expenses . [system description] find each value of budget type code in reference budget codes table along with the number of the corresponding rows to each value . [question] What are the different budget type codes , and how many documents are there for each ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to find the title and minimum rating stars along with the director . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the number of rows of each value of director of the results of step 1 . Step 3 : find the director , maximum rating stars , minimum rating stars of the results of step 1 with smallest value in the results of step 2 . [question] For each director , what is the title and score of their most poorly rated movie ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Replace number of location with number of rows and Kingston , RI with NY [system description] find the number of location in university table whose location like " Kingston , RI " . [question] How many universities have a location that contains NY ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] stuid should be 1004 and not city code equals PEK . [system description] find the advisor in student table whose city code equals " PEK " . [question] Who advises student 1004 ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 1 , replace staff name in staff table with staff id in staff department assignments table . [system description] Step 1 : find the number of rows of each value of staff name in staff table . Step 2 : find the staff name in staff table whose corresponding value in step 1 is equals 1 . [question] List the name of staff who has been assigned multiple jobs . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Also find customer id , card type code , card number along with card id . [system description] find the card id , card type code , card number , card number in customers cards table . [question] Show ids , customer ids , card type codes , card numbers for all cards . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] You need to calculate the total number of transactions for each account . [system description] find each value of account id in accounts table along with the number of the corresponding rows to each value . [question] Show the account name , id and the number of transactions for each account . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 2 , you should use project id of documents table instead of project id of projects table . [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 with smallest value in the results of step 2 . [question] Return the id of the project that has the fewest corresponding documents . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace jid with citation num , keyword with title . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the number of jid of the results of step 1 whose keyword equals " dummy value " . [question] return me the number of citations of " Making database systems usable " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you need to use name of state . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum area in state table . Step 3 : find the maximum highest point of the results of step 1 whose area equals the results of step 2 with largest value of area . [question] what is the highest point of the state with the largest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure river traverse equals texas and colorado river equals texas . [system description] find the length in river table whose river name equals " dummy value " and river name equals " dummy value " . [question] what is the length of the colorado river in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for cities that are not repeated again . [system description] find the number of rows in airports table whose country equals " Kuwait " . [question] In how many cities are there airports in the country of Greenland ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Greenland ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( GREENLAND ) [C] country [C] active
[feedback] Find student 's last name whose sex equals F , city code equals BAL or age less than 20 . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the last name of the results of step 1 whose gender equals " F " or city code equals " HKG " . Step 3 : find the last name in student table whose city code equals " CHI " . Step 4 : show the rows that are in the results of step 2 but not in the results of step 3 . [question] What is the last name of every student who is either female or living in a city with the code BAL or male and under 20 ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( BAL ) [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Replace keyword with title and use publication 's reference num in place of keyword . [system description] find the keyword in keyword table whose keyword equals " dummy value " . [question] return me the references of " Making database systems usable " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use genre of classification table and in step 2 , title of movie table . [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the number of rows of each value of genre of the results of step 1 . Step 3 : find the title of the results of step 1 with largest value in the results of step 2 . [question] Find the movie which is classified in the most number of genres [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should use Defender as the position in step 2 and drop Enrique Osinski as the name . [system description] Step 1 : for each row in team table , find the corresponding rows in match season table and in country table . Step 2 : find the number of official native language of the results of step 1 whose name equals " Enrique Osinski " . [question] Count the number of different official languages corresponding to countries that players who play Defender are from . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position ( Defender ) [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] Make sure room have base price greater than 160 and max occupancy greater than 2 . [system description] find the room name and room id in rooms table whose base price greater than 175 and base price less than 175 . [question] Find all the rooms that have a price higher than 160 and can accommodate more than 2 people . Report room names and ids . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 2 , you should use manager award table and id of player . [system description] Step 1 : for each row in manager award vote table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of award id of the results of step 1 . Step 3 : find the name first , name last , name last of the results of step 1 with largest value in the results of step 2 . [question] What are the manager 's first name , last name and id who won the most manager award ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Manager ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to use year of home game instead of year of team . [system description] Step 1 : for each row in home game table , find the corresponding rows in team table . Step 2 : find the name of the results of step 1 whose team 's year equals 2011 with smallest value of home game 's attendance . [question] Which team had the least number of attendances in home games in 1980 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Homer ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you should use category table and name , also ensure that number of rows correspond to each value of category id . [system description] Step 1 : for each row in film text table , find the corresponding rows in film category table . Step 2 : find each value of category id of the results of step 1 along with the number of the corresponding rows to each value . [question] What are the names and ids of the different categories , and how many films are in each ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , you should use student table . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table . Step 2 : find the number of rows of each value of city code of the results of step 1 . Step 3 : find the city code of the results of step 1 with largest value in the results of step 2 . [question] Find the code of city where most of students are living in . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to provide the details of customer rather than id of customer . [system description] find the customer id in customers table ordered ascending by customer details . [question] List the names of all the customers in alphabetical order . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] Replace 2nd beds equals 2 with king bed Type . [system description] find the room name and decor in rooms table whose beds equals 2 ordered ascending by base price . [question] List the names and decor of rooms that have a king bed . Sort the list by their price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Make sure product type code equals clothes . [system description] find the average product price in products table . [question] What is the average price of clothes ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Clothes ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use id and name in place of gender and nationality respectively . [system description] find the name , nationality , gender in architect table whose gender equals " female " ordered ascending by nationality . [question] List the name , nationality and id of all male architects ordered by their names lexicographically . [schema] [T] architect [C] id [C] name [C] nationality [C] gender ( male ) [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
[feedback] In step 1 , I want greater than 2 . [system description] Step 1 : find the number of rows of each value of event id in party events table . Step 2 : find the event name in party events table whose corresponding value in step 1 is greater than 1 . [question] Which event names were used more than twice for party events ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] Replace team id with home game id , remove year equals 1997 and city equals Springfield . [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of team id of the results of step 1 whose city equals " Springfield " and year equals 1997 . [question] How many games were played in city Atlanta in 2000 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Atlanta ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Atlanta ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Atlanta ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Atlanta ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 3 , use age and drop year . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the average age in person table . Step 3 : find the friend and year of the results of step 1 whose age greater than the results of step 2 . [question] Who has friends that are older than the average age ? Print their friends and their ages as well [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] In step 2 , you should use first name and songs instead of bandmate and band table respectively . [system description] Step 1 : for each row in band table , find the corresponding rows in performance table . Step 2 : find the number of rows of each value of bandmate of the results of step 1 . Step 3 : find the first name of the results of step 1 with largest value in the results of step 2 . [question] Find the first name of the band mate that has performed in most songs . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to calculate the total number of distinct colleges . [system description] find the number of college name in college table . [question] How many different colleges are there ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Replace rate with max occupancy and bed Type with decor . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of rate of the results of step 1 whose bed type equals " Queen " . [question] How many people in total can stay in the modern rooms of this inn ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , you should use the visits table in place of tourist attractions table . [system description] Step 1 : find the number of rows of each value of tourist attraction id in tourist attractions table . Step 2 : find the name and tourist attraction id in tourist attractions table whose corresponding value in step 1 is greater than or equals 1 . [question] Show the names and ids of tourist attractions that are visited at least two times . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Also arrange name in ascending order , replace 66 with 180 . [system description] find the name and price in products table whose price greater than or equals 66 ordered ascending by price . [question] What are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] Find number of rows in border info table whose state name equals kentucky and where area equals dummy value . [system description] find the number of rows in state table whose area equals " dummy value " . [question] kentucky borders how many states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use sports info table instead of video games table . [system description] find the number of rows in video games table . [question] What is the total number of games played ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to use rating stars instead of date of rating . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the year of the results of step 1 whose rating date equals " 2011-01-22 " or rating date equals " 2011-01-22 " ordered descending by year . [question] Find all years that have a movie that received a rating of 4 or 5 , and sort them in increasing order of year . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , I want the count of row . [system description] Step 1 : find the number of rows of each value of event id in party events table . Step 2 : find the event name in party events table whose corresponding value in step 1 is greater than 1 . [question] find the event names that have more than 2 records . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You should use weight in place of height and sex instead of sex equals F . [system description] find the average height and weight in people table whose sex equals " F " . [question] Find the average height and weight for all males ( sex is M ) . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] In step 1 , replace department name with department code and in step 2 , replace step3 with step 1 . [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find the summation of course credit of each value of department name of the results of step 1 . Step 3 : find the department name and summation of course credit of the results of step 1 with largest value in the results of step 2 . [question] Which department offers the most credits all together ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the area of lake which is more than 750 . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in lake table . Step 2 : find the lake name of the results of step 1 whose state 's country name equals " dummy value " and river 's country name equals " dummy value " . [question] what are the major lakes in united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace club location with city code . [system description] find the club name in club table whose club location equals " HHH " . [question] Which clubs have one or more members from the city with code " HOU " ? Give me the names of the clubs . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HOU ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 3 , you should use rating stars and movie id in place of title and movie table respectively . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the movie 's movie id of the results of step 1 whose name equals " Ashley White " . Step 3 : find the average title in movie table whose movie 's movie id not one of the results of step 2 . [question] What is the average rating for each movie that has never been reviewed by Brittany Harris ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( Brittany Harris ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to use table of author , journal and name of journal . Also , use journal 's instead of organization 's in step 2 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " . [question] return me the authors who have the most number of papers in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the city having highest population . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's country name equals " dummy value " with largest value of city 's population . [question] what is the biggest city in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that population should be more than 150000 and state name equals texas . [system description] find the number of rows in city table whose state name equals " dummy value " . [question] how many major cities are in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , grade should be 4 instead of 6 . [system description] Step 1 : find rows in list table whose grade equals 6 . Step 2 : find each value of class room the results of step 1 along with the number of the corresponding rows to each value . [question] Report the total number of students for each fourth-grade classroom . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to use level instead of level and also make sure that level should be 6 . [system description] Step 1 : for each row in purchase table , find the corresponding rows in member table . Step 2 : find the summation of total pounds of the results of step 1 whose level equals 2 . [question] What are the total purchases for members rated at level 6 ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 1 , also add team table , in step 3 , find salary 's first name and last name whose year equals 2005 . [system description] Step 1 : for each row in salary table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1993 . Step 3 : for each row in salary table , find the corresponding rows in player table . Step 4 : find the name first and name last of the results of step 3 whose year equals 1989 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] List players ' first name and last name who received salary from team Washington Nationals in both 2005 and 2007 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( washington ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Washington ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Washington ) [C] name first ( Washington ) [C] name last ( Washington ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Washington ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( washington ) [C] name full [C] city ( Washington ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Washington Nationals ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Washington Nationals ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , you should use member instead of membership register branch . [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in member table . Step 2 : find the number of rows of each value of level of the results of step 1 . Step 3 : find the level of the results of step 1 with largest value in the results of step 2 . [question] What is the membership level with the most people ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You should use state name equals delaware instead of state name equals dummy value . [system description] find the maximum highest elevation in highlow table whose state name equals " dummy value " . [question] what is the highest elevation in delaware [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Need to find distinct name instead of rows . [system description] find the number of rows in organization table . [question] return me the number of the organizations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace department address with school code . [system description] find the number of department address and number of school code in department table . [question] How many different locations does each school have ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , name should be H. V. Jagadish . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [question] return me the papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , use code of course , course table instead of department name of department table . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with largest value in the results of step 1 . [question] What is the name of the department with the most students enrolled ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Remove secretary vote equals 1020 , make sure students have treasurer vote in step 2 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the major of the results of step 1 whose secretary vote equals 1020 . [question] What are the distinct majors that students with treasurer votes are studying ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to use election cycle equivalent Fall and sex equals M . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the number of rows of the results of step 1 whose class senator vote equals 1028 and sex equals " F " . [question] How many male ( sex is M ) students have class senator votes in the fall election cycle ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Fall ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] Make sure gender equals male . [system description] find each value of job in person table along with the average age of the corresponding rows to each value . [question] What is average age of male for different job title ? [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Replace student table with class table , class code with course code in step 1 , class code with course code in step 2 . [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the number of rows of the results of step 1 whose class code equals 10014 . [question] How many students enrolled in class ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use area in place of country name . [system description] find the state name in state table whose country name equals " dummy value " with largest value of density . [question] what is the biggest state in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should find the river 's length instead of country name which is dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river 's country name equals " dummy value " with largest value of density . [question] which states lie on the largest river in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find architect 's id , architect 's name and architect 's gender for two bridges or mill . [system description] Step 1 : for each row in architect table , find the corresponding rows in bridge table . Step 2 : find the number of rows of each value of bridge 's id of the results of step 1 . Step 3 : find the architect 's id , architect 's name , gender of the results of step 1 whose corresponding value in step 2 is equals 1 . Step 4 : for each row in architect table , find the corresponding rows in bridge table . Step 5 : find the number of rows of each value of bridge 's id of the results of step 4 . Step 6 : find the architect 's id and architect 's name of the results of step 4 whose corresponding value in step 5 is greater than or equals 1 . Step 7 : show the rows that are in both the results of step 3 and step 6 . [question] What are the ids , names and genders of the architects who built two bridges or one mill ? [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
[feedback] Replace school with founded and make sure affiliation is nonpublic . [system description] find the founded in university table with largest value of school . [question] Find the founded year of the newest non public school . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
[feedback] In step 2 , search for the name of river which is equivalent to ohio and use traverse . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose river name equals " dummy value " . [question] where is the ohio river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to verify that job of person friend should be doctor . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose person 's name equals " Zach " and person 's name equals " Zach " . [question] Who are the friends of Alice that are doctors ? [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] You need to use home game 's year . [system description] Step 1 : for each row in home game table , find the corresponding rows in team table . Step 2 : find the summation of home game 's attendance of the results of step 1 whose name equals " Atlanta Braves " and team 's year equals 1981 . [question] What is the total home game attendance of team Boston Red Stockings from 2000 to 2010 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston , Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston , Homer ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you should use savings table and in step 2 , check balance in place of checking balance and in step 3 , balance of savings and checking should be greater than step 2 results . [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find the average balance in checking table . Step 3 : find the name and summation of balance of the results of step 1 whose balance greater than the results of step 2 . [question] Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] In step 1 , make sure that sport has highest number of students on scholarship . [system description] Step 1 : find the number of rows of each value of sport name in sports info table . Step 2 : find the sport name in sports info table with largest value in the results of step 1 . [question] Which sport has most number of students on scholarship ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Find number of rows of border info table whose state name equals mississippi river . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [question] how many states border the mississippi river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the name of river which runs through state of alabama . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [question] which rivers run through states bordering alabama [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use jan and Shanghai should be the name of city . [system description] Step 1 : for each row in temperature table , find the corresponding rows in city table . Step 2 : find the aug of the results of step 1 whose city equals " Changzhou ( Jiangsu ) " and nov equals 27.2 . [question] What is the temperature of " Shanghai " city in January ? [schema] [T] city [C] city id [C] city ( Shanghai ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] In step 1 , replace 18000 with 13000 , in step 2 , replace OK with LA and state with AZ . [system description] Step 1 : find the college name in college table whose enrollment greater than 18000 . Step 2 : find the college name in college table whose state equals " AZ " and state equals " OK " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment . [schema] [T] college [C] college name [C] state ( AZ , LA ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 2 , you should use country instead of genre . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the song 's song id of the results of step 1 whose formats equals " mp3 " . [question] What are the id of songs whose format is mp3 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats ( mp3 ) [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Replace jid , cited with title , citation num greater than 200 , name equals H. V. Jagadish , Ensure name equals Divesh Srivastava . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in cite table . Step 2 : find the jid and cited of the results of step 1 whose cited greater than " dummy value " and name equals " dummy value " . [question] return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use traverse and drop state name . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] name all the rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to make sure that release date is equivalent to March and not equals 27 Mar 2004 . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and gender of the results of step 1 whose releasedate equals " 27-MAR-2004 " . [question] List the name and gender for all artists who released songs in March . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use author 's name instead of organization 's name which is equivalent to dummy value . [system description] find the name in organization table whose name equals " dummy value " . [question] return me the organization " H. V. Jagadish " is in . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , make sure mississippi runs through the state whose state name is traverse river . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [question] what states border states which the mississippi runs through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use origin instead of destination . [system description] find the average distance and average price in flight table whose destination equals " Sydney " . [question] What is the average distance and average price for flights from Los Angeles . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 1 , you should use author , journal and name of journal whose year should be 2010 . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table . Step 2 : find the writes 's pid of the results of step 1 whose year equals " dummy value " and year equals " dummy value " . [question] return me the authors who have papers in PVLDB 2010 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use state name instead of city . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what is the capital of texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the state name which is close to mississippi from the border info table . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the highest point of the results of step 1 whose area equals " dummy value " . [question] what are the high points of states surrounding mississippi [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace organization with journal , oid with title , 2nd year with PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of oid of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [question] return me the number of papers on PVLDB after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Find number of capitals in state table whose state name equals rhode island . [system description] find the number of rows in city table whose state name equals " dummy value " . [question] how many capitals does rhode island have [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In steps 2 and 3 , you should use activity name in place of activity name and also last name . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Mountain Climbing " . Step 3 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 4 : find the first name of the results of step 3 whose activity name equals " Accordion Ensemble " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find the first names of the faculty members who participate in Canoeing and Kayaking . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] Make sure they have shared vocals . [system description] find the number of song id in vocals table . [question] How many different songs have shared vocals ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 1 , replace professor office with employee first name and in step 2 , replace professor table with class table . [system description] Step 1 : find the professor office in professor table . Step 2 : find the employee first name in employee table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the first names of the professors who do not teach a class . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to use city of London and open year instead of address road and open year respectively . [system description] find the minimum membership amount and maximum membership amount in branch table whose open year equals 2014 or address road equals " Cecilia Avenue " . [question] Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city ( London ) [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You need to search for the border info 's state name which is equivalent to kentucky . [system description] find the state name in state table whose area equals " dummy value " . [question] what states surround kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure to find for distinct product id . [system description] find the product details in products table . [question] What are the details of all products ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 2 , you should use artist name and smallest value in step3 respectively instead of country of song . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the number of rows of each value of song 's country of the results of step 1 . Step 3 : find the artist 's country of the results of step 1 with largest value in the results of step 2 . [question] What country is the artist who made the fewest songs from ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use home game 's attendance in place of appearances 's year which is equivalent to 1972 . [system description] Step 1 : for each row in appearances table , find the corresponding rows in team table and in home game table and in park table . Step 2 : find the park name of the results of step 1 whose appearances 's year equals 1972 with largest value of team 's attendance . [question] Which park had most attendances in 2008 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first ( Park ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you should use customer id in place of product name and in step 2 , use the complaints table in place of products table . [system description] Step 1 : find the number of rows of each value of product name in products table . Step 2 : find the product name in products table with smallest value in the results of step 1 . [question] Return the names of products that have had complaints filed by the customer who has filed the fewest complaints . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] Make sure tryout 's decision should be yes . [system description] find the number of enrollment in college table . [question] How many students received a yes from tryouts ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
[feedback] You need to use table of minor in and number of department instead of table of course and department . [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table and in course table and in department table . Step 2 : find the first name and last name of the results of step 1 whose department name equals " Physics and Astronomy " . [question] What are the full names of students minoring in department 140 ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Find highest elevation of highlow table whose highest point equals guadalupe peak . [system description] find the mountain altitude in mountain table whose mountain name equals " dummy value " . [question] how tall is guadalupe peak [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure population is maximum . [system description] find the city name in city table with largest value of population . [question] whats the largest city [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that job of person equals student . [system description] find the name in person table with largest value of age . [question] What is the name of the oldest student ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
[feedback] In step 2 , you need to ensure that city name should be durham . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city name equals " dummy value " . [question] what is the capital of states that have cities named durham [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that population should be more than 150000 and state name equals texas . [system description] find the number of rows in city table whose state name equals " dummy value " . [question] how many big cities are in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace dummy value with name of domain and citation num with title . [system description] Step 1 : find rows in publication table whose citation num equals " dummy value " . Step 2 : find the number of jid of each value of jid the results of step 1 . Step 3 : find the jid the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] return me the paper in Databases area with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure that population should be more than 150000 and state name equals kansas . [system description] find the city name in city table whose state name equals " dummy value " . [question] what are the major cities in kansas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find elevation of highlow table whose highest point greater than colorado value . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point in highlow table whose highest elevation equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose highest point greater than the results of step 2 . [question] which states have points that are higher than the highest point in colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use faculty table , and in step 2 , use faculty 's first name and last name instead of student 's first name and last name respectively . [system description] Step 1 : for each row in activity table , find the corresponding rows in participates in table and in student table . Step 2 : find the activity name of the results of step 1 whose first name equals " Stacy " and last name equals " Smith " . [question] What are the names of the activities Mark Giuliano is involved in [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , make sure that event name equals Annual Meeting . [system description] Step 1 : for each row in party events table , find the corresponding rows in party table and in region table . Step 2 : find the number of rows of the results of step 1 whose region name equals " United Kingdom " . [question] How many Annual Meeting events happened in the United Kingdom region ? [schema] [T] region [C] region id [C] region name ( United Kingdom ) [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] Also find product description , and replace product name equals sesame with product category code equals herbs . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name , color description , color description of the results of step 1 whose product name equals " sesame " . [question] What are the names , color descriptions , and product descriptions for products in the 'Herbs ' category ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You should use order status equals Cancelled in place of order status equals Delivered . [system description] Step 1 : for each row in customer orders table , find the corresponding rows in order items table . Step 2 : find the number of rows of the results of step 1 whose order status equals " Delivered " . [question] What is the total number of products that are in orders with status " Cancelled " ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status ( Cancelled ) [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to calculate total number of football games played by students having on scholarship . [system description] find the number of rows in sports info table whose on scholarship equals " N " . [question] What is the total number of all football games played by scholarship students ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
[feedback] In step 2 , you should use the summation of market value . [system description] Step 1 : find the number of rows of each value of main industry in company table . Step 2 : find the main industry and number of rows in company table with largest value in the results of step 1 . [question] List the main industry with highest total market value and its number of companies . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] In step 2 , you should use product category code and Spices in place of characteristic name and product category code respectively . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " warm " and product category code equals " Herbs " . [question] Find the number of products with category " Spices " and typically sold above 1000 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Spices ) [C] product category description ( Spices ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Spices ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [question] which states border the ohio river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use duration of files and in step 2 , languages in ascending order . [system description] Step 1 : find the resolution of each value of languages in song table . Step 2 : find the maximum resolution and languages in song table ordered ascending by the results of step 1 . [question] What are the maximum duration and resolution of songs grouped and ordered by languages ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Replace first name with stuid . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in student table . Step 2 : find the number of rows of each value of has allergy 's stuid of the results of step 1 . Step 3 : find the first name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Show all student IDs who have at least two allergies . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Make sure death year equals to None . [system description] find the name first and name last in player table ordered ascending by name first and name first . [question] Find all the players ' first name and last name who have empty death record . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to search for name of city which is equivalent to springfield and also it should be city name . [system description] find the state name in state table whose area equals " dummy value " . [question] what state is springfield located in [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure continent equals North America and also ensure that name of domain author table equals Databases . [system description] find the name in organization table whose continent equals " dummy value " . [question] return me all the organizations in Databases area located in " North America " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the name of state which is equivalent to kentucky in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [question] how many states does kentucky border [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for total number of rows in certificate table . [system description] find the number of rows in employee table . [question] How many employees have certificate . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Make sure Tryout 's decision for those students equals yes . [system description] find the average enrollment and maximum enrollment in college table . [question] Find the average and maximum hours for the students whose tryout decision is yes . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
[feedback] In step 1 , use class table and professor number in place of professor table and professor extension respectively . [system description] Step 1 : find the number of rows of each value of professor office in professor table . Step 2 : find the professor extension in professor table whose corresponding value in step 1 is greater than 1 . [question] Find the first names of professors who are teaching more than one class . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use customer id and products table instead of product id and complaints table respectively . [system description] Step 1 : for each row in products table , find the corresponding rows in complaints table . Step 2 : find the number of rows of each value of complaints 's product id of the results of step 1 . Step 3 : find the product name of the results of step 1 with smallest value in the results of step 2 . [question] Which products has been complained by the customer who has filed least amount of complaints ? [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] Make sure area is equals to maximum area state . [system description] find the capital in state table with largest value of density . [question] what is the capital of the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use name of state in place of name of mountain . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose mountain name equals " dummy value " . [question] where is mount whitney located [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to find the manufacturer of products as well . [system description] find the rows and manufacturer in products table . [question] What is all the product data , as well as each product 's manufacturer ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 2 , I want actor id which is more than 30 . [system description] Step 1 : for each row in film actor table , find the corresponding rows in actor table . Step 2 : find the number of rows of each value of film actor 's actor id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What are the full names of actors who had roles in more than 30 films ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You should use director 's name equals Steven Spielberg and release year greater than 2006 . [system description] Step 1 : for each row in director table , find the corresponding rows in directed by table and in copyright table and in cast table and in actor table and in movie table . Step 2 : find the title of the results of step 1 whose director 's name equals " dummy value " and actor 's birth year greater than " dummy value " . [question] Find all movies directed by " Steven Spielberg " after 2006 [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace Protoporphyrinogen oxidase name with medicine enzyme interaction interaction type . [system description] find the name , location , product in enzyme table whose name equals " Protoporphyrinogen oxidase " . [question] What are the distinct name , location and products of the enzymes which has any 'inhibitor ' interaction ? [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( inhibitor )
[feedback] You need to use and first name equals Katsuhiro in place of and country equals France respectively . [system description] find the name in institution table whose country equals " France " . [question] Which institution does " Katsuhiro Ueno " belong to ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ueno ) [C] first name ( Katsuhiro ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Find lowest elevation of highlow table whose lowest point equals death valley . [system description] find the mountain altitude in mountain table whose mountain name equals " dummy value " . [question] what is the elevation of death valley [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , use department code and drop student num . [system description] Step 1 : for each row in department table , find the corresponding rows in student table . Step 2 : find the average student gpa of each value of department name of the results of step 1 . Step 3 : find the department name and average student num of the results of step 1 with largest value in the results of step 2 . [question] Which department has the highest average student GPA , and what is the average gpa ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use country equals UK and gender equals Male . [system description] find the artist name in artist table whose gender equals " Female " and country equals " USA " . [question] What are the names of all male British artists ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Male ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , you should use author table , title and name in place of cite table , dummy value and step 3 , you should only use citation number in step 4 . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of cited of each value of jid the results of step 2 . Step 4 : find the jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the paper by " H. V. Jagadish " with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use customer id in party services instead of party id in parties table . [system description] Step 1 : find the number of rows of each value of party id in parties table . Step 2 : find the party email in parties table with largest value in the results of step 1 . [question] Which is the email of the party that has used the services the most number of times ? [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] You need to search for the company 's company . [system description] Step 1 : find the station company 's company id in station company table . Step 2 : find the main industry and main industry in company table whose company 's company id not one of the results of step 1 . [question] What are the main industries of the companies without gas stations and what are the companies ? [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] You should use state name and salem as capital . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] salem is the capital of which state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use storm id of affected region instead of name of storm table . [system description] Step 1 : find the number of rows of each value of name in storm table . Step 2 : find the name and max speed in storm table with largest value in the results of step 1 . [question] What is the storm name and max speed which affected the greatest number of regions ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 1 , I want enzyme id of medicine enzyme interaction whose interaction type is activator and drop id , name of enzyme . [system description] Step 1 : find the number of rows of each value of id in enzyme table . Step 2 : find the id and name in enzyme table with largest value in the results of step 1 . [question] What is the id and name of the enzyme that can interact with the most medicines as an activator ? [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] In step 2 , I want bikes that are more than 12 in stock . [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the id and name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What are the id and name of the stations that have ever had more than 12 bikes available ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 1 , replace college id in college table with player id in player college table . [system description] Step 1 : find the number of rows of each value of college id in college table . Step 2 : find the name full , name full , college id in college table with largest value in the results of step 1 . [question] Find the full name and id of the college that has the most baseball players . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you should use the financial transactions table instead of accounts table . [system description] Step 1 : find the number of rows of each value of account id in accounts table . Step 2 : find the account id and account name in accounts table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the ids and names of accounts with 4 or more transactions ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You should use the actor 's name who are in Saving Private Ryan . [system description] find the number of rows in movie table whose title equals " dummy value " . [question] How many actors are in the movie " Saving Private Ryan " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] order status code should be pending in step 2 . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table . Step 2 : find the customer name of the results of step 1 whose order status code equals " New " ordered ascending by customer name . [question] What are the distinct names of customers with an order status of Pending , sorted by customer id ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Pending ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 1 , you should include table of author and keyword , also include keyword equals Relational Database . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table and in publication keyword table and in keyword table . Step 2 : find the number of writes 's pid of the results of step 1 whose keyword like " dummy value " . [question] return me the number of authors who have papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use without in step 2 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the first name of the results of step 1 whose class senator vote equals 1028 . [question] Find the distinct first names of the students who have class senator votes . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to use table of member and make sure department number should be 520 . [system description] Step 1 : for each row in faculty table , find the corresponding rows in course table and in enrolled in table and in student table and in minor in table . Step 2 : find the faculty 's first name and faculty 's last name of the results of step 1 whose minor in 's department number equals 50 . [question] Find the full names of faculties who are members of department with department number 520 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] In step 2 , you should find the state of bank table . [system description] Step 1 : find the number of rows of each value of state in customer table . Step 2 : find the state in customer table with largest value in the results of step 1 . [question] Find the state which has the most number of customers . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to use velocity instead of acceleration . [system description] find the velocity in flight table whose pilot equals " Thompson " . [question] What is the velocity of the pilot named 'Thompson ' ? [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot ( Thompson ) [C] velocity [C] altitude [C] airport id [C] company id
[feedback] In step 2 , title should be equals Finding Nemo . [system description] Step 1 : for each row in director table , find the corresponding rows in movie table . Step 2 : find the budget of the results of step 1 whose name equals " dummy value " . [question] How much was the budget of " Finding Nemo " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Also find title and make sure rating stars equals 5 . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the director and director of the results of step 1 whose rating stars equals 5 . [question] What are the names of directors who directed movies with 5 star rating ? Also return the title of these movies . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to calculate the number of rows for each airline id of flight table . [system description] find each value of name in aircraft table along with the number of the corresponding rows to each value . [question] What is the name of each aircraft and how many flights does each one complete ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to mention the position of President and also use the term Club Name instead of Club Name . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Pen and Paper Gaming " and club name equals " Pen and Paper Gaming " . [question] Who is the president of the club " Bootup Baltimore " ? Give me the first and last name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( President )
[feedback] You should use max temperature f , not max temperature f . [system description] find the date in weather table whose max temperature f greater than 44 with largest value of max temperature f . [question] What are the dates with a maximum temperature higher than 85 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , name should be Google . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " Tohoku University " . [question] Find the first names and last names of the authors whose institution affiliation is " Google " . [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 2 , use title instead of keyword and make sure that title is making database systems usable . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the abstract of the results of step 1 whose keyword equals " dummy value " . [question] return me the abstract of " Making database systems usable " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure that area should be largest . [system description] find the state name in state table with largest value of density . [question] what is the biggest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use delegate of election table in place of county name of county table . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 1 . [question] Which counties have two or more delegates ? Give me the county names . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] In step 2 , you should use rating 's movie id instead of title . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the average rating stars of each value of movie 's movie id of the results of step 1 . Step 3 : find the average rating stars and title of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Find the average rating star for each movie that received at least 2 ratings . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , you should use river table and traverse in place of state table and area respectively . [system description] Step 1 : find the state name in state table whose area equals " dummy value " . Step 2 : find the river name in river table whose river name not one of the results of step 1 . [question] what rivers do not run through tennessee [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , replace author table with journal table , in step 2 , replace jid with title , and in step 3 , replace dummy with pvldb . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the paper in PVLDB with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , grade should be B and not D+ . [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table . Step 2 : find the number of rows of the results of step 1 whose grade equals " D+ " . [question] Find the number of students that have at least one grade " B " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to use journalist 's name in place of event attendance . [system description] Step 1 : for each row in event table , find the corresponding rows in news report table and in journalist table . Step 2 : find the journalist 's name and event 's name of the results of step 1 ordered ascending by journalist 's name . [question] Show the names of journalists and the names of the events they reported in ascending order [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
[feedback] birth city equals New York City , birth year greater than 1980 , gender equals female . [system description] find the name in actor table whose birth city equals " dummy value " and birth year greater than " dummy value " . [question] Find all the female actors born in " New York City " after 1980 [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search that how can be reached to specified tourist attraction by walking . [system description] find the shop details in shops table . [question] What are the details of the shops that can be accessed by walk ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( walk ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Make sure to find distinct characteristic name for each product . [system description] find the characteristic name in characteristics table . [question] Find the names of all the product characteristics . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 2 , order status should be Cancelled and not delivered . [system description] Step 1 : for each row in customer orders table , find the corresponding rows in customers table . Step 2 : find the number of rows of the results of step 1 whose order status equals " Delivered " . [question] Return the number of customers who have at least one order with " Cancelled " status . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status ( Cancelled ) [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Remove whose country name equals dummy value . [system description] find the state name in state table whose country name equals " dummy value " . [question] give me all the states of usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use customer instead of store . [system description] Step 1 : find the number of rows of each value of store id in store table . Step 2 : find the store id in store table with largest value in the results of step 1 . [question] Which store has most the customers ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 1 , replace domain author table with publication keyword table , in step 2 replace keyword equals dummy value with keyword equals Relational Database . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of journal 's name the results of step 2 . Step 4 : find the journal 's name and number of rows the results of step 2 with largest value in the results of step 3 . [question] return me the journal , which has the most number of papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 3 , you need to use destination airport id and route table . [system description] Step 1 : for each row in routes table , find the corresponding rows in airports table . Step 2 : find the number of rows of each value of destination airport id of the results of step 1 . Step 3 : find the name and city of the results of step 1 with largest value in the results of step 2 . [question] Find the name and city of the airport which is the destination of the most number of routes . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( CITY ) [C] country [C] active
[feedback] In step 2 , you should use amenity name and dorm name in place of dorm name and Dorm-plex 2000 respectively . [system description] Step 1 : for each row in dorm table , find the corresponding rows in has amenity table and in dorm amenity table . Step 2 : find the dorm name of the results of step 1 whose dorm name equals " Dorm-plex 2000 " ordered ascending by amenity name . [question] What are the amenities in alphabetical order that Anonymous Donor Hall has ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Anonymous Donor Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 1 , use state table in place of highlow table and highest elevation instead of point of highlow . [system description] Step 1 : find the maximum highest elevation in highlow table . Step 2 : find the maximum highest point in highlow table whose highest elevation equals the results of step 1 . [question] how high is the highest point in the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace class room equals 109 with class room equals 107 . [system description] find the first name in list table whose class room equals 109 . [question] List the first names of all the students in room 107 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to search for unique label . [system description] find the label in albums table . [question] What are all the labels ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 1 , you should use amount in place of 10 and in step 3 , use staff 's first name instead of 10 . [system description] Step 1 : find the payment date in payment table whose amount greater than 10.99 . Step 2 : for each row in payment table , find the corresponding rows in staff table . Step 3 : find the payment date of the results of step 2 whose first name equals " dummy value " and last name equals " dummy value " . Step 4 : show the rows that are in any of the results of step 1 and step 3 . [question] What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 1 , replace domain author table with publication keyword table , in step 2 replace keyword with relational database . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name the results of step 2 with largest value in the results of step 3 . [question] return me the conference , which has the most number of papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use name and drop assets billion . [system description] find the name and assets billion in companies table ordered ascending by assets billion . [question] List the name and assets of each company in ascending order of company name . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] In step 1 , you should use staff and in step 2 , make sure that last name should be Sawayn and first name is Janessa . [system description] Step 1 : for each row in customers table , find the corresponding rows in addresses table . Step 2 : find the city of the results of step 1 whose first name equals " Estelle " . [question] In what city does Janessa Sawayn live ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 , use how to get there in place of attraction type code . [system description] Step 1 : find the number of rows of each value of attraction type code in tourist attractions table . Step 2 : find the how to get there in tourist attractions table with largest value in the results of step 1 . [question] Which transportation method is used the most often to get to tourist attractions ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You should use duration of files in place of song name . [system description] find the artist name in song table with smallest value of song name . [question] What are the names of the artists who sang the shortest song ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use population and name of state in place of summation and area respectively . [system description] find the summation of population in state table whose area equals " dummy value " . [question] how many people live in california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use 1995 in place of 1978 . [system description] find the type in film market estimation table whose year equals 1978 . [question] Return the types of film market estimations in 1995 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
[feedback] Find lowest point of iowa state name equals iowa in meters . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose mountain 's state name equals " dummy value " . [question] what is the lowest point in iowa in meters [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , use project id and drop document id . [system description] Step 1 : find rows in documents table whose document type code equals " BK " . Step 2 : find each value of document id the results of step 1 along with the number of the corresponding rows to each value . [question] How many documents are with document type code BK for each product id ? [schema] [T] reference document types [C] document type code ( BK ) [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( BK ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 1 , make sure that competition type equals tournament . [system description] Step 1 : find the number of rows of each value of country in competition table . Step 2 : find the country in competition table with largest value in the results of step 1 . [question] what is the name of the country that participated in the most tournament competitions ? [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type ( Tournament ) [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] Replace cite with journal , and make sure name equals H. V. Jagadish , also find corresponding rows of writes table . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in cite table . Step 2 : find the number of publication 's pid of the results of step 1 whose cited equals " dummy value " and name equals " dummy value " . [question] return me the number of papers by " H. V. Jagadish " on PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use new mexico as a state name and in step 1 , remove and lake . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in lake table . Step 2 : find the state 's area of the results of step 1 whose border info 's state name equals " dummy value " and lake 's state name equals " dummy value " . [question] what is the area of the new mexico state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use highest elevation and delaware as values of state name . [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [question] how high is the highest point in delaware [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use course code in place of student class and also make sure that student is enrolled in course whose code is ACCT-211 . [system description] find the student first name in student table whose student class equals " Jr " . [question] What is the first name of each student enrolled in class ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] first name equals Queenie is wrong , there should be first name equals Janessa and last name equals Sawayn . [system description] find the nickname in staff table whose first name equals " Queenie " . [question] What is the nickname of the employee named Janessa Sawayn ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use king as the bed Type is required . [system description] find the room name and decor in rooms table whose beds equals 1 ordered ascending by base price . [question] What are the names and decor of rooms with a king bed ? Sort them by their price [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Replace supplier name with product name of products table , remove whose phrase . [system description] find the supplier name and supplier phone in suppliers table whose supplier name equals " Lidl " . [question] List the names and phone numbers of all the distinct suppliers who supply red jeans . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name ( red jeans ) [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Replace end station id with end station name , end station id with start station name , show first three results . [system description] find the start station name and end station id in trip table with largest value of id . [question] Give me the start station and end station for the trips with the three oldest id . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 1 , you should use characteristics table and product name in place of product characteristics table and product name respectively . [system description] Step 1 : for each row in products table , find the corresponding rows in product characteristics table . Step 2 : find the number of characteristic id of the results of step 1 whose product name equals " caraway " . [question] How many distinct characteristic names does the product " cumin " have ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 1 , use country in place of name . [system description] Step 1 : find the number of rows of each value of name in airlines table . Step 2 : find the country in airlines table with largest value in the results of step 1 . [question] What is the name of the country with the most number of home airlines ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Homer ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
[feedback] In step 2 , you should use the name of the author instead of dummy value . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the conference 's name of the results of step 1 whose author 's name equals " dummy value " . [question] return me the conferences , which have papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use state name instead of dummy value . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [question] number of states bordering kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that the river does not run through tennessee . [system description] find the river name in river table whose river name not equals " dummy value " . [question] which rivers do not run through tennessee [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace station 's id with trip 's start station id . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the number of rows of each value of start station id of the results of step 1 . Step 3 : find the station 's id and start station name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the ids and names of all start stations that were the beginning of at least 200 trips ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Replace smallest with largest in step 3 . [system description] Step 1 : for each row in certificate table , find the corresponding rows in aircraft table . Step 2 : find the number of rows of each value of certificate 's airline id of the results of step 1 . Step 3 : find the name of the results of step 1 with smallest value in the results of step 2 . [question] What are the names of the aircraft that the least people are certified to fly ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to use table of election in place of table of party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [question] Show the name of each party and the corresponding number of delegates from that party . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] You should use age less than 30 instead of age less than 35 . [system description] find the member id and name in member table whose age less than 35 or membership card equals " Black " . [question] Find the ids and names of members who are under age 30 or with black membership card . [schema] [T] shop [C] shop id [C] address [C] num of staff [C] score [C] open year [T] member [C] member id [C] name [C] membership card ( Black ) [C] age [C] time of purchase [C] level of membership [C] address [T] happy hour [C] hh id [C] shop id [C] month [C] num of shaff in charge [T] happy hour member [C] hh id [C] member id [C] total amount
[feedback] You should use product id instead of product id . [system description] find the product details and product details in products table whose product details like " Latte " or product details like " Dove Chocolate " . [question] Which product 's detail contains the word " Latte " or " Americano " ? Return the full detail . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details ( Americano , Latte ) [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You should use author 's name and name of organization table instead of name of organization table and name of dummy value respectively . [system description] find the name in organization table whose name equals " dummy value " . [question] return me all the researchers in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to calculate the number of rows for each sport name and make sure that it is available in student table . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find each value of sport name of the results of step 1 along with the number of the corresponding rows to each value . [question] Show all sport name and the number of students . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] In step 1 , replace organization with journal , in step 3 replace step 2 word with step 3 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in author table . Step 2 : only keep the results of step 1 whose organization 's name equals " dummy value " . Step 3 : find the number of jid of each value of author 's name the results of step 2 . Step 4 : find the author 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the authors who have more than 10 papers in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] product name equals keyboard is right parameter , not product price equals 803.74 . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table and in order items table and in products table . Step 2 : find the customer name of the results of step 1 whose product price equals 803.74 . [question] List the names of all the distinct customers who bought a keyboard . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name ( keyboard ) [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , allergy type should be food . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the number of rows of the results of step 1 whose allergy type equals " animal " . [question] How many students are affected by food related allergies ? [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] mountain name equals dummy value is wrong , it should be city name equals boulder . [system description] Step 1 : for each row in city table , find the corresponding rows in state table and in mountain table . Step 2 : find the city 's population of the results of step 1 whose mountain name equals " dummy value " . [question] population of boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use files and duration in place of song and resolution respectively . [system description] Step 1 : find the languages of each value of languages in song table . Step 2 : find the maximum resolution and languages in song table ordered ascending by the results of step 1 . [question] What are the maximum duration and resolution of all songs , for each language , ordered alphabetically by language ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use special features like Deleted Scenes instead of special features like Behind the Scenes . [system description] find the title in film table whose special features like " Trailers , Deleted Scenes , Behind the Scenes " and special features like " Behind the Scenes " . [question] Which movies have 'Deleted Scenes ' as a substring in the special feature ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features ( Deleted Scenes ) [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to use friend . [system description] find the name in person friend table whose name equals " Alice " . [question] Who are Bob 's friends ? [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
[feedback] In step 1 , director should have more than one movie directed by him or her . [system description] Step 1 : find the number of rows of each value of director in movie table . Step 2 : find the title and year in movie table whose corresponding value in step 1 is greater than 1 . [question] For directors who had more than one movie , return the titles and produced years of all movies directed by them . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , name of person friend should be Zach . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the maximum year in person friend table . Step 3 : find the age of the results of step 1 whose year equals the results of step 2 . [question] What are the ages of all of Zach 's friends who are in the longest relationship ? [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] In step 1 , you should include checking table and in step 2 , use name equals Brown in place of name equals Granger . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table . Step 2 : find the rows and balance of the results of step 1 whose name equals " Granger " . [question] What are the checking and savings balances in accounts belonging to Brown ? [schema] [T] accounts [C] customer id [C] name ( Brown ) [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] You should use instrument equivalent to drums . [system description] find the number of rows in instruments table whose instrument equals " dummy value " . [question] How many songs have used the instrument " drums " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 1 , you should use the financial transactions table instead of accounts table . [system description] Step 1 : find the number of rows of each value of account id in accounts table . Step 2 : find the account id and account name in accounts table whose corresponding value in step 1 is greater than or equals 1 . [question] Show the account id and name with at least 4 transactions . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace jid with title , second name with year greater than 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [question] return me the number of papers on VLDB conference after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure to find for medicine enzyme interaction 's interaction type equals inhibitor . [system description] find the name , location , product in enzyme table . [question] What are the different names , locations , and products of the enzymes that are capable inhibitor interactions ? [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( inhibitor )
[feedback] In step 2 , supplant batting with postseason . [system description] Step 1 : for each row in home game table , find the corresponding rows in postseason table and in team table and in batting postseason table and in player table and in batting table . Step 2 : find the number of rows of the results of step 1 whose batting 's year equals 1927 and ties equals 1 . [question] Find the number of tied games ( the value of " ties " is ' 1 ' ) in 1885 postseason . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] date assigned from is wrong . It should be replaced by date assigned to instead . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff 's staff id and staff name of the results of step 1 with smallest value of date assigned to . [question] What is the id and name of the staff who has been assigned for the least amount of time ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Replace department table , course table and course code with enroll table , class table and course code respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name of the results of step 1 whose course code equals " ACCT-212 " . [question] What are the first names of all students in course ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , use rental date instead of return date . [system description] Step 1 : find the rental 's customer id in rental table whose return date greater than " 2005-08-30 12:31:17 " . Step 2 : find the first name in customer table whose customer 's customer id not one of the results of step 1 . [question] Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01 ' . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date ( 2005-08-23 02:06:01 , 2005-08-23 02:06:41 ) [C] last update [T] rental [C] rental id [C] rental date ( 2005-08-23 02:06:01 , 2005-08-23 02:06:41 ) [C] inventory id [C] customer id [C] return date ( 2005-08-23 02:06:11 ) [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] city name should be springfield and not dummy value as it is incorrect . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [question] which state is springfield in [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use the financial transactions table instead of accounts table . [system description] Step 1 : find the number of rows of each value of account id in accounts table . Step 2 : find the account id in accounts table with largest value in the results of step 1 . [question] Show the account id with most number of transactions . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] salary greater than 100000 should be use in place of salary greater than or equals 256481 . [system description] find the employee id in employee table whose salary greater than or equals 256481 . [question] What is the id of every employee who has at least a salary of 100000 ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 1 , you should use category table and name in place of film table and title respectively . [system description] Step 1 : for each row in film category table , find the corresponding rows in film table . Step 2 : find each value of category id of the results of step 1 along with the number of the corresponding rows to each value . [question] How many films are there in each category ? List the genre name , genre id and the count . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , you should use state name instead of city . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what is capital of texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use the store id from the inventory table . [system description] Step 1 : for each row in store table , find the corresponding rows in inventory table . Step 2 : find the number of rows of each value of inventory 's store id of the results of step 1 . Step 3 : find the inventory 's store id of the results of step 1 with largest value in the results of step 2 . [question] What is the id of the store that has the most items in inventory ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You should use number deaths instead of summation of number deaths . [system description] Step 1 : for each row in region table , find the corresponding rows in affected region table and in storm table . Step 2 : find the summation of number deaths of each value of name of the results of step 1 . Step 3 : find the region name of the results of step 1 with largest value in the results of step 2 . [question] What are the names of regions that were affected by the storm in which the most people died ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] Replace inducted with corresponding rows of hall of fame table . [system description] find each value of inducted in hall of fame table along with the number of the corresponding rows to each value . [question] Count the number of players who enter hall of fame for each year . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Count ) [C] name last ( Hall ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In table of acceptance , you need to use author . [system description] Step 1 : find the number of rows of each value of author in submission table . Step 2 : find the author in submission table whose corresponding value in step 1 is greater than 1 . [question] Show the authors who have submissions to more than one workshop . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
[feedback] Replace domain keyword table with publication keyword table , step 2 : Replace step 2 word with step 3 , find greater than in step 4 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the conferences , which have more than 60 papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to ensure that enrollment is more than 18000 and arrange them in ascending order by college name . [system description] find the college name in college table ordered descending by enrollment . [question] List the name of the colleges whose enrollment is greater 18000 sorted by the college 's name . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You should use code of document type because description of document type is incorrect . Also , use name of document type because name of document is equivalent to King Book . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the document type name , document type name , document description of the results of step 1 whose document name equals " Review on French files " or document description equals " None " . [question] What are the type come , name , and description of the document that has either the name 'Noel CV ' or 'King Book ' ? [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( Book , CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name ( Noel CV , King Book ) [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace document name , document description with document type name , document date , Ensure to find document type name , document date . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the document name , document type description , document description of the results of step 1 . [question] Return the type name , type description , and date of creation for each document . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You should use amount in place of amount . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 with largest value of amount . [question] Find the name of customer who has the highest amount of loans . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You should use director equals James Cameron and year greater than 2000 , not greater than Victor Fleming and greater than 1939 . [system description] find the title in movie table whose director greater than " Victor Fleming " and year greater than 1939 . [question] What are the titles of all movies that James Cameron directed after 2000 ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( James Cameron ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 3 , replace greater than or equals with equals or greater than . [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Show the ids for projects with at least 2 documents . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 1 , use journal table and in step 4 , supplant domain 's name with journal 's name and in step 5 , replace 1 with 100 . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table and in domain author table and in domain table . Step 2 : only keep the results of step 1 whose domain 's name equals " dummy value " . Step 3 : find the number of rows of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the keywords , which have been contained by more than 100 papers in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace dummy with VLDB in step 2 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the author 's name of the results of step 1 whose conference 's name equals " dummy value " . [question] return me the authors who have papers in the VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use traverse and drop state name . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] what are the rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use tourist details instead of visit details . [system description] Step 1 : for each row in tourist attractions table , find the corresponding rows in visits table . Step 2 : find the name of the results of step 1 whose visit details equals " " . [question] Which tourist attractions does the visitor with detail 'Vincent ' visit ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Find bikes available equals or greater than 7 for all station id whose latitude greater than 37.4 . [system description] Step 1 : find the id in station table whose latitude greater than 37.771058000000004 . Step 2 : for each row in station table , find the corresponding rows in status table . Step 3 : find the id of the results of step 2 whose bikes available less than 15 . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ids of stations that have latitude above 37.4 and never had bike availability below 7 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to determine the average value of range whose hotel 's pet policy is allowed or not . [system description] find the average price range and average price range in hotels table . [question] What are the average prices of hotels grouped by their pet policy . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Also find course description and make sure professors have taught course . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table and in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose course description equals " Statistical Applications " . [question] What are the first names , office locations of all lecturers who have taught some course ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to use release year and movie table in place of birth year and copyright table respectively . Also , search for the name of director which is equivalent to Quentin Tarantino . [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : find the actor 's name of the results of step 1 whose director 's name equals " dummy value " with largest value of actor 's birth year . [question] Find the actors who played in the latest movie by " Quentin Tarantino " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use name Sarah Martinez in step 2 . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the director of the results of step 1 whose name equals " Ashley White " . [question] Find the names of all directors whose movies are rated by Sarah Martinez . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( Sarah Martinez ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to use name instead of gender and also make sure that name should be Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose gender equals " male " and gender equals " female " . [question] Find the female friends of Alice . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] In step 2 , title should be Making database systems usable instead of keyword equals dummy value . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : find the name of the results of step 1 whose keyword equals " dummy value " . [question] return me the authors of " Making database systems usable " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to ensure that the departure airport is GO and arriving airport is CCC . [system description] find the number of rows in routes table whose destination airport equals " CCC " and destination airport equals " BBK " . [question] How many routes go from the United States to Canada ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( GO ) [C] source airport id [C] source airport ( GO ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States , Canada ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata ( GO ) [C] icao [C] call sign ( UNITED , STATES ) [C] country ( United States , Canada ) [C] active
[feedback] You need to search for distinct party name . [system description] find the number of rows in party table . [question] Count the number of different parties . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] Replace 208 with 300 in step 1 . [system description] Step 1 : find rows in cinema table whose capacity greater than 208 . Step 2 : find the number of capacity of each value of location the results of step 1 . Step 3 : find the location the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Find the locations that have more than one movie theater with capacity above 300 . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
[feedback] In step 1 , you should use staff and in step 2 , ensure that last name is Janessa Sawayn and also use country instead of customers . [system description] Step 1 : for each row in customers table , find the corresponding rows in addresses table . Step 2 : find the country and state province county of the results of step 1 whose first name equals " Omer " . [question] In which country and state does Janessa Sawayn live ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 2 , you should use description of color in place of color code of products . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the number of rows of each value of products 's color code of the results of step 1 . Step 3 : find the color description of the results of step 1 with smallest value in the results of step 2 . [question] What is the description of the color used by least products ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace department address with school code . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the department address of the results of step 1 whose class 's class code equals 10016 . [question] What are the different locations of the school with the code BUS ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code ( BUS ) [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to calculate the total number of visits for each tourist attraction id from the visits table . [system description] find each value of tourist attraction id in tourist attractions table along with the number of the corresponding rows to each value . [question] Show different tourist attractions ' names , ids , and the corresponding number of visits . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 2 , you need to use the full name of list 's teacher and make sure that MARROTTE KIRK teaches the students . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " ALFREDA " and teachers 's last name equals " KRIENER " . [question] Find all students taught by MARROTTE KIRK . Output first and last names of students . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MARROTTE ) [C] first name (  KIRK ) [C] class room
[feedback] You need to determine the checking 's balance for the highest balance . [system description] find the balance in savings table with largest value of balance . [question] What is the savings balance of the account belonging to the customer with the highest checking balance ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] In step 4 , you need to determine the average rating star for the movie which is not reviewed by Brittany Harris . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : for each row in reviewer table , find the corresponding rows in rating table . Step 3 : find the rating 's movie id of the results of step 2 whose name equals " Sarah Martinez " . Step 4 : find the average rating stars and average rating stars of the results of step 1 whose movie 's movie id not one of the results of step 3 . [question] Find the average rating star for each movie that are not reviewed by Brittany Harris . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( Brittany Harris ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , use artist id and exhibition table in place of name and artist table respectively . [system description] Step 1 : find the number of rows of each value of name in artist table . Step 2 : find the name and country in artist table with largest value in the results of step 1 . [question] What is the name and country for the artist with most number of exhibitions ? [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] In step 4 , name should be Alice and in step 3 , friend should be Alice . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : for each row in person table , find the corresponding rows in person friend table . Step 3 : find the maximum year of the results of step 2 whose job equals " student " . Step 4 : find the person 's name , age , job of the results of step 1 whose year equals the results of step 3 . [question] Find the name , age , and job title of persons who are friends with Alice for the longest years . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] In step 2 , you should use country equals Australia . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of the results of step 1 whose country equals " Brunei " . [question] Count the number of cities in Australia . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country ( Australia ) [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Replace last name with address , and first name with address . [system description] find the email and last name in customer table whose first name equals " MINNIE " . [question] Where does the customer with the first name Linda live ? And what is her email ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name ( LINDA ) [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , you should use class room and 0 should be the value of grade . [system description] Step 1 : find rows in list table whose class room equals 111 . Step 2 : find each value of grade the results of step 1 along with the number of the corresponding rows to each value . [question] For each grade 0 classroom , report the total number of students . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to find river 's length for which traverse of river 's should be equivalent to texas . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose length equals " dummy value " with largest value of length . [question] through which states does the longest river in texas run [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace destination with origin . [system description] find the flight number , origin , destination in flight table ordered ascending by destination . [question] What is the flight number , origin , and destination for all flights in alphabetical order by departure cities ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 1 , you should use detention table and drop reference detention type table . [system description] Step 1 : find the number of rows of each value of detention type code in reference detention type table . Step 2 : find the detention type code and detention type description in reference detention type table with smallest value in the results of step 1 . [question] What are the code and description of the least frequent detention type ? [schema] [T] reference address types [C] address type code [C] address type description [T] reference detention type [C] detention type code [C] detention type description [T] reference incident type [C] incident type code [C] incident type description [T] addresses [C] address id [C] line 1 [C] line 2 [C] line 3 [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] students [C] student id [C] address id [C] first name [C] middle name [C] last name [C] cell mobile number [C] email address [C] date first rental [C] date left university [C] other student details [T] teachers [C] teacher id [C] address id [C] first name [C] middle name [C] last name [C] gender [C] cell mobile number [C] email address [C] other details [T] assessment notes [C] notes id [C] student id [C] teacher id [C] date of notes [C] text of notes [C] other details [T] behavior incident [C] incident id [C] incident type code [C] student id [C] date incident start [C] date incident end [C] incident summary [C] recommendations [C] other details [T] detention [C] detention id [C] detention type code [C] teacher id [C] datetime detention start [C] datetime detention end [C] detention summary [C] other details [T] student addresses [C] student id [C] address id [C] date address from [C] date address to [C] monthly rental [C] other details [T] students in detention [C] student id [C] detention id [C] incident id
[feedback] You should use or headquarter equals Tokyo or Beijing in place of or founder equals Andy . [system description] find the number of rows in manufacturers table whose headquarter equals " Taiwan " or founder equals " Andy " . [question] How many manufacturers have headquarters in either Tokyo or Beijing ? [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Beijing , Tokyo ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] Make sure birth city equals Los Angeles and birth year greater than 2000 . [system description] find the number of rows in actor table whose birth city equals " dummy value " and birth year greater than " dummy value " . [question] How many actors were born in " Los Angeles " after 2000 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , use document id and not the document id of documents table . [system description] Step 1 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 2 : find the documents 's document id of the results of step 1 whose budget type code equals " SF " . [question] Give the ids of documents with expenses that have the budget code 'SF ' . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( SF ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Make sure to find first three results . [system description] find the room name and room id in rooms table with largest value of base price . [question] What are the name and id of the three highest priced rooms ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , you need to use engineer as the job 's name . [system description] Step 1 : find the minimum age in person table . Step 2 : find the number of rows in person table whose age greater than the results of step 1 . [question] Find the number of people whose age is greater than all engineers . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
[feedback] Replace homepage with title , conference table with publication table , name with name equals VLDB . [system description] find the homepage in conference table whose name equals " dummy value " . [question] return me the papers on VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 4 , you should use name of airport that are in China . [system description] Step 1 : for each row in routes table , find the corresponding rows in airports table and in airlines table . Step 2 : only keep the results of step 1 whose airlines 's country equals " Guinea " . Step 3 : find the number of rows of each value of destination airport the results of step 2 . Step 4 : find the airports 's name the results of step 2 with largest value in the results of step 3 . [question] What is the name of the airport that is the destination of the most number of routes that start in China ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
[feedback] You need to search for total number of states . [system description] find the number of rows in state table whose country name equals " dummy value " . [question] how many states does usa have [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace professor high degree equals DBA with professor high degree equals Ph.D . [system description] find the number of professor high degree in professor table whose professor high degree equals " DBA " . [question] How many professors do have a Ph.D. degree ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree ( Ph.D. ) [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use total in place of gold . [system description] Step 1 : for each row in club rank table , find the corresponding rows in club table and in competition result table and in competition table . Step 2 : find the number of rows of the results of step 1 whose gold less than 2 . [question] What is the total number of clubs that have less than 10 medals in total ? [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] You need to calculate the number of males and females for each rank . [system description] find each value of sex in faculty table along with the number of the corresponding rows to each value . [question] Show all the ranks and the number of male and female faculty for each rank . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , use check out in place of maximum rate . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find each value of room id of the results of step 1 along with the rate , check in , room name , and maximum rate of the corresponding rows to each value . [question] Which room has the highest rate ? List the room 's full name , rate , check in and check out date . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You need to search for the rows count for different decor . [system description] Step 1 : find rows in rooms table whose base price greater than 150 . Step 2 : find each value of decor the results of step 1 along with the number of the corresponding rows to each value . [question] How many rooms cost more than 120 , for each different decor ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 2 , aircraft 's distance should be more than 5000 and in step 3 , you do not need to find salary . [system description] Step 1 : for each row in employee table , find the corresponding rows in certificate table and in aircraft table and in flight table . Step 2 : only keep the results of step 1 whose flight 's distance greater than 5478 . Step 3 : find the number of rows of each value of employee 's employee id the results of step 2 . Step 4 : find the salary and employee 's name the results of step 2 with largest value in the results of step 3 . [question] What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000 ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Replace class room with school code , should find number of corresponding rows of course table for each school . [system description] find each value of class room in class table along with the number of the corresponding rows to each value . [question] Find the number of classes in each school . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Make sure to find only for the largest value of age . [system description] find the name in person table with largest value of age . [question] Who is the oldest person ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] You need to ensure that state name should be texas in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the summation of population of the results of step 1 whose border equals " dummy value " . [question] what is the total population of the states that border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Also find professor office , class table , course description whose corresponding professor had taught course . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name , course description , department name of the results of step 1 whose course code equals " ACCT-212 " . [question] Find the first names and offices of all instructors who have taught some course and the course description and the department name . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , remove movie table and replace it with rating table . In step 3 , replace name with name of reviewer . [system description] Step 1 : find the movie 's movie id in movie table . Step 2 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 3 : find the movie 's movie id of the results of step 2 whose name equals " Daniel Lewis " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ids of the movies that are not reviewed by Brittany Harris . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( Brittany Harris ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Also find class room along with class room in step 2 . [system description] Step 1 : find the number of rows of each value of class room in class table . Step 2 : find the number of rows in class table whose corresponding value in step 1 is greater than or equals 1 . [question] Find the number of classes offered for all class rooms that held at least 2 classes . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Confirm that rank equals Professor . [system description] find the number of rows in faculty table whose sex equals " F " . [question] Count the number of female Professors we have . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] You should use greater than 3000 in place of greater than 2050 . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 whose amount greater than 2050 . [question] Find the the name of the customers who have a loan with amount more than 3000 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] Find highest point in the smallest state whose area equals step 4 's result . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : for each row in state table , find the corresponding rows in highlow table . Step 3 : find the state 's state name of the results of step 2 with smallest value of lowest point . Step 4 : find the maximum highest point of the results of step 1 whose mountain 's state name equals the results of step 3 . [question] what is the highest point in the smallest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the total number of states . [system description] find the number of rows in state table . [question] how many states are there [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the highest elevation in the highlow table . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest elevation . [question] what state has the highest elevation [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use publisher and drop book title which is equivalent to obedience . [system description] Step 1 : for each row in culture company table , find the corresponding rows in book club table . Step 2 : find the company name of the results of step 1 whose book title equals " Obedience " . [question] List all company names with a book published by Alyson . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher ( Alyson ) [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] In step 2 and 3 , you should use member id and in step 4 , party id instead of party name and party id respectively . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the member name of the results of step 1 whose party 's party id equals 4 . Step 3 : for each row in party table , find the corresponding rows in member table . Step 4 : find the member name of the results of step 3 whose party name equals 3 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Which member names are shared among members in the party with the id 3 and the party with the id 1 ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You should only show the first three colleges . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the number of rows of each value of college of the results of step 1 . Step 3 : find the college of the results of step 1 with largest value in the results of step 2 . [question] What are the three colleges from which the most players are from ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 4 , replace step 3 with step 2 . name equals H. V. Jagadish . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in publication keyword table and in keyword table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of rows of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the keywords , which have been contained by more than 10 papers of " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for cities having name of state as texas . [system description] find the number of rows in city table whose state name equals " dummy value " . [question] how many cities does texas have [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find population of city table whose capital state equals texas . [system description] find the number of rows in state table whose capital equals " dummy value " . [question] how many people live in the capital of texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 3 , you should use release year and director 's name instead of director 's name and actor 's name respectively . Also , use different title instead of director 's birth year . [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : only keep the results of step 1 whose actor 's name equals " dummy value " . Step 3 : find each value of director 's birth year the results of step 2 along with the number of the corresponding rows to each value . [question] What is the number of movies directed by " Woody Allen " per year ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , you should use tryout table and not the player table . [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of player position of the results of step 1 . Step 3 : find the player position of the results of step 1 with largest value in the results of step 2 . [question] Which position is most popular among players in the tryout ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to search for the city name which is equivalent to austin and its population is more than 150000 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the border info 's state name of the results of step 1 whose city name equals " dummy value " . [question] which states have a major city named austin [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use pilot id of pilot record instead of pilot name of pilot table . [system description] Step 1 : find the number of rows of each value of pilot name in pilot table . Step 2 : find the pilot name in pilot table whose corresponding value in step 1 is greater than 1 . [question] Show names of pilots that have more than one record . [schema] [T] aircraft [C] aircraft id [C] order year [C] manufacturer [C] model [C] fleet series [C] powertrain [C] fuel propulsion [T] pilot [C] pilot id [C] pilot name [C] rank [C] age [C] nationality [C] position [C] join year [C] team [T] pilot record [C] record id [C] pilot id [C] aircraft id [C] date
[feedback] You need to use country of artist . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and song 's country of the results of step 1 whose song name like " Aj ei akash " . [question] What is the name and country of origin of the artist who released a song that has " love " in its title ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Make sure area is equals to maximum area . [system description] find the population in state table with largest value of density . [question] what is the population of the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 3 , only show the first two results . [system description] Step 1 : for each row in department store chain table , find the corresponding rows in department stores table . Step 2 : find the number of rows of each value of department stores 's department store chain id of the results of step 1 . Step 3 : find the department store chain 's department store chain id of the results of step 1 with largest value in the results of step 2 . [question] Return the ids of the two department store chains with the most department stores . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 1 , you should use settlements table and in step 3 , claim id in claims table instead of claim id in claims table . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the date claim made and claim id in claims table whose corresponding value in step 1 is greater than 1 . Step 3 : find the number of rows of each value of claim id in claims table . Step 4 : find the date claim made and claim id in claims table whose corresponding value in step 3 is greater than 1 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [question] Find the claims that led to more than two settlements or have the maximum claim value . For each of them , return the date the claim was made and the id of the claim . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You need to search start date . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 with largest value of end date . [question] Which customer is associated with the latest policy ? [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] date assigned from is wrong , Take date assigned to in place of it . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff name and job title code of the results of step 1 with largest value of date assigned from . [question] What is the name and job title of the staff who was assigned the latest ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Replace location in school table with player in player table . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [question] Show the locations of schools that have more than 1 player . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
[feedback] In step 2 , make sure that class room of teachers is equivalent to 109 . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's last name of the results of step 1 whose list 's class room equals 111 . [question] Find the last names of teachers teaching in classroom 109 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Replace name with branch id , step 2 : register year greater than 2015 . [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : only keep the results of step 1 whose register year greater than 2016 . Step 3 : find each value of name the results of step 2 along with the number of the corresponding rows to each value . [question] Show all branch names with the number of members in each branch registered after 2015 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You need to search for the sex corresponding to male and female . [system description] find the average age in student table whose sex equals " M " and sex equals " F " . [question] What are the average ages for male and female students ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You need to find the manager 's name first , last name and id of player table in step 2 . [system description] Step 1 : for each row in manager award table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of award id of the results of step 1 . Step 3 : find the name first , manager award 's player id , name last of the results of step 1 with largest value in the results of step 2 . [question] Which manager won the most manager award ? Give me the manager 's first name , last name and id . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Manager ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , use sex and sport name of sports info table instead of sex and sex respectively . [system description] Step 1 : find the student id in student table whose sex equals " F " . Step 2 : find the student id in student table whose sex equals " F " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the ids of all male students who do not play football ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
[feedback] In step 2 , ensure that last name equals Bernhard and first name equals Carole . [system description] Step 1 : for each row in customers table , find the corresponding rows in addresses table . Step 2 : find the zip postcode of the results of step 1 whose first name equals " Jordy " . [question] What is the zip code of the customer Carole Bernhard ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Carole ) [C] last name ( Bernhard ) [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] Make sure to find distinct country for each invoice . [system description] find the billing country in invoice table . [question] Find the different billing countries for all invoices . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 1 , you should use staff table . [system description] Step 1 : find the number of rows of each value of city in addresses table . Step 2 : find the city and number of rows in addresses table with largest value in the results of step 1 . [question] In which city do the most employees live and how many of them live there ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use state name instead of border equals dummy value . [system description] find the border in border info table whose border equals " dummy value " . [question] which state border kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the number of rows for studio . [system description] find the title and studio in film table . [question] How films are produced by each studio ? [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
[feedback] You should use without descending in step 2 . [system description] Step 1 : find the number of rows of each value of flag in ship table . Step 2 : find the flag and number of rows in ship table ordered descending by the results of step 1 . [question] Group by ships by flag , and return number of ships that have each flag . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] You need to search for the country of artist whose song has highest rating . [system description] find the artist name and country in song table with largest value of rating . [question] What are the names and countries of origin for the artists who produced the top three highly rated songs . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , you should use industry instead of number of rows . [system description] Step 1 : find the number of rows of each value of industry in companies table . Step 2 : find the industry and number of rows in companies table ordered descending by the results of step 1 . [question] Sort all the industries in descending order of the count of companies in each industry [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] Replace school with founded . [system description] find the school in university table with largest value of enrollment . [question] When was the school with the largest enrollment founded ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] You need to calculate the number of checking accounts having each distinct name . [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find each value of checking 's customer id of the results of step 1 along with the number of the corresponding rows to each value . [question] What are the names of customers with accounts , and how many checking accounts do each of them have ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] Replace writer table with made by table , name with producer table , make sure producer 's name equals Shonda Rhimes . [system description] Step 1 : for each row in writer table , find the corresponding rows in tv series table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [question] What are all the tv series created by " Shonda Rhimes " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , you should count number of rivers that are in idaho . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " . [question] how many rivers does idaho have [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace employees table with roles table . [system description] find the role code in employees table . [question] What are all role codes ? [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] You need to calculate the total number of games played for which football is the sport name . [system description] find the number of rows in sports info table whose on scholarship equals " N " . [question] How many games are played for all football games by students on scholarship ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
[feedback] Make sure population is equals to largest value of population . [system description] find the capital in state table with largest value of population . [question] what is the capital of the state with the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , sports info table should be used instead of plays games table . [system description] Step 1 : find the student 's student id in student table . Step 2 : find the plays games 's student id in plays games table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the ids of all students who do n't play sports ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Make sure that name of city should be springfield . [system description] find the number of state name in city table whose city name equals " dummy value " . [question] how many states have a city called springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use river name in place of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [question] how many colorado rivers are there [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , make sure that end station name should be in trip table . [system description] Step 1 : find the name in station table whose city equals " Palo Alto " . Step 2 : find the name in station table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , list 's first name and last name should be EVELINA BROMLEY . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " OTHA " and teachers 's last name equals " MARROTTE " . [question] Which teachers teach the student named EVELINA BROMLEY ? Give me the first and last name of the teachers . [schema] [T] list [C] last name ( BROMLEY ) [C] first name (  EVELINA ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You should use name of state as wyoming and drop area equals dummy value . [system description] find the density in state table whose area equals " dummy value " . [question] what is the population density of wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you need to determine the area of state and in step 3 , you need to include the state name in step 2 . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the state 's state name in state table with largest value of density . Step 3 : find the river name of the results of step 1 whose lake 's state name equals the results of step 2 . [question] what rivers flow through the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find elevation of highlow table whose highest point greater than colorado value . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point in highlow table whose highest elevation equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose highest point greater than the results of step 2 . [question] which states have points higher than the highest point in colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use highest elevation in place of highest point . [system description] find the maximum highest point in highlow table . [question] how high are the highest points of all the states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use author , citation num and name of organization in place of jid , name of organization respectively . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the summation of jid of the results of step 1 whose name equals " dummy value " . [question] return me the total citations of the papers in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use the last name and change activity name to Canoeing or Kayaking . [system description] Step 1 : find the first name in faculty table . Step 2 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 3 : find the first name of the results of step 2 whose activity name equals " Crossword Puzzles " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Find the first names of professors who are not playing Canoeing or Kayaking . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] account balance equals 2000 is wrong , it should be account type equals saving in step 2 . [system description] Step 1 : find the customer name in customer table . Step 2 : find the customer name in customer table whose account balance equals 2000 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of customers who do not have saving accounts ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type ( saving ) [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] Replace title equals dummy value with title equals Making database systems usable . [system description] find the citation num in publication table whose title equals " dummy value " . [question] return me the citations of " Making database systems usable " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use contains instead of contains . [system description] find the name in artist table whose name like " Lulu Santos " . [question] Find the names of all artists that have " a " in their names . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 1 and 2 , you should use teacher table instead of addresses table . [system description] Step 1 : find the line 1 in addresses table . Step 2 : find the line 2 in addresses table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the line 1 of addresses shared by some students and some teachers ? [schema] [T] reference address types [C] address type code [C] address type description [T] reference detention type [C] detention type code [C] detention type description [T] reference incident type [C] incident type code [C] incident type description [T] addresses [C] address id [C] line 1 [C] line 2 [C] line 3 [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] students [C] student id [C] address id [C] first name [C] middle name [C] last name [C] cell mobile number [C] email address [C] date first rental [C] date left university [C] other student details [T] teachers [C] teacher id [C] address id [C] first name [C] middle name [C] last name [C] gender [C] cell mobile number [C] email address [C] other details [T] assessment notes [C] notes id [C] student id [C] teacher id [C] date of notes [C] text of notes [C] other details [T] behavior incident [C] incident id [C] incident type code [C] student id [C] date incident start [C] date incident end [C] incident summary [C] recommendations [C] other details [T] detention [C] detention id [C] detention type code [C] teacher id [C] datetime detention start [C] datetime detention end [C] detention summary [C] other details [T] student addresses [C] student id [C] address id [C] date address from [C] date address to [C] monthly rental [C] other details [T] students in detention [C] student id [C] detention id [C] incident id
[feedback] In step 2 , level should be 6 . [system description] Step 1 : for each row in purchase table , find the corresponding rows in member table . Step 2 : find the number of rows of the results of step 1 whose level equals 2 . [question] What is the total number of purchases for members with level 6 ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You need to search for the release date of the song . [system description] find the song name in song table with largest value of releasedate . [question] What is the name of the song that was released in the most recent year ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , you should use bandmate , performance and title instead of dummy value , title respectively . [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " . [question] What instrument did the musician with last name " Heilo " use in the song " Le Pop " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] Replace domain journal 's jid with journal 's name , number of rows of publication keyword table with number of different title . [system description] Step 1 : for each row in domain journal table , find the corresponding rows in journal table and in publication table and in publication keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of domain journal 's jid the results of step 2 . Step 4 : find the number of rows and domain journal 's jid the results of step 2 with largest value in the results of step 3 . [question] return me the journal that has the most number of papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should delete the number of jid and instead find the number of citation num . [system description] Step 1 : find the number of jid of each value of citation num in publication table . Step 2 : find the number of jid and title in publication table ordered descending by the results of step 1 . [question] return me the paper with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , I want table of rating . [system description] Step 1 : find the number of rows of each value of movie id in movie table . Step 2 : find the title in movie table with largest value in the results of step 1 . [question] What is the name of the movie that is rated by most of times ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , name should be Chris Jackson and in step 3 , name should be Elizabeth Thomas . [system description] Step 1 : find the title in movie table . Step 2 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 3 : find the title of the results of step 2 whose name equals " Elizabeth Thomas " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Find the titles of all movies not reviewed by Chris Jackson . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( Chris Jackson ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , find the first name and last name of customer and staff whose customer 's name is April and staff 's last name is Burns . [system description] Step 1 : for each row in customer table , find the corresponding rows in rental table and in staff table and in inventory table and in film table and in film actor table and in actor table . Step 2 : find the actor 's first name and staff 's last name of the results of step 1 whose customer 's first name equals " MARTHA " and staff 's last name equals " dummy value " . [question] Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name ( APRIL ) [C] last name ( BURNS ) [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , you need to use product id . [system description] Step 1 : for each row in product characteristics table , find the corresponding rows in products table and in reference colors table . Step 2 : find the number of rows of each value of product characteristics 's product id of the results of step 1 . Step 3 : find the products 's product id and color description of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the product ids and color descriptions for products with two or more characteristics ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace documents with expenses document id and reference budget codes document type code with budget type code and documents with expenses document id respectively . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table and in reference document types table . Step 2 : find the reference document types 's document type code of the results of step 1 whose reference budget codes 's budget type code equals " GV " . [question] What are the document ids for the budget type code 'SF ' ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( SF ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to search for the colleges having enrollment more than one college in the state of Florida . [system description] Step 1 : find the minimum enrollment in college table whose state equals " FL " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [question] Find names of colleges with enrollment greater than that of some ( at least one ) college in the FL state . [schema] [T] college [C] college name [C] state ( FL ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to find average resolution for songs having languages as bangla . [system description] find the average rating and resolution in song table whose song name equals " Shukno patar nupur pae " . [question] What is the average rating and resolution of all bangla songs ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
[feedback] In step 1 , you should use student table and gender instead of dorm table and gender respectively . [system description] Step 1 : for each row in dorm table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose gender equals " F " . [question] What are the total number of students who are living in a male dorm ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , you should use river name and traverse in place of state name and dummy value respectively . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [question] how many rivers in idaho [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use year which is equivalent to 1995 . [system description] find the type in film market estimation table whose year equals 1944 . [question] What are the types of film market estimations in year 1995 ? [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
[feedback] You need to determine the number of artists who have released in that format . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find each value of formats of the results of step 1 along with the number of the corresponding rows to each value . [question] For each file format , return the number of artists who released songs in that format . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to search for the customer id from the customer table in step 2 . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 with largest value of start date . [question] Find the customer who started a policy most recently . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You need to search for the movies which are directed by Asghar Farhadi and starred by Taraneh Alidoosti . [system description] find the number of rows in director table whose name equals " dummy value " and name equals " dummy value " . [question] How many movies are there that are directed by " Asghar Farhadi " and featuring " Taraneh Alidoosti " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should use party id of party events table instead of party name of party table . [system description] Step 1 : find the number of rows of each value of party name in party table . Step 2 : find the party name in party table whose corresponding value in step 1 is greater than or equals 1 . [question] Return the names of parties that have two or more events . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You need to search for the manufacturer id and num of shops . Also , use price in dollar in place of market rate in step 3 . [system description] Step 1 : for each row in furniture manufacte table , find the corresponding rows in furniture table and in manufacturer table . Step 2 : find the summation of market rate of each value of num of shops of the results of step 1 . Step 3 : find the furniture manufacte 's manufacturer id and number of rows of the results of step 1 with largest value in the results of step 2 . [question] Find the id and number of shops for the company that produces the most expensive furniture . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] You should use age less than 25 instead of sex equals M . [system description] find the number of rows in student table whose sex equals " F " and sex equals " M " . [question] How many female students ( sex is F ) whose age is below 25 ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] which states do ohio river flow through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace name with airline id , 1805 with 1000 . [system description] find the name in aircraft table whose distance greater than 1805 . [question] What are the ids of all aircrafts that can cover a distance of more than 1000 ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to search for the name of customer from savings table and also determine the total balance . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table . Step 2 : find each value of accounts 's customer id of the results of step 1 along with the summation of balance and name of the corresponding rows to each value . [question] What are the names of customers with accounts , and what are the total savings balances for each ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] You should use title of movie instead of second name which is equivalent to dummy value . [system description] find the name in director table whose name equals " dummy value " . [question] List " James Bond " directors [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use state name in place of city name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's population of the results of step 1 whose city 's state name equals " dummy value " . [question] what is the population of california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use address table in place of city table . [system description] Step 1 : find the number of rows of each value of city id in city table . Step 2 : find the city , city id , number of rows in city table with largest value in the results of step 1 . [question] What are the city name , id , and number of addresses corresponding to the city with the most addressed ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , use name in place of artist id . [system description] Step 1 : for each row in artist table , find the corresponding rows in album table . Step 2 : find the number of rows of each value of album 's artist id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [question] What is the name of the artist with the greatest number of albums ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You should use player name instead of enrollment . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name of the results of step 1 ordered ascending by enrollment . [question] What are the names of all students who tried out in alphabetical order ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Replace city with name of park , remove year and year equals 1926 . [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of city of the results of step 1 whose city equals " Miami " and year equals 1926 . [question] How many games were played in park " Columbia Park " in 1907 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( columbia ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Columbia ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Columbia , Park ) [C] name first ( Park ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name ( Columbia Park ) [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( columbia ) [C] name full [C] city ( Columbia ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park ( Columbia Park ) [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , you should use river 's traverse to replace area with illinois . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] what river flows through illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use registration date instead of president vote which is equivalent to 1004 . [system description] find the president vote in voting record table whose president vote equals 1004 . [question] What are the distinct president votes on 08/30/2015 ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date ( 08/30/2015 , 08/30/2013 ) [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] Also need to arrange by phone number along with email address . [system description] find the email address and phone number in customers table ordered ascending by email address . [question] Find the emails and phone numbers of all the customers , ordered by email address and phone number . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] You should use name of state and capital in place of capital and dummy value respectively . [system description] find the capital in state table whose capital equals " dummy value " . [question] what state is salem the capital of [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use friend of person friend . [system description] find the number of rows in person table whose name equals " Alice " . [question] How many friends does Dan have ? [schema] [T] person [C] name ( Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend ( Dan ) [C] year
[feedback] Replace position with stage position , vocals table with performance table , type with type , 2nd position with position . [system description] Step 1 : for each row in track lists table , find the corresponding rows in songs table and in vocals table and in band table . Step 2 : only keep the results of step 1 whose position equals " dummy value " . Step 3 : find the number of rows of each value of last name the results of step 2 . Step 4 : find the last name the results of step 2 with largest value in the results of step 3 . [question] What is the last name of the musicians who has played back position the most ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You should use max occupancy and decor in place of number of rows and bed type respectively . [system description] find the number of rows in rooms table whose bed type equals " Queen " . [question] What is the total number of people who could stay in the modern rooms in this inn ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You should replace active from date with order date . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table and in customer contact channels table . Step 2 : find the summation of order quantity of the results of step 1 whose active from date less than " 2017-12-06 15:25:33 " . [question] What is the total amount of products purchased before 2018-03-17 07:13:53 ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date ( 2018-03-17 07:13:53 ) [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 2 , add grade equals 1 and replace step 3 with step 1 in step 2 and 3 respectively . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 . Step 3 : for each row in teachers table , find the corresponding rows in list table . Step 4 : find the list 's first name and teachers 's last name of the results of step 3 whose teachers 's first name equals " JEROME " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [question] Find all first-grade students who are NOT taught by OTHA MOYER . Report their first and last names . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
[feedback] Replace end date with id . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the installation date and end date of the results of step 1 . [question] For each trip , return its ending station 's installation date . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , use city code instead of last name and Cat as an alternative to allergy type . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and last name of the results of step 1 whose allergy type equals " environmental " or allergy type equals " environmental " . [question] Find the different first names and cities of the students who have allergy to milk or cat . [schema] [T] allergy type [C] allergy ( Cat , Milk ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You should use population and name of state as substitute of summation of population and name of state respectively . [system description] find the summation of population in state table whose state name equals " dummy value " . [question] how many citizens in california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use river 's length instead of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with largest value of length . [question] what are the states through which the longest river runs [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use the order date that is greater than the order date for which status code equals Cancelled . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table . Step 2 : find the customers 's customer id of the results of step 1 whose order status code equals " New " . [question] Find the ids of all distinct customers who made order after some orders that were Cancelled . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Cancelled ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , you should use customer name instead of customer id . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of customers 's customer id of the results of step 1 . Step 3 : find the customer name of the results of step 1 with largest value in the results of step 2 . [question] Give me the name of the customer who ordered the most items in total . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Replace first name with stuid . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in student table . Step 2 : find the number of rows of each value of has allergy 's stuid of the results of step 1 . Step 3 : find the first name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What are the students ids of students who have more than one allergy ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 1 , Smith Hall should be the name of dorm and sex should be F . [system description] Step 1 : for each row in dorm table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose gender equals " X " and gender equals " X " . [question] How many female students live in Smith Hall ? [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Smith Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Replace student table with employee table , and make sure last name equals Heffington . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in professor table . Step 2 : find the department name and professor office of the results of step 1 whose student last name equals " Robertson " . [question] What is department name and office for the professor whose last name is Heffington ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Heffington ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to use state name in place of city name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's population of the results of step 1 whose city 's state name equals " dummy value " . [question] what are the population of california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use product characteristics table and color description in place of ref colors table and color description respectively . Also , use fast as the characteristic name . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name of the results of step 1 whose color description equals " purple " and product description equals " eius " . [question] Find the name of the products that have the color description " red " and have the characteristic name " fast " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( red ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( fast ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace player 's player with match season 's player . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 ordered ascending by college and college . [question] What are all the players who played in match season , sorted by college in ascending alphabetical order ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You need to find the first name of employee and class room of accounting department . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the professor office and class room of the results of step 1 whose department name equals " Economics/Finance " . [question] Find the first names of all professors in the Accounting department who is teaching some course and the class room . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 3 , replace accounts with customers . [system description] Step 1 : for each row in accounts table , find the corresponding rows in customers table . Step 2 : find the number of rows of each value of accounts 's customer id of the results of step 1 . Step 3 : find the accounts 's customer id , customer first name , customer last name of the results of step 1 with smallest value in the results of step 2 . [question] What is the customer id , first and last name with least number of accounts . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] In step 1 , you should use the population . [system description] Step 1 : find the number of rows of each value of state name in state table . Step 2 : find the state name in state table with largest value in the results of step 1 . [question] what state has the most people [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use the president vote instead of class senator vote which is equivalent to 1028 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the last name of the results of step 1 whose class senator vote equals 1028 . [question] What are the distinct last names of the students who have class president votes ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] address2 is wrong . It should be replaced by address equals 1031 Daugavpils Parkway . [system description] find the phone and postal code in address table whose address2 equals " None " . [question] What is the phone number and postal code of the address 1031 Daugavpils Parkway ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address ( 1031 Daugavpils Parkway ) [C] address2 [C] district ( Daugavpils ) [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city ( Daugavpils ) [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] account type is wrong . It should be replaced by customer name . [system description] find the customer name and account balance in customer table whose account type like " checking " . [question] What are the names and account balances of customers with the letter a in their names ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] Make sure to find distinct first name and last name . [system description] find the first name and last name in list table . [question] Report the first name and last name of all the students . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to arrange the dates in ascendant order . [system description] find the venue in match table with largest value of date . [question] List venues of all matches in the order of their dates starting from the most recent one . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] You need to use 105 as a substitute of 104 . [system description] find the grade in list table whose class room equals 104 . [question] Which grade is studying in room 105 ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 2 , you should use type of vocals . [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table and in instruments table . Step 2 : find the number of rows of each value of type of the results of step 1 . Step 3 : find the type of the results of step 1 with largest value in the results of step 2 . [question] What is the type of vocables that appears most frequently ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to determine the station 's name and its latitude . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the latitude and duration of the results of step 1 . [question] For each station , find its latitude and the minimum duration of trips that ended at the station . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You should use consider rate in place of consider rate . [system description] find the maximum support rate , minimum oppose rate , consider rate in candidate table . [question] Return the maximum support rate , minimum consider rate , and minimum oppose rate across all candidates ? [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] In step 2 , there should be largest value instead of smallest value . [system description] Step 1 : find the number of rows of each value of rank in captain table . Step 2 : find the rank in captain table with smallest value in the results of step 1 . [question] Return the rank for which there are the fewest captains . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Make sure they are from scholarship . [system description] find the last name in student table . [question] What are the last names for all scholarship students ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to use highest elevation instead of lowest elevation . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with smallest value of lowest point . [question] what is capital of the state with the lowest point [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use last name and Aaron instead of Katsuhiro and second first name respectively . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose first name equals " Katsuhiro " . [question] Find the titles of all the papers written by " Aaron Turon " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Turon ) [C] first name ( Aaron ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 1 , make sure that country equals US . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city and number of rows in airports table ordered descending by the results of step 1 . [question] How many airports are there per city in the US ordered from most to least ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( PER ) [C] source airport id [C] source airport ( PER ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Peru ) [C] country ( Peru ) [C] x [C] y [C] elevation [C] iata ( PER ) [C] icao [T] airlines [C] airline id [C] name [C] iata ( US ) [C] icao ( PER ) [C] call sign ( CITY ) [C] country ( Peru ) [C] active
[feedback] Replace publication 's jid with journal 's citation num . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [question] return me the total citations of all the papers in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use lesson status code in place of lesson status code . [system description] find the number of lesson status code in lessons table whose lesson status code equals " Completed " . [question] How many lessons have been cancelled ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code ( Cancelled ) [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] Make sure that state name in border info equals kentucky . [system description] find the state name in state table whose area like " dummy value " . [question] what states neighbor kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , replace has allergy table with allergy type table . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table . Step 2 : find the has allergy 's allergy and allergy type of the results of step 1 . [question] What are the allergies and their types ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 2 , you should also find the id of order . [system description] Step 1 : for each row in invoices table , find the corresponding rows in orders table . Step 2 : find the invoice date , invoice date , order details of the results of step 1 . [question] What are the invoice dates , order ids , and order details for all invoices ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 2 , you should count the number of different workshop Id that were submitted by the authors . [system description] Step 1 : for each row in submission table , find the corresponding rows in acceptance table and in workshop table . Step 2 : find each value of author of the results of step 1 along with the number of the corresponding rows to each value . [question] Show each author and the number of workshops they submitted to . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
[feedback] You should use population and state name equals california instead of dummy value and state name equals california respectively . [system description] find the number of rows in state table whose state name equals " dummy value " . [question] how many people are there in california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should count the number of rows of each value of statement id in statements table . [system description] Step 1 : for each row in statements table , find the corresponding rows in accounts table . Step 2 : find each value of accounts 's statement id of the results of step 1 along with the number of the corresponding rows to each value . [question] Show all statement id and the number of accounts for each statement . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You should subtract active from date instead of active to date . [system description] find the average active to date in customer contact channels table . [question] Compute the average active time span of contact channels . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to use Has Allergy 's sex and allergy to Milk or egg respectively instead of Sex and allergy to milk or egg . [system description] find the number of rows in student table whose sex equals " M " or sex equals " M " . [question] How many female students have milk or egg allergies ? [schema] [T] allergy type [C] allergy ( Milk , Eggs ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Eggs ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You should find the distinct president vote along with vice president vote and drop the number of president vote . [system description] find each value of vice president vote in voting record table along with the number of president vote of the corresponding rows to each value . [question] List all the distinct president votes and the vice president votes . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You should use line 1 number building instead of town city . [system description] find the state province county in addresses table whose town city equals " Lake Meaghan " . [question] Which state can address " 6862 Kaitlyn Knolls " possibly be in ? [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] You need to search for the name of team which is equivalent to Columbus crew and also search for the years played . [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : only keep the results of step 1 whose name equals " Miami Fusion " . Step 3 : find each value of player the results of step 2 along with the number of the corresponding rows to each value . [question] What are the players who played for Columbus Crew , and how many years did each play for ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name ( Columbus Crew ) [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 1 , replace id , medicine table with medicine id , medicine enzyme interaction table . [system description] Step 1 : find the number of rows of each value of id in medicine table . Step 2 : find the id , name , fda approved , number of rows in medicine table ordered descending by the results of step 1 . [question] What are the ids , names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] You need to use Age of voting record table and confirm that value of vice president 's vote is not equal to Null . [system description] find the first name and last name in student table whose age equals 17 and age equals 17 . [question] What are the first names and last names of the students who are 18 years old and have vice president votes . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to use yes card and player position should be striker in place of no card and player position respectively . [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find the player name of the results of step 1 whose player position equals " mid " . [question] What are the names of all students who successfully tried out for the position of striker ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( striker ) [C] decision
[feedback] position equals CTO should be mention . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Hopkins Student Enterprises " . [question] Find the first name and last name for the " CTO " of the club " Hopkins Student Enterprises " ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( CTO )
[feedback] You should use people 's number of row in place of num of audience . [system description] Step 1 : for each row in debate table , find the corresponding rows in debate people table and in people table . Step 2 : find the party of the results of step 1 with largest value of num of audience . [question] Show the party that has the most people . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
[feedback] You should not use dummy value as a border condition . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose border not equals " dummy value " . [question] which states does not border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 3 , you should use team id winner and drop div win . [system description] Step 1 : for each row in postseason table , find the corresponding rows in team table . Step 2 : only keep the results of step 1 whose team 's year equals 2008 . Step 3 : find the number of rows of each value of team id winner the results of step 2 . Step 4 : find the name and div win the results of step 2 with largest value in the results of step 3 . [question] Find the name and id of the team that won the most times in 2008 postseason . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to ensure that state name should be texas in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [question] what are the capitals of the states that border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the highest elevation where it is not equal to alaska . [system description] find the mountain name in mountain table whose mountain name not equals " dummy value " with largest value of mountain altitude . [question] which is the highest peak not in alaska [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use airlines name and id of destination airport . [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of destination airport of the results of step 1 whose name equals " Aerotaxi del Cabo " . [question] What is the number of different different airports that are destinations for American Airlines ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country [C] active
[feedback] Replace organization with writes , cite with title , year greater than 2005 with author 's name and cited equals dummy value respectively . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [question] return me the papers written by " H. V. Jagadish " and " Yunyao Li " on PVLDB after 2005 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , make sure that country equals to United States . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the number of rows and city in airports table ordered descending by the results of step 1 . [question] How many airports are there per city in the United States ? Order the cities by decreasing number of airports . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( PER ) [C] source airport id [C] source airport ( PER ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Peru ) [C] country ( United States , Peru ) [C] x [C] y [C] elevation [C] iata ( PER ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( PER ) [C] call sign ( UNITED , STATES ) [C] country ( United States , Peru ) [C] active
[feedback] You need to search for the rows count for all the students . [system description] find each value of student id in plays games table along with the number of the corresponding rows to each value . [question] Show all student IDs with the number of sports and total number of games played [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Replace actor 's name with movie 's title , remove actor 's name equals dummy value , actor 's name equals with director 's name equals James Bond . [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : find the director 's name of the results of step 1 whose actor 's name equals " dummy value " . [question] Who directed the movie " James Bond " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] you need to determine the number of rows that correspond to each section of course . [system description] find each value of course code in course table along with the number of the corresponding rows to each value . [question] How many sections does each course have ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Make sure that name of city should be springfield and not dummy value . [system description] find the number of state name in city table whose city name equals " dummy value " . [question] how many states have cities named springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace tryout 's college name of college table with player 's player name of player table . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the tryout 's college name of the results of step 1 with largest value of enrollment . [question] What are the names of all tryout participants who are from the largest college ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Find highest elevation in place of highest point in step 4 . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 3 : find the maximum highest point of the results of step 2 whose mountain 's state name equals " dummy value " . Step 4 : find the maximum highest point of the results of step 1 whose mountain 's state name equals " dummy value " and highest elevation equals the results of step 3 . [question] what is the highest point in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use date of becoming a customer and also include the first name as Carole and last name as Bernhard . [system description] find the date of birth in customers table whose first name equals " Ray " and last name equals " Tromp " . [question] When did customer with first name as Carole and last name as Bernhard became a customer ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Carole ) [C] last name ( Bernhard ) [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] Find number of rows of river table whose river name equals missouri . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [question] how many states does the missouri river run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the rating instead of name of restaurant . [system description] find the restaurant name and restaurant name in restaurant table with largest value of rating . [question] Which restaurants have highest rating ? List the restaurant name and its rating . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
[feedback] You need to search for total number of cities . [system description] find the number of rows in city table whose country name equals " dummy value " . [question] how many cities are there in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use the rooms table instead of reservations table . [system description] Step 1 : find the number of rows of each value of room in reservations table . Step 2 : find the room in reservations table with largest value in the results of step 1 . [question] Find the most popular room in the hotel . The most popular room is the room that had seen the largest number of reservations . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Replace in office with left office . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the minister and in office of the results of step 1 ordered ascending by in office . [question] Show the ministers and the time they took and left office , listed by the time they left office . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You need to use table of election in place of table of party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [question] For each party , return the name of the party and the number of delegates from that party . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] You need to use address 1031 Daugavpils Parkway instead of address 2 . [system description] find the phone and postal code in address table whose address2 equals " " . [question] Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway ' . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address ( 1031 Daugavpils Parkway ) [C] address2 [C] district ( Daugavpils ) [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city ( Daugavpils ) [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Replace eliminated by with days held . [system description] Step 1 : for each row in elimination table , find the corresponding rows in wrestler table . Step 2 : find the name and team of the results of step 1 ordered descending by eliminated by . [question] What are the names of wrestlers and their teams in elimination , ordered descending by days held ? [schema] [T] wrestler [C] wrestler id [C] name [C] reign [C] days held [C] location [C] event [T] elimination [C] elimination id [C] wrestler id [C] team [C] eliminated by [C] elimination move [C] time
[feedback] Replace customer table with employee table , postal code with postal code . [system description] find the city in customer table whose postal code equals 75009 . [question] What city does the employee who helps the customer with postal code 70174 live in ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You need to calculate the total number of customers having that particular card type . [system description] find each value of card type code in customers cards table along with the number of the corresponding rows to each value . [question] Show all card type codes and the number of customers holding cards in each type . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] In step 3 , class should be Third rate ship of the line . [system description] Step 1 : find the rank in captain table . Step 2 : for each row in ship table , find the corresponding rows in captain table . Step 3 : find the rank of the results of step 2 whose ship 's class equals " KR " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ranks of captains that have no captain that are in the Third-rate ship of the line class ? [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Third-rate ship of the line ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Make sure to find for distinct unit price of track . [system description] find the unit price in track table . [question] What are the distinct unit prices of all tracks ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 2 , instrument should be drums . [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the number of rows of the results of step 1 whose instrument equals " dummy value " . [question] How many songs use drums as an instrument ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to determine the ascending order from the hotel 's table . [system description] find the hotel id and star rating code in hotels table ordered descending by price range . [question] Find the id and star rating of each hotel and sort them in increasing order of price . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 1 , you should use route instead of train table . [system description] Step 1 : find the number of rows of each value of id in train table . Step 2 : find the name in train table with largest value in the results of step 1 . [question] Find the name of the train whose route runs through greatest number of stations . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
[feedback] Find number of rows of river table whose traverse is one of the border border info 's state name equals colorado . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [question] how many rivers run through the states bordering colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 3 , replace bank state with customer state and account type with number of loans . [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the number of rows of each value of account type of the results of step 1 . Step 3 : find the bank 's state , account type , credit score of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the states , account types , and credit scores for customers who have 0 loans ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 2 , player position should be mid and in step 3 , goalie should be player position . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " striker " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " goalie " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find the names of schools that have some players in the mid position but not in the goalie position . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie , mid ) [C] decision
[feedback] Make sure that name of city should be springfield . [system description] find the number of state name in city table whose city name equals " dummy value " . [question] how many states have a city named springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use department number instead of major which is equivalent to 600 . [system description] find the first name and last name in student table whose major equals 600 . [question] What are the first names and last names of the students that minor in the department with DNO 140 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to search for the type code of policy 's that are equivalent to Deputy . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 whose policy type code equals " Deputy " . [question] Which customers have an insurance policy with the type code " Deputy " ? Give me the customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code ( Deputy ) [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] In step 1 , you should use dorm table and also ensure that dorm name should be Smith Hall . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose sex equals " F " and sex equals " F " . [question] Find the number of female students ( with F sex ) living in Smith Hall [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Smith Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Find lowest elevation in step 2 whose state name equals mississippi river runs through states . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose river name equals " dummy value " . [question] what is the lowest point of all states through which the mississippi river runs through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search the name from employment table and make sure that people are working in that company . [system description] find the name and name in company table . [question] Show the names of companies and of employees . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
[feedback] Make sure to find number of rows whose complaint type code equals Product Failure . [system description] find each value of complaint status code in complaints table along with the number of the corresponding rows to each value . [question] Find the number of complaints with Product Failure type for each complaint status . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code ( Product Failure ) [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] In step 1 , you need to find the number of rows corresponding to each city . [system description] Step 1 : find the number of rows of each value of city in park table . Step 2 : find the city in park table whose corresponding value in step 1 is greater than or equals 1 . [question] Which cities have 2 to 4 parks ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to use the player whose attribute is dribbling . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name of the results of step 1 with largest value of dribbling . [question] What are the names of players who have the best dribbling ? [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
[feedback] You need to search for capital city which is salem and it should be state name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what states capital is salem [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace maximum training hours with minimum training hours . [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find each value of player position of the results of step 1 along with the maximum training hours of the corresponding rows to each value . [question] For each position , what is the minimum time students spent practicing ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You should use statement details which is equivalent to Private project , also find document name . [system description] Step 1 : for each row in statements table , find the corresponding rows in documents table . Step 2 : find the statement details and document name of the results of step 1 whose other details equals " None " . [question] What are the details for statements with the details 'Private Project ' , and what are the names of the corresponding documents ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details ( Private Project ) [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 1 , you should use medicine table and ALA synthase as name of enzyme and also use Aripiprazole as medicine . [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table . Step 2 : find the interaction type of the results of step 1 whose name equals " Coproporphyrinogen III oxidase " and name equals " Coproporphyrinogen III oxidase " . [question] What is the type of interaction for the enzyme named 'ALA synthase ' and the medicine named 'Aripiprazole ' ? [schema] [T] medicine [C] id [C] name ( Aripiprazole ) [C] trade name [C] fda approved [T] enzyme [C] id [C] name ( ALA synthase ) [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] You should use origin equals Los Angeles and not the destination equals Chicago . [system description] find the number of rows in flight table whose destination equals " Chicago " . [question] What are the numbers of all flights coming from Los Angeles ? [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 2 , order quantity should be equal to order quantity in order items table . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the customer name of the results of step 1 with largest value of order quantity . [question] What is the name of the customer that made the order with the largest quantity ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You should use days equals MTW , not course id equals 520.432 . [system description] find the course name in course table whose course id equals " 520.432 " . [question] What are the course names for courses taught on MTW ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days ( MTW ) [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Find number of states whose city name equals springfield . [system description] find the number of rows in city table whose city name equals " dummy value " or city name equals " dummy value " . [question] how many states have cities or towns named springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , state name should be used in place of border equals dummy value . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [question] how many states border kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the total number of papers . [system description] find the number of paper id in papers table . [question] How many papers are published in total ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 1 , you should use student table and gender in place of dorm table and gender respectively . [system description] Step 1 : for each row in dorm table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose gender equals " F " . [question] Find the total number of students living in the male dorm ( with gender M ) . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to use the player 's name only . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name of the results of step 1 with largest value of overall rating . [question] Who are the top 3 players in terms of overall rating ? [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
[feedback] You should use age and city code instead of last name and city code respectively . [system description] find the first name and last name in student table whose city code not equals " BAL " ordered ascending by last name . [question] What are the first and last names of all students who are not living in the city HKG and order the results by age ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HKG ) [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , bname should be morningside and not customer name . [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the city and bank 's state of the results of step 1 whose customer name like " Owen " . [question] What city and state is the bank with the name morningside in ? [schema] [T] bank [C] branch id [C] bname ( morningside ) [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to subtract from date of active to date and from date of active from . [system description] find the average active to date in customer contact channels table . [question] What is the average time span of contact channels in the database ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 2 , name should be H. V. Jagadish . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the number of oid of the results of step 1 whose cited equals " dummy value " . [question] return me the number of papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use customer details and policies table in place of customer id and customers table respectively . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer id in customers table with largest value in the results of step 1 . [question] Find the name of the customer that has been involved in the most policies . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You should use name of doctor and job in place of friend of person and name respectively . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the age of the results of step 1 whose person friend 's name equals " Zach " . [question] What is the age of the doctor named Zach ? [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] You need to calculate the total number of distinct customers . [system description] find the number of customer id in customers table . [question] Return the total number of distinct customers . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to search for the city from the manufacturer table and use revenue in place of revenue . [system description] find the name , revenue , revenue in manufacturers table with largest value of revenue . [question] Find the name and revenue of the company that earns the highest revenue in each city . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You need to search for the highest elevation . [system description] find the state name in state table with largest value of population . [question] which state has the most population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] you need to count distinct rows of department table . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of school code of the results of step 1 along with the number of the corresponding rows to each value . [question] How many departments are in each school ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use headquarter instead of founder and also ensure that Austin should be the headquarters . [system description] find the summation of revenue in manufacturers table whose founder equals " James " . [question] What is the sum of revenue from companies with headquarters in Austin ? [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 1 , you should use actor , actor table and title instead of title and dummy value respectively . [system description] Step 1 : for each row in cast table , find the corresponding rows in movie table . Step 2 : find the role of the results of step 1 whose title equals " dummy value " and title equals " dummy value " . [question] What are the major roles in the movie " Daddy Long Legs " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should use statement id and table of accounts . [system description] Step 1 : find the number of rows of each value of statement id in statements table . Step 2 : find the statement id and statement details in statements table with largest value in the results of step 1 . [question] Show the statement id and the statement detail for the statement with most number of accounts . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace latitude with city 's latitude . [system description] find the city and latitude in station table with largest value of latitude . [question] For each city , what is the highest latitude for its stations ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Make sure density equals minimum density . [system description] find the area in state table with smallest value of density . [question] what is the area of the state with the smallest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use country of airports instead of airlines 's country . [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table and in airlines table . Step 2 : only keep the results of step 1 whose airlines 's country equals " Liberia " . Step 3 : find the number of rows of each value of airports 's name the results of step 2 . Step 4 : find the airports 's name the results of step 2 with largest value in the results of step 3 . [question] What is the name of the airport with the most number of routes that start in China ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
[feedback] Replace smallest with largest . [system description] find the name , location , seating in track table with smallest value of year opened . [question] What is the name , location and seating for the most recently opened track ? [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
[feedback] You need to ensure that average points are more than 20 . [system description] Step 1 : find the average points of each value of position in player table . Step 2 : find the position in player table whose corresponding value in step 1 is greater than 1 . [question] What are the positions of players whose average number of points scored by that position is larger than 20 ? [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] In step 1 , you should use the population . [system description] Step 1 : find the number of rows of each value of state name in state table . Step 2 : find the state name in state table with largest value in the results of step 1 . [question] what is the most populous state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use elevation 's lowest point instead of state name of border info table . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose border info 's state name equals " dummy value " . [question] what is the lowest point of the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use genre is equivalent to pop and also name of song instead of name of genre . [system description] Step 1 : for each row in files table , find the corresponding rows in song table and in genre table . Step 2 : find the duration , file size , duration , formats of the results of step 1 whose genre name equals " tagore " ordered ascending by duration . [question] What is the duration , file size , and song format for every pop song , ordered by title alphabetically ? [schema] [T] genre [C] genre name ( pop ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( pop ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( pop ) [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use studio contains Universal in place of title contains Star Trek II : The Wrath of Khan . [system description] find the title and studio in film table whose title like " Star Trek II : The Wrath of Khan " . [question] Find the titles and studios of the films that are produced by some film studios that contained the word " Universal " . [schema] [T] film [C] film id [C] title [C] studio ( Universal ) [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
[feedback] In step 1 , use school id of player and not denomination . [system description] Step 1 : find the number of rows of each value of denomination in school table . Step 2 : find the denomination in school table with largest value in the results of step 1 . [question] What is the denomination of the school the most players belong to ? [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
[feedback] Make sure tryout decision equals yes . [system description] find the state and enrollment in college table . [question] What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to search for the number of cities . [system description] find the number of rows in city table whose country name equals " dummy value " . [question] how many cities are there in us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use languages other than bangla . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's country of the results of step 1 whose gender equals " Female " and song 's artist name equals " Topu " . [question] What is the country of origin of the artist who is female and produced a song in Bangla ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
[feedback] Replace number of citation num with summation of citation num in step 2 . [system description] Step 1 : find rows in publication table whose title equals " dummy value " . Step 2 : find each value of year the results of step 1 along with the number of citation num of the corresponding rows to each value . [question] return me the number of citations of " Making database systems usable " in each year . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , use department name of History and class table in place of professor office of professor table and condition in step 3 . [system description] Step 1 : find the professor office in professor table whose professor office equals " KLR 203E " . Step 2 : for each row in employee table , find the corresponding rows in professor table . Step 3 : find the employee first name of the results of step 2 whose professor office equals " KLR 409B " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the first names of all history professors who do not teach ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the highest elevation . [system description] find the state name in state table with largest value of population . [question] which state has the greatest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure rank equals Professor and building equals NEB . [system description] find the number of rows in faculty table whose building equals " Krieger " . [question] Count the number of Professors who have office in building NEB . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building ( NEB )
[feedback] In step 1 , you should use classification and release year in place of genre and dummy value respectively . Also , use title and sci fi instead of aka and genre respectively . [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the title aka of the results of step 1 whose genre equals " dummy value " and genre equals " dummy value " . [question] Find all Sci-Fi produced in year 2010 [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search for the population in place of country name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : only keep the results of step 1 whose city 's country name equals " dummy value " . Step 3 : find the number of rows of each value of state 's state name the results of step 2 . Step 4 : find the state 's state name the results of step 2 with largest value in the results of step 3 . [question] what is the most populous state in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use product description in place of product name which contains 'cinnam ' . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description of the results of step 1 whose product name like " cinnam " . [question] Find the category descriptions of the products whose descriptions include letter 't ' . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace club location with city code . [system description] find the club name in club table whose club location equals " AKW " . [question] Find the names of all the clubs that have at least a member from the city with city code " BAL " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( BAL ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You should use governor in place of lieutenant governor . [system description] find the number of lieutenant governor in party table . [question] How many distinct governors are there ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] You need to find the instructors first name and course code for the course description is not equivalent to intro to statistics . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course code of the results of step 1 whose course description equals " Intro . to Statistics " . [question] Find the first names of all instructors who have taught some course and the course code . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to calculate the unique number of game type . [system description] find the number of rows in video games table . [question] How many video game types exist ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Make sure that state 's area should be largest . [system description] find the state name in state table with largest value of density . [question] what state is the biggest [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find average latitude in trip table , not average longitude in station table . [system description] find the average longitude and average longitude in station table . [question] What is the average latitude and longitude of the starting points of all trips ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Replace latitude with maximum latitude . [system description] find the city in station table ordered descending by latitude . [question] List all the cities in a decreasing order of each city 's stations ' highest latitude . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You should use state province county equals Georgia . [system description] find the number of rows in addresses table whose state province county equals " WestVirginia " . [question] How many staff live in state Georgia ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county ( Georgia ) [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use employee id instead of document id . [system description] Step 1 : for each row in documents table , find the corresponding rows in document drafts table and in draft copies table and in circulation history table . Step 2 : find each value of circulation history 's document id of the results of step 1 along with the number of the corresponding rows to each value . [question] For each document , list the number of employees who have showed up in the circulation history of that document . List the document ids and number of employees . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] Make sure students are from team equals practiced . [system description] find the average training hours and maximum training hours in player table . [question] What is the average and maximum number of hours students who made the team practiced ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 1 , Alison is to be used as a substitute of name and Rosalind as a substitute of staff 's name . [system description] Step 1 : find the tourist attractions 's name in tourist attractions table whose tourist attractions 's name equals " jungle cruise " . Step 2 : for each row in staff table , find the corresponding rows in tourist attractions table . Step 3 : find the tourist attractions 's name of the results of step 2 whose staff 's name equals " Kaela " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Rosalind , Alison ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You need to use home game table , and name of team 's equals Boston Red Stockings instead of and year less or equals 1930 . [system description] Step 1 : for each row in team table , find the corresponding rows in batting postseason table and in player table and in team franchise table . Step 2 : find the number of rows of the results of step 1 whose franchise name equals " Altoona Mountain City " and team 's year less than or equals 1930 . [question] How many games in total did team Boston Red Stockings attend from 2000 to 2010 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Replace directed by table , copyright table and director 's name with movie table , title and The Truman Show respectively . [system description] Step 1 : for each row in writer table , find the corresponding rows in written by table and in copyright table and in directed by table and in director table . Step 2 : find the writer 's name of the results of step 1 whose director 's name equals " dummy value " . [question] Who is the writer of " The Truman Show " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should use year instead of day of death . [system description] find the name first and name last in player table whose death day equals 9 . [question] What are the first name and last name of the players whose death record is empty ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , river name should be missouri and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [question] how many states does the missouri run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use duration from files table . [system description] find the song id in song table with largest value of releasedate . [question] What is the id of the longest song ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , you should count the number of different traverses of river . [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [question] what river flows through the most states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use customer payments table instead of customers table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the first name and last name in customers table whose corresponding value in step 1 is greater than 1 . [question] List first name and last name of customers that have more than 2 payments . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to use faculty participates in table . [system description] find the number of rows in student table whose first name equals " Tracy " and last name equals " Lee " . [question] How many activities does Mark Giuliano participate in ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , you should use sex in place of gender . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find each value of gender of the results of step 1 along with the average age of the corresponding rows to each value . [question] What is the average and oldest age for each gender of student ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to provide statement details equivalent to Private project . [system description] Step 1 : for each row in statements table , find the corresponding rows in documents table . Step 2 : find the statement details and document name of the results of step 1 whose statement id equals 192 . [question] Show the statement detail and the corresponding document name for the statement with detail 'Private Project ' . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details ( Private Project ) [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 1 , use the first name of employee and class table in place of department code and professor high degree respectively . [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the professor 's department code and professor high degree of the results of step 1 whose department name equals " Computer Info . Systems " . [question] Find the first names and degree of all professors who are teaching some class in Computer Info . Systems department . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] what states does the ohio run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace name in aircraft table with airline id in flight table . [system description] find each value of name in aircraft table along with the number of the corresponding rows to each value . [question] Show aircraft names and number of flights for each aircraft . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to determine the number of activity Id of faculty participates in table . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [question] Show all the activity names and the number of faculty involved in each activity . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You should remove last part and add title equals Nameless , Painless and replace title equals with title equals . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the first name and last name of the results of step 1 whose title equals " Proving the Unique Fixed-Point Principle Correct : An Adventure with Category Theory " and last name equals " Blume " . [question] Find the first and last name of the author ( s ) who wrote the paper " Nameless , Painless " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Make sure product type code equals Hardware . [system description] find the product name in products table with largest value of product price . [question] Find the name of the most expensive hardware product . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Hardware ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use name instead of code of claim status . [system description] Step 1 : for each row in claim headers table , find the corresponding rows in claims processing stages table . Step 2 : find the claim status description of the results of step 1 whose claim status code equals " Disputed " . [question] Find the description of the claim status " Open " . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name ( Open ) [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You should use release year which is equivalent to 2013 . [system description] find the number of rows in movie table whose release year equals " dummy value " . [question] What is the number of movies produced in 2013 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Find area in place of number of rows whose highest elevation equals dummy value and state name equals new mexico . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " and highest elevation equals " dummy value " . [question] how big is new mexico [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] course code equals QM-261 instead of department code equals ACCT . [system description] find the course description and course credit in course table whose department code equals " ACCT " . [question] What is the course description and number of credits for QM-261 ? [schema] [T] class [C] class code [C] course code ( QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to calculate the number of distinct allergy names . [system description] find the number of rows in allergy type table . [question] How many allergy entries are there ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Find maximum and minimum training hours in place of summation of training hours , also find maximum training hours . [system description] find the summation of training hours , average training hours , average training hours in player table . [question] Find the max , average and min training hours of all players . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 2 , use course code in place of class section . [system description] Step 1 : for each row in class table , find the corresponding rows in course table . Step 2 : find the number of class section of the results of step 1 whose course 's course code equals " ACCT-212 " . [question] What is the number of different class sections offered in the course ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , use class code in place of course code . [system description] Step 1 : for each row in class table , find the corresponding rows in course table . Step 2 : find the course 's course code of the results of step 1 whose class room equals " KLR209 " . [question] List the codes of all courses that take place in room KLR209 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room ( KLR209 ) [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to calculate the population of boulder . [system description] find the number of rows in city table whose city name equals " dummy value " . [question] how many people live in boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace continent with continent and make sure it is located in North America . [system description] find the number of rows in organization table whose continent equals " dummy value " . [question] return me the number of organizations in Databases area located in " North America " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use name in place of number of name . [system description] find the name in accounts table ordered ascending by number of name . [question] What are the names of all the customers in alphabetical order ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] You need to calculate the lowest value of the letter grade . [system description] find each value of letter grade in grade conversion table along with the maximum grade point of the corresponding rows to each value . [question] Find the max and min grade point for all letter grade . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] In step 2 , you should use last name and make sure that activity name should be either Canoeing or Kayaking . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Canoeing " or activity name equals " Canoeing " . [question] Find the first names of the faculty members who are playing Canoeing or Kayaking . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 3 , replace greater than with less than . [system description] Step 1 : for each row in office locations table , find the corresponding rows in companies table . Step 2 : find the number of rows of each value of headquarters of the results of step 1 . Step 3 : find the headquarters of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Show the headquarters shared by more than two companies . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] You should find city name of city table in place of state 's country name in step 2 . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [question] how many cities are there in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use the student id instead of class senator vote and also delete the phrase for which class senator vote equals 1028 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the first name of the results of step 1 whose class senator vote equals 1028 . [question] What are the distinct first names of the students who have class president votes ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] Replace player with team . [system description] Step 1 : for each row in school table , find the corresponding rows in player table . Step 2 : find the player and location of the results of step 1 . [question] For each player , show the team and the location of school they belong to . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
[feedback] In step 3 , you should also find orders 's customer id . [system description] Step 1 : for each row in customers table , find the corresponding rows in orders table . Step 2 : find the number of rows of each value of orders 's customer id of the results of step 1 . Step 3 : find the customer last name , customer last name , phone number of the results of step 1 with largest value in the results of step 2 . [question] What is the customer last name , id and phone number with most number of orders ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace cited with name . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited equals " dummy value " . [question] return me the authors who have cited the papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 3 , you need to determine the player 's id whose all star game experience is highest . [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of all star 's player id of the results of step 1 . Step 3 : find the name first , name last , number of rows of the results of step 1 with largest value in the results of step 2 . [question] Which player has the most all star game experiences ? Give me the first name , last name and id of the player , as well as the number of times the player participated in all star game . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to ensure that hours played of plays games table should be 1000 or more . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the game name of the results of step 1 whose hours played greater than or equals 1337 . [question] Show all game names played by at least 1000 hours . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] In step 1 , committee should be replaced with party . [system description] Step 1 : find the committee in election table . Step 2 : find the party 's party in party table whose party id not one of the results of step 1 . [question] What are the names of parties that do not have delegates in election ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] In step 2 , use genre is of song table in place of minimum genre 's rating and in step 3 , find song 's rating instead of genre 's rating . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the minimum genre 's rating in genre table whose genre 's rating equals 9 . Step 3 : find the song name of the results of step 1 whose genre 's rating less than the results of step 2 . [question] What are the names of all songs that have a lower rating than some song of blues genre ? [schema] [T] genre [C] genre name ( blues ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( blues ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( blues ) [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to search the candidate having oppose rate and make sure that oppose rate should not be more than 0 . 45 . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the name and sex of the results of step 1 whose oppose rate equals 0.45 . [question] For each sex , what is the name and sex of the candidate with the oppose rate for their sex ? [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] You need to use class in place of type in step 2 . [system description] Step 1 : find the captain 's ship id in captain table . Step 2 : find the ship 's name and type in ship table whose ship 's ship id not one of the results of step 1 . [question] what are the names and classes of the ships that do not have any captain yet ? [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] You need to use country name in place of country name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] can you tell me the capital of texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that population should be more than 150000 and state name equals kansas . [system description] find the city name in city table whose state name equals " dummy value " . [question] show major cities in kansas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use number of loans equals 0 instead of number of loans less than 0 . [system description] find the state , account type , credit score in customer table whose number of loans less than 0 . [question] Find the state , account type , and credit score of the customer whose number of loan is 0 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 2 , you should use last name and first name instead of Nicolas and second first name respectively . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose first name equals " Nicolas " . [question] Which papers did the author " Olin Shivers " write ? Give me the paper titles . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Shivers ) [C] first name ( Olin ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use title of albums instead of label and also delete year less than dummy value . [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the songs 's title of the results of step 1 whose label equals " dummy value " and year less than " dummy value " . [question] What are the song titles on the album " A Kiss Before You Go : Live in Hamburg " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] Make sure area should be equals to minimum . [system description] find the density in state table with smallest value of density . [question] what is the population density of the smallest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace largest with smallest . [system description] find the employee first name and employee last name in employee table with largest value of employee date of birth . [question] What is the first and last name of the oldest employee ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to determine the room 's name for the specific room and its number of equivalent rows . [system description] find each value of room in reservations table along with the number of the corresponding rows to each value . [question] For each room , find its name and the number of times reservations were made for it . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You need to search name , friend , age of person from person friend table in step 3 . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the average age in person table . Step 3 : find the person 's name , friend , age of the results of step 1 whose age greater than the results of step 2 . [question] Whare the names , friends , and ages of all people who are older than the average age of a person ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Find trip 's zip code whose max temperature f greater than 60 . [system description] Step 1 : for each row in trip table , find the corresponding rows in weather table . Step 2 : find the average mean humidity of each value of id of the results of step 1 . Step 3 : find the id of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Give me ids for all the trip that took place in a zip code area with average mean temperature above 60 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to verify that the friend 's name should be Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose gender equals " male " and gender equals " male " . [question] What are all the friends of Alice who are female ? [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] In both the steps , you should use origin in place of both destination . [system description] Step 1 : find the number of rows of each value of destination in flight table . Step 2 : find the destination in flight table with largest value in the results of step 1 . [question] What place has the most flights coming from there ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 2 , use genre is equals pop and name of song instead of genre name equals nazrul . [system description] Step 1 : for each row in files table , find the corresponding rows in song table and in genre table . Step 2 : find the duration , file size , formats of the results of step 1 whose genre name equals " nazrul " ordered ascending by duration . [question] List the duration , file size and format of songs whose genre is pop , ordered by title ? [schema] [T] genre [C] genre name ( pop ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( pop ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( pop ) [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to list the first three rows of distance . [system description] find the name in aircraft table with smallest value of distance . [question] What are the aircrafts with top 3 shortest lengthes ? List their names . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to search for the area of lakes which are larger than 750 . [system description] Step 1 : for each row in state table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose state 's country name equals " dummy value " . [question] show me all the major lakes in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the states that are near to Kentucky . [system description] find the state name in state table whose area like " dummy value " . [question] what states are next to kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace department with class in step 1 , remove employee job code equals TECH in step 2 . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course description of the results of step 1 whose employee job code equals " TECH " . [question] What are the first names of all teachers who have taught a course and the corresponding descriptions ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace name with college . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table . Step 2 : find the number of rows of each value of college of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the names of all colleges that have two or more players ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You need to use max temperature in Fahrenheit . [system description] find each value of zip code in weather table along with the average mean humidity of the corresponding rows to each value . [question] For each zip code , return the average mean temperature of August there . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You should use rock as a substitute for drama . [system description] Step 1 : for each row in genre table , find the corresponding rows in track table . Step 2 : find the number of rows of the results of step 1 whose genre 's name equals " Drama " . [question] How many tracks belong to rock genre ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name ( Rock ) [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Belong ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 2 , you should use country equals Australia . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of the results of step 1 whose country equals " Saint Vincent and the Grenadines " . [question] How many cities are in Australia ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country ( Australia ) [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You should use population and name of state in place of summation and area respectively . [system description] find the summation of population in state table whose area equals " dummy value " . [question] how many people reside in california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the city code rows . [system description] find each value of city code in student table along with the average age of the corresponding rows to each value . [question] Find the number and average age of students living in each city . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You should use first name Janessa and last name Sawayn instead of second first name Titus and date of birth . [system description] find the date joined staff in staff table whose first name equals " Titus " and date of birth equals " 1994-05-17 05:32:11 " . [question] When did the staff member with first name as Janessa and last name as Sawayn join the company ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 3 , you should use the documents table . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the number of rows of each value of documents 's document type code of the results of step 1 . Step 3 : find the reference document types 's document type code of the results of step 1 whose corresponding value in step 2 is less than 1 . [question] What are the codes corresponding to document types for which there are less than 3 documents ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace region name in region table with region id in affected region table . [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the names of regions with two or more storms ? [schema] [T] storm [C] storm id [C] name ( Two ) [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You should use amount of loan in place of amount . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 ordered ascending by amount . [question] List the name of all different customers who have some loan sorted by their total loan amount . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You should use keyword and release year in place of release year and dummy value respectively . [system description] find the number of rows in movie table whose release year equals " dummy value " and release year equals " dummy value " . [question] How many movies about Iraq war were produced in 2015 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should use rental rate instead of rating . [system description] find the title and rental rate in film table with largest value of rating . [question] What are the title and rental rate of the film with the highest rental rate ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , you should use the film 's title and special features . [system description] Step 1 : for each row in film text table , find the corresponding rows in film table . Step 2 : find the film text 's title of the results of step 1 whose special features like " Trailers " . [question] Return the titles of films that include 'Deleted Scenes ' in their special feature section . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features ( Deleted Scenes ) [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , you should use student instead of faculty participates in . [system description] Step 1 : for each row in faculty participates in table , find the corresponding rows in faculty table . Step 2 : find the number of rows of each value of faculty participates in 's faculty id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 with largest value in the results of step 2 . [question] What are the first and last name of the faculty who has the most students ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] Replace start station name with longitude , also need to find station 's status . [system description] find each value of start station name in trip table along with the average duration of the corresponding rows to each value . [question] For each station , return its longitude and the average duration of trips that started from the station . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search for the first three rows of hotels . [system description] find the other hotel details and star rating code in hotels table with smallest value of price range . [question] Show the details and star ratings of the 3 least expensive hotels . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You need to search for the name of lake which is located in michigan . Also , the area of lake should be more than 750 . [system description] Step 1 : for each row in state table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose state 's state name equals " dummy value " . [question] name the major lakes in michigan [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use band table and last name should be Heilo and in step 2 , title should be Der Kapitan . [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the type of the results of step 1 whose title equals " dummy value " and title equals " dummy value " . [question] Which vocal type did the musician with last name " Heilo " played in the song with title " Der Kapitan " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] Replace largest with smallest . [system description] find the name in captain table with largest value of age . [question] Return the name of the youngest captain . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Replace flight number with origin . [system description] find the flight number , origin , destination in flight table ordered ascending by flight number . [question] Show flight number , origin , destination of all flights in the alphabetical order of the departure cities . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] what states does the ohio river run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the comptroller 's office . [system description] Step 1 : for each row in election table , find the corresponding rows in party table . Step 2 : find the party 's party of the results of step 1 whose district equals 4 and comptroller equals " John Faso " . [question] Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] You need to calculate the population of seattle and washington . [system description] find the number of rows in city table whose city name equals " dummy value " . [question] how many people live in seattle washington [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the name of city springfield . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [question] what states have cities named springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use length in place of highest elevation . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in highlow table . Step 2 : find the river name of the results of step 1 with largest value of highest point . [question] what is the longest river in the state with the highest point [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , replace date assigned from with date assigned from and job title code should be Clerical staff . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the minimum date assigned from in staff department assignments table . Step 3 : find the staff 's staff id of the results of step 1 whose date assigned from less than the results of step 2 . [question] Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code ( Clerical Staff ) [C] date assigned to
[feedback] You need to search for the country of artist having resolution higher than 900 . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and song 's country of the results of step 1 whose resolution greater than 320 . [question] Find the name and country of origin for all artists who have release at least one song of resolution above 900 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use product quantity instead of order id . [system description] Step 1 : for each row in order items table , find the corresponding rows in orders table . Step 2 : find each value of orders 's order id of the results of step 1 along with the summation of product quantity of the corresponding rows to each value . [question] Show order ids and the total quantity in each order . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace jid with citation num , name with VLDB in step 2 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [question] return me the total citations of all the papers in the VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace destination with origin , and also add destination equals Honolulu . [system description] find the average price in flight table whose destination equals " Chicago " and destination equals " Chicago " . [question] What is the average price for flights from Los Angeles to Honolulu . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles , Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You should use highest elevation instead of dummy value . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the border info 's state name of the results of step 1 whose highest elevation equals " dummy value " with largest value of highest point . [question] in which state does the highest point in usa exist [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use number deaths instead of storm id . [system description] Step 1 : find the number of rows of each value of storm id in storm table . Step 2 : find the name , dates active , number deaths in storm table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the names , dates active , and number of deaths for storms that had 1 or more death ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You should use date joined staff , first name equals Janessa and last name equals Sawayn instead of date of birth , last name equals Herzog . [system description] find the date of birth in staff table whose first name equals " Eulalia " and last name equals " Herzog " . [question] When did the staff member named Janessa Sawayn join the company ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to ensure that duration should be more than 3 minutes . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the maximum resolution and minimum resolution of the results of step 1 whose duration less than " 4:34 " . [question] What are the maximum and minimum resolution of songs whose duration is 3 minutes ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Replace year greater than 2009 with year greater than 2000 , and director equals James Cameron . [system description] find the title in movie table whose year greater than 2009 and director equals " Robert Wise " . [question] What is the name of the movie produced after 2000 and directed by James Cameron ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( James Cameron ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to search for name . [system description] find the id , city , country in airport table ordered ascending by name . [question] List the id , country , city and name of the airports ordered alphabetically by the name . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
[feedback] In step 2 , ensure that the allergy does not equals soy and that the stuid is not present in has allergy table . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and major of the results of step 1 whose allergy type not equals " animal " . [question] Find the first name and major of the students who are not allegry to soy . [schema] [T] allergy type [C] allergy ( Soy ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Soy ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 1 , you should use customer payments table instead of customers table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the first name and last name in customers table whose corresponding value in step 1 is greater than 1 . [question] What are the first and last names of all customers with more than 2 payments ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 2 , use name equals University of Pennsylvania and drop Tohoku University . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of papers 's paper id of the results of step 1 whose name equals " Tohoku University " . [question] Find the number of papers published by the institution " University of Pennsylvania " . [schema] [T] institution [C] institution id [C] name ( University of Pennsylvania ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to calculate the total number of station id from the station company table . [system description] find each value of company id in company table along with the number of the corresponding rows to each value . [question] Show the company name with the number of gas station . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] You should remove the phrase for which country name equals dummy value and it should return true . [system description] find the city name in city table whose country name equals " dummy value " . [question] give me the cities in usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace 1 with king and make sure bed Type equals King . [system description] find the number of rows in rooms table whose beds equals 1 . [question] How many rooms have a king bed ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You need to use river 's length in place of country name as a substitute for state 's country name in step 2 . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [question] what is the length of the longest river in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use the state name instead of city name . [system description] Step 1 : find rows in city table whose state name equals " dummy value " . Step 2 : find the number of rows of each value of city name the results of step 1 . Step 3 : find the city name the results of step 1 with largest value in the results of step 2 . [question] what is the most populous city in wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use customer name equals Tillman Ernser and also drop the last channel code of customer contact channels table . [system description] find the active from date in customer contact channels table whose active to date equals " 2018-03-23 01:30:52 " with largest value of active to date . [question] What is the " active to date " of the latest contact channel used by " Tillman Ernser " ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You should use duration instead of start date . [system description] find the id in trip table with smallest value of start date . [question] What is the id of the shortest trip ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Make sure state has highest density . [system description] find the state name in state table with largest value of density . [question] what state has the greatest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] you need to calculate the distinct number of rows in department table . [system description] find the number of rows in department table . [question] How many departments does the college has ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , replace class code of class table with school code of school table and professor office with student 's school code . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the number of rows of each value of class 's class code of the results of step 1 . Step 3 : find the professor office of the results of step 1 with largest value in the results of step 2 . [question] Which school has the smallest amount of professors ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use bandmate , performance and title instead of dummy value , title respectively . [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " . [question] What instrument did the musician with last name " Heilo " use in the song " Badlands " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , you should use person 's job instead of person 's friend . [system description] Step 1 : find the person 's name in person table . Step 2 : find the person friend 's name in person friend table whose friend equals " Zach " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of the people who have no friends who are students ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
[feedback] Find number of river name whose traverse equals ohio and length greater than 750 in step 2 . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " . [question] how many major rivers cross ohio [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , order status code should be Pending and not customer name . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table . Step 2 : find the customer name of the results of step 1 whose order status code equals " Cancelled " ordered ascending by customer name . [question] Return the distinct name of customers whose order status is Pending , in the order of customer id . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Pending ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You need to search for the name of river which is in proximity to state of Alabama . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [question] what rivers are in states that border alabama [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , use journal table and drop organization table . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of jid of the corresponding rows to each value . [question] return me the number of papers published in PVLDB in each year . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , use performance table in place of vocals table . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the number of rows of each value of last name of the results of step 1 . Step 3 : find the last name of the results of step 1 with largest value in the results of step 2 . [question] What is the last name of the musician that have produced the most songs ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , use document type description in place of document description . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the reference document types 's document type code , document type name , document description of the results of step 1 . [question] Show all document type codes , document type names , document type descriptions . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace state equals FL with state equals NY . [system description] find the number of rows in park table whose state equals " FL " . [question] How many parks are there in the state of NY ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , use school code and school address in place of class code and department address respectively . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of class 's class code of the results of step 1 along with the number of the corresponding rows to each value . [question] Count different addresses of each school . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use ages and city code instead of last name and city code respectively . [system description] find the first name and last name in student table whose city code not equals " DAL " ordered ascending by last name . [question] List the first and last name of students who are not living in the city with code HKG , and sorted the results by their ages . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HKG ) [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to use the same person as Dan 's friend in step 2 . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name and age of the results of step 1 whose friend equals " Alice " or friend equals " Dan " . [question] Find the name and age of the person who is a friend of Dan or Alice . [schema] [T] person [C] name ( Alice , Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice , Dan ) [C] year
[feedback] No need to find number cities . [system description] find the country and number cities in market table ordered descending by number cities . [question] What are the countries for each market ordered by decreasing number of cities ? [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
[feedback] You need to use the hours played from the table of plays and drop the number of rows . [system description] find each value of student id in student table along with the number of the corresponding rows to each value . [question] Show all student ids and the number of hours played . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to use greater than in place of greater than . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 whose rate greater than 156.25 . [question] What are the names of rooms whose reservation frequency exceeds 60 times ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Also find minimum product price ahead of maximum product price . [system description] find each value of product type code in products table along with the maximum product price of the corresponding rows to each value . [question] For each product type , return the maximum and minimum price . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use product category code in place of product name . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description and unit of measure of the results of step 1 whose product name equals " ginger " . [question] Return the description and unit of measurement for products in the 'Herbs ' category . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You should use state name instead of city name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what is the capital of the texas state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use student instead of faculty participates in . [system description] Step 1 : for each row in faculty participates in table , find the corresponding rows in faculty table . Step 2 : find the number of rows of each value of faculty participates in 's faculty id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 with largest value in the results of step 2 . [question] Give me the the first and last name of the faculty who advises the most students . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] Make sure area should be equals to minimum . [system description] find the capital in state table with smallest value of density . [question] what is the capital of the smallest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that state has lowest population density . [system description] find the state name in state table with smallest value of density . [question] which state has the least population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for name of state which borders on kentucky . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose border equals " dummy value " . [question] give me the states that border kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find number of authors who have cooperated with name equals H. V. Jagadish . [system description] find the number of rows in cite table whose cited equals " dummy value " . [question] return me the number of authors who have cooperated with " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace member name with party id , and find number of rows of each value of member id in member table . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the party name of the results of step 1 with largest value of member name . [question] Return the name of the party with the most members . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] In step 2 , you need to use Davis Steven as a middle name and also make sure that last name does not contain . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose first name equals " Bruce " . [question] What are the names of the clubs that have " Davis Steven " as a member ? [schema] [T] student [C] student id [C] last name ( Davis ) [C] first name ( Steven ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 2 , use organization name equals Labour party and from date contact to date . [system description] Step 1 : for each row in organization contact individuals table , find the corresponding rows in individuals table and in organizations table . Step 2 : find the individual last name of the results of step 1 whose organization name equals " Liberal Democrats " with largest value of date contact from . [question] What is the last name of the contact individual from the Labour party organization who was contacted most recently ? [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name ( Labour Party ) [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] You need to search for the city name having highest population . [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [question] what is the city in wyoming with the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [question] which state has the ohio river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use name of state in place of population . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the maximum population in state table . Step 3 : find the border of the results of step 1 whose population equals the results of step 2 . [question] what states border states that border the state with the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use savings table in place of checking table . [system description] Step 1 : find the summation of balance of each value of customer id in checking table . Step 2 : find the balance and summation of balance in checking table ordered ascending by the results of step 1 . [question] Find the total checking and saving balance of all accounts sorted by the total balance in ascending order . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] You need to search for the largest value of population . [system description] find the state name in state table with largest value of population . [question] what state is the largest in population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Remove whose state 's country name equals dummy value part . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " . [question] what are the major rivers in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use name of doctor and job in place of friend of person and person respectively . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the age of the results of step 1 whose person friend 's name equals " Bob " . [question] How old is the doctor named Zach ? [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] In step 2 , director should be equivalent to name of reviewer and also find title and number of stars . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find each value of name of the results of step 1 along with the number of the corresponding rows to each value . [question] For any rating where the name of reviewer is the same as the director of the movie , return the reviewer name , movie title , and number of stars . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , you should use title and omit citation num . [system description] Step 1 : find the number of jid of each value of citation num in publication table . Step 2 : find the citation num in publication table whose corresponding value in step 1 is greater than 1 . [question] return me the paper with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to determine the number of class room where each grade is taught and also the total number of students . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find each value of grade of the results of step 1 along with the number of the corresponding rows to each value . [question] For each grade , report the grade , the number of classrooms in which it is taught and the total number of students in the grade . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to calculate the total number of rows in artist table where gender is equivalent to Female . [system description] find the number of rows in artist table whose gender equals " Female " . [question] How many artists are male and how many are female ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female , Male ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to search for the name of state having lowest elevation . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain 's state name of the results of step 1 with smallest value of lowest point . [question] what is the name of the state with the lowest point [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for capital city from state of texas . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what are the capital city in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use table of movie and title and also delete the condition and director 's nationality equals dummy value . [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : find the actor 's name of the results of step 1 whose actor 's nationality equals " dummy value " and director 's nationality equals " dummy value " . [question] Find all actors from Canada who acted in " James Bond " movies [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace status with frequency . [system description] find the status in city table ordered ascending by status . [question] Return the different statuses of cities , ascending by frequency . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] In step 1 , you should use enrollment in place of minimum and also ensure that state should be FL . [system description] Step 1 : find the minimum enrollment in college table whose state equals " OK " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [question] Find names of all colleges whose enrollment is greater than that of all colleges in the FL state . [schema] [T] college [C] college name [C] state ( FL ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Replace media type 's name with track 's name . [system description] find the number of rows in media type table whose name equals " MPEG audio file " . [question] How many tracks are in the AAC audio file media type ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name ( AAC audio file ) [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] Replace team table with match season table , replace name with college of UCLA . [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : find the player of the results of step 1 whose name equals " Ryley Goldner " . [question] Who are the players from UCLA ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( UCLA ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 1 , you should use sports info table instead of student table . [system description] Step 1 : find the number of rows of each value of student id in student table . Step 2 : find the first name and last name in student table with largest value in the results of step 1 . [question] What is the first and last name of the student who played the most sports ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] In step 2 , you should use the name of the author in place of the name of the domain . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table and in domain author table and in domain table . Step 2 : find the number of rows of the results of step 1 whose domain 's name equals " dummy value " . [question] return me the number of the keywords related to " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the population of city whose name is boulder . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the summation of city 's population of the results of step 1 whose area equals " dummy value " . [question] how many citizens in boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to count total rows for each college name and sort them by the count . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find each value of tryout 's college name of the results of step 1 along with the number of the corresponding rows to each value . [question] How many students participated in tryouts for each college by descennding count ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Confirm how can I reach there whose how to get there equals bus . [system description] find the name in tourist attractions table . [question] Which tourist attractions can we get to by bus ? Tell me the names of the attractions . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You should use elevation of highlow and delaware instead of mountain and name of state respectively . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose mountain 's state name equals " dummy value " . [question] what is the highest point in delaware in meters [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace took office with party name . [system description] find the minister and took office in party table ordered descending by took office . [question] Who are the ministers and what parties do they belong to , listed descending by the times they took office ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] Replace first name with stuid . [system description] find the first name in student table with largest value of age . [question] Show the student id of the oldest student . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 2 , you should use first name MADLOCK and last name RAY of list table . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the number of rows of the results of step 1 whose teachers 's first name equals " ALFREDA " and list 's last name equals " NAKAHARA " . [question] Find the number of teachers who teach the student called MADLOCK RAY . [schema] [T] list [C] last name ( MADLOCK ) [C] first name (  RAY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 2 , use faculty participates in table . [system description] Step 1 : for each row in activity table , find the corresponding rows in participates in table . Step 2 : find the number of rows of each value of participates in 's activity id of the results of step 1 . Step 3 : find the activity name of the results of step 1 with largest value in the results of step 2 . [question] Which activity has the most faculty members participating in ? Find the activity name . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] Make sure the branch id is present in loan table . [system description] find the bname in bank table . [question] Find the name of bank branches that provided some loans . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 2 , you should use river 's traverse and in step 3 , only use state name . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the number of rows of each value of state name of the results of step 1 . Step 3 : find the state name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] what states contain at least one major rivers [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the team 's name whose Id should be similar to salary table . [system description] find each value of team id in salary table along with the maximum salary of the corresponding rows to each value . [question] What is the highest salary among each team ? List the team name , id and maximum salary . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You should find number of rows of each class room and grade . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find each value of grade of the results of step 1 along with the number of the corresponding rows to each value . [question] For each classroom report the grade that is taught in it . Report just the classroom number and the grade number . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You should use highest elevation instead of dummy value . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the border info 's state name of the results of step 1 whose highest elevation equals " dummy value " with largest value of highest point . [question] what state contains the highest point in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use country as Bangladesh . [system description] find the number of rows in artist table whose gender equals " Male " . [question] How many Bangladeshi artists are listed ? [schema] [T] genre [C] genre name [C] rating [C] most popular in ( Bangladesh ) [T] artist [C] artist name [C] country ( Bangladesh ) [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country ( Bangladesh ) [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You should use product suppliers table and total amount purchased in place of products table and product price respectively . [system description] find the product id in products table with largest value of product price . [question] What are the ids of the top three products that were purchased in the largest amount ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You need to use greater than or . [system description] Step 1 : find the number of rows of each value of college in match season table . Step 2 : find the college in match season table whose corresponding value in step 1 is greater than or equals 1 . [question] Show the name of colleges that have at least two players . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 2 , you should use country instead of city and in step 3 , find city where country equals United States . [system description] Step 1 : find rows in airports table whose city greater than " Salon " . Step 2 : find the number of rows of each value of city the results of step 1 . Step 3 : find the number of rows the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What is the number of cities in the United States with more than 3 airports ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( UNITED , STATES ) [C] country ( United States ) [C] active
[feedback] In step 3 , you should use actor id and drop film text . [system description] Step 1 : for each row in film text table , find the corresponding rows in film actor table and in actor table . Step 2 : find the number of rows of each value of film actor 's actor id of the results of step 1 . Step 3 : find the first name , last name , film text 's film id of the results of step 1 with largest value in the results of step 2 . [question] Which film actor ( actress ) starred the most films ? List his or her first name , last name and actor id . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 1 , use code of course , course table instead of department name of department table . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with largest value in the results of step 1 . [question] What is the name of the department that has the largest number of students enrolled ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the name of mountain . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest elevation . [question] what is the highest mountain in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find lowest point whose state name equals iowa instead of dummy value . [system description] find the minimum lowest point in highlow table whose state name equals " dummy value " . [question] what is the lowest point of iowa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , make sure that last name is also equivalent to BROMLEY and first name and last name both are in place of OTHA . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " OTHA " . [question] Find the first and last name of all the teachers that teach EVELINA BROMLEY . [schema] [T] list [C] last name ( BROMLEY ) [C] first name (  EVELINA ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to search for the name of manufacturers along with average price of products . [system description] find each value of name in products table along with the average price of the corresponding rows to each value . [question] What are the average prices of products , grouped by manufacturer name ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You need to use highest rating stars and movie 's year . [system description] find the maximum year and minimum year in movie table with largest value of year . [question] What is the maximum stars and year for the most recent movie ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to calculate the total number of stock from phone market table . [system description] find each value of name in phone table along with the number of the corresponding rows to each value . [question] For each phone , show its names and total number of stocks . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
[feedback] You need to use bname and summation of amount in place of customer name and 210 respectively . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 whose credit score less than 210 with largest value of amount . [question] What is the name of the bank branch that has lended the largest total amount in loans , specifically to customers with credit scores below 100 ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] Replace One with region name and make sure its region id is present in affected region table . [system description] find the name in storm table whose name equals " One " . [question] What are the names of the storms that affected Denmark ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name ( Denmark ) [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] Make sure that the departure airport and it 's correlated id are of unitedstates country and forget destination airport id . [system description] find the route id and destination airport id in routes table whose source airport equals " ST " . [question] What is the id of the routes whose source and destination airports are in the United States ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( UNITED , STATES ) [C] country ( United States ) [C] active
[feedback] In step 2 , you need to use city of London and year . Drop the address road and city of Oxford . [system description] Step 1 : for each row in branch table , find the corresponding rows in purchase table . Step 2 : find the summation of total pounds of the results of step 1 whose city equals " Oxford " and address road equals " Concord Road " . [question] What is the sum of total pounds of purchase in year 2018 for all branches in London ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city ( London ) [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 3 , replace greater than with less than . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the number of rows of each value of policy type code of the results of step 1 . Step 3 : find the policy type code of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Find all the policy types that are used by more than 2 customers . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You should use rating instead of first genre name . [system description] find the genre name in genre table ordered ascending by genre name and rating . [question] What are the names of all genres in alphabetical order , combined with its ratings ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Also find amount payment , date payment made for which payment method code equals Visa . [system description] find the payment id , date payment made , date payment made in payments table whose payment method code equals " Discover Card " . [question] Give me the payment Id , the date and the amount for all the payments processed with Visa . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code ( Visa ) [C] date payment made [C] amount payment
[feedback] You need to calculate the number of rows for Demon Kitty Rag . [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the type of the results of step 1 whose title equals " dummy value " . [question] What are the types of vocals used in the song " Demon Kitty Rag " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] Replace player 's player and capital Baghdad with position and capital Dublin respectively . [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose capital equals " Baghdad " . [question] Give the different positions of players who play for the country with the capital Dublin . [schema] [T] country [C] country id [C] country name [C] capital ( Dublin ) [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You should use city name and population in place of capital and state name respectively . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what are the major cities of the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure population is maximum . [system description] find the city name in city table with largest value of population . [question] what city has the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure to find unique card type code . [system description] find the card type code in customers cards table . [question] Show all card type codes . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] You need to search for the highest point in the state having capital des moines . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose capital equals " dummy value " and capital equals " dummy value " . [question] what is the highest point in the state with the capital des moines [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use form id of party forms instead of form name of forms table . [system description] Step 1 : find the number of rows of each value of form name in forms table . Step 2 : find the form name in forms table with largest value in the results of step 1 . [question] What is the name of the party form that is most common ? [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] You need to determine the number of rows that correspond to each value of race id from the race table . [system description] find each value of name in track table along with the number of the corresponding rows to each value . [question] Show the name of track and the number of races in each track . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
[feedback] You should use equals instead of contains . [system description] find the number of rows in team franchise table whose active like " N " . [question] Find the number of team franchises that are active ( have ' Y ' as " active " information ) . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , you should count total course credit and change the course code with course code . [system description] Step 1 : find rows in course table whose course code equals " ACCT-211 " . Step 2 : find each value of course description the results of step 1 along with the summation of course credit of the corresponding rows to each value . [question] How many credits does course CIS-220 have , and what its description ? [schema] [T] class [C] class code [C] course code ( CIS-220 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , make sure that event name equals Annual Meeting . [system description] Step 1 : for each row in party events table , find the corresponding rows in party table and in region table . Step 2 : find the number of rows of the results of step 1 whose region name equals " United Kingdom " . [question] Count the number of Annual Meeting events that took place in the region of the United Kingdom . [schema] [T] region [C] region id [C] region name ( United Kingdom ) [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] In step 2 , you should determine the number of rows for each document type code in documents table . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find each value of documents 's document type code of the results of step 1 along with the number of the corresponding rows to each value . [question] How many documents are there of each type ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 1 , you should include publication table , journal table , cid , and make sure that journal 's name should be PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the number of organization 's oid of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [question] return me the number of papers in PVLDB in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the states . [system description] Step 1 : find the average enrollment in college table . Step 2 : find the number of rows in college table whose enrollment less than the results of step 1 . [question] How many states have smaller colleges than average ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Replace Dan with Leonie . [system description] Step 1 : for each row in employee table , find the corresponding rows in customer table . Step 2 : find the customer 's first name and employee 's last name of the results of step 1 whose customer 's first name equals " Dan " . [question] What is the first name and last name employee helps the customer with first name Leonie ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name ( Leonie ) [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You need to use Credit as the card type code in Customers Cards 's table.Also include the last name of customer as well as first name and last name . [system description] find the number of rows in customers table whose customer first name equals " Armani " and customer last name equals " Erdman " . [question] Count the number of credit cards that the customer with first name Blanche and last name Huels has . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name ( Blanche ) [C] customer last name ( Huels ) [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code ( Credit ) [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] Find lowest elevation of highlow table whose state name equals pennsylvania instead of mountain 's state name equals dummy value . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum highest elevation of the results of step 1 whose mountain 's state name equals " dummy value " . [question] what is the lowest elevation in pennsylvania [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the total number of label . [system description] find the label in albums table . [question] What are the unique labels for the albums ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to search for the author name having citation number more than 5000 for the area of Databases . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited greater than " dummy value " and cited less than " dummy value " . [question] return me the author in the " University of Michigan " in Databases area whose papers have more than 5000 total citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 and 4 , you should use code of budget type from documents table . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the document date of the results of step 1 whose reference budget codes 's budget type code equals " ORG " . Step 3 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 4 : find the document date of the results of step 3 whose reference budget codes 's budget type code equals " SF " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Give the dates of creation for documents that have both budget type codes 'GV ' and 'SF ' . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF , GV ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( GV , SF ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace homepage with name of domain conference table , and name with VLDB . [system description] find the homepage in conference table whose name equals " dummy value " . [question] return me the area of the VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use price range of hotels instead of code of star rating . [system description] Step 1 : for each row in hotels table , find the corresponding rows in ref hotel star ratings table . Step 2 : find each value of ref hotel star ratings 's star rating code of the results of step 1 along with the average hotels 's star rating code of the corresponding rows to each value . [question] Show the average price of hotels for each star rating code . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You need to calculate the population of alaska . [system description] find the number of rows in city table whose state name equals " dummy value " . [question] how large is the largest city in alaska [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace class room equals 104 with class room equals 107 . [system description] find the first name in list table whose class room equals 104 . [question] What are the first names of students studying in room 107 ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Also find the name of director along with title and arrange them in ascending order by director . [system description] find the director and title in movie table ordered ascending by title and title . [question] For all directors who directed more than one movie , return the titles of all movies directed by them , along with the director name . Sort by director name , then movie title . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should use total horses in place of summation of total horses . [system description] find the summation of total horses in farm table ordered ascending by total horses . [question] List the total number of horses on farms in ascending order . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] You should use title equals Juno and release year equals 2007 . [system description] find the budget in movie table whose title equals " dummy value " and release year equals " dummy value " . [question] What was the budget of the movie Juno from 2007 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should use the first name Marina and the last name Kohler . [system description] find the customer status code , phone number , email address in customers table whose last name equals " Terry " or first name equals " Millie " . [question] What is the status code , phone number , and email address of the customer whose last name is Kohler or whose first name is Marina ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Marina ) [C] last name ( Kohler ) [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 , you should use department name of department and drop professor office equals DRE 102 . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee last name and professor office of the results of step 1 whose professor office equals " DRE 102 " . [question] What are the last name and office of all history professors ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , I want bikes that are more than 12 in stock . [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the id and name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What are the different ids and names of the stations that have had more than 12 bikes available ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search for the most recent movie . [system description] find the title in movie table with largest value of year . [question] What is the name of the most recent movie ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , you should use supplier phone in place of supplier name . [system description] Step 1 : find the customer phone in customers table . Step 2 : find the supplier name in suppliers table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] What are the phone numbers of all customers and suppliers . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , you should calculate the total number of hours played . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find each value of plays games 's game id of the results of step 1 along with the number of the corresponding rows to each value . [question] Show all game ids and the number of hours played . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] In step 2 , you need to use amount in place of amount . [system description] Step 1 : for each row in payment table , find the corresponding rows in customer table . Step 2 : find the first name , last name , customer 's customer id of the results of step 1 with smallest value of amount . [question] What is the full name and id of the customer who has the lowest total amount of payment ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Replace title with first name of customer table , and first name equals Leonie . [system description] find the title and last name in employee table whose first name equals " Andrew " . [question] Find the full names of employees who help customers with the first name Leonie . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name ( Leonie ) [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 1 , replace name in person table with friend of person friend . [system description] Step 1 : find the average age of each value of name in person table . Step 2 : find the name and average age in person table with largest value in the results of step 1 . [question] What is the name of the person who has the oldest average age for their friends , and what is that average age ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Colorado equals to state province county instead of country equals USA . [system description] Step 1 : for each row in addresses table , find the corresponding rows in customer addresses table and in customers table . Step 2 : find the customer name of the results of step 1 whose country equals " USA " . [question] Find the name of customers who are living in Colorado ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county ( Colorado ) [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Make sure that name MADLOCK RAY must be from list table . [system description] find the number of rows in teachers table whose first name equals " LEIA " and last name equals " KRIENER " . [question] How many teachers does the student named MADLOCK RAY have ? [schema] [T] list [C] last name ( MADLOCK ) [C] first name (  RAY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 2 , make sure tryout 's decision for all the players is yes . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name and college 's college name of the results of step 1 . [question] What are the names of all the players who received a yes during tryouts , and also what are the names of their colleges ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
[feedback] Replace team franchise with postseason 's year equals 2009 and team 's year equals 1923 . [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table and in team franchise table . Step 2 : find the number of wins of the results of step 1 whose franchise name equals " Cleveland Infants " and team 's year equals 1923 . [question] Count the number of times the team " Boston Red Stockings " lost in 2009 postseason . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red , Count ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Make sure that actor 's nationality equals China and movie 's title equals Rush Hour 3 . [system description] find the number of rows in actor table whose nationality equals " dummy value " and nationality equals " dummy value " . [question] How many actors from China have acted in " Rush Hour 3 " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to ensure that enrollment should be more than 18000 and arrange them in ascending order by college name . [system description] find the college name in college table ordered descending by enrollment . [question] What is the name of every college in alphabetical order that has more than 18000 students enrolled ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 2 , you should use the documents table . [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 with smallest value in the results of step 2 . [question] What is the id of the project with least number of documents ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to calculate the population of a city whose capital city is texas . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what is the size of the capital of texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , use document name and document name in place of document type name and document description respectively . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the documents 's document type code , document type name , document description of the results of step 1 whose document name equals " Review on UK files " or document description equals " None " . [question] List the document type code , document name , and document description for the document with name 'Noel CV ' or name 'King Book ' . [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( Book , CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name ( Noel CV , King Book ) [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 2 , you should use traverse and drop state name . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] what rivers are there in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , make sure name equals H. V. Jagadish and in step 1 , cite equals dummy value . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited equals " dummy value " . [question] return me the authors who have cooperated with " H. V. Jagadish " after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use city equivalent to Mountain View and drop name of end station equivalent to 5th at Howard . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the number of rows of the results of step 1 whose city equals " Palo Alto " and end station name equals " 5th at Howard " . [question] How many trips started from Mountain View city and ended at Palo Alto city ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View , Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to calculate the number of different Id of customer . [system description] find each value of card type code in customers cards table along with the number of the corresponding rows to each value . [question] What are the different card type codes , and how many different customers hold each type ? [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] You need to search for the city name whose population is more than 150000 and state name is kansas . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's state name equals " dummy value " . [question] what are the major cities in the state of kansas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 3 , use staff id and drop payment id . [system description] Step 1 : for each row in payment table , find the corresponding rows in staff table . Step 2 : find the number of rows of each value of payment 's staff id of the results of step 1 . Step 3 : find the first name , last name , payment id of the results of step 1 with smallest value in the results of step 2 . [question] Which staff handled least number of payments ? List the full name and the id . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to search for total number of states . [system description] find the number of rows in state table whose country name equals " dummy value " . [question] how many states are there in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Also find minimum ticket price in exhibition table whose year less than 2009 . [system description] find the average ticket price , maximum ticket price , maximum ticket price , maximum ticket price in exhibition table whose year less than 2006 . [question] Show the average , minimum , and maximum ticket prices for exhibitions for all years before 2009 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] In step 1 , you should count the number of traverses . [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [question] which river runs through most states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace college table with tryout table . [system description] find the number of college name in college table . [question] How many different colleges were represented at tryouts ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Replace genre with keyword , and genre with keyword table . [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose genre equals " dummy value " . [question] Find all movies about nuclear weapons [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should use medicine table and ALA synthase as an substitute of enzyme table and Ferrochelatase respectively . [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table . Step 2 : find the interaction type of the results of step 1 whose name equals " Ferrochelatase " and name equals " ALA dehydratase " . [question] What is the interaction type of the enzyme named 'ALA synthase ' and the medicine named 'Aripiprazole ' ? [schema] [T] medicine [C] id [C] name ( Aripiprazole ) [C] trade name [C] fda approved [T] enzyme [C] id [C] name ( ALA synthase ) [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] Replace hometown with city . Membership amount should be greater than or equal to 100 . [system description] Step 1 : for each row in branch table , find the corresponding rows in purchase table and in member table . Step 2 : find the hometown of the results of step 1 whose membership amount greater than 7 . [question] What are the different cities that have more than 100 memberships ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] Substitute languages equals bangla with genre is equals modern . [system description] find the song name in song table whose languages equals " english " or languages equals " bangla " . [question] Find the names of songs whose genre is modern or language is English . [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] In step 1 , there should be membership amount in place of name . [system description] Step 1 : find the number of rows of each value of name in branch table . Step 2 : find the name in branch table with largest value in the results of step 1 . [question] What are names for top three branches with most number of membership ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You should use enrolled in 's student id instead of student 's student id . [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table . Step 2 : find the number of rows of the results of step 1 whose grade equals " C- " . [question] How many students have had at least one " B " grade ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Make sure state has highest density . [system description] find the state name in state table with largest value of density . [question] which state has the greatest density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace department code with course code for both , professor with class in both . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and employee date of birth of the results of step 1 whose department code equals " PSYCH " . [question] What are the first names and birthdates of the professors in charge of ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use state name instead of border equals dummy value . [system description] find the border in border info table whose border equals " dummy value " . [question] states bordering kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use savings balance instead of checking balance . Show only the first 3 accounts . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name and savings 's balance of the results of step 1 with largest value of checking 's balance . [question] Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] You should use bname equals morningside instead of city equals Austin . [system description] find the city and state in bank table whose city equals " Austin " . [question] Find the city and state of the bank branch named morningside . [schema] [T] bank [C] branch id [C] bname ( morningside ) [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] birth city equals Austin and gender equals female . [system description] find the name in actor table whose gender equals " dummy value " and name equals " dummy value " . [question] Find all the female actors from Austin [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should use account type equals saving . [system description] Step 1 : find the customer name in customer table whose account balance equals 800000 . Step 2 : find the customer name in customer table whose account type equals " checking " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of customers who have both savings and checking accounts ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type ( checking , saving ) [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to use and last name equals Barker . and second year less than or equals 2013 is wrong . [system description] Step 1 : for each row in salary table , find the corresponding rows in player table . Step 2 : find the summation of salary of the results of step 1 whose name first equals " Hanser " and year less than or equals 2013 . [question] Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Leon ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Leon ) [C] name first ( Len ) [C] name last ( Barker ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you need to use the word greater than or . [system description] Step 1 : find the average gross in dollar of each value of studio in film table . Step 2 : find the studio in film table whose corresponding value in step 1 is greater than 1 . [question] List the studios which average gross is above 4500000 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
[feedback] In step 2 , you should use tourist details and visit details in place of visit details and visit details respectively . [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table . Step 2 : find the visit date and tourist details of the results of step 1 whose visit details equals " " . [question] Find the visit date and details of the tourist whose detail is 'Vincent ' [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Replace dummy value with first name . [system description] Step 1 : for each row in band table , find the corresponding rows in performance table . Step 2 : find the stage position of the results of step 1 whose first name equals " dummy value " . [question] Find all the stage positions of the musicians with first name " Solveig " [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to use name of airlines 's in place of name of Aerolineas Uruguayas . [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of destination airport of the results of step 1 whose name equals " Aerolineas Uruguayas " . [question] Find the number of different airports which are the destinations of the American Airlines . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country [C] active
[feedback] In step 2 , you should use rating stars instead of title . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the average rating date of each value of title of the results of step 1 . Step 3 : find the title and average rating date of the results of step 1 with largest value in the results of step 2 . [question] For the oldest movie listed , what is its average rating and title ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to use department name instead of department code . [system description] find the number of rows in professor table whose department code equals " ART " . [question] Find the number of professors in accounting department . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use sports info table instead of plays games table . [system description] find the number of student id in plays games table . [question] How many students play sports ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You should use title , publication table and PVLDB in place of name , organization and 2nd name respectively . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the organization 's name of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [question] return me the papers written by " H. V. Jagadish " and " Yunyao Li " on PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to determine the average max speed and maximum damage millions in usd . [system description] find the average max speed and maximum max speed in storm table whose max speed greater than 972 . [question] What is the average and maximum damage in millions for storms that had a max speed over 1000 ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] Make sure that city has minimum population . [system description] find the city name in city table with smallest value of population . [question] what city has the least population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure gender equals male . [system description] find the name in person table whose age not equals 35 with largest value of age . [question] Who is the youngest male ? [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Also find minimum transaction amount and maximum transaction amount . [system description] find the average transaction amount , summation of transaction amount , summation of transaction amount , summation of transaction amount in financial transactions table . [question] Return the average , minimum , maximum , and total transaction amounts . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 1 , replace department name in department table with department code in student table . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name and department address in department table with largest value in the results of step 1 . [question] What is the name and address of the department with the most students ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , use publication of domain and name of domain author . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of jid of each value of keyword the results of step 2 . Step 4 : find the number of jid and keyword the results of step 2 ordered descending by the results of step 3 . [question] return me the paper in Databases area with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure to find number of room id of reservations table . [system description] find each value of room id in rooms table along with the number of the corresponding rows to each value . [question] Return the name and number of reservations made for each of the rooms . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You should use the policy type code equivalent to Deputy or uniformed in step 2 . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 whose policy type code equals " Normal " or policy type code equals " Uniformed " . [question] Find the names of customers who either have an deputy policy or uniformed policy . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code ( Uniformed , Deputy ) [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You should use name instead of code of claim status . [system description] Step 1 : for each row in claim headers table , find the corresponding rows in claims processing stages table . Step 2 : find the claim status description of the results of step 1 whose claim status code equals " In Progress " . [question] What is the description of the claim status " Open " ? [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name ( Open ) [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You need to determine the number of rows for each artist from the exhibition table . [system description] find each value of name in artist table along with the number of the corresponding rows to each value . [question] Show all artist names and the number of exhibitions for each artist . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] In step 1 , I want trip table and start station name . [system description] Step 1 : find the number of rows of each value of id in station table . Step 2 : find the id and name in station table whose corresponding value in step 1 is greater than or equals 1 . [question] Find the ids and names of stations from which at least 200 trips started . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You should use first name Ludie instead of first name Eulalia . [system description] find the number of rows in staff table whose first name equals " Eulalia " . [question] How many staff have the first name Ludie ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Ludie ) [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] Replace 1892 with 1850 , and find corresponding rows to each value of affiliation . [system description] Step 1 : find rows in university table whose founded greater than 1892 . Step 2 : find each value of affiliation the results of step 1 along with the summation of enrollment of the corresponding rows to each value . [question] What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] Make sure that name of city should be seattle and washington state . [system description] find the population in city table whose city name equals " dummy value " . [question] what is the population of seattle washington [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use population and name of state in place of summation and area respectively . [system description] find the summation of population in state table whose area equals " dummy value " . [question] how many people stay in california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , replace class code of class table with school code of school table . In step 3 , replace professor office with school code . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the number of rows of each value of class 's class code of the results of step 1 . Step 3 : find the professor office of the results of step 1 with smallest value in the results of step 2 . [question] Which school has the fewest professors ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Remove for which country name equals dummy value in step 1 , replace capital with country name in step 2 . [system description] Step 1 : find rows in state table whose country name equals " dummy value " . Step 2 : find the number of rows of each value of capital the results of step 1 . Step 3 : find the capital the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] name the 50 capitals in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Also find student last name , make sure enroll grade equals A or C . [system description] find the student first name in student table whose student gpa equals 3.09 or student gpa equals 3.87 . [question] What are the names of all students taking a course who received an A or C ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use customer id in accounts table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer id , customer first name , customer last name in customers table with largest value in the results of step 1 . [question] Return the id and full name of the customer with the most accounts . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace txnavar with yale in step 2 . [system description] Step 1 : for each row in college table , find the corresponding rows in player college table and in player table . Step 2 : find the average height of the results of step 1 whose college 's college id equals " txnavar " . [question] What is the average height of the players from the college named 'Yale University ' ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( yale ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Yale ) [C] name last ( Yale ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( yale ) [C] name full ( Yale University ) [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Replace medicine 's name and Melperone with medicine 's name and medicine enzyme interaction interaction type equals inhibitor . [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table and in medicine table . Step 2 : find the enzyme 's name of the results of step 1 whose medicine 's name equals " Melperone " . [question] What are the names of enzymes in the medicine named 'Amisulpride ' that can serve as an 'inhibitor ' ? [schema] [T] medicine [C] id [C] name ( Amisulpride ) [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( inhibitor )
[feedback] You need to use id of room . [system description] find the room name in rooms table with largest value of base price . [question] Which room has the highest base price ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Make sure tryout 's decision for that student equals yes . [system description] find the player name and training hours in player table . [question] What are the names and hours spent practicing of every student who received a yes at tryouts ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
[feedback] In step 1 , you should use cast 's name in place of name which is equivalent to dummy value . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [question] What is the number of movies in which " Shahab Hosseini " acted ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace department with class in step 1 , remove for which course code equals CIS 420 in step 2 . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course description of the results of step 1 whose course code equals " CIS-420 " . [question] Find the first names of all instructors who have taught some course and the course description . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to use country equals Russia . [system description] find the number of rows in airlines table whose country equals " Eritrea " . [question] What is the number of airlines based in Russia ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Russia ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( Russia]] ) [C] active
[feedback] You need to calculate the age of students individually . [system description] find each value of age in student table along with the number of the corresponding rows to each value . [question] How old is each student and how many students are each age ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You should use nominee and award should be Cleavant Derricks or Bob Fosse , not the name and Tony award . [system description] find the name in musical table whose award equals " Drama Desk Award " or award equals " Tony Award " . [question] Show the musical nominee with award " Bob Fosse " or " Cleavant Derricks " . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee ( Cleavant Derricks , Bob Fosse ) [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
[feedback] Make sure affiliation equals public . [system description] find the school and location in university table . [question] What are the public schools and what are their locations ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
[feedback] Find population of city table whose city name equals boulder . [system description] find the number of rows in state table whose area equals " dummy value " . [question] how many people in boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use the date from the church table . [system description] Step 1 : find rows in church table whose continuation of equals " Church of Christ " . Step 2 : find the number of rows of each value of open date the results of step 1 . Step 3 : find the open date the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Show the opening year in whcih at least two churches opened . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] In step 1 , use farm competition 's host city id in place of status in city table . [system description] Step 1 : find the number of rows of each value of status in city table . Step 2 : find the status in city table with largest value in the results of step 1 . [question] What is the status of the city that has hosted the most competitions ? [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] Remove and club name equals Hopkins Student Enterprises , also find number of members in member of club . [system description] find the number of rows in club table whose club name equals " Hopkins Student Enterprises " and club name equals " Pen and Paper Gaming " . [question] Find the number of members of club " Pen and Paper Gaming " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Pen and Paper Gaming ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to use Album 's title equals . [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the songs 's title of the results of step 1 whose albums 's title equals " dummy value " and year less than " dummy value " . [question] What are the songs in album " A Kiss Before You Go : Live in Hamburg " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , you need to search for the name of river which has highest population and in step 3 , you need to include the river name of state which has highest population . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the maximum population in state table . Step 3 : find the river name of the results of step 1 whose population equals the results of step 2 . [question] what rivers flow through the state with the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use river 's length in place of country name and also delete state 's country name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [question] how long is the longest river in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace city name with city name in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the border info 's state name of the results of step 1 whose city name equals " dummy value " and capital equals " dummy value " . [question] what states in the united states have a city of springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 and 2 , you should use less than and greater than . In step 3 , use or and and . [system description] Step 1 : find the college name in college table whose enrollment greater than 22000 . Step 2 : find the college name in college table whose enrollment less than 19000 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students ? [schema] [T] college [C] college name [C] state ( AZ , LA ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to use city name which is equivalent to boulder . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose mountain name equals " dummy value " . [question] what is the population of boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace keyword equals dummy value with name equals Databases . [system description] find the keyword in keyword table whose keyword equals " dummy value " . [question] return me all the keywords in Databases area . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for capital city . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with largest value of highest point . [question] what is the capital of the state with the highest point [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use savings 's balance and checking 's balance in place of savings 's balance and checking 's balance respectively . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the checking 's balance of the results of step 1 with largest value of savings 's balance . [question] Find the saving balance of the account with the highest checking balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] In step 1 , you should use population instead of name of state . [system description] Step 1 : find the number of rows of each value of state name in state table . Step 2 : find the state name in state table with smallest value in the results of step 1 . [question] what is the least populous state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 and 2 , you should use customers and staff respectively . [system description] Step 1 : find the staff 's last name in staff table . Step 2 : find the customers 's last name in customers table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Which last names are both used by customers and by staff ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use the policy type code Deputy or Uniform in place of policy type code Normal . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 whose policy type code equals " Normal " or policy type code equals " Uniformed " . [question] Which customers have an insurance policy with the type code " Deputy " or " Uniform " ? Return the customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code ( Deputy , Uniformed ) [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] In step 2 , you should use ref product categories 's product category code instead of products product category code . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the unit of measure of the results of step 1 whose products 's product category code equals " Herbs " . [question] What is the unit of measuerment of the product category code " Herbs " ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to ensure that year should be 2005 or more . [system description] find the number of rows in exhibition table whose year greater than 2005 . [question] How many exhibition are there in year 2005 or after ? [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] In step 2 , use customer 's first name equals Ray instead of Leif 's first name equals Ray . [system description] Step 1 : for each row in customers table , find the corresponding rows in lessons table . Step 2 : find the number of lesson id of the results of step 1 whose first name equals " Leif " . [question] How many lessons did the customer with the first name Ray take ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Ray ) [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 and 2 , use class table and first name of employee instead of department table and code of course . [system description] Step 1 : for each row in course table , find the corresponding rows in department table and in professor table . Step 2 : find the professor extension of the results of step 1 whose course code equals " CIS-420 " . Step 3 : for each row in course table , find the corresponding rows in department table and in professor table . Step 4 : find the professor extension of the results of step 3 whose course code equals " QM-261 " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261 . [schema] [T] class [C] class code [C] course code ( CIS-220 , QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 , QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use destination airport id and routes table instead of airports table and name respectively . [system description] Step 1 : find the number of rows of each value of airport id in airports table . Step 2 : find the name and city in airports table with largest value in the results of step 1 . [question] What is the name and city of the airport that the most routes end at ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Ende , Enid ) [C] country [C] x [C] y [C] elevation [C] iata ( END ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( END ) [C] call sign ( CITY ) [C] country [C] active
[feedback] In step 2 , use longitude in place of start station id . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find each value of start station id of the results of step 1 along with the average duration and name of the corresponding rows to each value . [question] For each start station id , what is its name , longitude and average duration of trips started there ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Make sure that last name equals SWEAZY and first name equals ROY . [system description] find the number of rows in reservations table whose first name equals " PHEBE " and last name equals " WITTROCK " . [question] How many times does ROY SWEAZY has reserved a room . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
[feedback] In step 1 , you should use first name and last name in place of actor id . [system description] Step 1 : find the number of rows of each value of actor id in actor table . Step 2 : find the first name and last name in actor table with largest value in the results of step 1 . [question] What is the most popular full name of the actors ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 3 , I want the order id of orders table that are more than two . [system description] Step 1 : for each row in invoices table , find the corresponding rows in orders table . Step 2 : find the number of rows of each value of invoices 's order id of the results of step 1 . Step 3 : find the invoices 's order id and order details of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What is the order id and order details for the order more than two invoices . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace cite with author , cited with writes , year greater than 2000 , name equals H. V. Jagadish . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the title of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [question] return me the papers by " H. V. Jagadish " after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , I want table of exhibition . [system description] Step 1 : find the number of rows of each value of artist id in artist table . Step 2 : find the name and country in artist table with largest value in the results of step 1 . [question] Return the name and country corresponding to the artist who has had the most exhibitions . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] In step 2 , use city code instead of last name and Cat as the allergy name respectively . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and last name of the results of step 1 whose allergy type equals " food " or allergy type equals " environmental " . [question] What are the distinct first names and cities of the students who have allergy either to milk or to cat ? [schema] [T] allergy type [C] allergy ( Cat , Milk ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 3 , use iata in place of airport id . [system description] Step 1 : for each row in airport table , find the corresponding rows in flight table . Step 2 : find the number of rows of each value of airport id of the results of step 1 . Step 3 : find the airport id , name , name of the results of step 1 with largest value in the results of step 2 . [question] What is the id , name and IATA code of the airport that had most number of flights ? [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
[feedback] In step 1 , you should use reviewer id of rating table instead of name of reviewer table . [system description] Step 1 : find the number of rows of each value of name in reviewer table . Step 2 : find the name in reviewer table whose corresponding value in step 1 is greater than or equals 1 . [question] Find the names of all reviewers who have contributed three or more ratings . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should use ref document status table instead of documents table . [system description] find the document status code in documents table . [question] What document status codes do we have ? [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] In step 1 , you should use route table in place of airlines table and also delete airline id . [system description] Step 1 : find the number of rows of each value of airline id in airlines table . Step 2 : find the name in airlines table with largest value in the results of step 1 . [question] What is the name of the airline with the most routes ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
[feedback] Replace jid of publication table with citation num of journal table , year less than 2005 , name equals PVLDB . [system description] find the number of jid in publication table whose year less than " dummy value " . [question] return me the total citations of papers in PVLDB before 2005 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use country from mountain table . [system description] find the time in climber table whose country equals " United Kingdom " . [question] Show the times used by climbers to climb mountains in Country Uganda . [schema] [T] mountain [C] mountain id [C] name [C] height [C] prominence [C] range [C] country ( Uganda ) [T] climber [C] climber id [C] name [C] country [C] time [C] points [C] mountain id
[feedback] Find river name of state table whose city 's population greater than 150000 and lowest elevation equals lowest point . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in city table . Step 2 : find the state 's state name in state table with largest value of density . Step 3 : find the river name of the results of step 1 whose city 's state name equals the results of step 2 . [question] what is the longest river in the state with the most major cities [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use king size bed type in place of 2nd bed type . [system description] find the number of rows in rooms table whose beds equals 2 . [question] Find the total number of king beds available . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , you should use characteristics table and product name in place of product characteristics table and characteristic id respectively . [system description] Step 1 : for each row in products table , find the corresponding rows in product characteristics table . Step 2 : find the number of characteristic id of the results of step 1 whose product name equals " cumin " . [question] Count the number of different characteristic names the product 'cumin ' has . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace domain author table , domain keyword table , domain author table , domain author table and keyword equals dummy value with publication journal table , title equals PVLDB , journal name equals PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the jid of the results of step 1 whose keyword equals " dummy value " . [question] return me the papers in PVLDB containing keyword " Keyword search " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , use aircraft table in place of flight table . [system description] Step 1 : find the average flight 's distance in flight table . Step 2 : find the name in aircraft table whose aircraft 's distance greater than the results of step 1 . [question] Show names for all aircrafts with distances more than the average . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 2 , make sure to find the first name of teachers who teach in class room equivalent to 110 . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's first name of the results of step 1 whose list 's class room equals 111 . [question] Which teachers teach in classroom 110 ? Give me their first names . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to find area instead of population and make sure that state name should be pennsylvania . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the average population of the results of step 1 whose border info 's state name equals " dummy value " . [question] what is the average population per square km in pennsylvania [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the details of star rating code in conjunction with the hotel details . [system description] find the other hotel details and star rating code in hotels table with smallest value of price range . [question] What are the details and star ratings of the three hotels with the lowest price ranges ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 3 , remove and languages equals english and replace it with languages equals bangla . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : only keep the results of step 1 whose languages equals " english " . Step 3 : find the number of rows of each value of artist 's artist name the results of step 2 . Step 4 : find the artist 's artist name the results of step 2 with largest value in the results of step 3 . [question] What are the top 3 artists with the largest number of songs in the language Bangla ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
[feedback] Replace has allergy table with allergy type allergy type table , ensure allergy type equals food . [system description] find the allergy in has allergy table . [question] What are all the different food allergies ? [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 1 , you should use the state name in place of population . [system description] Step 1 : find the summation of population of each value of state name in state table . Step 2 : find the state name in state table with largest value in the results of step 1 . [question] which state has the most people [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , count the number of rows of each value of channel code in customer contact channels table . [system description] Step 1 : find the number of rows of each value of channel code in customer contact channels table . Step 2 : find the channel code in customer contact channels table whose corresponding value in step 1 is less than 1 . [question] Which contact channel codes were used less than 5 times ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to search for the state name which is adjacent to colorado . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose border equals " dummy value " . [question] what is the highest point in states bordering colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use Linda Smith as the last name and also add the condition Member of club . [system description] find the number of rows in student table whose first name equals " Jandy " . [question] How many clubs does " Linda Smith " have membership for ? [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 1 , you should use the author table and name . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table and in cite table . Step 2 : find the number of writes 's pid of the results of step 1 whose cited equals " dummy value " . [question] return me the number of authors who have cited the papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to calculate the total number of editors . [system description] find the number of editor id in editor table . [question] How many editors are there ? [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
[feedback] You need to use country from airport table . [system description] find the number of rows in routes table whose destination airport equals " TTT " . [question] Find the number of routes whose destination airports are in Canada . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Canada ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( Canadian ) [C] country ( Canada ) [C] active
[feedback] You need to determine the number of rows that correspond to amenity 's amenity id . [system description] find each value of dorm name in dorm table along with the number of the corresponding rows to each value . [question] For each dorm , how many amenities does it have ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Make sure that state has lowest population density . [system description] find the state name in state table with smallest value of density . [question] what is the state with the lowest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace last name with allergy name , and first name with Lisa . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the allergy type 's allergy name and allergy type of the results of step 1 whose first name equals " David " ordered ascending by last name . [question] What are the allergies the girl named Lisa has ? And what are the types of them ? Order the result by allergy names . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name ( Lisa ) [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You need to search for total number of states . [system description] find the number of rows in state table whose area equals " dummy value " . [question] how many states are in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should find other details of location which corresponds to UK Gallery . [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table and in museums table . Step 2 : find the museum details of the results of step 1 whose location name equals " Film Festival " . [question] What is the detail of the location UK Gallery ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name ( UK Gallery ) [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description ( gallery ) [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name ( UK gallery ) [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 2 , use product category code of reference product categories instead of characteristic name . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference product categories table . Step 2 : find the product category description and unit of measure of the results of step 1 whose characteristic name equals " error " . [question] What is the product category description and unit of measurement of category " Herbs " ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to use England in place of Spain . [system description] Step 1 : for each row in league table , find the corresponding rows in country table . Step 2 : find the number of rows of the results of step 1 whose country 's name equals " Spain " . [question] How many leagues are there in England ? [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name ( England ) [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
[feedback] Find summation of hours played and number of games played for student whose age less than 20 . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : only keep the results of step 1 whose age less than 18 . Step 3 : find each value of hours per week the results of step 2 along with the summation of hours played of the corresponding rows to each value . [question] Show total hours per week and number of games played for students under 20 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Replace jid , author 's name , writes table , year with title , conference 's name , year greater than 2000 and citation num greater than 200 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the jid of the results of step 1 whose conference 's name equals " dummy value " and year greater than " dummy value " and author 's name equals " dummy value " . [question] return me the paper after 2000 in VLDB conference with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use settlements table in place of claims table . [system description] find the date claim made and date claim settled in claims table . [question] Tell me the the claim date and settlement date for each settlement case . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You need to use 1121 in place of 8772 . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose advisor equals 8772 . [question] Which clubs have one or more members whose advisor is " 1121 " ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to use sports info table and search total number of students who have taken part in sport . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : find each value of sport name of the results of step 1 along with the number of the corresponding rows to each value . [question] How many students play each sport ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to use institution id and protein 's floors in place of building id and 17 respectively . [system description] find the number of building id in building table whose floors greater than or equals 17 . [question] How many proteins are associated with an institution in a building with at least 20 floors ? [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] Replace customers table with addresses table and customer name with customer id . [system description] find the customer address in customers table whose customer name equals " Yasmeen " . [question] Return the address of customer 10 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use division as AS . [system description] find the number of department number in department table whose division equals " EN " . [question] What is the number of departments in Division " AS " ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You should use num of factories instead of num of shops and also make sure that num of factories is less than 10 . [system description] find the name and open year in manufacturer table whose num of shops less than 8 or num of shops greater than 7 . [question] Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] You need to make sure that year should be smaller than or equivalent to 2000 . [system description] find the title and director in movie table whose gross worldwide equals 456774 with largest value of gross worldwide . [question] What is the title and director for the movie with highest worldwide gross in the year 2000 or before ? [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] You need to search for the name of state which is adjacent to oklahoma . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose area equals " dummy value " with largest value of population . [question] which of the states bordering oklahoma has the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use director 's name and actor 's name in place of name and dummy value respectively . [system description] Step 1 : for each row in director table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [question] What are all the movies directed by " Asghar Farhadi " featuring " Taraneh Alidoosti " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Find number of rows in has amenity table . [system description] find the number of rows in dorm table . [question] How many dorms have amenities ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You should use river name in place of area and make sure it corresponds to ohio . [system description] find the state name in state table whose area like " dummy value " . [question] what states are next to the ohio [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure area should be equals to largest value of area . [system description] find the state name in state table with largest value of area . [question] state the state with the largest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace actor table and birth year with director table and release year respectively , director 's name equals Jim Jarmusch . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " with largest value of birth year . [question] What is the latest movie by " Jim Jarmusch " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should not use age . [system description] find the name and age in person table whose gender equals " male " ordered ascending by age . [question] What is the name and age of every male ? Order the results by age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
[feedback] In step 1 , use name equals Databases and domain publication 's title in place of year and dummy value respectively . [system description] Step 1 : find rows in publication table whose year greater than " dummy value " . Step 2 : find the number of jid of each value of year the results of step 1 . Step 3 : find the number of jid and year the results of step 1 ordered descending by the results of step 2 . [question] return me the paper after 2000 in Databases area with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , replace state province county in addresses table with staff 's state province county in staff table . [system description] Step 1 : find the number of rows of each value of state province county in addresses table . Step 2 : find the state province county in addresses table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the names of the states that have 2 to 4 employees living there ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 , you should use author table , title , year and conference name as well as mention that the year should be more than 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the name of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [question] return me the papers by " H. V. Jagadish " on VLDB conference after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure that state has the lowest population density . [system description] find the state name in state table with smallest value of density . [question] which state has the lowest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use the first name of department and department name of employee table . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the department code and employee last name of the results of step 1 whose department code equals " PSYCH " . [question] What is the first and last name of the professor in biology department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use person table and in step 2 , use person friend and age in place of person table and age respectively . [system description] Step 1 : find the person 's name in person table whose age greater than 25 . Step 2 : find the person friend 's name in person friend table whose year less than 10 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of the people who are older 40 but no friends under age 30 ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Replace 2 with 3 , and ensure that bed Type equals King . [system description] find the number of rows in rooms table whose beds equals 2 . [question] Find the number of rooms with a king bed . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 2 , you need to use student 's advisor instead of faculty id . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the faculty id in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Show ids for the faculty members who do n't advise any student . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You should use director table instead of actor table and make sure that director 's name is equivalent to director 's name . [system description] find the birth city in actor table whose name equals " dummy value " . [question] In what city was " Kevin Spacey " born ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , name of person friend should be Zach . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the maximum year in person friend table . Step 3 : find the age of the results of step 1 whose year equals the results of step 2 . [question] What is the age of the friend of Zach with longest year relationship ? [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] Find number of rows in border info table whose state name equals kentucky and have border . [system description] find the number of rows in state table whose area like " dummy value " . [question] what is the number of neighboring states for kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , use student gpa in place of student num . [system description] Step 1 : find the average student num in student table . Step 2 : find the student first name and student gpa in student table whose student num less than the results of step 1 . [question] What is the first name and GPA of every student that has a GPA lower than average ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you should use faculty participates in table and drop activity table . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find each value of rank of the results of step 1 along with the number of the corresponding rows to each value . [question] How many students are advised by each rank of faculty ? List the rank and the number of students . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] Find population of city table whose city name equals boulder . [system description] find the number of rows in state table whose area equals " dummy value " . [question] number of citizens in boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure customer id is not equals to 10823 Rollin Spur . [system description] find the customer name and customer phone in customers table whose customer address equals " 10823 Rollin Spur " . [question] Show names and phones of customers who do not have address information . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] products [C] product id [C] product type code [C] product name [C] product price [T] customers [C] customer id [C] payment method code [C] customer number [C] customer name [C] customer address [C] customer phone [C] customer email [T] contacts [C] contact id [C] customer id [C] gender [C] first name [C] last name [C] contact phone [T] customer address history [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order date [C] order status code [T] order items [C] order item id [C] order id [C] product id [C] order quantity
[feedback] You should use player 's player and Indonesia instead of official native language and country name respectively . [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose official native language equals " Persian ( Arabic script ) " . [question] Who are the players from Indonesia ? [schema] [T] country [C] country id [C] country name ( Indonesia ) [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You need to calculate the number of different student studying in each grade . [system description] find each value of grade in list table along with the number of the corresponding rows to each value . [question] For each grade , return the grade number , the number of classrooms used for the grade , and the total number of students enrolled in the grade . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to make sure that year of open is greater than 2000 . [system description] Step 1 : find rows in gas station table whose open year greater than 2008 . Step 2 : find the number of rows of each value of manager name the results of step 1 . Step 3 : find the manager name the results of step 1 with largest value in the results of step 2 . [question] Show the manager name with most number of gas stations opened after 2000 . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] credit score less than 30 is wrong , it should be credit score less than 50 . [system description] Step 1 : find rows in customer table whose credit score less than 30 . Step 2 : find each value of account type the results of step 1 along with the average account balance of the corresponding rows to each value . [question] For each account type , find the average account balance of customers with credit score lower than 50 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to ensure that the song language is equivalent to English . [system description] find the artist name and number of rows in song table whose languages equals " bangla " . [question] What are the names and number of works for all artists who have sung at least one song in English ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] You need to calculate the value of show times per day for each cinema id . [system description] Step 1 : for each row in schedule table , find the corresponding rows in cinema table . Step 2 : find each value of name of the results of step 1 along with the summation of show times per day of the corresponding rows to each value . [question] What is total number of show times per dat for each cinema ? [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
[feedback] Find number of clubs and make sure Eric Tai is student of that clubs . [system description] find the number of rows in student table whose first name equals " Jandy " . [question] How many clubs does the student named " Eric Tai " belong to ? [schema] [T] student [C] student id [C] last name ( Tai ) [C] first name ( Eric ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 1 , you should use invoice number in financial transactions table . [system description] Step 1 : find the number of rows of each value of invoice number in invoices table . Step 2 : find the invoice number and invoice date in invoices table with largest value in the results of step 1 . [question] What is the invoice number and invoice date for the invoice with most number of transactions ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace customer type code equals Defaults on payments with customer type code equals Good Credit Rating . [system description] Step 1 : find rows in customers table whose customer type code equals " Defaults on payments " . Step 2 : find the number of rows of each value of town city the results of step 1 . Step 3 : find the town city the results of step 1 with smallest value in the results of step 2 . [question] Return the city with the customer type code " Good Credit Rating " that had the fewest customers . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code ( Good Credit Rating ) [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] You should use keyword which is equivalent to natural language and also search for number of different title in publication table . [system description] find the number of rows in keyword table whose keyword like " dummy value " . [question] return me the number of papers which contain the keyword " Natural Language " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use product name which is equivalent to cumin and typical buying price instead of characteristic name which is equivalent to error . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference product categories table . Step 2 : find the reference product categories 's product category code and typical selling price of the results of step 1 whose characteristic name equals " error " . [question] Return the category code and typical price of 'cumin ' . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace smallest with largest in step 3 . [system description] Step 1 : for each row in certificate table , find the corresponding rows in aircraft table . Step 2 : find the number of rows of each value of certificate 's airline id of the results of step 1 . Step 3 : find the name of the results of step 1 with smallest value in the results of step 2 . [question] Show the name of aircraft which fewest people have its certificate . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You should use height feet instead of years as tallest . [system description] find the name in building table with largest value of years as tallest . [question] What is the name of the tallest building ? [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] You need to determine the installation date for all the trips . [system description] find the installation date in station table . [question] What is the installation date for each ending station on all the trips ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 4 , you need to use greater than . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose author 's name equals " dummy value " . Step 3 : find the number of rows of each value of journal 's name the results of step 2 . Step 4 : find the journal 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the journals , which have more than 10 papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , use title and name instead of paper id and name . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose name equals " University of Pennsylvania " . [question] Which papers were written by authors from the institution " Google " ? [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 3 , you should use date claim settled of claims table . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the average claims 's amount claimed in claims table . Step 3 : find the claims 's date claim made and settlements 's date claim settled of the results of step 1 whose claims 's amount claimed greater than the results of step 2 . [question] Give me the claim date , settlement date for all the claims whose claimed amount is larger than the average . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] In step 1 , you should use reference colors , change color code with product id , and unit of measure should not be Handful . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product name of the results of step 1 whose color code equals 1 and unit of measure not equals " Weight - pound , kilo . " . [question] What are the names of products that are not 'white ' in color and are not measured by the unit 'Handful ' ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( white ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure ( Handful              ) [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace domain 's name , organization table and year greater than dummy value with author 's name , author table and title respectively , find name equals H. V. Jagadish and Yunyao Li . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in domain table . Step 2 : find the domain 's name of the results of step 1 whose organization 's name equals " dummy value " and year greater than " dummy value " . [question] return me the papers written by " H. V. Jagadish " and " Yunyao Li " after 2005 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , count the number of rows of each value of channel code in customer contact channels table . [system description] Step 1 : find the number of rows of each value of channel code in customer contact channels table . Step 2 : find the channel code in customer contact channels table whose corresponding value in step 1 is less than 1 . [question] List all the contact channel codes that were used less than 5 times . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Make sure that the actresses are female . [system description] find the name in actor table whose gender equals " dummy value " and gender equals " dummy value " . [question] Find all the female actors in the movie " Saving Private Ryan " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 3 , you need to use average price . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the average price of each value of products 's name of the results of step 1 . Step 3 : find the manufacturers 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Select the names of manufacturer whose products have an average price higher than or equal to $ 150 . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] Replace Audi with red jeans , and make sure whose product name is also present in product suppliers table . [system description] find the supplier name and supplier phone in suppliers table whose supplier name equals " Audi " . [question] What are the distinct names and phone numbers for suppliers who have red jeans ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name ( red jeans ) [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Make sure that population should be more than 150000 and state name equals kansas . [system description] find the city name in city table whose state name equals " dummy value " . [question] what are the names of the major cities in kansas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use traverse which is equivalent to illinois . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] what rivers flow through illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace keyword with name and make sure it belongs to Databases area . [system description] find the number of rows in keyword table whose keyword equals " dummy value " . [question] return me the number of keywords in Databases area . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Remove whose last name equals Zimmermann from step 2 . [system description] Step 1 : for each row in customer table , find the corresponding rows in invoice table and in invoice line table and in track table and in genre table . Step 2 : find the genre 's name of the results of step 1 whose last name equals " Zimmermann " . [question] List the names of all music genres . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name ( Music ) [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You should use river name of river table instead of state name of state table . Also , use traverse in place of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [question] how many rivers are in idaho [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Remove and club name equals Tennis Club . [system description] find the club description in club table whose club name equals " Tennis Club " and club name equals " Pen and Paper Gaming " . [question] What is the description of the club " Pen and Paper Gaming " ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Pen and Paper Gaming ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 2 , you should use reviewer id and in step 3 , use rating in place of name . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the number of rows of each value of name of the results of step 1 . Step 3 : find the title of the results of step 1 with largest value in the results of step 2 . [question] What is the name of the movie that has been reviewed the most ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to calculate the number of corresponding rows in the affected region table for each region . [system description] find each value of region name in region table along with the number of the corresponding rows to each value . [question] How many storms occured in each region ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You should use professor num in place of class code and also make sure that course code should not be QM 261 . [system description] find the number of class code in class table whose course code equals " QM-261 " . [question] How many professors are teaching class with code ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use songs instead of band and also include title of songs as Badlands . [system description] Step 1 : for each row in band table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose last name equals " dummy value " . [question] What instruments did the musician with the last name " Heilo " play in " Badlands " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , player position should be goalie and in step 3 , player position should be mid . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " mid " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " striker " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the names of all schools that have students trying out for the position of goal and 'mid'-field . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( mid ) [C] decision
[feedback] Replace Cathay Pacific Culture 's company name with incorporated in . [system description] Step 1 : for each row in culture company table , find the corresponding rows in book club table and in movie table . Step 2 : find the title and book title of the results of step 1 whose company name equals " Cathay Pacific Culture " . [question] What are the titles of movies and books corresponding to companies incorporated in China ? [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in ( China ) [C] group equity shareholding [C] book club id [C] movie id
[feedback] You should use continent which is equivalent to North America . [system description] find the number of rows in organization table whose continent equals " dummy value " . [question] return me the number of the organizations in " North America " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use author 's name and domain name in place of oid and organization name respectively . [system description] find the number of oid in organization table whose name equals " dummy value " and name equals " dummy value " . [question] return me the number of researchers in Databases area in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use less than in place of greater than . [system description] find the number of rows in exhibition table whose ticket price greater than 14.95 or summation of ticket price less than 1 . [question] How many exhibitions have a attendance more than 100 or have a ticket price below 10 ? [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] Make sure decor equals modern , base price less than 160 , beds equals 2 , no bed Type less than Double . [system description] find the room name in rooms table whose base price less than 75 and bed type less than " Double " . [question] Find the names of all modern rooms with a base price below $ 160 and two beds . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You need to ensure that Democratic party should have delegates in committee . [system description] Step 1 : for each row in election table , find the corresponding rows in party table . Step 2 : find the committee of the results of step 1 whose party 's party equals " Working Families " . [question] Which committees have delegates from the Democratic party ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] In step 1 , you should use actor 's name and role as Mr. Bean . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [question] find all films in which " Rowan Atkinson " acted as " Mr. Bean " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , name should be University of Oxford . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " Portland State University " . [question] Find the first names and last names of the authors whose institution affiliation is " University of Oxford " . [schema] [T] institution [C] institution id [C] name ( University of Oxford ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use address id in place of town city and also change state province county to Colorado . [system description] find the number of town city in addresses table whose state province county equals " Vermont " . [question] How many cities are there in state " Colorado " ? [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county ( Colorado ) [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] In step 1 , I want table of branch and membership register branch . [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in member table . Step 2 : find the name of the results of step 1 ordered ascending by register year . [question] What are the names of the members and branches at which they are registered sorted by year of registration ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You should use less than in place of greater than . [system description] Step 1 : for each row in party table , find the corresponding rows in region table . Step 2 : find the minister of the results of step 1 whose took office greater than 1959 or date less than " 16 July 2002 " . [question] Show the minister who took office after 1961 or before 1959 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] Replace start date with duration , only show first 3 rows . [system description] find the id and start date in trip table with largest value of duration . [question] What are the ids of the trips that lasted the longest and how long did they last ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , I want bikes available and in step 3 , I want bike available as 7 . [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Return the unique name for stations that have ever had 7 bikes available . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Replace name in aircraft table with airline id in flight table in step 1 . [system description] Step 1 : find the number of rows of each value of name in aircraft table . Step 2 : find the name in aircraft table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the names for all aircrafts with at least 2 flights ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to use award in place of name and Bob Fosse instead of Ian Smith . [system description] Step 1 : for each row in musical table , find the corresponding rows in actor table . Step 2 : find the nominee of the results of step 1 whose actor 's name equals " Ian Smith " or actor 's name equals " Ian Smith " . [question] Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards ? [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee ( Cleavant Derricks , Bob Fosse ) [C] result ( Nominated ) [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
[feedback] Replace vocals table with performance table , title with title , and make sure that performer perform back stage . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the first name and last name of the results of step 1 whose title equals " dummy value " . [question] Who is performing in the back stage position for the song " Badlands " ? Show the first name and the last name . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] Replace conference table with author table , name of organization table with title of writes table , year greater than 2000 with organization 's name equals University of Michigan . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the name of the results of step 1 whose year greater than " dummy value " and year equals " dummy value " . [question] return me all the papers after 2000 in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace player 's name with player id . [system description] Step 1 : for each row in club table , find the corresponding rows in player table . Step 2 : find the club 's name and player 's name of the results of step 1 . [question] Please show the names and the players of clubs . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] You need to use river 's length for the traverse and make sure that river 's name should be texas . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state name equals " dummy value " with largest value of length . [question] how long is the longest river in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the tourist attraction Id , number of corresponding rows of visits from visits table . [system description] find each value of tourist attraction id in tourist attractions table along with the number of the corresponding rows to each value . [question] What are the name , id and the corresponding number of visits for each tourist attraction ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 2 , you should use class room and 0 should be the value of grade . [system description] Step 1 : find rows in list table whose grade equals 5 . Step 2 : find each value of grade the results of step 1 along with the number of the corresponding rows to each value . [question] For each grade 0 classroom , return the classroom number and the count of students . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 2 , ensure that last name of customer equals Keeling and customer id equals Meaghan . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find the account name and other account details of the results of step 1 whose customer first name equals " Neoma " . [question] What are the names and other details for accounts corresponding to the customer named Meaghan Keeling ? [schema] [T] customers [C] customer id [C] customer first name ( Meaghan ) [C] customer middle initial [C] customer last name ( Keeling ) [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace organization table with publication keyword table , name with journal 's name , remove last part . [system description] Step 1 : for each row in organization table , find the corresponding rows in keyword table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [question] return me the number of keywords in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should count number of shops of each manufacturer . [system description] Step 1 : find the number of rows of each value of name in manufacturer table . Step 2 : find the name and open year in manufacturer table with largest value in the results of step 1 . [question] Which manufacturer has the most number of shops ? List its name and year of opening . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] You need to determine the unit price of tracks . [system description] Step 1 : for each row in album table , find the corresponding rows in track table . Step 2 : find the title and album 's album id of the results of step 1 whose unit price greater than 1.99 . [question] What are the titles and ids for albums containing tracks with unit price greater than 1 ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 3 , you should use title of journal instead of name of journal and also in step 2 , find the number of different papers written by the author . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose author 's name equals " dummy value " . Step 3 : find the number of journal 's name of each value of journal 's name the results of step 2 . Step 4 : find the journal 's name and number of rows the results of step 2 with largest value in the results of step 3 . [question] return me the journal , which have the most number of papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use F in place of Secretary Vote and also change the election cycle to Spring . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the average age of the results of step 1 whose sex equals " M " and secretary vote equals 1030 . [question] What is the average age of the female students with secretary votes in the spring election cycle ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] In step 1 , you should delete the first name of the student and replace it with date of birth of the student whose gpa is more than 3 . [system description] Step 1 : find the number of rows of each value of student first name in student table . Step 2 : find the student first name , student last name , student gpa in student table whose corresponding value in step 1 is greater than 1 . [question] What is the first , last name , gpa of the youngest one among students whose GPA is above 3 ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace flight with certificate , remove less than or equals 8430 and greater than 6900 with 5000 . [system description] Step 1 : for each row in flight table , find the corresponding rows in aircraft table . Step 2 : find the name and flight 's distance of the results of step 1 whose aircraft 's distance greater than 6900 and aircraft 's distance less than or equals 8430 . [question] Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 2 , you should use Austin instead of salt lake city . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person friend 's name of the results of step 1 whose city equals " salt lake city " . Step 3 : find the number of rows in person table whose person 's name not one of the results of step 2 . [question] What is the total number of people who have no friends living in Austin ? [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Replace sep with feb and make sure it is highest value of temperature . [system description] Step 1 : for each row in temperature table , find the corresponding rows in city table . Step 2 : find the city of the results of step 1 whose feb equals 18.9 with largest value of sep . [question] In February , which city marks the highest temperature ? [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] You should use state name instead of border equals dummy value . [system description] find the border in border info table whose border equals " dummy value " . [question] which states border kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use num of factories and num of shops in place of number of rows and open year is less than 1990 . [system description] find the average num of factories and number of rows in manufacturer table whose open year less than 2001 . [question] what is the average number of factories and maximum number of shops for manufacturers that opened before 1990 . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] You should use director table instead of actor table and make sure that director 's name is equivalent to director 's name . [system description] find the birth city in actor table whose name equals " dummy value " . [question] Where is the birth place of " Kevin Spacey " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use base price greater than 120 . [system description] Step 1 : find rows in rooms table whose base price greater than 100 . Step 2 : find each value of decor the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of rooms with price higher than 120 for different decor . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Also find training hours in place of training hours less than 1200 . [system description] find the player name and player name in player table whose training hours less than 1200 . [question] Find the name and training hours of players whose hours are below 1500 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to use river 's name and traverse in place of state name and border info respectively . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the length of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [question] what is the length of the longest river that runs through texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure to find only for one river . [system description] find the river name in river table with largest value of length . [question] what is the longest river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace station table with trip table , replace San Jose with San Francisco . [system description] find the number of rows in station table whose city equals " San Jose " . [question] How many trips did not end in San Francisco ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Francisco ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to find the player id , first name , last name , step 3 count in step 3 . [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of all star 's player id of the results of step 1 . Step 3 : find the name first , name last , name last of the results of step 1 with largest value in the results of step 2 . [question] What are the first name , last name and id of the player with the most all star game experiences ? Also list the count . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Count ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to search for the name of city having population more than 150000 and its river name is mississippi . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose river name equals " dummy value " . [question] what are the major cities in states through which the mississippi runs [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace domain 's name with title . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table . Step 2 : find the year of the results of step 1 whose domain 's name equals " dummy value " . [question] return me the year of " Making database systems usable " [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use id of team and postseason 's year instead of name and div win . [system description] Step 1 : for each row in postseason table , find the corresponding rows in team table . Step 2 : find the name and div win of the results of step 1 whose team 's year equals 1974 with largest value of wins . [question] What are the name and id of the team with the most victories in 2008 postseason ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to search for the most recent release date . [system description] find the song name in song table with largest value of releasedate . [question] What is the name of the song that was released most recently ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , you should use the director equivalent to James Cameron from the movie table . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the average rating stars in rating table whose rating stars greater than or equals 3 . Step 3 : find the title and director of the results of step 1 whose rating stars greater than the results of step 2 . [question] What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( James Cameron ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Replace publication 's jid with journal 's name , cited with reference num , step 3 : replace step 2 word with step 3 . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid and number of jid the results of step 2 ordered descending by the results of step 3 . [question] return me the paper in PVLDB with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to determine the name of manufacturer along with average price of products for each . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find each value of manufacturer of the results of step 1 along with the average price and manufacturers 's name of the corresponding rows to each value . [question] What are the average prices of products for each manufacturer ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You need to ensure that friends of Bob 's . [system description] find the name in person friend table whose year like 5 . [question] What are the names of all of Bob 's friends ? [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
[feedback] You should use title which includes ML and not the paper id . [system description] find the paper id in papers table whose title like " Just do it : Simple Monadic Equational Reasoning " . [question] Which papers have the substring " ML " in their titles ? Return the titles of the papers . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Make sure customer id of customer table should be present in loan table . [system description] find the average credit score in customer table . [question] What is the average credit score for customers who have taken a loan ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to search for the rows number which are equivalent or higher than 25 from step 1 . [system description] Step 1 : find rows in weather table whose max wind speed mph greater than 128 . Step 2 : find each value of zip code the results of step 1 along with the number of the corresponding rows to each value . [question] For each zip code , how many times has the maximum wind speed reached 25 mph ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , you should use customer name and in step 3 , the smallest value should be used in place of payment method and largest value respectively . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of payment method of the results of step 1 . Step 3 : find the payment method of the results of step 1 with largest value in the results of step 2 . [question] Tell me the payment method used by the customer who ordered the least amount of goods in total . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 4 , use title and drop number of jid . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid and number of jid the results of step 2 ordered descending by the results of step 3 . [question] return me the paper by " H. V. Jagadish " with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use greater than in place of greater than in step 1 . [system description] Step 1 : find the number of rows of each value of nominee in musical table . Step 2 : find the nominee in musical table whose corresponding value in step 1 is greater than 1 . [question] Who are the nominees who have been nominated more than two times ? [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result ( Nominated ) [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
[feedback] In step 2 , you should use rating 's movie id instead of title . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the average rating stars of each value of rating 's movie id of the results of step 1 . Step 3 : find the average title and average rating stars of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] For each movie that received more than 3 reviews , what is the average rating ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Make sure that population should be minimum . [system description] find the city name in city table with smallest value of population . [question] what is the city with the smallest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , department number of member of table should be used in place of department name of department table . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with smallest value in the results of step 1 . [question] Find the name of the department that has the fewest members . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] In step 2 , you should use traverse in place of area . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] what rivers run through illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use traverse which is equivalent to illinois . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] which rivers flow through illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use origin equals Los Angeles and not the destination equals Sydney . [system description] find the flight number in flight table whose destination equals " Sydney " . [question] Show all flight number from Los Angeles . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 3 , replace greater than or equals with equals or greater than . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find the number of rows of each value of faculty 's faculty id of the results of step 1 . Step 3 : find the faculty 's faculty id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Show the ids for all the faculty members who have at least 2 students . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , I want highest rating stars for the most recent movie . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the maximum rating date and minimum year of the results of step 1 with largest value of year . [question] What is highest rating for the most recent movie and when was it released ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Find average age and number of male students for each city code . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : only keep the results of step 1 whose gender equals " X " . Step 3 : find each value of city code the results of step 2 along with the average age of the corresponding rows to each value . [question] What is the average age and how many male students are there in each city ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Replace actor table with director table , title with release year , actor 's name with director 's name . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title and budget of the results of step 1 whose name equals " dummy value " with largest value of budget . [question] Find the name and budget of the latest movie by " Quentin Tarantino " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Make sure area should be equals to minimum area . [system description] find the area in state table with smallest value of density . [question] what is the area of the smallest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace maximum highest point with highest point of all states . [system description] find the maximum highest point in highlow table . [question] what are the highest points of all the states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure to find only for smallest value of age . [system description] find the last name in student table with smallest value of age . [question] What is the last name of the youngest student ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 2 , allergy type should be replaced with allergy equals Cat . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the number of rows of the results of step 1 whose allergy type equals " environmental " . [question] How many students are affected by cat allergies ? [schema] [T] allergy type [C] allergy ( Cat ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Replace branch 's branch id and register year with membership register branch branch 's branch id and register year respectively . [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : find the name and branch 's branch id of the results of step 1 whose register year greater than 2016 . [question] For each branch id , what are the names of the branches that were registered after 2015 ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You need to use May instead of April . [system description] Step 1 : for each row in happy hour table , find the corresponding rows in shop table . Step 2 : find the shop 's shop id and address of the results of step 1 whose month like " April " . [question] What are the id and address of the shops which have a happy hour in May ? [schema] [T] shop [C] shop id [C] address [C] num of staff [C] score [C] open year [T] member [C] member id [C] name [C] membership card [C] age [C] time of purchase [C] level of membership [C] address [T] happy hour [C] hh id [C] shop id [C] month ( May ) [C] num of shaff in charge [T] happy hour member [C] hh id [C] member id [C] total amount
[feedback] In step 1 , you should use settlements table and drop claim id in claims table . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the claim id and date claim made in claims table with largest value in the results of step 1 . [question] Find the claim id and claim date of the claim that incurred the most settlement count . Also tell me the count . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You should use hours played instead of hours per week . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find the student 's student id of the results of step 1 whose hours per week greater than 29 . [question] What are the student IDs for everybody who worked for more than 10 hours per week on all sports ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You should find the number of river name in river table . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [question] how many rivers are there in us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the lowest elevation . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with smallest value of lowest point . [question] what is the state with the lowest point [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use cast , release year and name which are comparable to movie 's Humphrey Bogart . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and birth year less than " dummy value " . [question] How many movies did " Humphrey Bogart " act in before 1942 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Make sure river name equals colorado not dummy value . [system description] find the number of rows in river table whose river name equals " dummy value " . [question] how many rivers are called colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use height feet instead of floors and remove height feet greater than or equals 537 . [system description] Step 1 : find the average floors in building table . Step 2 : find the number of rows in building table whose height feet greater than the results of step 1 or height feet greater than or equals 537 . [question] Show the number of buildings with a height above the average or a number of floors above the average . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] In step 2 , replace document type code with budget type code of documents with expenses . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the number of rows of each value of document type code of the results of step 1 . Step 3 : find the reference budget codes 's budget type code of the results of step 1 with largest value in the results of step 2 . [question] What is the budget type code with most number of documents . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You should use length of river 's instead of country name of state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [question] name the longest river in us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use author table and VLDB conference name should be used in place of writes table and year respectively . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the writes 's pid of the results of step 1 whose name equals " dummy value " and year equals " dummy value " . [question] return me the authors who have papers in VLDB conference in 2002 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to determine the number of rows that correspond to each value of role description from employees table . [system description] find each value of role code in employees table along with the number of the corresponding rows to each value . [question] How many employees does each role have ? List role description , id and number of employees . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] Make sure that customer has taken lessons with lesson status code as Completed and first name as Rylan . [system description] find the number of rows in customers table whose first name equals " Dianna " and last name equals " Trantow " . [question] How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Rylan ) [C] last name ( Goodwin ) [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code ( Completed ) [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use king or queen as a substitute of 2nd and 1st bed type respectively . [system description] find the room name in rooms table whose beds equals 2 or beds equals 1 . [question] What are the names of rooms that have either king or queen bed ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( Queen , King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( QUEEN ) [C] adults [C] kids
[feedback] Make sure student are on scholarship . [system description] find the student id in student table . [question] List ids for all student who are on scholarship . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] In step 2 , use name in place of artist id . [system description] Step 1 : for each row in artist table , find the corresponding rows in album table . Step 2 : find the number of rows of each value of album 's artist id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [question] Which artist has the most albums ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( The Moth ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] Make sure to find distinct professor for each school . [system description] find the number of professor office and number of professor office in professor table . [question] How many different professors are there for the different schools ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the city having highest population . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's country name equals " dummy value " with largest value of city 's population . [question] what is the biggest city in usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for total number of states . [system description] find the number of rows in state table whose country name equals " dummy value " . [question] how many states are there in united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find lowest point where state name equals iowa in step 2 . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose lowest elevation not equals " dummy value " with smallest value of lowest point . [question] where is the lowest spot in iowa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that traverse equals texas and length is minimum . [system description] find the river name in river table whose length equals " dummy value " with smallest value of length . [question] what is the shortest river in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use table of people and people id in step 1 and 2 respectively . Also , use name and people id in step 2 in place of year working in step 1 and 2 respectively . [system description] Step 1 : for each row in company table , find the corresponding rows in employment table . Step 2 : find the name and year working of the results of step 1 ordered descending by year working . [question] Show names of companies and that of employees in descending order of number of years working for that employee . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
[feedback] In step 1 , you should include table of journal and name of author whose name is H. V. Jagadish . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [question] return me the papers by " H. V. Jagadish " on PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use state name instead of mountain name . [system description] find the mountain name in mountain table . [question] where are mountains [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the name of state which is adjacent to oklahoma . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose border equals " dummy value " with largest value of population . [question] what state that borders oklahoma has the highest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use amount claimed in place of summation of created date . [system description] find the summation of created date in claims documents table with largest value of created date . [question] Find the total amount claimed in the most recently created document . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code ( Document ) [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You need to use the summation of hours played . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the game name of the results of step 1 with largest value of hours played . [question] Show the game name that has most number of hours played . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Replace jid with title , remove whose name equals dummy value . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " . [question] return me the number of papers on VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use actor whose role is Alan Turing and in step 2 , use title which has Imitation Game as its title . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " . [question] Who was the actor that played " Alan Turing " in the movie " The Imitation Game " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , use river name in place of traverse and also search for the states that are traversed by it . [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the traverse in river table with largest value in the results of step 1 . [question] what river traverses the most states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use draft copies 's document id instead of document drafts 's document id . [system description] Step 1 : for each row in document drafts table , find the corresponding rows in draft copies table . Step 2 : find the number of rows of the results of step 1 whose draft copies 's document id equals 4 . [question] How many draft copies does the document with id 2 have ? [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] You should use title of journal , author , organization and year which is larger than 2000 and equals University of Michigan . [system description] find the number of pid in publication table whose year greater than " dummy value " and year greater than " dummy value " . [question] return me the number of papers in PVLDB after 2000 in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 3 , you should not use product id and also search for non-existent colors in reference colors . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the products 's color code in products table . Step 3 : find the number of rows of the results of step 1 whose product id not one of the results of step 2 . [question] Count the number of colors that are not used in any products . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Also find customer last name . [system description] find the customer id , customer first name , customer phone , customer phone in customers table . [question] Show ids , first names , last names , and phones for all customers . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] Replace organization table with publication table , homepage with title , and keyword with Information Retrieval . [system description] Step 1 : for each row in organization table , find the corresponding rows in conference table and in keyword table . Step 2 : find the number of conference 's homepage of the results of step 1 whose keyword equals " dummy value " and organization 's name equals " dummy value " . [question] return me the number of papers in VLDB conference containing keyword " Information Retrieval " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use savings table and name equals Brown . [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find the balance and balance of the results of step 1 whose name equals " Weeks " . [question] Find the checking balance and saving balance in the Brown ' s account . [schema] [T] accounts [C] customer id [C] name ( Brown ) [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] In step 2 , ensure that last name equals MOYER and first name , last name both are equivalent to OTHA . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " MIN " and teachers 's last name equals " SUGAI " . [question] Which students study under the teacher named OTHA MOYER ? Give me the first and last names of the students . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
[feedback] In step 1 , replace region name in region table with number deaths in storm table . [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the region names affected by the storm with a number of deaths of least 10 ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] Replace city with name of park , second year with 1907 . [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of city of the results of step 1 whose city equals " Bloomington " and year equals 2003 . [question] Count the number of games taken place in park " Columbia Park " in 1907 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( columbia ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Columbia ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Columbia , Park ) [C] name first ( Count , Park ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name ( Columbia Park ) [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( columbia ) [C] name full [C] city ( Columbia ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park ( Columbia Park ) [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Make sure state has highest population density . [system description] find the state name in state table with largest value of density . [question] what state has the highest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use decor equivalent to traditional instead of decor equivalent to rustic . [system description] find the bed type and room name in rooms table whose decor equals " rustic " . [question] What are the bed type and name of all the rooms with traditional decor ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( traditional ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 2 , substitute list 's class room in place of teachers 's class room . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the grade of the results of step 1 whose teachers 's class room equals 103 . [question] Find the grade taught in classroom 103 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Make sure that state has highest density . [system description] find the population in state table with largest value of density . [question] what is the population of the state with the highest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use contains in step 2 . [system description] Step 1 : for each row in staff table , find the corresponding rows in lessons table . Step 2 : find the number of rows of the results of step 1 whose first name like " Jedidiah " . [question] How many lessons were taught by a staff member whose first name has the letter ' a ' in it ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] Replace birth country equals USA , birth year equals 1857 with birth country equals USA , bats equals R . [system description] find the number of rows in player table whose birth country equals " Cuba " and birth year equals 1857 . [question] Count the number of players who were born in USA and have bats information ' R ' . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country ( USA ) [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country ( USA ) [C] death state [C] death city [C] name first ( Count ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country ( USA ) [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to use unsure rate instead of consider rate . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the average consider rate of each value of sex of the results of step 1 . Step 3 : find the sex of the results of step 1 with largest value in the results of step 2 . [question] which gender got the highest average uncertain ratio . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] You need to use the president vote instead of class senator vote which is equivalent to 1028 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the last name of the results of step 1 whose class senator vote equals 1028 . [question] Find the distinct last names of the students who have class president votes . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] In step 2 , you should use last name and first name as well as interchange first name with Jeremy Gibbons . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose first name equals " Olin " . [question] What are the titles of papers published by " Jeremy Gibbons " ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Gibbons ) [C] first name ( Jeremy ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use city name and population in place of capital and state name respectively . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] what are the major cities of the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use name , rating stars and change year with name , title . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the name , title , rating date of the results of step 1 ordered ascending by year and title . [question] What is the reviewer name , film title , movie rating , and rating date for every movie ordered by reviewer name , movie title , then finally rating ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , you should use book club 's year and book title in place of title and movie table respectively . [system description] Step 1 : for each row in book club table , find the corresponding rows in culture company table and in movie table . Step 2 : find the movie 's year , title , title of the results of step 1 ordered descending by publisher . [question] Show the years , book titles , and publishers for all books , in descending order by year . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] In step 4 , you should use author 's name and VLDB in place of conference 's name and dummy value respectively . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose conference 's name equals " dummy value " . Step 3 : find the number of conference 's name of each value of author 's name the results of step 2 . Step 4 : find the number of author 's name the results of step 2 with largest value in the results of step 3 . [question] return me the author who has the most number of papers in the VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , replace student table with class table and in step 2 replace class code with course code . [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the number of rows of the results of step 1 whose class code equals 10021 . [question] What are the total number of students enrolled in ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should replace profits in billion with sales in billion and 310.1 with sales in billion . [system description] find the name and profits in billion in company table whose sales in billion greater than 310.1 ordered descending by profits in billion . [question] list the names of the companies with more than 200 sales in the descending order of sales and profits . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
[feedback] In step 2 , you should use customer name and drop summation of amount . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the summation of amount of each value of loan 's customer id of the results of step 1 . Step 3 : find the customer name and summation of amount of the results of step 1 ordered ascending by the results of step 2 . [question] What are the names of the different customers who have taken out a loan , ordered by the total amount that they have taken ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] Make sure that river length should be minimum . [system description] find the river name in river table with smallest value of length . [question] what is the shortest river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , replace Frigate with Cutter and in step 3 replace type with Armed schooner . [system description] Step 1 : find the rank in captain table whose captain 's class equals " Frigate " . Step 2 : for each row in ship table , find the corresponding rows in captain table . Step 3 : find the rank of the results of step 2 whose type equals " Panamax " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] Find the captain rank that has some captains in both Cutter and Armed schooner classes . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Armed schooner , Cutter ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] You should use kids , and make sure that their first name and last name is ROY SWEAZ . [system description] find the number of rows in reservations table whose first name equals " LENNY " and last name equals " HANUS " . [question] Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( ROY ) [C] adults [C] kids
[feedback] You need to use the lowest value of age . [system description] Step 1 : for each row in ship table , find the corresponding rows in captain table . Step 2 : find the ship 's name of the results of step 1 with largest value of age . [question] What is the name of the ship that is commanded by the youngest captain ? [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] In step 2 , you should use group equity shareholding instead of group equity shareholding . [system description] Step 1 : find the number of rows of each value of group equity shareholding in operate company table . Step 2 : find the group equity shareholding in operate company table with largest value in the results of step 1 . [question] What is maximum group equity shareholding of the companies ? [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
[feedback] In step 1 , delete department name equals English , in step 2 , find department name whose corresponding department number number is present in minor in table . [system description] Step 1 : find the department name in department table whose department name equals " English " . Step 2 : find the department name in department table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What is the name of the department htat has no students minoring in it ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to search for the number of movies which were released in 2013 . [system description] find the number of rows in movie table whose release year equals " dummy value " . [question] How many movies were produced in the year 2013 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Make sure to find for students who got grade equivalent to C in class . [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the student first name of the results of step 1 whose enroll grade equals " C " . [question] What are the first names of all students who got a grade C in a class ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , use genre is in place of genre name . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the average resolution of the results of step 1 whose genre name equals " modern " . Step 3 : find the song id in song table whose resolution greater than the results of step 2 . [question] What are the ids of all songs that have higher resolution of the average resolution in the modern genre ? [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , you should use service id in services table and participants table instead of service id in services table and service type code in events table respectively . [system description] Step 1 : find the number of rows of each value of service id in services table . Step 2 : find the service id and service type code in services table with smallest value in the results of step 1 . [question] Which service id and type has the least number of participants ? [schema] [T] services [C] service id [C] service type code [T] participants [C] participant id [C] participant type code ( Participant ) [C] participant details [T] events [C] event id [C] service id [C] event details [T] participants in events [C] event id [C] participant id
[feedback] You need to find the first name and office of professor who teaches in class table . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table and in professor table . Step 2 : find the employee first name , professor office , course description of the results of step 1 whose course code equals " CIS-220 " . [question] Find the first names and offices of all instructors who have taught some course and also find the course description . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , name should be Indiana University . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose name equals " INRIA " . [question] List the titles of the papers whose authors are from the institution " Indiana University " . [schema] [T] institution [C] institution id [C] name ( Indiana University ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 2 , you should use title instead of rating stars and also , search year should be minimum for movie . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the average rating stars and average title of the results of step 1 with largest value of year . [question] What is the average rating stars and title for the oldest movie ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , make sure that class room of teachers is equivalent to 109 . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's last name of the results of step 1 whose list 's class room equals 111 . [question] Which teachers teach in classroom 109 ? Give me their last names . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 2 , you should use last name and first name instead of first name and Olin respectively . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the name of the results of step 1 whose first name equals " Olin " . [question] What is the name of the institution the author " Katsuhiro Ueno " belongs to ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ueno ) [C] first name ( Katsuhiro ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to search for the rivers that pass through texas . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of density . [question] what are the biggest rivers in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should find name and description of tourist attractions and also replace exploration trial with filmfestival . [system description] Step 1 : for each row in photos table , find the corresponding rows in tourist attractions table . Step 2 : find the photos 's name and tourist attractions 's description of the results of step 1 whose tourist attractions 's name equals " exploration trial " . [question] Find the names and descriptions of the photos taken at the tourist attraction called " film festival " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name ( Film Festival ) [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name ( film festival ) [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 1 , use amenity id of has amenity in place of amenity name of dorm amenity table . [system description] Step 1 : find the number of rows of each value of amenity name in dorm amenity table . Step 2 : find the amenity name in dorm amenity table with largest value in the results of step 1 . [question] Find the name of amenity that is most common in all dorms . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Make sure the check in date is 2010 09 21 and first name is DAMIEN TRACHSEL . Also , delete last part . [system description] find the number of rows in reservations table whose first name equals " KELLY " and last name equals " CORSARO " and last name equals " JAHR " . [question] Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on Sep 21 , 2010 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( TRACHSEL ) [C] first name ( DAMIEN ) [C] adults [C] kids
[feedback] You should use students in detention in place of students table . [system description] find the number of student id in students table . [question] How many distinct students have been in detention ? [schema] [T] reference address types [C] address type code [C] address type description [T] reference detention type [C] detention type code [C] detention type description [T] reference incident type [C] incident type code [C] incident type description [T] addresses [C] address id [C] line 1 [C] line 2 [C] line 3 [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] students [C] student id [C] address id [C] first name [C] middle name [C] last name [C] cell mobile number [C] email address [C] date first rental [C] date left university [C] other student details [T] teachers [C] teacher id [C] address id [C] first name [C] middle name [C] last name [C] gender [C] cell mobile number [C] email address [C] other details [T] assessment notes [C] notes id [C] student id [C] teacher id [C] date of notes [C] text of notes [C] other details [T] behavior incident [C] incident id [C] incident type code [C] student id [C] date incident start [C] date incident end [C] incident summary [C] recommendations [C] other details [T] detention [C] detention id [C] detention type code [C] teacher id [C] datetime detention start [C] datetime detention end [C] detention summary [C] other details [T] student addresses [C] student id [C] address id [C] date address from [C] date address to [C] monthly rental [C] other details [T] students in detention [C] student id [C] detention id [C] incident id
[feedback] You should use time instead of train number and Chennai should be the destination . [system description] find the time and train number in train table whose destination equals " Kanniyakumari " ordered ascending by train number . [question] Give me the times and numbers of all trains that go to Chennai , ordered by time . [schema] [T] train [C] id [C] train number [C] name [C] origin ( Chennai ) [C] destination ( Chennai ) [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
[feedback] In step 1 , you should use event table and in step 2 , use name in place of news report 's journalist id . [system description] Step 1 : for each row in news report table , find the corresponding rows in journalist table . Step 2 : find the number of rows of each value of news report 's journalist id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Show the names of journalists that have reported more than one event . [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
[feedback] Only show the first three results . [system description] find the room name and room id in rooms table with largest value of base price . [question] Find the name and id of the top 3 expensive rooms . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , replace staff name in staff table with staff id in staff department assignments table . [system description] Step 1 : find the number of rows of each value of staff name in staff table . Step 2 : find the staff name in staff table whose corresponding value in step 1 is equals 1 . [question] What are the names of staff who have been assigned multiple jobs ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use birth country in place of losses . [system description] Step 1 : for each row in postseason table , find the corresponding rows in player table . Step 2 : find the birth country of the results of step 1 with smallest value of losses . [question] List three countries which are the origins of the least players . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 3 , you should use customer id and phone number instead of product id and product id respectively . [system description] Step 1 : for each row in customers table , find the corresponding rows in complaints table and in staff table . Step 2 : find the product id in complaints table . Step 3 : find the customers 's email address and staff 's phone number of the results of step 1 whose customers 's email address not one of the results of step 2 . [question] What are the emails and phone numbers of custoemrs who have never filed a complaint ? [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] In step 2 , you need to use river 's traverse and length greater than 750 instead of state name and dummy value respectively . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] what are the major rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace player 's player with position , replace college equals UCLA or college equals Duke . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 whose college equals " Wake Forest " or college equals " Duke " . [question] Show the distinct position of players from college UCLA or Duke . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( Duke , UCLA ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You need to search for highest elevation in place of lowest elevation . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest elevation . [question] what state has highest elevation [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the highest point in the state having capital des moines . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose capital equals " dummy value " . [question] what is the highest point in the state with capital des moines [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the name of river which has the largest length in the united states . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [question] what river is the longest one in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use decor in place of bed type . [system description] Step 1 : find rows in rooms table whose beds equals 1 . Step 2 : find each value of bed type the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of rooms with king bed for each decor type . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Replace address2 with store id . [system description] find the address in address table whose address2 equals " " . [question] Return the address of store 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to use sports info table , hours played and hours per week in place of plays games table , hours played and first name respectively . Also , mention last name as David Shieber . [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table . Step 2 : find the summation of hours played and summation of hours played of the results of step 1 whose first name equals " Dinesh " . [question] What is the total number of hours per work and number of games played by David Shieber ? [schema] [T] student [C] student id [C] last name ( Shieber ) [C] first name ( David ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to search for the name of building where its office is situated . [system description] find the name and name in companies table . [question] List the name of a building along with the name of a company whose office is in the building . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] In step 1 , you should use member in charge id and drop party name in party table . [system description] Step 1 : find the number of rows of each value of party name in party table . Step 2 : find the party name in party table with largest value in the results of step 1 . [question] What is the name of party with most number of members ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You should use author 's name and publication table in place of organization 's name and dummy value respectively . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the author 's name of the results of step 1 whose organization 's name equals " dummy value " . [question] return me the authors who have cooperated with " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to search for the river name having traverse of texas . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [question] what is the longest river that flows through texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the code of manufacturer along with average price of products for each . [system description] find each value of code in products table along with the manufacturer and average price of the corresponding rows to each value . [question] Select the average price of each manufacturer 's products , showing only the manufacturer 's code . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 3 , you should use product details instead of product id . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table . Step 2 : find the number of rows of each value of products 's product id of the results of step 1 . Step 3 : find the products 's product id of the results of step 1 with largest value in the results of step 2 . [question] Which product has been ordered most number of times ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] you need to search distinct name of department . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of school code of the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of departments in each school . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace training hours greater than 300 with training hours greater than 1000 . [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : only keep the results of step 1 whose training hours greater than 300 . Step 3 : find each value of player position the results of step 2 along with the maximum training hours of the corresponding rows to each value . [question] For each position , what is the maximum number of hours for students who spent more than 1000 hours training ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to search for the largest city in the state of Wyoming . [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [question] what is the largest city of wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , remove country name which is equivalent to dummy value and in step 2 , find number of distinct traverses . [system description] Step 1 : find the minimum length in river table whose country name equals " dummy value " . Step 2 : find the number of rows in river table whose length equals the results of step 1 . [question] how many states in the us does the shortest river run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure order date is greater than the order date of customer orders whose order status code equals Cancelled . [system description] find the customer id in customer orders table whose order status code equals " Cancelled " . [question] What are the distinct ids of customers who made an order after any order that was Cancelled ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Cancelled ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , make sure mississippi is the name of river that is being traversed by states . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose traverse equals " dummy value " . [question] which states border states through which the mississippi traverses [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use population and name of state in place of summation and area respectively . [system description] find the summation of population in state table whose area equals " dummy value " . [question] how many residents live in california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace publication 's jid , author 's name and writes table with journal 's citation num , PVLDB and year respectively . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the number of jid of the results of step 1 whose year equals " dummy value " and name equals " dummy value " . [question] return me the total citations of papers in PVLDB in 2005 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace dummy value with Relational Database in step 2 . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : find the name of the results of step 1 whose keyword equals " dummy value " . [question] return me the authors who have papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use traverse and drop area . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] what rivers are in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace projects table with documents table . [system description] find each value of project id in projects table along with the number of the corresponding rows to each value . [question] Show project ids and the number of documents in each project . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You should use how to get there equals bus or 254 Ottilie Junction instead of address equals 4510 Schuster Stream Apt . 613 or address equals 0692 Georgiana Pass . [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table . Step 2 : find the name of the results of step 1 whose address equals " 4510 Schuster Stream Apt . 613 " or address equals " 0692 Georgiana Pass " . [question] Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address ( 254 Ottilie Junction ) [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 2 , you should find star rating code instead of price range . [system description] Step 1 : for each row in ref hotel star ratings table , find the corresponding rows in hotels table . Step 2 : find each value of hotels 's star rating code of the results of step 1 along with the ref hotel star ratings 's star rating code and average price range of the corresponding rows to each value . [question] What is the average price range of hotels for each each star rating code ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You should use Accounting or Biology as a substitute of Marketing/Management or Sociology as a department name . [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the number of rows of the results of step 1 whose department name equals " Marketing/Management " or department name equals " Sociology " . [question] How many professors who are from either Accounting or Biology department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting , Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 3 , you should use amount settled of claims table . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the average settlements 's amount claimed in settlements table . Step 3 : find the claims 's date claim settled of the results of step 1 whose settlements 's amount claimed less than the results of step 2 . [question] Among all the claims , which settlements have a claimed amount that is no more than the average ? List the claim start date . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] In step 1 , you should use maximum resolution instead of minimum resolution and also , make sure that rating should be less than 8 . [system description] Step 1 : find the minimum resolution in song table whose rating less than 7 . Step 2 : find the song id in song table whose resolution greater than the results of step 1 . [question] What is the id of every song that has a resolution higher than that of a song with a rating below 8 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , you should arrange the product type code in ascending order . [system description] Step 1 : find the product name of each value of product type code in products table . Step 2 : find the maximum product price , minimum product price , product type code in products table ordered ascending by the results of step 1 . [question] Give the maximum and minimum product prices for each product type , grouped and ordered by product type . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You need to use density in place of population . [system description] find the population in state table with smallest value of area . [question] what is the population density of the state with the smallest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use 2000 in place of 2001 . [system description] find the director in movie table whose year equals 1999 or year equals 2001 . [question] Show all director names who have a movie in the year 1999 or 2000 . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] You should use Clemson as a substitute of nickname . [system description] Step 1 : for each row in university table , find the corresponding rows in basketball match table . Step 2 : find the all games and location of the results of step 1 whose nickname equals " Flying Dutchmen " . [question] What are the all games score and location of the school called Clemson ? [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] In step 1 , use race table in place of track table . [system description] Step 1 : find the number of rows of each value of name in track table . Step 2 : find the name in track table with largest value in the results of step 1 . [question] Show the name of track with most number of races . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
[feedback] You need to search for the river having its traverse in texas state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of density . [question] what is the largest river in texas state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use directed by , title and release year in place of birth year and title respectively . [system description] Step 1 : for each row in director table , find the corresponding rows in tv series table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " and birth year equals " dummy value " . [question] Who is the director of the tv series " House of Cards " from 2013 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to use country 's name in place of country id of roller coaster in step 2 . [system description] Step 1 : for each row in country table , find the corresponding rows in roller coaster table . Step 2 : find the number of rows of each value of roller coaster 's country id of the results of step 1 . Step 3 : find the country 's name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Show the names of countries that have more than one roller coaster . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
[feedback] Make sure that is male equals F . [system description] find the number of rows in people table whose age greater than 30 . [question] How many female people are older than 30 in our record ? [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] Make sure area should be minimum . [system description] find the state name in state table with smallest value of area . [question] what state has the smallest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the party having highest number of delegates . [system description] Step 1 : for each row in county table , find the corresponding rows in election table and in party table . Step 2 : find the party 's party of the results of step 1 with largest value of population . [question] Which party has the largest number of delegates ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] Replace player 's player with match season 's position . [system description] find each value of player in player table along with the number of the corresponding rows to each value . [question] Show the position of players and the corresponding number of players . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] Make sure that population should be more than 150000 and state name equals kansas . [system description] find the city name in city table whose state name equals " dummy value " . [question] what are the major cities of kansas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , use department code and student class hours took in place of department name and student num respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in department table . Step 2 : find each value of department name of the results of step 1 along with the summation of student num of the corresponding rows to each value . [question] How many hours do the students spend studying in each department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace region name in region table with storm id in affected region table . [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [question] Show the region name with at least two storms . [schema] [T] storm [C] storm id [C] name ( Two ) [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 1 , use name of institution and papers table in place of institution id and institution table respectively . [system description] Step 1 : find the number of rows of each value of institution id in institution table . Step 2 : find the name in institution table with largest value in the results of step 1 . [question] Which institution has the most papers ? Find the name of the institution . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Also find rating date , and order ascending by rating stars instead of name , title , and title . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the name , title , rating stars of the results of step 1 ordered ascending by name and title . [question] Return reviewer name , movie title , stars , and ratingDate . And sort the data first by reviewer name , then by movie title , and lastly by number of stars . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] Replace role with name , name with role , name with role . [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table . Step 2 : find the role of the results of step 1 whose name equals " dummy value " . [question] who acted the role of " Mr. Bean " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , you should use 1 as the value of author count and also make sure that last name should be Ohori . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table and in papers table . Step 2 : find the title of the results of step 1 whose country equals " France " and last name equals " Turon " . [question] Which papers ' first author is affiliated with an institution in the country " Japan " and has last name " Ohori " ? Give me the titles of the papers . [schema] [T] institution [C] institution id [C] name [C] country ( Japan ) [T] authors [C] author id [C] last name ( Ohori ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use title instead of genre and also delete dummy value . [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the release year of the results of step 1 whose genre equals " dummy value " . [question] What year is the movie " The Imitation Game " from ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to calculate the total number of hours played by students . [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table . Step 2 : find each value of plays games 's student id of the results of step 1 along with the number of the corresponding rows to each value . [question] What are the ids of all students and number of hours played ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Make sure that state has minimum population density . [system description] find the state name in state table with smallest value of density . [question] what state has the sparsest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace domain author table , domain keyword table , domain author table and keyword equals dummy value with publication keyword table , journal table , title and keyword equals PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the number of publication 's pid of the results of step 1 whose keyword equals " dummy value " and keyword equals " dummy value " . [question] return me the number of papers in PVLDB containing keyword " Keyword search " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use bank 's no of customers instead of customer 's branch id . [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the summation of no of customers of each value of customer 's branch id of the results of step 1 . Step 3 : find the customer name of the results of step 1 with largest value in the results of step 2 . [question] What is the name of the bank branch with the greatest number of customers ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to ensure that number of deaths should be one or more than one . [system description] find the number of rows in storm table . [question] Count the number of storms in which at least 1 person died . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You need to determine the number of station id from the route table and also the services . [system description] find each value of network name in station table along with the number of the corresponding rows to each value . [question] Find the number of trains for each station , as well as the station network name and services . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
[feedback] Replace name in aircraft table with airline id in flight table in step 1 . [system description] Step 1 : find the number of rows of each value of name in aircraft table . Step 2 : find the name in aircraft table whose corresponding value in step 1 is greater than or equals 1 . [question] Show names for all aircraft with at least two flights . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 1 , director must be different from other director . [system description] Step 1 : find the number of rows of each value of director in movie table . Step 2 : find the title and year in movie table whose corresponding value in step 1 is greater than 1 . [question] For each director who directed more than one movie , what are the titles and dates of release for all those movies ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , you should count the number of different traverses of river . [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [question] what river runs through the most states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you need to use sex instead of pen and paper gaming . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Bootup Baltimore " and club name equals " Pen and Paper Gaming " . [question] Give me the first name and last name for all the female members of the club " Bootup Baltimore " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] In step 3 , you should use product details and order quantity in place of customer name and products product id respectively . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table and in customer orders table and in customers table . Step 2 : find the number of rows of each value of products 's product id of the results of step 1 . Step 3 : find the customer name and products 's product id of the results of step 1 with largest value in the results of step 2 . [question] What are the name and ID of the product bought the most . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to search for the name of mountain . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest elevation . [question] what is the highest mountain in us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use number of city affected from affected region table and in step 3 , use storm id instead of name . [system description] Step 1 : find the number of rows of each value of name in storm table . Step 2 : find the name in storm table whose corresponding value in step 1 is greater than or equals 1 . Step 3 : find the number of rows of each value of name in storm table . Step 4 : find the name in storm table whose corresponding value in step 3 is greater than or equals 1 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the names of storms that both affected two or more regions and affected a total of 10 or more cities ? [schema] [T] storm [C] storm id [C] name ( Two ) [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 1 , use activity name in place of activity id . [system description] Step 1 : find the student id in participates in table whose participates in 's activity id equals 776 . Step 2 : for each row in participates in table , find the corresponding rows in activity table . Step 3 : find the student id of the results of step 2 whose activity name equals " Football " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] Find the ids of the students who participate in Canoeing and Kayaking . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] Replace name with start station name , end station id with start station name . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the name and end station id of the results of step 1 with smallest value of trip 's id . [question] What is the station station and end station for the trips with the three smallest ids ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 1 , replace faculty table with faculty participates in table . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are ids of the faculty members who not only participate in an activity but also advise a student . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , find distinct value of course credit for each distinct department . [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find each value of department 's department code of the results of step 1 along with the summation of course credit of the corresponding rows to each value . [question] What is the total credit does each department offer ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use Football or Lacrosse as a substitute of Baseball or games played as 18 . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find the last name and first name of the results of step 1 whose sport name equals " Baseball " or games played equals 18 . [question] Find the last and first name of students who are playing Football or Lacrosse . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Lacrosse , Football ) [C] hours per week [C] games played [C] on scholarship
[feedback] You need to search for the largest value of population . [system description] find the state name in state table with largest value of population . [question] what state has the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the rows count which is equivalent to all the value of party id from party table . [system description] find each value of party id in party events table along with the number of the corresponding rows to each value . [question] How many events are there for each party ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] Find date , zip code whose min dew point f is less than min dew point f of weather table whose zip code equals 94107 and also make sure that zip code equals 94041 . [system description] Step 1 : for each row in weather table , find the corresponding rows in status table . Step 2 : find the minimum zip code in weather table whose zip code equals 94041 . Step 3 : find the time and mean dew point f of the results of step 1 whose zip code less than the results of step 2 . [question] Which days had a minimum dew point smaller than any day in zip code 94107 , and in which zip codes were those measurements taken ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Make sure that river length should be minimum . [system description] find the river name in river table with smallest value of length . [question] which is the shortest river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace student date of birth and course code with employee date of birth and class code respectively . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table and in student table . Step 2 : find the employee first name and student date of birth of the results of step 1 whose course code equals " CIS-220 " . [question] What are the first names and date of birth of professors teaching course ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use form id of party forms instead of form name of forms table . [system description] Step 1 : find the number of rows of each value of form name in forms table . Step 2 : find the form name in forms table with largest value in the results of step 1 . [question] Find the name of the most popular party form . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] You need to calculate the population of Boulder . [system description] find the number of rows in city table whose city name equals " dummy value " . [question] how big is the city of boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use participants in events table . [system description] find the participant id in participants table . [question] What are all the distinct participant ids who attended any events ? [schema] [T] services [C] service id [C] service type code [T] participants [C] participant id [C] participant type code ( Participant ) [C] participant details [T] events [C] event id [C] service id [C] event details [T] participants in events [C] event id [C] participant id
[feedback] date assigned from is not correct , Take date assigned to in place of it . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff 's staff id and staff name of the results of step 1 with smallest value of date assigned to . [question] Find the id and name of the staff who has been assigned for the shortest period . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You need to use contains in step 2 . [system description] Step 1 : for each row in staff table , find the corresponding rows in lessons table . Step 2 : find the number of rows of the results of step 1 whose first name like " Kaitlin " . [question] How many lessons taught by staff whose first name has letter ' a ' in it ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 2 , you should use length greater than 750 and the traverse should be illinois . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] name the major rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that max occupancy should be more than two and base price should be greater than 160 . [system description] find the room name and room id in rooms table whose base price greater than 250 and base price less than 250 . [question] What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You should use length whose river name is rio grande . [system description] find the summation of length in river table whose river name equals " dummy value " . [question] how long is rio grande [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use cast 's name in place of name which is equivalent to dummy value . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [question] What is the number of movies featuring " Shahab Hosseini " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search similar name of track 's . [system description] find the name , date , date in race table . [question] What are the names and dates of races , and the names of the tracks where they are held ? [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
[feedback] You should order by class and not by type . [system description] find the name and type in ship table ordered ascending by built year . [question] What are the names of ships , ordered by year they were built and their class ? [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Make sure to find for reviewer who reviewed Gone with the Wind . [system description] find the name in reviewer table . [question] What are the names of all the different reviewers who rates Gone with the Wind ? [schema] [T] movie [C] movie id [C] title ( Gone with the Wind ) [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , you should use the capital albany and in step 3 , search for river name whose river does not cross state . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city 's state name of the results of step 1 whose capital equals " dummy value " . Step 3 : find the number of rows in river table whose river name not one of the results of step 2 . [question] how many rivers do not traverse the state with the capital albany [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the river in river table . [system description] find the state name in state table . [question] which states have a river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , remove movie table and replace it with rating table . In step 2 , replace movie table with rating table . [system description] Step 1 : find the movie 's movie id in movie table . Step 2 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 3 : find the movie 's movie id of the results of step 2 whose name equals " Brittany Harris " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ids of all moviest hat have not been reviewed by Britanny Harris ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should use the smallest major . [system description] Step 1 : find the number of rows of each value of major in student table . Step 2 : find the major and number of rows in student table with smallest value in the results of step 1 . [question] Which major has least number of students ? List the major and the number of students . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
[feedback] Replace player table with match season table , and name equals Ryley Goldner . [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : find the player of the results of step 1 whose name equals " Evalyn Feil " . [question] Show the positions of the players from the team with name " Ryley Goldner " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name ( Ryley Goldner ) [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] Replace student table with class table and replace student last name with employee last name . [system description] find the number of rows in student table whose student last name equals " Oblonski " . [question] How many classes are professor whose last name is Graztevski has ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Graztevski ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use length instead of height . [system description] Step 1 : find the roller coaster 's country id in roller coaster table whose height greater than 163 . Step 2 : find the number of rows in country table whose country 's country id not one of the results of step 1 . [question] How many countries do not have an roller coaster longer than 3000 ? [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
[feedback] You need to search for the river having its traverse in texas . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of length . [question] what is the longest river in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , replace department name in department table with department code in student table . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name , department address , number of rows in department table with largest value in the results of step 1 . [question] Find the name , address , number of students in the departments that have the top 3 highest number of students . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , name of person friend should not be Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose person 's name equals " Alice " . [question] Find Alice 's friends of friends . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] In step 2 , state province county should be Georgia . [system description] Step 1 : for each row in staff table , find the corresponding rows in addresses table . Step 2 : find the number of rows of the results of step 1 whose state province county equals " WestVirginia " . [question] How many employees live in Georgia ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county ( Georgia ) [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to search for the movies which have Jennifer Aniston as the lead actress . [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table and in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and role equals " dummy value " . [question] What is the number of movies in which " Jennifer Aniston " acted after 2010 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should use person friend instead of person table . [system description] Step 1 : find the number of rows of each value of name in person table . Step 2 : find the name in person table whose corresponding value in step 1 is equals 1 . [question] What are the names of everybody who has exactly one friend ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] You should use tryout table instead of college table . [system description] find the number of college name in college table . [question] How many different colleges do attend the tryout test ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 1 , you should use author table and name of conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the number of writes 's pid of the results of step 1 whose name equals " dummy value " . [question] return me the number of authors who have papers in the VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to make sure that state name should be texas . [system description] find the border in border info table whose border equals " dummy value " . [question] what states border states that border states that border states that border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 4 , you should use player position equals goalie and not the player id . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : for each row in tryout table , find the corresponding rows in player table . Step 3 : find the player 's player id of the results of step 2 whose player position equals " striker " . Step 4 : find the summation of enrollment of the results of step 1 whose player position not one of the results of step 3 . [question] What is the total number of enrollment of schools that do not have any goalie player ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
[feedback] You need to search for the lowest value of birth state . [system description] find the birth country in player table with smallest value of birth state . [question] What are the three countries that the least players are from ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You should order by built year and class only . [system description] find the name and class in ship table ordered ascending by built year . [question] List all ship names in the order of built year and class . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Replace type with founded and remove whose type equals Tribal . [system description] find the number of rows in institution table whose type equals " Private " or type equals " Tribal " . [question] How many proteins are associated with an institution founded after 1880 or an institution with type " Private " ? [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type ( Private ) [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] Replace employee date of birth equals 1950-11-2 with employee job code equals PROF . [system description] find the employee first name in employee table whose employee date of birth equals " 1950-11-2 " ordered ascending by employee date of birth . [question] What are the first names of all employees that are professors ordered by date of birth ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you should use traverse in place of state name and make sure that river name should be from illinois . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] name the rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] I want company details and number of gas stations . [system description] find each value of company id in station company table along with the number of the corresponding rows to each value . [question] For each company id , what are the companies and how many gas stations does each one operate ? [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] Find number of rows of sports info 's student id , games played , and make sure students have participated in sports . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : find the plays games 's student id and games played of the results of step 1 . [question] What are the ids of all students along with how many sports and games did they play ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Replace team franchise table with team id , and franchise name with name equals Boston Red Stockings . [system description] Step 1 : for each row in postseason table , find the corresponding rows in team franchise table . Step 2 : only keep the results of step 1 whose franchise name equals " St. Paul Apostles " . Step 3 : find each value of year the results of step 2 along with the number of the corresponding rows to each value . [question] For each year , return the year and the number of times the team Boston Red Stockings won in the postseasons . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Find lowest elevation is equals minimum lowest elevation highlow , not maximum lowest elevation . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum lowest point of the results of step 1 whose border info 's state name equals " dummy value " . [question] what is the lowest point in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use title of the movie which is The Past , and also delete whose birth year is equivalent to dummy value . [system description] find the name in director table whose birth year equals " dummy value " . [question] where is the director of " The Past " from [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search for the population of city having its name as wisconsin and its population should be more than 150000 . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's population of the results of step 1 whose city 's state name equals " dummy value " . [question] what are the populations of all the major cities in wisconsin [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use open date in step 2 . Show first 3 results in step 1 . [system description] Step 1 : find the summation of open date of each value of church id in church table . Step 2 : find the name and open date in church table with largest value in the results of step 1 . [question] Show the name and opening year for three churches that opened most recently . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] You need to search for the average value of transaction amount and the largest value of transaction amount . [system description] find the average transaction amount , summation of transaction amount , summation of transaction amount , summation of transaction amount in financial transactions table . [question] What is the average , minimum , maximum , and total transaction amount ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 2 , you should use acceptance 's workshop id instead of author . [system description] Step 1 : for each row in submission table , find the corresponding rows in acceptance table and in workshop table . Step 2 : find the number of rows of each value of author of the results of step 1 . Step 3 : find the author of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Which authors have submitted to more than one workshop ? [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
[feedback] Replace vocals table with performance table , title with title , and make sure performer perform back stage . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the first name and last name of the results of step 1 whose title equals " dummy value " . [question] Who is performing in the back stage position for the song " Der Kapitan " ? Show the first name and last name . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to search date and venue of negative side of debate table . [system description] Step 1 : for each row in debate table , find the corresponding rows in debate people table and in people table . Step 2 : find the name and date of the results of step 1 ordered ascending by negative and negative . [question] Show the names of people , and dates and venues of debates they are on the negative side , ordered in ascending alphabetical order of name . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
[feedback] You need to use type of Album 's in step 2 . [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the number of rows of the results of step 1 whose albums 's title equals " dummy value " . [question] Find the number of songs in all the studio albums . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to use the player 's unique id in step 3 . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the average overall rating in player attributes table . Step 3 : find the player name of the results of step 1 whose overall rating greater than the results of step 2 . [question] List all player names who have an overall rating higher than the average . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
[feedback] In step 1 , you should count the number of distinct product id in order items table . [system description] Step 1 : find the number of rows of each value of customer name in customers table . Step 2 : find the customer name in customers table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the distinct names of customers who have purchased at least three different products ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , substitute department name equals Accounting or department name equals Biology . [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the number of rows of the results of step 1 whose professor 's department code equals " CIS " or department name equals " History " . [question] What is the number of professors who are in the Accounting or Biology departments ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting , Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 and 3 , you should use product details for Latte and Americano for order status equals Delivered . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table and in customer orders table and in customers table . Step 2 : find the customer name of the results of step 1 whose products 's product id equals 2 . Step 3 : for each row in customer orders table , find the corresponding rows in customers table . Step 4 : find the customer name of the results of step 3 whose order status equals " Delivered " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the names of customers who have purchased both products Latte and Americano ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details ( Americano , Latte ) [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to use the city table for searching . [system description] find the state name in state table with largest value of density . [question] what state has the largest city [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use price in dollar of furniture manufacte table . [system description] find the name and market rate in furniture table . [question] Give me the names and prices of furnitures which some companies are manufacturing . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] Find distinct value of course credit which is offered by each department . [system description] find the summation of course credit in course table . [question] How many credits does the department offer ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace cite table with writes table , publication 's pid with journal 's title , cited with year greater than 2000 , author 's name equals H. V. Jagadish . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the number of pid of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " and year greater than " dummy value " . [question] return me the number of papers by " H. V. Jagadish " on PVLDB after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , replace department , course and course code with class , enroll and course code respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the average student gpa of the results of step 1 whose course code equals " CIS-220 " . [question] What is the average gpa of the students enrolled in the course with code ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use ref document types table instead of documents table . [system description] find the document type code in documents table . [question] What document type codes do we have ? [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] In step 2 , you should use product name which is chervil . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the reference colors 's color code and color description of the results of step 1 whose product name equals " cinnam " . [question] What is the color code and description of the product named " chervil " ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( chervil ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to verify that the attendance of exhibition is usually more than 200 . [system description] Step 1 : for each row in exhibition record table , find the corresponding rows in exhibition table and in artist table . Step 2 : find the average attendance of each value of name of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What are the names of artist whose exhibitions draw over 200 attendees on average ? [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] You need to ensure that year should be 2005 or more . [system description] find the number of rows in exhibition table whose year greater than 2006 . [question] Count the number of exhibitions that happened in or after 2005 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] You need to use gender as female . [system description] find the number of gender in person table whose gender equals " male " . [question] How many females does this network has ? [schema] [T] person [C] name [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name [C] friend [C] year
[feedback] fda approved equals Yes should be use in place of fda approved contains Yes . [system description] find the name and trade name in medicine table whose fda approved like " Yes " . [question] What are the names and trade names of the medicines which has 'Yes ' value in the FDA record ? [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved ( Yes ) [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] In step 2 , you should use 1121 as a substitute of 2311 . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose advisor equals 2311 . [question] List the clubs that have at least a member with advisor " 1121 " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to use Credit as the card type code in Customers Cards 's table.Also add the last name of customer and her family name . [system description] find the number of rows in customers table whose customer first name equals " Armani " and customer last name equals " Davis " . [question] How many credit cards does customer Blanche Huels have ? [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name ( Blanche ) [C] customer last name ( Huels ) [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code ( Credit ) [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] In step 2 , use address2 in place of city . [system description] Step 1 : for each row in city table , find the corresponding rows in address table . Step 2 : find the number of rows of each value of city of the results of step 1 . Step 3 : find the city , address 's city id , number of rows of the results of step 1 with largest value in the results of step 2 . [question] Which city has the most addresses ? List the city name , number of addresses , and city id . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 2 , you need to use largest value of student capacity in dorm table . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the average age of the results of step 1 with largest value of student capacity . [question] What is the average age of students who are living in the dorm with the largest capacity ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] Confirm that faculty are instructors . [system description] find the first name and last name in faculty table . [question] Show the first name and last name for all the instructors . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
[feedback] You need to search for the city only . [system description] find the city and city in city table with smallest value of gdp . [question] What is the city with the smallest GDP ? Return the city and its GDP . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] You should use highest elevation in place of state name which is equivalent to dummy value . [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [question] what is the highest point in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use capacity which is higher than 300 . [system description] Step 1 : for each row in film table , find the corresponding rows in schedule table and in cinema table . Step 2 : only keep the results of step 1 whose capacity greater than 208 . Step 3 : find the number of rows of each value of location the results of step 2 . Step 4 : find the location the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] In which locations are there more than one movie theater with capacity above 300 ? [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
[feedback] You should use elevation 's lowest point instead of elevation 's highest point . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose country name equals " dummy value " . [question] what is the lowest point in usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use D instead of Eddie in step 2 . [system description] Step 1 : for each row in player table , find the corresponding rows in tryout table and in college table . Step 2 : find the college 's college name of the results of step 1 whose player name like " Eddie " . [question] Which colleges do the tryout players whose name starts with letter D go to ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You should use population and name of state in place of summation and area respectively . [system description] find the summation of population in state table whose area equals " dummy value " . [question] how many citizens live in california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for minimum ticket price and use year less than 2009 . [system description] find the average ticket price , maximum ticket price , maximum ticket price , maximum ticket price in exhibition table whose year less than 2008 . [question] What are the average , minimum , and maximum ticket prices for exhibitions that happened prior to 2009 ? [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] In step 2 , you should use revenue and headquarter in place of founder and Mary respectively and remove Andy . [system description] Step 1 : find the founder in manufacturers table whose founder equals " Mary " . Step 2 : find the summation of revenue in manufacturers table whose founder equals the results of step 1 and founder equals " Andy " . [question] What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin ? [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] you need to determine the number of rows that correspond to each class section of course . [system description] find each value of course code in course table along with the number of the corresponding rows to each value . [question] How many sections does each course has ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace team 's year equals 1989 with postseason 's year equals 2009 , name equals Boston Red Stockings . [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table . Step 2 : find the number of wins of the results of step 1 whose postseason 's year equals 1989 and team 's year equals 2006 . [question] How many times did Boston Red Stockings lose in 2009 postseason ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Replace projects table with documents table . [system description] find each value of project id in projects table along with the number of the corresponding rows to each value . [question] How many documents correspond with each project id ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to use the name of state . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with largest value of highest point . [question] what states have a capital that is the highest point in the state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use name of state in place of country name and also delete the phrase with largest value of density . [system description] find the density in state table whose country name equals " dummy value " with largest value of density . [question] what is the most dense state in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Also find card type code along with card id . [system description] find the card id , customer id , card number , card number in customers cards table . [question] What are card ids , customer ids , card types , and card numbers for each customer card ? [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] In step 3 , you should count the number of film id and title . [system description] Step 1 : for each row in inventory table , find the corresponding rows in film text table and in film table . Step 2 : find the summation of rating of each value of inventory 's film id of the results of step 1 . Step 3 : find the film text 's title and film text 's film id of the results of step 1 with largest value in the results of step 2 . [question] What is the title and id of the film that has the greatest number of copies in inventory ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Replace id with bike id . [system description] find the number of id in trip table . [question] From the trip record , find the number of unique bikes . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Replace copyright table with movie table , actor 's name with actor 's name , actor 's name with producer 's name . [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in made by table and in producer table . Step 2 : find the producer 's name of the results of step 1 whose actor 's name equals " dummy value " and actor 's name equals " dummy value " . [question] Find the producers of all movies in which " Kate Winslet " is an actor [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should use product description instead of product name . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description of the results of step 1 whose product name like " flax " . [question] What are the descriptions of the categories that products with product descriptions that contain the letter t are in ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace organization with journal in step 1 , name with PVLDB in step 2 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [question] return me the papers on PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Also find date account opened , and change customer first name equals Kieran with customer first name equals Meaghan . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find the account id , account name , other account details of the results of step 1 whose customer first name equals " Kieran " . [question] Show the id , the account name , and other account details for all accounts by the customer with first name 'Meaghan ' . [schema] [T] customers [C] customer id [C] customer first name ( Meaghan ) [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to search for the lowest price possible for each product . [system description] find the code , name , price in products table with smallest value of price . [question] What are the codes and names of the cheapest products in each category ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] Find population of city table whose city name equals boulder . [system description] find the number of rows in mountain table whose mountain name equals " dummy value " . [question] how many inhabitants does boulder have [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use document type code BK and also search for the value of product id . [system description] Step 1 : find rows in documents table whose document type code equals " FM " . Step 2 : find each value of document id the results of step 1 along with the number of the corresponding rows to each value . [question] Count the number of documents with the type code BK that correspond to each product id . [schema] [T] reference document types [C] document type code ( BK ) [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( BK ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You should use player 's player and Indonesia instead of player 's player and official native language respectively . [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose official native language equals " Persian ( Arabic script ) " . [question] Which players are from Indonesia ? [schema] [T] country [C] country id [C] country name ( Indonesia ) [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] Make sure to find distinct number of school code in department table . [system description] find the number of rows in department table . [question] How many schools are there in the department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 3 , replace checking with savings . In step 2 , replace checking with savings . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the average checking 's balance in checking table . Step 3 : find the name , savings 's balance , checking 's balance of the results of step 1 whose checking 's balance greater than the results of step 2 . [question] What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] Replace oid of organization table with name of domain journal table , and name with area of PVLDB . [system description] find the oid in organization table whose name equals " dummy value " . [question] return me the area of PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use descending order . [system description] find the first name in student table ordered ascending by age . [question] What are the first names of students , ordered by age from greatest to least ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to use state name as a substitute of border equals dummy value . [system description] find the border in border info table whose border equals " dummy value " . [question] what states border kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , make sure sport has highest number of students on scholarship . [system description] Step 1 : find the number of rows of each value of sport name in sports info table . Step 2 : find the sport name in sports info table with largest value in the results of step 1 . [question] What is the sport with the most scholarship students ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Replace last name with sex , last name with rank , and make sure sex equals M and F . [system description] find the number of rows and last name in faculty table whose sex equals " F " and last name equals " Meyer " . [question] Show the number of male and female assistant professors . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] In step 3 , you should use person friend table . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person friend 's name of the results of step 1 whose city equals " new york city " . Step 3 : find the number of rows in person table whose person 's name not one of the results of step 2 . [question] What is the total number of people who has no friend living in the city of Austin . [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
[feedback] In step 2 , you should delete the name of state which is equivalent to dummy value and in step 3 , you should determine the density . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the maximum density in state table whose state 's state name equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose population equals the results of step 2 . [question] what is the state with the largest density in usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use date payment made in place of amount payment . [system description] find the payment method code , date payment made , amount payment in payments table ordered ascending by amount payment . [question] What are the method , date and amount of each payment ? Sort the list in ascending order of date . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You should use title which includes Database . [system description] find the paper id in papers table whose title like " An Equivalence-Preserving CPS Translation via Multi-Language Semantics " . [question] Which papers have the substring " Database " in their titles ? Show the titles of the papers . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Need to find distinct keyword . [system description] find the number of rows in keyword table . [question] return me the number of keywords . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 3 , you need to find the last name of customer . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find the number of rows of each value of accounts 's customer id of the results of step 1 . Step 3 : find the customer first name , customer first name , customers 's customer id of the results of step 1 with smallest value in the results of step 2 . [question] Give the full name and customer id of the customer with the fewest accounts . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] Replace city name with state name , remove dummy value . [system description] find the city name in city table whose city name equals " dummy value " . [question] where is springfield [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Remove whose country name equals dummy value . [system description] find the summation of length in river table whose country name equals " dummy value " . [question] what is the total length of all rivers in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use river 's length instead of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 with largest value of length . [question] which state has the longest river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to find the number of rows corresponding to the player id in the hall of fame . [system description] Step 1 : for each row in hall of fame table , find the corresponding rows in player table . Step 2 : find each value of yearid of the results of step 1 along with the number of the corresponding rows to each value . [question] How many players enter hall of fame each year ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last ( Hall ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 3 , you should verify that the supplier id of product suppliers should be 2 . [system description] Step 1 : for each row in products table , find the corresponding rows in product suppliers table . Step 2 : find the average total value purchased in product suppliers table . Step 3 : find the product suppliers 's product id of the results of step 1 whose product price greater than the results of step 2 . [question] What are the ids of products from the supplier with id 2 , which are more expensive than the average price across all products ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Replace weather table with status table , max visibility miles with bikes available . [system description] Step 1 : for each row in station table , find the corresponding rows in weather table . Step 2 : find the average mean visibility miles of the results of step 1 whose city not equals " Mountain View " . [question] What is the average bike availablility for stations not in Palo Alto ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search the party name whose corresponding value is present in election table for that particular delegate . [system description] find the party in party table . [question] For each delegate , find the names of the party they are part of . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] You should use class table and code of course . [system description] find the number of rows in course table whose course code equals " ACCT-211 " . [question] How many sections does course ACCT-211 has ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , use farm competition 's host city id in place of status in city table . [system description] Step 1 : find the number of rows of each value of status in city table . Step 2 : find the status in city table with largest value in the results of step 1 . [question] Show the status of the city that has hosted the greatest number of competitions . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] You should use vbogisich @ example.org instead of rzulauf @ example.org and paige.hyatt @ example.com respectively . [system description] find the address line 1 and address line 2 in customers table whose email address equals " rzulauf @ example.org " and email address equals " paige.hyatt @ example.com " . [question] Find the address line 1 and 2 of the customer with email " vbogisich @ example.org " . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] You need to calculate the number of beds for which King is Type of bed . [system description] find the number of rows in rooms table whose room name equals " Interim but salutary " . [question] How many king beds are there ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , you should use wedding table in place of church table . [system description] Step 1 : find the number of rows of each value of name in church table . Step 2 : find the name in church table whose corresponding value in step 1 is greater than or equals 1 . [question] Show all church names that have hosted least two weddings . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] In step 1 , you should use amount claimed in place of amount settled . [system description] Step 1 : find the average amount settled in claims table . Step 2 : find the date claim made and date claim settled in claims table whose amount settled greater than the results of step 1 . [question] Among all the claims , which claims have a claimed amount larger than the average ? List the date the claim was made and the date it was settled . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You need to use population . [system description] find the city name in city table whose country name equals " dummy value " with largest value of population . [question] what is the biggest city in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use support rate in place of oppose rate . Show first 3 rows . [system description] find the oppose rate in candidate table with largest value of support rate . [question] what are the top 3 highest support rates ? [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] You need to determine the corresponding rows for each value of account Id from the financial transactions table . [system description] find each value of account id in accounts table along with the number of the corresponding rows to each value . [question] Return the names and ids of each account , as well as the number of transactions . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 2 , you should use supplier id rather than supplier name . [system description] Step 1 : for each row in products table , find the corresponding rows in product suppliers table and in suppliers table . Step 2 : find the product type code , product name , product price of the results of step 1 whose supplier name equals " Tesco " . [question] Return the product type , name , and price for products supplied by supplier 3 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 1 , you should use orders table in place of customers table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer last name , customer id , phone number in customers table with largest value in the results of step 1 . [question] Return the last name , id and phone number of the customer who has made the greatest number of orders . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to calculate the value of order items 's order item Id . [system description] find each value of order item id in order items table along with the number of the corresponding rows to each value . [question] How many order items correspond to each order id ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You should use bikes available instead of 17 . [system description] Step 1 : find the station id in status table whose bikes available greater than 17 . Step 2 : find the average longitude in station table whose id not one of the results of step 1 . [question] What is the average longitude of stations that never had bike availability more than 10 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 3 , use country instead of country . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country and number of rows of the results of step 1 with largest value in the results of step 2 . [question] Retrieve the country that has published the most papers . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Remove whose genre name equals pop , and arrange them in alphabetical order . [system description] find the genre name and rating in genre table whose genre name equals " pop " . [question] List the names of all genres in alphabetical oder , together with its ratings . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , you should use inventory in place of film text . [system description] Step 1 : for each row in film text table , find the corresponding rows in film table . Step 2 : find the number of rows of each value of film 's film id of the results of step 1 . Step 3 : find the film text 's title and film 's film id of the results of step 1 with largest value in the results of step 2 . [question] Which film has the most copies in the inventory ? List both title and id . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to use duration which is equivalent to 3 minutes . [system description] find the maximum resolution and minimum resolution in song table whose resolution less than 1080 . [question] What is the maximum and minimum resolution of all songs that are approximately 3 minutes long ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to use country which is equivalent to Italy and drop GPT . [system description] find the number of rows in routes table whose destination airport equals " GPT " . [question] Find the number of routes with destination airports in Italy . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Italy ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( Italy ) [C] active
[feedback] You should use QM-261 in place of CIS-220 . [system description] find the course description and course credit in course table whose course code equals " CIS-220 " . [question] Find the description and credit for the course QM-261 ? [schema] [T] class [C] class code [C] course code ( QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , make sure that gender should be female . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Zach " . [question] What are the names of all females who are friends with Zach ? [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] In step 1 and 2 , you should use tourist details of Alison and Rosalind and drop name of cafe and UK gallery . [system description] Step 1 : find the name in tourist attractions table whose name equals " cafe " . Step 2 : find the name in tourist attractions table whose name equals " UK gallery " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of tourist attraction that Alison visited but Rosalind did not visit ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Rosalind , Alison ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Remove whose grade equals C- , also find minimum grade point . [system description] Step 1 : for each row in enrolled in table , find the corresponding rows in grade conversion table . Step 2 : find the maximum grade point and grade of the results of step 1 whose grade equals " C- " . [question] What are the maximum and minumum grade points ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to use the song 's title which is equivalent to Le Pop and also search for the number of instrument . [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " . [question] How many instruments does the song " Le Pop " use ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 1 , you should use minimum enrollment . [system description] Step 1 : find the maximum enrollment in college table whose state equals " FL " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [question] What are the names of the colleges that are larger than at least one college in Florida ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Replace actor table with producer table , actor 's name with writer 's name , make sure writer 's name equals Woody Allen . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title and title of the results of step 1 whose name equals " dummy value " . [question] Find all movies written and produced by " Woody Allen " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Also find amount payment , date payment made and Make sure payment method code equals Visa . [system description] find the payment id and date payment made in payments table whose payment id equals 886 . [question] Which Payments were processed with Visa ? List the payment Id , the date and the amount . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code ( Visa ) [C] date payment made [C] amount payment
[feedback] In step 2 , you should use traverse and drop state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] what are all the rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace customer id with email , robbrown @ shaw.ca with gmail.com . [system description] find the number of customer id in customer table whose email like " robbrown @ shaw.ca " . [question] Count the number of customers that have an email containing " gmail.com " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers , Coma ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You need to calculate the population of California . [system description] find the number of rows in state table whose state name equals " dummy value " . [question] how many people are in the state of california [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure product type code equals Hardware . [system description] find the product name in products table with largest value of product price . [question] What is the name of the hardware product with the greatest price ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Hardware ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 1 , use author table and name in place of cite table and dummy value in step 2 and 3 respectively . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of rows of each value of keyword the results of step 2 . Step 4 : find the keyword and number of rows the results of step 2 with largest value in the results of step 3 . [question] return me the keyword , which have been contained by the most number of papers by " H. V. Jagadish " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use length feet instead of length meters . [system description] find the average length meters in bridge table . [question] What is the average length in feet of the bridges ? [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
[feedback] Find highest point in texas instead of mountain altitude . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose mountain 's state name equals " dummy value " with largest value of highest elevation . [question] what is the highest mountain in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , use the smallest value of professor 's department code . [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the number of rows of each value of professor 's department code of the results of step 1 . Step 3 : find the department name of the results of step 1 with largest value in the results of step 2 . [question] What is the name of department where has the smallest number of professors ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should delete whose omim equals 600923 . [system description] find the maximum omim in enzyme table whose omim equals 600923 . [question] What is the maximum Online Mendelian Inheritance in Man ( OMIM ) value of the enzymes ? [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] You should use the largest value of rating stars . [system description] find the maximum rating stars and minimum rating stars in rating table with smallest value of rating stars . [question] What is the lowest and highest rating star ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , I want the total number of rows of student table . [system description] Step 1 : find the student id in student table with largest value of major . Step 2 : find the first name and last name in student table whose major not equals the results of step 1 . [question] What is the first and last name of the students who are not in the largest major ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to search for flight 's flight number . [system description] find the number of rows in flight table whose distance greater than 2551 . [question] What are the numbers of all flights that can cover a distance of more than 2000 ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Replace student table and professor table with class table and employee table respectively , replace student 's high degree and professor code with employee first name and department name respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in professor table . Step 2 : find the student first name and professor high degree of the results of step 1 whose professor 's department code equals " ECON/FIN " . [question] What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use max temperature f , max gust speed mph in place of max temperature f and max humidity respectively . Show only the first 3 rows . [system description] find the date , max temperature f , mean humidity in weather table with largest value of max humidity . [question] What are the date , mean temperature and mean humidity for the top 3 days with the largest max gust speeds ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You should use date left staff and first name equals Janessa and last name equals Sawayn instead of date joined staff and date of birth equals 1997 03 29 10:55:45 respectively . [system description] find the date joined staff in staff table whose first name equals " Ludie " and date of birth equals " 1997-03-29 10:55:45 " . [question] When did the staff member with first name as Janessa and last name as Sawayn leave the company ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use state name instead of border equals dummy value . [system description] find the border in border info table whose border equals " dummy value " . [question] what state borders kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use origin in place of destination . [system description] find the average distance and average price in flight table whose destination equals " Honolulu " . [question] What is the average distance and price for all flights from LA ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to use greater than in place of greater than 25 . [system description] Step 1 : for each row in church table , find the corresponding rows in wedding table and in people table . Step 2 : find the church 's name of the results of step 1 whose age greater than 25 . [question] Show the church names for the weddings of all people older than 30 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
[feedback] You should use distinct rank in place of number of rank . [system description] find the number of rank in faculty table . [question] Find the list of distinct ranks for faculty . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You need to determine the number of songs that are released in each format . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find each value of formats of the results of step 1 along with the number of the corresponding rows to each value . [question] How many songs were released for each format ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Replace Eunice Morar with Alex . [system description] find the customer name and customer name in customers table whose customer name like " Eunice Morar " . [question] Which customer 's name contains " Alex " ? Find the full name . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to use greater than or . [system description] Step 1 : for each row in gymnast table , find the corresponding rows in people table . Step 2 : find the number of rows of each value of hometown of the results of step 1 . Step 3 : find the hometown of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Give the hometowns from which two or more gymnasts are from . [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
[feedback] Make sure to find distinct first name . [system description] find the first name in student table . [question] Find each student 's first name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] Replace 1 with 4 , make sure that grade is studying in that class room . [system description] find the class room in list table whose grade equals 1 . [question] Find the classrooms in which grade 4 is studying . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Make sure only to find for corresponding college name in tryout table . [system description] find the state in college table . [question] Find the states where have some college students in tryout . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 1 , also add team table , in step 3 , find salary 's year equals 2005 and salary 's year equals 2007 . [system description] Step 1 : for each row in salary table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1989 . Step 3 : for each row in salary table , find the corresponding rows in player table . Step 4 : find the name first and name last of the results of step 3 whose year equals 2010 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the first name and last name of the players who were paid salary by team Washington Nationals in both 2005 and 2007 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( washington ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Washington ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Washington ) [C] name first ( Washington ) [C] name last ( Washington ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Washington ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( washington ) [C] name full [C] city ( Washington ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Washington Nationals ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Washington Nationals ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , you should use player name instead of enrollment . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name of the results of step 1 ordered ascending by enrollment . [question] Find the name of all students who were in the tryout sorted in alphabetic order . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to determine the number of corresponding rows from the affected region table for each region . [system description] find each value of region name in region table along with the number of the corresponding rows to each value . [question] Show the name for regions and the number of storms for each region . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 1 , you should check that rank of professor is equivalent to Canoeing or Kayaking . [system description] Step 1 : find the first name in faculty table . Step 2 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 3 : find the first name of the results of step 2 whose activity name equals " Bungee Jumping " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the first names of the professors who do not play Canoeing or Kayaking as activities ? [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] Replace Eddie with contains . [system description] find the player name in player table whose player name like " Eddie " . [question] Who are the players that have names containing the letter a ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 2 , use genre is in place of genre name which is equivalent to blues . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the average resolution of the results of step 1 whose genre name equals " blues " . Step 3 : find the song id in song table whose resolution greater than the results of step 2 . [question] What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre ? [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , use document id and budget type code in place of document description and ref budget codes respectively . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the reference budget codes 's budget type code , budget type description , document description of the results of step 1 . [question] Show the budget type code and description and the corresponding document id . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to calculate the population of the united states . [system description] find the number of rows in state table whose country name equals " dummy value " . [question] how many people live in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use river name and traverse in place of state name and dummy value respectively . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [question] how many rivers are there in idaho [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use author table , publication table and journal name in place of organization table , writes table and name respectively . [system description] Step 1 : for each row in organization table , find the corresponding rows in writes table . Step 2 : find the number of pid of the results of step 1 whose name equals " dummy value " . [question] return me the number of authors who have papers in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , use sex and rank in place of last name and last name respectively . [system description] Step 1 : find rows in faculty table whose sex equals " M " and last name equals " James " . Step 2 : find the number of rows of each value of rank the results of step 1 . Step 3 : find the number of rows and last name the results of step 1 ordered descending by the results of step 2 . [question] How many male and female assistant professors do we have ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] In step 1 , languages equals english and in step 2 , rating greater than 8 . [system description] Step 1 : find the artist name in song table whose languages equals " bangla " . Step 2 : find the artist name in song table whose rating greater than 7 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] You should use payment date in place of amount . [system description] find the payment date in payment table with smallest value of amount . [question] What was the date of the earliest payment ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to search for highest elevation in the country . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain 's state name of the results of step 1 with largest value of highest elevation . [question] which state has the highest peak in the country [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use distinct instrument . [system description] find the instrument in instruments table . [question] What are all the instruments used ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 2 , you should use adults and drop kids . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of each value of room name of the results of step 1 . Step 3 : find the number of rows and kids of the results of step 1 with largest value in the results of step 2 . [question] How many times the number of adults and kids staying in a room reached the maximum capacity of the room ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , use authorship count table in place of authors table . [system description] Step 1 : find the number of rows of each value of author id in authors table . Step 2 : find the last name and last name in authors table with largest value in the results of step 1 . [question] What is the last name of the author that has published the most papers ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to determine the name and price of product from manufacturer table by making sure that it corresponds to each manufacturer . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the manufacturers 's name , price , price of the results of step 1 with largest value of price . [question] Select the name of each manufacturer along with the name and price of its most expensive product . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] You should use country name and name of state in place of area and name of state respectively . [system description] find the area in state table whose state name equals " dummy value " . [question] where is massachusetts [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use gender and student capacity in place of dorm id and student capacity respectively . [system description] find the dorm name and dorm id in dorm table whose student capacity greater than 400 or student capacity less than 355 . [question] What are the names and types of the dorms that have a capacity greater than 300 or less than 100 ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 1 , you should include author table and search for author 's name and conference 's name which are similar . Also , use VLDB and year greater than 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " and year greater than " dummy value " . [question] return me the number of papers by " H. V. Jagadish " on VLDB conference after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure that state has minimum population . [system description] find the density in state table with smallest value of population . [question] what is the population density of the state with the smallest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure student name starts with 'S'and course code equals ACCT-211 . [system description] find the student first name in student table whose student last name like " Robertson " and student init equals " P " . [question] What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the name of river which runs through mississippi state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of the states through which the mississippi river run [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use customer id , lesson status code and first name as well as include the last name as Ryan Goodwin . [system description] Step 1 : for each row in customers table , find the corresponding rows in lessons table . Step 2 : find the number of lesson id of the results of step 1 whose first name equals " Dianna " and last name equals " Spinka " . [question] How many lessons did the customer Ryan Goodwin complete ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name ( Goodwin ) [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code ( Completed ) [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to use country which is equivalent to Italy . [system description] find the number of rows in routes table whose destination airport equals " GRR " . [question] What is the number of routes whose destinations are Italian airports ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
[feedback] You need to search for the highest elevation . [system description] find the state name in state table with largest value of population . [question] what state has the highest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace name with airline id , and distance greater than 1000 . [system description] find the name in aircraft table whose distance greater than 2605 . [question] Show ids for all aircrafts with more than 1000 distance . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Replace longitude with latitude and make sure it is southern most part . [system description] find the name , latitude , city in station table with largest value of longitude . [question] What is the name , latitude , and city of the station that is located the furthest South ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 1 , you should use amenity name of dorm amenity table instead of dorm id of dorm table . [system description] Step 1 : find the number of rows of each value of dorm id in dorm table . Step 2 : find the dorm name , student capacity , student capacity in dorm table with largest value in the results of step 1 . [question] What is the name and capacity of the dorm with the fewest amount of amenities ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , you need to use river 's traverse and length greater than 750 instead of state name and dummy value respectively . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] what are major rivers in illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure election cycle equals fall and sex equals M . [system description] find the number of rows in voting record table whose class senator vote equals 1028 and class senator vote equals 1028 . [question] Count the number of male students who had class senator votes in the fall election cycle . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Fall ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] You need to search for the details of tourist attractions where tourists can reach only by walking . [system description] find the shop details in shops table . [question] Find the details of the shops that can be reached by walk . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( walk ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You need to use null in place of 2011 01 22 . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table . Step 2 : find the name of the results of step 1 whose rating date equals " 2011-01-22 " . [question] Find the names of all reviewers who have ratings with a NULL value for the date . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should use support rate and consider rate in place of name and oppose rate respectively . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the name , oppose rate , oppose rate of the results of step 1 ordered ascending by unsure rate . [question] Please list support , consider , and oppose rates for each candidate in ascending order by unsure rate . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] Make sure students tried out successfully in that states . [system description] find the state in college table . [question] What are the different states that had students successfully try out ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Replace inventory table , film actor table , film table , actor 's first name , last name with rental table , customer table , customer 's first name and last name respectively . [system description] Step 1 : for each row in staff table , find the corresponding rows in store table and in inventory table and in film table and in film actor table and in actor table . Step 2 : find the actor 's first name and staff 's last name of the results of step 1 whose staff 's first name equals " dummy value " and release year equals 2006 . [question] What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name ( APRIL ) [C] last name ( BURNS ) [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Make sure capital is with highest density . [system description] find the capital in state table with largest value of density . [question] what is the capital of the state with the largest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the number of corresponding rows from the member table for each party id . [system description] find each value of party name in party table along with the number of the corresponding rows to each value . [question] Show all party names and the number of members in each party . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You need to find order id and total product quantity of order items table . [system description] Step 1 : for each row in order items table , find the corresponding rows in orders table . Step 2 : find each value of orders 's order id of the results of step 1 along with the summation of product quantity of the corresponding rows to each value . [question] Give the order ids for all orders , as well as the total product quantity in each . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Make sure product type code equals clothes . [system description] find the average product price in products table . [question] Find the average price of all product clothes . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Clothes ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , you should use adults and check in date instead of check in and number of rows . Also , use SELBIG as the check in date . [system description] Step 1 : find rows in reservations table whose first name equals " JACKIE " and last name equals " MECHLING " . Step 2 : find each value of check in the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23 , 2010 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
[feedback] In step 1 , make sure to find for whose job equals engineer . [system description] Step 1 : find the minimum age in person table . Step 2 : find the number of rows in person table whose age greater than the results of step 1 . [question] How many people are older than every engineer ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
[feedback] In step 2 , name should be University of Oxford . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " Google " . [question] Who belong to the institution " University of Oxford " ? Show the first names and last names . [schema] [T] institution [C] institution id [C] name ( University of Oxford ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to use largest value of year . [system description] find the friend in person friend table whose name equals " Bob " with largest value of year . [question] Which friend of Zach has the longest-lasting friendship ? [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] You need to use table of rating and director . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find each value of director of the results of step 1 along with the number of the corresponding rows to each value . [question] How many movie reviews does each director get ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , you should use customer id in accounts table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer first name and customer id in customers table whose corresponding value in step 1 is greater than or equals 1 . [question] Show first name and id for all customers with at least 2 accounts . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 1 , you should use customer orders table instead of customers table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer name in customers table with largest value in the results of step 1 . [question] What is the name of the customer that has purchased the most items ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to use player name which is equivalent to Charles and also remove ASU . [system description] find the state in college table whose college name equals " ASU " . [question] In which state is the college that Charles attends ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name ( Charles ) [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to search for the city name . [system description] find the city and city in city table with smallest value of gdp . [question] Which city has the lowest GDP ? Please list the city name and its GDP . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] You should use title , writes table , year and organization name in place of jid , publication table and year . [system description] find the jid in publication table whose year greater than " dummy value " and year greater than " dummy value " . [question] return me all the papers in PVLDB after 2000 in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use governor in-place of lieutenant governor . [system description] Step 1 : find the number of rows of each value of governor in party table . Step 2 : find the lieutenant governor in party table with largest value in the results of step 1 . [question] Which people severed as governor most frequently ? [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] In step 1 , you should use amount settled in place of amount claimed . [system description] Step 1 : find the average amount claimed in claims table . Step 2 : find the date claim made in claims table whose amount claimed less than the results of step 1 . [question] Return the claim start date for the claims whose claimed amount is no more than the average [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You need to calculate the total number of transaction for each account . [system description] find each value of account id in accounts table along with the number of the corresponding rows to each value . [question] How many transaction does each account have ? Show the number and account id . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to use highest elevation instead of country name of mountain . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in mountain table and in highlow table . Step 2 : find the border info 's state name of the results of step 1 whose mountain 's country name equals " dummy value " with largest value of highest elevation . [question] what is the state with the highest elevation in the united states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use density instead of population . [system description] find the number of rows in state table with largest value of density . [question] how many people live in the state with the largest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use state name instead of border equals dummy value . [system description] find the state name in border info table whose border equals " dummy value " . [question] which state borders kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Also find department code for each distinct department . [system description] find the maximum student gpa , minimum student gpa , average student gpa , minimum student gpa in student table . [question] Find the max , average , and minimum gpa of all students in each department . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use tryout 's player position as goalie and step 3 as a substitute for enrollment as 22000 . [system description] Step 1 : find the state in college table whose enrollment equals 22000 . Step 2 : for each row in tryout table , find the corresponding rows in college table . Step 3 : find the state of the results of step 2 whose player position equals " striker " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] What are the names of the states that have some college students playing in the positions of goalie and mid-field ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
[feedback] You need to determine the number of corresponding rows from the actor table for the musical id . [system description] find each value of musical id in musical table along with the number of the corresponding rows to each value . [question] Show names of musicals and the number of actors who have appeared in the musicals . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
[feedback] In step 2 , name should be Google . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " INRIA " . [question] Which authors belong to the institution " Google " ? Show the first names and last names . [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use theme in place of age . [system description] Step 1 : for each row in editor table , find the corresponding rows in journal committee table and in journal table . Step 2 : find the name , age , theme of the results of step 1 ordered ascending by age . [question] Show the names and ages of editors and the theme of journals for which they serve on committees , in ascending alphabetical order of theme . [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
[feedback] In step 1 , remove building equals Krieger and in step 2 , find department name where division equals EN or AS . [system description] Step 1 : find the department name in department table whose division equals " AS " and building equals " Krieger " . Step 2 : find the department name in department table whose division equals " AS " and division equals " EN " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] Find the names of departments that are either in division AS or in division EN and in Building NEB . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building ( NEB ) [T] department [C] department number [C] division [C] department name [C] room [C] building ( NEB ) [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to ensure that grade point should be 3.8 or more in minimum one course . [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table and in grade conversion table . Step 2 : find the first name of the results of step 1 whose grade point equals 1.7 . [question] What are the distinct first names for students with a grade point of 3.8 or above in at least one course ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] In step 2 , you should use customer name Rodrick Heaney . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of the results of step 1 whose customer name equals " Kitty Padberg III " and customer name equals " Prof. Ibrahim Bashirian " . [question] Tell me the total quantity of products bought by the customer called " Rodrick Heaney " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Rodrick Heaney ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to calculate the number of traverse of river 's . Also , you need to use length which is more than 750 . [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the number of state name of the results of step 1 whose river name equals " dummy value " . [question] how many states have major rivers [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use delegate of election table in place of county name of county table . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 1 . [question] Show the names of counties that have at least two delegates . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] You should use first name Janessa and last name Sawayn . [system description] find the first name and date of birth in staff table whose first name equals " Kaitlin " and date of birth equals " 2007-06-11 20:03:28 " . [question] What is the birthday of the staff member with first name as Janessa and last name as Sawayn ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] Find product suppliers 's product id in step 4 whose total amount purchased greater than 80000 . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table . Step 2 : find the number of rows of each value of order item id of the results of step 1 . Step 3 : find the products 's product id of the results of step 1 whose corresponding value in step 2 is greater than 1 . Step 4 : for each row in products table , find the corresponding rows in order items table . Step 5 : find the order items 's product id and order items 's product id of the results of step 4 whose product price greater than 971.44 . Step 6 : show the rows that are in any of the results of step 3 and step 5 . [question] Return the ids of all products that were ordered more than three times or supplied more than 80000 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Make sure to find distinct billing country . [system description] find the billing country in invoice table . [question] What are the distinct billing countries of the invoices ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] Replace birth year with player award 's year , step 2 : Replace 1835 with 1960 . [system description] Step 1 : find the name first and name last in player table whose birth year equals 1904 . Step 2 : find the name first and name last in player table whose birth year equals 1835 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Which players won awards in both 1960 and 1961 ? Return their first names and last names . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You should use maximum support rate and minimum consider rate in place of maximum consider rate and minimum consider rate respectively . [system description] find the maximum consider rate and minimum oppose rate in candidate table . [question] find the highest support percentage , lowest consider rate and oppose rate of all candidates . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] Confirm that rank equals Professor . [system description] find the number of rows in faculty table whose building equals " NEB " . [question] How many Professors are in building NEB ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building ( NEB )
[feedback] You need to use lead type in step 2 . [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the number of rows of the results of step 1 whose type equals " dummy value " . [question] How many songs have vocals of type lead ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 1 , you should use member in charge id of party events table instead of member name of member table . [system description] Step 1 : find the number of rows of each value of member name in member table . Step 2 : find the member name in member table with largest value in the results of step 1 . [question] What is the name of member in charge of greatest number of events ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You should use average max speed and maximum damage millions in usd format . [system description] find the average max speed and maximum max speed in storm table whose max speed greater than 961 . [question] Show the average and maximum damage for all storms with max speed higher than 1000 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 2 , you should use the word traverse instead of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [question] what are the rivers in the state of illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use line 1 number building instead of line 1 number building equals . [system description] find the state province county in addresses table whose line 1 number building equals " 6862 Kaitlyn Knolls Suite 309 " . [question] Give the state corresponding to the line number building " 6862 Kaitlyn Knolls " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] You need to use United States as a country . Also , use Billund as an airport name . [system description] Step 1 : for each row in airport table , find the corresponding rows in flight table . Step 2 : find the pilot of the results of step 1 whose country equals " Denmark " or country equals " Iceland " . [question] What are the different pilot names who had piloted a flight in the country 'United States ' or in the airport named 'Billund Airport ' ? [schema] [T] airport [C] id [C] city ( Billund ) [C] country ( United States ) [C] iata [C] icao [C] name ( Billund Airport ) [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
[feedback] You need to use founded year is 1990 or more in place of enrollment year is 1200 . [system description] Step 1 : find rows in institution table whose enrollment greater than 1200 . Step 2 : find the number of rows of each value of type the results of step 1 . Step 3 : find the type the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] You should use title instead of title and make sure that paper is nameless and painless . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the first name , last name , papers 's paper id of the results of step 1 whose title equals " Proving the Unique Fixed-Point Principle Correct : An Adventure with Category Theory " . [question] What are the first and last name of the author who published the paper titled " Nameless , Painless " ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 1 , you should use artist table and in step 2 , only show the first three results . [system description] Step 1 : find the number of rows of each value of artist name in song table . Step 2 : find the artist name and number of rows in song table with largest value in the results of step 1 . [question] What are the names of the three artists who have produced the most songs , and how many works did they produce ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Find for each director the maximum value of rating stars and title of movie table . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the title and rating stars of the results of step 1 . [question] For each director , what are the titles and ratings for all the movies they reviewed ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , you should use the film 's inventory in place of film text . [system description] Step 1 : for each row in film text table , find the corresponding rows in rental table . Step 2 : find the number of rows of each value of inventory id of the results of step 1 . Step 3 : find the title and film id of the results of step 1 with largest value in the results of step 2 . [question] What is the film title and inventory id of the item in the inventory which was rented most frequently ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Replace jid with citation num , remove and year less than 2005 . name should be VLDB . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the summation of jid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [question] return me the total citations of papers in the VLDB conference before 2005 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , use airlines table and route id in place of name and airlines table respectively . [system description] Step 1 : find the number of rows of each value of name in airlines table . Step 2 : find the name in airlines table with largest value in the results of step 1 . [question] Find the names of the top 10 airlines that operate the most number of routes . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Namest ) [C] country [C] x [C] y [C] elevation [C] iata ( TOP ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( TOP ) [C] call sign [C] country [C] active
[feedback] In step 2 , you should use faculty id of student table instead of faculty id of faculty table . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the faculty id in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the ids of the faculty members who do not advise any student . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You should use M instead of F . [system description] find the average height and weight in people table whose sex equals " F " . [question] What are the average height and weight across males ( sex is M ) ? [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
[feedback] Make sure to find number of movies which were directed by Steven Spielberg . [system description] find the number of rows in director table whose name equals " dummy value " . [question] How many movies did " Steven Spielberg " direct ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 2 , use class code and class room in place of course code and class room respectively . [system description] Step 1 : for each row in class table , find the corresponding rows in course table . Step 2 : find the course 's course code of the results of step 1 whose class room equals " BUS200 " . [question] What are the codes of all the courses that are located in room KLR209 ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room ( KLR209 ) [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the total number of students residing in dorm whose age is more than 20 . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : only keep the results of step 1 whose age greater than 18 . Step 3 : find each value of dorm name the results of step 2 along with the number of the corresponding rows to each value . [question] Find the number of students who is older than 20 in each dorm . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , use store id in place of name which is equivalent to Drama . [system description] Step 1 : for each row in category table , find the corresponding rows in film category table and in film table and in inventory table . Step 2 : find the number of rows of the results of step 1 whose name equals " Drama " . [question] Count the number of items store 1 has in stock . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] Make sure it is a single value of area . [system description] find the state name in state table with largest value of area . [question] what is the state with the largest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use order details instead of order status and also make sure that order details is equivalent to second time . [system description] find the number of rows in customer orders table whose order status equals " Delivered " . [question] Tell me the number of orders with " Second time " as order detail . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details ( Second time ) [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 1 , you should include the title of the tv series and its character . [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table . Step 2 : find the role of the results of step 1 whose name equals " dummy value " . [question] Who acts " Olivia Pope " in the series Scandal ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should find highest elevation instead of mountain altitude . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest point . [question] what is the elevation of the highest point in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use max wind speed mph which is equivalent or higher than 25 . [system description] Step 1 : for each row in weather table , find the corresponding rows in status table . Step 2 : only keep the results of step 1 whose max wind speed mph greater than 86 . Step 3 : find each value of zip code the results of step 2 along with the number of the corresponding rows to each value . [question] For each zip code , return how many times max wind speed reached 25 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 3 , use average rating stars instead of first rating . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the average rating stars of each value of rating 's movie id of the results of step 1 . Step 3 : find the title and title of the results of step 1 with largest value in the results of step 2 . [question] What are the movie titles with the highest average rating and what are those ratings ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should use amount of loan in place of amount . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 with largest value of amount . [question] What is the name of the customer who has greatest total loan amount ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] Replace San Francisco with San Jose . [system description] find the average longitude and average latitude in station table whose city equals " San Francisco " . [question] What is the average latitude and longitude of stations located in San Jose city ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Jose ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search for the name of river which runs through mississippi state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of states through which the mississippi run [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the number of distinct allergy name . [system description] find the number of rows in allergy type table . [question] How many allergies are there ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 1 , replace region name in region table with number deaths in storm table . [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [question] Return the names of the regions affected by storms that had a death count of at least 10 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] Replace student num with student gpa . [system description] find the student first name , student gpa , student phone in student table with largest value of student num . [question] What is the first name , gpa and phone number of the top 5 students with highest gpa ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , replace document type code with document type code , in step 3 replace document type code with CV . [system description] Step 1 : find the documents 's document id in documents table whose document type code equals " PP " . Step 2 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 3 : find the documents with expenses 's document id of the results of step 2 whose document type code equals " FM " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the ids of documents with the type code CV that do not have expenses . [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] You need to determine the ascending order from the hotel 's table . [system description] find the hotel id and star rating code in hotels table ordered descending by price range . [question] Show the id and star rating of each hotel , ordered by its price from low to high . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 1 , you should use director 's name and actor 's name in place of name and dummy value respectively . [system description] Step 1 : for each row in director table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [question] Find all movies directed by " Asghar Farhadi " and featuring " Taraneh Alidoosti " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Make sure yes card equals yes . [system description] find the player name in player table ordered descending by training hours . [question] What are the name of the players who received a card in descending order of the hours of training ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to calculate total number of routes for each country and airline id . [system description] find each value of airline id in airlines table along with the number of the corresponding rows to each value . [question] What is the total number of routes for each country and airline in that country ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( TOTAL ) [C] country [C] active
[feedback] In documents with expenses table , you need to use budget type code and gv in place of document type name and sf respectively . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the document date of the results of step 1 whose document type name equals " Film " . Step 3 : for each row in documents table , find the corresponding rows in reference document types table . Step 4 : find the document date of the results of step 3 whose document type name equals " Paper " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] What are the dates for the documents with both 'GV ' type and 'SF ' type expenses ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF , GV ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( GV , SF ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 2 , use document type code instead of budget type code and in step 3 , delete budget type code equals SF . [system description] Step 1 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 2 : find the documents 's document id of the results of step 1 whose budget type code equals " GV " . Step 3 : find the documents with expenses 's document id in documents with expenses table whose budget type code equals " SF " . Step 4 : show the rows that are in the results of step 2 but not in the results of step 3 . [question] Show ids for all documents in type CV without expense budgets . [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Make sure those individual id is present under organization contact individuals table . [system description] find the individual last name in individuals table . [question] Find the last name of the individuals that have been contact individuals of an organization . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] You should use customer name and customer orders table instead of order status and customer orders table respectively . [system description] find the order status in customer orders table with largest value of order date . [question] Who made the latest order ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You should use decision and drop enrollment . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the state and decision of the results of step 1 whose enrollment equals 19000 . [question] Find the states where have some college students in tryout and their decisions are yes . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
[feedback] In step 2 , you should use description of color as yellow instead of description of color as green . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name , typical buying price , typical selling price of the results of step 1 whose color description like " green " . [question] Return the names and typical buying and selling prices for products that have 'yellow ' as their color description . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( yellow ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to search for the state name which is close to mississippi from the highlow table . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose area equals " dummy value " . [question] what are the highest points of states surrounding mississippi [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , use amenity name in place of has amenity . [system description] Step 1 : for each row in dorm amenity table , find the corresponding rows in has amenity table . Step 2 : find the has amenity 's amenity id of the results of step 1 ordered ascending by amenity name . [question] List in alphabetic order all different amenities . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , I want the number of students having allergy . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find each value of allergy type of the results of step 1 along with the number of the corresponding rows to each value . [question] How many students have each different allergy ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Replace domain author table , domain keyword table , domain author table and keyword equals dummy value with publication keyword table , author 's name equals H. V. Jagadish . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the title of the results of step 1 whose keyword equals " dummy value " . [question] return me the papers of " H. V. Jagadish " containing keyword " User Study " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , make sure characteristics is available in product characteristics and use characteristics data type in place of characteristics name . [system description] Step 1 : find the characteristic name , other characteristic details , characteristic data type in characteristics table . Step 2 : find the characteristic name and other characteristic details in characteristics table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] Give the names , details , and data types of characteristics that are not found in any product . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Replace hometown with city in both and name with membership amount in step 1 , branch table with member table in step 2 . [system description] Step 1 : find the hometown in member table . Step 2 : find the hometown in member table whose name equals " David Jones " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the cities that do not have any branches with more than 100 members ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 2 , you should use river 's traverse to replace area with river 's river name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [question] what river runs through illinois [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should delete the title equivalent to Gorecki : Symphony No 3 . [system description] Step 1 : for each row in album table , find the corresponding rows in track table and in genre table . Step 2 : find the genre 's name of the results of step 1 whose title equals " Górecki : Symphony No . 3 " . [question] What are the names of different music genres ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name ( Music ) [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] Make sure that state name in border info table equals kentucky . [system description] find the state name in state table whose area like " dummy value " . [question] which states adjoin kentucky [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use table of performance and songs in place of vocals table and bandmate respectively . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table . Step 2 : find the number of rows of each value of bandmate of the results of step 1 . Step 3 : find the last name of the results of step 1 with largest value in the results of step 2 . [question] What is the last name of the artist who sang the most songs ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You need to use airport name which is equivalent to John F Kennedy International airport . [system description] find the number of rows in routes table whose destination airport equals " RGA " . [question] What is the number of routes that end at John F Kennedy International Airport ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name ( John F Kennedy International Airport ) [C] city ( Ende , Enid ) [C] country [C] x [C] y [C] elevation [C] iata ( END ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( END ) [C] call sign [C] country [C] active
[feedback] Make sure to find only for adults and kids . [system description] Step 1 : find the number of room id of each value of max occupancy in rooms table . Step 2 : find the number of rows and max occupancy in rooms table with largest value in the results of step 1 . [question] List how many times the number of people in the room reached the maximum occupancy of the room . The number of people include adults and kids . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Make sure population is equals to largest value of population . [system description] find the capital in state table with largest value of population . [question] what is the capital of the state with the most inhabitants [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace made by table with director table , name with director 's name , step 3 : Replace copyright table with movie table . [system description] Step 1 : for each row in producer table , find the corresponding rows in made by table and in copyright table and in directed by table . Step 2 : find the number of rows of each value of name of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [question] Which producer has worked with the most number of directors ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Find city 's population instead of highest elevation , city 's state name instead of state name in step 4 . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : for each row in state table , find the corresponding rows in highlow table . Step 3 : find the maximum highest elevation of the results of step 2 whose state 's state name equals " dummy value " . Step 4 : find the number of rows of the results of step 1 whose state 's state name equals " dummy value " and highest elevation equals the results of step 3 . [question] how many people live in the biggest city in alaska state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use manufacturer code equals 2 instead of code equals 11 . [system description] find the average price in products table whose code equals 11 . [question] Compute the average price of all products with manufacturer code equal to 2 . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 3 , you should use course credit and course description in place of course code and department . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : only keep the results of step 1 whose student last name equals " Brewer " . Step 3 : find each value of course code the results of step 2 along with the course description and summation of course credit of the corresponding rows to each value . [question] How many credits is the course that the student with the last name Smithson took , and what is its description ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Smithson ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name ( Smithson ) [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In customer address history table , you need to find from date to and city in step 2 . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer address history table . Step 2 : find the customer name , date from , date from , date to of the results of step 1 . [question] Show the customer name , customer address city , date from , and date to for each customer address history . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] products [C] product id [C] product type code [C] product name [C] product price [T] customers [C] customer id [C] payment method code [C] customer number [C] customer name [C] customer address [C] customer phone [C] customer email [T] contacts [C] contact id [C] customer id [C] gender [C] first name [C] last name [C] contact phone [T] customer address history [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order date [C] order status code [T] order items [C] order item id [C] order id [C] product id [C] order quantity
[feedback] In step 1 , use state in place of state . [system description] Step 1 : find the number of rows of each value of state in customers table . Step 2 : find the state in customers table with largest value in the results of step 1 . [question] Which state has the most customers ? [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] You should use iowa as a substitute for dummy value of state name . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the lowest point of the results of step 1 whose state 's state name equals " dummy value " with smallest value of lowest point . [question] what is the lowest point in iowa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace cite with title , cited with domain publication , year greater than 2000 , citation num greater than 200 . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the jid of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [question] return me the paper after 2000 in Databases area with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should use last name and Stephanie in place of Amal and also search for title . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Amal " . [question] Which papers have " Stephanie Weirich " as an author ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Weirich ) [C] first name ( Stephanie ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to use player table and search country 's players . [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find each value of country name of the results of step 1 along with the number of the corresponding rows to each value . [question] How many players are from each country ? [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] In step 3 , you should use film id and film text in place of actor id and film text respectively . [system description] Step 1 : for each row in film text table , find the corresponding rows in film table and in film actor table . Step 2 : find the number of rows of each value of actor id of the results of step 1 . Step 3 : find the film text 's title , film 's description , film text 's description of the results of step 1 with largest value in the results of step 2 . [question] What are the title , id , and description of the movie with the greatest number of actors ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You should use 105 in place of 106 . [system description] find the grade in list table whose class room equals 106 . [question] Find the grade studying in room 105 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Replace death year equals 1922 with year equals 1998 . [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1994 and death year equals 1922 . [question] What are first and last names of players participating in all star game in 1998 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you should use member in charge id of party events table instead of member name of member table . [system description] Step 1 : find the number of rows of each value of member name in member table . Step 2 : find the member name in member table with largest value in the results of step 1 . [question] Return the name of the member who is in charge of the most events . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You need to use salary and name as substitute of salary and team id . [system description] Step 1 : for each row in salary table , find the corresponding rows in team table . Step 2 : find the summation of salary of the results of step 1 whose salary 's team id equals " TBA " and team 's year equals 1982 . [question] What is the total salary expenses of team Boston Red Stockings in 2010 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You should use 800 in place of 320 . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the file size and formats of the results of step 1 whose resolution less than 320 . [question] What are the file sizes and formats for all songs with a resolution lower than 800 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , you should use first name Ray instead of second lesson id . [system description] Step 1 : for each row in customers table , find the corresponding rows in lessons table . Step 2 : find the number of lesson id of the results of step 1 whose first name equals " Leif " . [question] How many lesson does customer with first name Ray took ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Ray ) [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] Replace player name of player table with player position of tryout table . [system description] find the player name in player table . [question] What are the different types of player positions ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You should use number deaths instead of summation of number deaths . [system description] Step 1 : for each row in region table , find the corresponding rows in affected region table and in storm table . Step 2 : find the summation of number deaths of each value of name of the results of step 1 . Step 3 : find the region name of the results of step 1 with largest value in the results of step 2 . [question] Find the names of the regions which were affected by the storm that killed the greatest number of people . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] You need to use affected region table . [system description] find the number of rows in region table . [question] How many regions are affected ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 2 , list must be replaced by teachers . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 . [question] What are the first name and last name of all the teachers ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 1 , you should use join year smaller than 2000 and larger than 2005 . [system description] Step 1 : find the position in pilot table whose join year greater than 2010 . Step 2 : find the position in pilot table whose join year less than 2010 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000 . [schema] [T] aircraft [C] aircraft id [C] order year [C] manufacturer [C] model [C] fleet series [C] powertrain [C] fuel propulsion [T] pilot [C] pilot id [C] pilot name [C] rank [C] age [C] nationality [C] position [C] join year [C] team [T] pilot record [C] record id [C] pilot id [C] aircraft id [C] date
[feedback] In step 2 , you should use product name which is equivalent to flax and not equivalent to cumin . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the reference product categories 's product category code of the results of step 1 whose product name equals " cumin " . [question] What is the code of the category that the product with the name 'flax ' belongs to ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( flax ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You should use river table and traverse in place of lake table and state name respectively . [system description] find the state name in lake table . [question] what states have rivers running through them [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use publisher and drop title of book which is The Crystal Curtain . [system description] Step 1 : for each row in culture company table , find the corresponding rows in book club table . Step 2 : find the company name of the results of step 1 whose book title equals " The Crystal Curtain " . [question] What are all the company names that have a book published by Alyson ? [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher ( Alyson ) [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] You should use length is instead of country name and also delete dummy value . [system description] find the river name in river table whose country name equals " dummy value " with smallest value of length . [question] what is the shortest river in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] i want department number which is equivalent to 520 from member of table . [system description] Step 1 : for each row in faculty table , find the corresponding rows in course table and in department table . Step 2 : find the first name and last name of the results of step 1 whose department name equals " Biomedical Engineering " . [question] What are the full names of faculty members who are a part of department 520 ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You should use average monthly rental in place of line 2 . [system description] find the line 1 and line 2 in addresses table . [question] What are the line 1 and average monthly rentals of all student addresses ? [schema] [T] reference address types [C] address type code [C] address type description [T] reference detention type [C] detention type code [C] detention type description [T] reference incident type [C] incident type code [C] incident type description [T] addresses [C] address id [C] line 1 [C] line 2 [C] line 3 [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] students [C] student id [C] address id [C] first name [C] middle name [C] last name [C] cell mobile number [C] email address [C] date first rental [C] date left university [C] other student details [T] teachers [C] teacher id [C] address id [C] first name [C] middle name [C] last name [C] gender [C] cell mobile number [C] email address [C] other details [T] assessment notes [C] notes id [C] student id [C] teacher id [C] date of notes [C] text of notes [C] other details [T] behavior incident [C] incident id [C] incident type code [C] student id [C] date incident start [C] date incident end [C] incident summary [C] recommendations [C] other details [T] detention [C] detention id [C] detention type code [C] teacher id [C] datetime detention start [C] datetime detention end [C] detention summary [C] other details [T] student addresses [C] student id [C] address id [C] date address from [C] date address to [C] monthly rental [C] other details [T] students in detention [C] student id [C] detention id [C] incident id
[feedback] In step 1 , replace year equals 1990 with year equals 1989 . In step 3 , replace movie with book club . [system description] Step 1 : find the publisher in book club table whose book club 's year equals 1990 . Step 2 : for each row in book club table , find the corresponding rows in culture company table and in movie table . Step 3 : find the publisher of the results of step 2 whose movie 's year equals 1999 . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] Show publishers with a book published in 1989 and a book in 1990 . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] In step 3 , replace school code with school code and in step 2 , find distinct department name for each school whose total school area is less than 5 . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the number of rows of each value of school code of the results of step 1 . Step 3 : find the number of school code and number of school code of the results of step 1 whose corresponding value in step 2 is less than 1 . [question] How many different departments are there in each school that has less than 5 apartments ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace station table with trip table and make sure end station id does not equals station id of San Francisco station . [system description] find the number of rows in station table whose city equals " Mountain View " . [question] Count the number of trips that did not end in San Francisco city . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Francisco ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 1 , I want ref colors , color description and product characteristics table . [system description] Step 1 : find the number of rows of each value of product id in products table . Step 2 : find the product id and product description in products table whose corresponding value in step 1 is greater than or equals 1 . [question] Find the id and color description of the products with at least 2 characteristics . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You should find the average population for each state in step 2 . [system description] Step 1 : find rows in state table whose state name equals " dummy value " . Step 2 : find each value of state name the results of step 1 along with the average population of the corresponding rows to each value . [question] what is the average population of the us by state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use greater than or . [system description] Step 1 : find the number of rows of each value of city in station table . Step 2 : find the city and number of rows in station table whose corresponding value in step 1 is greater than or equals 1 . [question] What is the name of every city that has at least 15 stations and how many stations does it have ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to use customer details and amount claimed . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table and in claim headers table . Step 2 : find the customers 's customer id of the results of step 1 with smallest value of amount claimed . [question] What is the name of the customer who has made the minimum amount of payment in one claim ? [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] Find state name of highlow table whose lowest elevation less than alabama . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the minimum mountain altitude in mountain table whose mountain 's state name equals " dummy value " . Step 3 : find the number of rows of the results of step 1 whose mountain altitude less than the results of step 2 . [question] count the states which have elevations lower than what alabama has [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use F in place of M and confirm that student have president vote . [system description] find the first name and last name in student table whose sex equals " M " . [question] What are the first and last names of all the female students who have president votes ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] Replace latitude with city 's latitude . [system description] find the city and latitude in station table with largest value of latitude . [question] For each city , return the highest latitude among its stations . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to use routes table and also make sure that airports 's country should be Italy and airlines 's name should be American airlines . [system description] find the number of rows in airlines table whose country equals " Oman " and name equals " Adygeya Airlines " . [question] What is the number of routes operated by the airline American Airlines whose destinations are in Italy ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country ( Italy ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country ( Italy ) [C] active
[feedback] In step 1 , you should include table of movie and title , make sure that role should be Alan Turing . [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table . Step 2 : find the name of the results of step 1 whose role equals " dummy value " . [question] Who is the actor playing " Alan Turing " in " The Imitation Game " ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should use zip code 94103 instead of 53051 . [system description] Step 1 : find the average duration in trip table whose zip code equals 53051 . Step 2 : find the id in trip table whose duration greater than the results of step 1 . [question] What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , you should use title instead of director and in step 3 , use director instead of name . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 2 : find the number of rows of each value of director of the results of step 1 . Step 3 : find the director and name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] For all directors who have directed more than one movie , what movies have they directed and what are their names ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You need to search for the state name which is adjacent to colorado . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose border equals " dummy value " . [question] what is the highest point in the states bordering colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should not use document id of documents with expenses . [system description] Step 1 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 2 : find the documents with expenses 's document id in documents with expenses table . Step 3 : find the number of rows of the results of step 1 whose documents 's document id not one of the results of step 2 . [question] Count the number of documents that do not have expenses . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] In step 2 , mountain name should be whitney and not dummy value . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose mountain name equals " dummy value " . [question] in what state is mount whitney [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for name of lake which is situated in the state of texas . [system description] Step 1 : for each row in border info table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose border equals " dummy value " . [question] what are the lakes in states bordering texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use allowed pets in place of price range . [system description] find each value of price range in hotels table along with the average price range of the corresponding rows to each value . [question] Show the average price of hotels for different pet policy . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] Make sure that area should be minimum . [system description] find the state name in state table with smallest value of area . [question] what is the state with the smallest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use reservations table instead of rooms table . [system description] Step 1 : find the number of decor of each value of decor in rooms table . Step 2 : find the decor in rooms table with smallest value in the results of step 1 . [question] What is the least popular kind of decor ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 2 , use basketball match 's team name in place of school of university table . [system description] Step 1 : find the average enrollment in university table . Step 2 : find the school in university table whose enrollment less than the results of step 1 . [question] Find the team names of the universities whose enrollments are smaller than the average enrollment size . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] You need to use releasedate in place of song name . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and gender of the results of step 1 whose song name equals " Aj ei akash " . [question] What are the names and genders of all artists who released songs in the month of March ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Replace David with contains . [system description] find the player name in player table whose player name like " David " . [question] Find the players whose names contain letter ' a ' . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to search for the name of river which runs through mississippi state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of the states through which the mississippi runs [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate total number of routes for each country and airline Id using the routes table . [system description] find each value of airline id in airlines table along with the number of the corresponding rows to each value . [question] For each country and airline name , how many routes are there ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
[feedback] You need to use year of open in place of year which is higher than 2007 . [system description] Step 1 : find rows in gas station table whose open year greater than 2007 . Step 2 : find the number of rows of each value of manager name the results of step 1 . Step 3 : find the manager name the results of step 1 with largest value in the results of step 2 . [question] What is the name of the manager with the most gas stations that opened after 2000 ? [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] Also find middle name . [system description] find the first name and last name in staff table . [question] List the first name middle name and last name of all staff . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to use city name in place of state name . Also , verify that name of state corresponding to wyoming is present in city name . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the city name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of city 's population . [question] what cities in wyoming have the highest number of citizens [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 4 , title should be used instead of jid , number of jid and name . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid and number of jid the results of step 2 ordered descending by the results of step 3 . [question] return me the paper in VLDB conference with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to determine the number of corresponding rows from the musical table . [system description] find each value of musical id in actor table along with the number of the corresponding rows to each value . [question] How many actors have appeared in each musical ? [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
[feedback] In step 1 , use farm competition 's host city id in place of official name in city table . [system description] Step 1 : find the number of rows of each value of official name in city table . Step 2 : find the official name in city table whose corresponding value in step 1 is greater than 1 . [question] What are the official names of cities that have hosted more than one competition ? [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
[feedback] In step 1 , you should use player id and player award table instead of name first and player table respectively . [system description] Step 1 : find the number of rows of each value of name first in player table . Step 2 : find the name first , name last , name last in player table with largest value in the results of step 1 . [question] Find the first name , last name and id for the top three players won the most player awards . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to calculate the millions of usd in the form of damages . [system description] find the name and name in storm table ordered descending by max speed . [question] List name and damage for all storms in a descending order of max speed . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] Find the smallest value of genre is in step 1 , arrange the genre is in alphabetical order . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the song name and genre is of the results of step 1 with smallest value of genre 's rating . [question] What is the shortest and most poorly rated song for each genre , ordered alphabetically by genre ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , use department number of member of table instead of department name of department table . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with smallest value in the results of step 1 . [question] What is the name of the department with the fewest members ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] In step 1 , you should use amenity name and has amenity in place of dorm name and dorm . [system description] Step 1 : find rows in dorm table whose student capacity greater than 256 . Step 2 : find each value of dorm name the results of step 1 along with the number of the corresponding rows to each value . [question] Find the number of amenities for each of the dorms that can accommodate more than 100 students . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You should use amenity name of dorm amenity table instead of dorm id of dorm table . [system description] find the number of rows in dorm table . [question] How many diffrent dorm amenities are there ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 1 , replace student 's department code with department name of course and in step 3 replace English with Systems . [system description] Step 1 : find the student first name in student table whose student 's department code equals " EDU " . Step 2 : for each row in student table , find the corresponding rows in department table . Step 3 : find the student first name of the results of step 2 whose department name equals " English " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [question] Find the first name of student who is taking classes from accounting and Computer Info . Systems departments [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Also find customer id , customer last name , customer phone of customers table . [system description] find the customer first name , customer first name , customer phone , customer phone in customers table . [question] What are the ids , full names , and phones of each customer ? [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] In step 3 , you should use mid instead of goalie . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " goalie " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " goalie " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find the names of schools that have some students playing in goalie and mid positions . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie , mid ) [C] decision
[feedback] You should use registration date instead of election cycle and also make sure that there should be no repetition . [system description] find the president vote in voting record table whose election cycle equals " Fall " . [question] Show all the distinct president votes made on 08/30/2015 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date ( 08/30/2015 , 08/30/2013 ) [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] In step 2 , list 's first name and last name should be CHRISSY and NABOZNY respectively . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the number of rows of the results of step 1 whose list 's first name equals " STORMY " and teachers 's last name equals " URSERY " . [question] How many teachers does the student named CHRISSY NABOZNY have ? [schema] [T] list [C] last name ( NABOZNY ) [C] first name (  CHRISSY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] In step 2 , use document id and not the document description . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the reference budget codes 's budget type code , budget type description , document description of the results of step 1 . [question] Return the budget type codes , budget type descriptions and document ids for documents with expenses . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace domain author table , domain keyword table , domain author table and dummy value with publication keyword table , Natural Language respectively . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the title of the results of step 1 whose keyword like " dummy value " . [question] return me all the papers , which contain the keyword " Natural Language " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should also find the id of order . [system description] Step 1 : for each row in invoices table , find the corresponding rows in orders table . Step 2 : find the invoice date , order details , order details of the results of step 1 . [question] Show invoice dates and order id and details for all invoices . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to use name and drop assets billion . [system description] find the name and assets billion in companies table ordered ascending by assets billion . [question] What are the name and assets of each company , sorted in ascending order of company name ? [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] In step 2 , use Tokohu University as the name of the university . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose name equals " Northeastern University " . [question] How many papers are published by the institution " Tokohu University " ? [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Make sure state has largest population density . [system description] find the state name in state table with largest value of density . [question] what state has the largest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the distinct types of transaction . [system description] find the number of rows in financial transactions table . [question] Show the number of transaction types . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] Replace customers table with addresses table , address details with customer id . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer addresses table . Step 2 : find the customer address of the results of step 1 whose address id equals 10 . [question] What is the address for the customer with id 10 ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use department name instead of professor office . [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the department address of the results of step 1 whose professor office equals " KLR 203E " . [question] Where is the history department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to calculate the number of rows for each class room . [system description] find the number of rows in list table whose class room equals 106 . [question] How many students does one classroom have ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Also find country , and make sure city equals New York . [system description] find the name , city , elevation in airports table whose elevation equals 12400 . [question] Find the name , city , country , and altitude ( or elevation ) of the airports in the city of New York . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( New York , York ) [C] country [C] x [C] y [C] elevation [C] iata ( NEW ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( NEW YORK , CITY ) [C] country [C] active
[feedback] You should use name of mountain instead of name of dummy mountain . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose mountain name equals " dummy value " . [question] which state is mount whitney in [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] first name Linda and last name Davidson should be there from correlated student table . [system description] find the first name and last name in faculty table whose first name equals " Brian " and last name equals " Davidson " . [question] Who is the advisor of Linda Smith ? Give me the first name and last name . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You should use writer 's name instead of actor 's name and delete dummy value . [system description] Step 1 : for each row in writer table , find the corresponding rows in written by table and in copyright table and in cast table and in actor table and in movie table . Step 2 : find the title of the results of step 1 whose actor 's name equals " dummy value " and writer 's name equals " dummy value " . [question] Find all movies written by " Matt Damon " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , make sure that city is in United States . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table whose corresponding value in step 1 is greater than 1 . [question] Return the cities with more than 3 airports in the United States . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( UNITED , STATES ) [C] country ( United States ) [C] active
[feedback] You should use first name which includes a . [system description] find the first name in student table whose first name like " Linda " . [question] What are the first names for students who have an " a " in their first name ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] You need to use home game table and name of team which is Boston Red Stockings in step 1 and 2 respectively . Also , use year between 1990 and 2000 . [system description] Step 1 : for each row in home game table , find the corresponding rows in team franchise table . Step 2 : find the number of rows of the results of step 1 whose franchise name equals " Troy Trojans " and year equals 1901 . [question] How many home games did the team Boston Red Stockings play from 1990 to 2000 in total ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston , Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston , Homer ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 2 , languages should be bangla not english . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : only keep the results of step 1 whose languages equals " english " . Step 3 : find the number of rows of each value of song 's artist name the results of step 2 . Step 4 : find the artist 's artist name the results of step 2 with largest value in the results of step 3 . [question] Find the top 3 artists who have the largest number of songs works whose language is Bangla . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
[feedback] Replace destination with origin , and also add destination equals Honolulu . [system description] find the departure date and arrival date in flight table whose destination equals " Dallas " and destination equals " Washington D.C . " . [question] What are the departure and arrival dates of all flights from LA to Honolulu ? [schema] [T] flight [C] flight number [C] origin [C] destination ( Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] You need to search for the number of deaths which are more than 0 . [system description] find the number of name in storm table . [question] How many storms had death records ? [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] In step 1 , replace domain author table , domain table and name with publication keyword table , VLDB and number of different title in step 3 respectively . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose conference 's name equals " dummy value " . Step 3 : find the number of conference 's name of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 with largest value in the results of step 3 . [question] return me the keyword , which have been contained by the most number of papers in VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , I want the info of sports . [system description] Step 1 : find the number of rows of each value of student id in student table . Step 2 : find the first name and last name in student table with largest value in the results of step 1 . [question] What is the first name and last name of the student who have most number of sports ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to use order items table instead of products table . [system description] find the number of product id in products table . [question] How many distinct order ids correspond to each product ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 1 , you should use faculty table , and also include the names Mark Giuliano from faculty table . [system description] Step 1 : for each row in activity table , find the corresponding rows in participates in table and in student table . Step 2 : find the activity name of the results of step 1 whose first name equals " Linda " and last name equals " Davis " . [question] Show the names of all the activities Mark Giuliano participates in . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 3 , use id of support representative in place of first name of employee . [system description] Step 1 : for each row in customer table , find the corresponding rows in employee table . Step 2 : find the number of rows of each value of support representative id of the results of step 1 . Step 3 : find the employee 's first name and employee id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the first names and support rep ids for employees serving 10 or more customers ? [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You need to search for name of state which is close to colorado . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose border equals " dummy value " . [question] what states border states that border colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Also find college name , minimum enrollment for each state . [system description] find the state and state in college table with largest value of enrollment . [question] What is the name of school that has the smallest enrollment in each state ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You should use course code in place of student class hours taken and also ensure that course code does not contain student class hours . [system description] find the average student gpa in student table whose student class hours took equals 15 . [question] What is the average GPA of students taking ACCT-211 ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Make sure state has the lowest population density . [system description] find the state name in state table with smallest value of density . [question] what state has the smallest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace customer table with employee table , postal code with 70174 . [system description] find the city in customer table whose postal code equals " B3S 1C5 " . [question] Find the cities corresponding to employees who help customers with the postal code 70174 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] You need to use Atlanta instead of Milwaukee . [system description] find the number of rows in park table whose city equals " Milwaukee " . [question] How many parks are there in Atlanta city ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Atlanta ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Atlanta , Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Atlanta ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Atlanta ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Replace organization table with author table , kid with title , and make sure name equals H. V. Jagadish and year less than 2000 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in keyword table . Step 2 : find the kid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [question] return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " before 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace country name with state name , minimum density with area . [system description] find the minimum density in state table whose country name equals " dummy value " . [question] what is the smallest state in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , replace department id in departments table with department id in staff department assignments table . [system description] Step 1 : find the number of rows of each value of department id in departments table . Step 2 : find the department id in departments table with smallest value in the results of step 1 . [question] What is the id of the department with the least number of staff ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 2 , allergy type should be cat not food . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the number of rows of the results of step 1 whose allergy type equals " food " . [question] How many students have cat allergies ? [schema] [T] allergy type [C] allergy ( Cat ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 4 , you need to use the age and make sure allergy type does not equal to food or animal . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table and in student table . Step 2 : find the has allergy 's stuid of the results of step 1 whose allergy type equals " food " . Step 3 : find rows in student table whose student 's stuid one of the results of step 2 and allergy type not equals " food " and allergy type equals " food " . Step 4 : find the number of rows of each value of allergy type the results of step 3 . Step 5 : find the number of rows the results of step 3 whose corresponding value in step 4 is greater than or equals 1 . [question] How many students are over 18 and do not have allergy to food type or animal type ? [schema] [T] allergy type [C] allergy [C] allergy type ( animal , food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Replace greater than 59 with greater than 90 , preferred foot equals right . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name of the results of step 1 whose crossing greater than 59 and preferred foot equals " right " . [question] List the names of all players who have a crossing score higher than 90 and prefer their right foot . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
[feedback] You should use document status code done and document type code equals Paper . [system description] find the document id and document type code in documents table whose document status code equals " overdue " . [question] List the document ids for any documents with the status code done and the type code paper . [schema] [T] reference document types [C] document type code ( Paper ) [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code ( done ) [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code ( done ) [C] document type code ( Paper ) [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] In step 1 , you should use languages which is equivalent to english . [system description] Step 1 : find the minimum rating in song table whose rating equals 7 . Step 2 : find the song name in song table whose rating less than the results of step 1 . [question] What are the song names for every song whose rating is less than the minimum rating for English songs ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] You need to find the total amount outstanding , average amount outstanding from customer table . [system description] find the maximum amount payment , minimum amount payment , average amount payment in customer payments table . [question] What is the maximum , minimum , and average amount of money outsanding for all customers ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use title in place of paper id . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose name equals " Google " . [question] Find all the papers published by the institution " Google " . [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] In step 1 and 2 , you should use customers and staff respectively . [system description] Step 1 : find the staff 's last name in staff table . Step 2 : find the customers 's last name in customers table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] What are the last names that are used by customers and staff ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 , use journal table and omit organization table and jid . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the jid of the corresponding rows to each value . [question] return me the total citations of papers in PVLDB in each year . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace dummy value with relational database in step 2 . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of name the results of step 2 . Step 4 : find the name the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the authors who have more than 10 papers containing keyword " Relational Database " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , you should use dorm amenity table and amenity name in place of dorm table and last name respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the dorm name of the results of step 1 whose last name equals " Lee " . [question] Find the name of amenities of the dorm where the student with last name Smith is living in . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 2 , you should use river 's length instead of state name of border info table . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with largest value of length . [question] which states does the longest river run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use highest elevation and drop mountain altitude . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest point . [question] what is the height of the highest point in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , I want the room Id that is not available in the reservations table . [system description] Step 1 : find the room in reservations table . Step 2 : find the number of rows in rooms table whose room id not one of the results of step 1 . [question] How many rooms have not had any reservation yet ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] Replace transaction type in financial transactions table with distinct card type code in customers cards , corresponding rows to each value of transaction made . [system description] find each value of transaction type in financial transactions table along with the number of the corresponding rows to each value . [question] What are the different card types , and how many transactions have been made with each ? [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] Replace document description with budget type description . [system description] find the document id in documents table whose document description equals " None " . [question] Give the ids for documents that have the budget description 'Government ' . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description ( Government ) [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details ( government ) [T] accounts [C] account id [C] statement id [C] account details
[feedback] Replace actor table with cast table , name with role , remove dummy value . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [question] Which movie had the character " Daffy Duck " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 3 , replace greater than with less than . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the number of rows of each value of policy type code of the results of step 1 . Step 3 : find the policy type code of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Which types of policy are chosen by more than 2 customers ? Give me the policy type codes . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] Make sure to find for distinct unit price in track table . [system description] find the unit price in track table . [question] Find the distinct unit prices for tracks . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] which states does the ohio river pass through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace genre with keyword , and genre with keyword table in step 1 . [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose genre equals " dummy value " . [question] What are the movies related to nuclear weapons [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , there should be rank equals Professor . [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table whose corresponding value in step 1 is greater than or equals 1 . [question] In which buildings are there at least ten professors ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] In step 1 , use domain , organization and publication table instead of cite , 2nd cite and dummy value respectively . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of rows of each value of name the results of step 2 . Step 4 : find the name the results of step 2 with largest value in the results of step 3 . [question] return me the author in the " University of Michigan " whose papers in Databases area have the most total citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to calculate the number of class room having grade of 4 . [system description] find each value of grade in list table along with the number of the corresponding rows to each value . [question] For each fourth-grade classroom , show the classroom number and the total number of students using it . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Replace oid with name , organization with author , organization table with domain author , find number of rows of Databases area . [system description] find the number of rows in organization table whose oid equals " dummy value " . [question] return me the number of organizations in Databases area . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use first name and last name of list table . [system description] find the number of rows in teachers table whose first name equals " OTHA " and last name equals " KAWA " . [question] Find the number of teachers who teach the student called CHRISSY NABOZNY . [schema] [T] list [C] last name ( NABOZNY ) [C] first name (  CHRISSY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You should use languages equals english in place of resolution greater than 512 . [system description] Step 1 : find the minimum resolution in song table whose resolution greater than 512 . Step 2 : find the song name in song table whose resolution greater than the results of step 1 . [question] What are the different names for all songs that have a higher resolution than English songs ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] Make sure that customer id of customer table should be present in loan table . [system description] find the average credit score in customer table . [question] Find the average credit score of the customers who have some loan . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You should use less than in place of greater than . [system description] find the number of rows in exhibition table whose ticket price greater than 29.95 or number of rows greater than 1 . [question] Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] In step 2 , you should count the number of workshops and also the author 's name . [system description] Step 1 : for each row in submission table , find the corresponding rows in acceptance table and in workshop table . Step 2 : find each value of author of the results of step 1 along with the number of the corresponding rows to each value . [question] How many workshops did each author submit to ? Return the author name and the number of workshops . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
[feedback] Find lowest point where state name equals iowa in step 2 . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose lowest elevation not equals " dummy value " with smallest value of lowest point . [question] where is the lowest point in iowa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the total number of enrollment . [system description] find the number of enrollment in college table . [question] How many students are enrolled in college ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 1 , use staff id in complaints table in place of first name in staff table . [system description] Step 1 : find the number of rows of each value of first name in staff table . Step 2 : find the first name in staff table with largest value in the results of step 1 . [question] Return the first names of the 5 staff members who have handled the most complaints . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] In step 1 , you should add savings table and in step 2 , add total balance of checking and savings . [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find the name and name of the results of step 1 with smallest value of balance . [question] Find the name of account that has the lowest total checking and saving balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] Replace keyword with title . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the year of the results of step 1 whose keyword equals " dummy value " . [question] return me the year of " Making database systems usable " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to use profits billion in place of sales billion and also change the main industry to banking . [system description] find the rank , company , market value , market value in company table whose main industry equals " Oil and gas " ordered ascending by sales billion . [question] What is the rank , company , and market value of every comapny in the banking industry ordered by sales and profits ? [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry ( Banking ) [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] In step 1 , use start date in place of start station id . Make sure start date is august . [system description] Step 1 : find the number of rows of each value of start station id in trip table . Step 2 : find the start station name and start station id in trip table with largest value in the results of step 1 . [question] Which start station had the most trips starting from August ? Give me the name and id of the station . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search for the river name having traverse of texas . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [question] what is the longest river flowing through texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , I want least . [system description] Step 1 : find the maximum enrollment in college table . Step 2 : find the state in college table whose enrollment less than the results of step 1 . [question] Find the states where have the colleges whose enrollments are less than the largest size . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 2 , you need to use the bank 's branch name . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table . Step 2 : find the summation of amount of each value of bank 's branch id of the results of step 1 . Step 3 : find the bname of the results of step 1 with largest value in the results of step 2 . [question] Find the name of bank branch that provided the greatest total amount of loans . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] You need to ensure that affirmative should win the debate . [system description] Step 1 : for each row in debate table , find the corresponding rows in debate people table and in people table . Step 2 : find the name , date , venue of the results of step 1 whose affirmative equals 2 . [question] Show the names of people , and dates and venues of debates they are on the affirmative side . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
[feedback] You need to use friend of person friend . [system description] find the number of rows in person table whose name equals " Dan " . [question] How many friends does Dan have ? [schema] [T] person [C] name ( Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend ( Dan ) [C] year
[feedback] You should use manufacturer in place of code . [system description] find the average price in products table whose code equals 2 . [question] What is the average price of products with manufacturer codes equal to 2 ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 1 , use trip table and end station name instead of station table and name respectively . [system description] Step 1 : find the name in station table whose city equals " Redwood City " . Step 2 : find the name in station table whose city equals " San Jose " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to search for unique value of length of river . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 with largest value of length . [question] what state has the longest river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find adults whose check in equals 10 23 2010 and last name equals SELBIG . [system description] find the number of rows in reservations table whose first name equals " SHERILYN " and last name equals " MCNEELEY " and last name equals " SINGERMAN " . [question] How many adults stay in the room CONRAD SELBIG checked in on Oct 23 , 2010 ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
[feedback] In step 3 , you need to look for name as well . [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of rows of each value of routes 's airline id of the results of step 1 . Step 3 : find the airlines 's airline id of the results of step 1 with largest value in the results of step 2 . [question] For the airline ids with the top 10 most routes operated , what are their names ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Namest ) [C] country [C] x [C] y [C] elevation [C] iata ( TOP ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( IDS , TOP ) [C] call sign [C] country [C] active
[feedback] Replace homepage with title , and name with VLDB , year with 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the homepage of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [question] return me the papers on VLDB conference after 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Find elevation of highlow table whose highest point greater than colorado . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point in highlow table whose highlow 's state name equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose highest point greater than the results of step 2 . [question] what states high point are higher than that of colorado [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should add both balances of checking and savings . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name and savings 's balance of the results of step 1 with smallest value of checking 's balance . [question] What is the name corresponding to the accoung with the lowest sum of checking and savings balances ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] In step 1 , use home game 's attendance in place of team 's attendance . [system description] Step 1 : find the average attendance of each value of div id in team table . Step 2 : find the team id and rank in team table with largest value in the results of step 1 . [question] Find the id and rank of the team that has the highest average attendance rate in 2014 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to search for the number of cities having population more than 150000 and state name is texas . [system description] find the number of rows in city table whose state name equals " dummy value " . [question] how many major cities are there in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , make sure that competition type should be Tournament . [system description] Step 1 : find the number of rows of each value of country in competition table . Step 2 : find the country in competition table with largest value in the results of step 1 . [question] which country did participated in the most number of Tournament competitions ? [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type ( Tournament ) [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
[feedback] You should use name of product in place of name of product . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the reference colors 's color code and color description of the results of step 1 whose product name equals " cinnam " . [question] Return the color code and description for the product with the name 'chervil ' . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( chervil ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to use the actor 's name whose name is Kate Winslet . [system description] Step 1 : for each row in writer table , find the corresponding rows in written by table and in copyright table and in directed by table and in director table . Step 2 : find the director 's name of the results of step 1 whose writer 's name equals " dummy value " . [question] Find the directors of all movies featuring " Kate Winslet " [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In both steps , you should use address content and city in place of city and state province county respectively . [system description] Step 1 : find the rows in addresses table whose city equals " Lucasville " and state province county equals " RhodeIsland " . Step 2 : find the rows in addresses table whose city equals " Reingertown " and state province county equals " RhodeIsland " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [question] Find all the addresses in East Julianaside , Texas or in Gleasonmouth , Arizona . [schema] [T] addresses [C] address id [C] address content [C] city ( East Julianaside , Gleasonmouth ) [C] zip postcode [C] state province county ( Arizona , Texas ) [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 1 , find number of rows of each value of instructor in course table . [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table with largest value in the results of step 1 . [question] Which building does the instructor who teaches the most number of courses live in ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Remove whose country name equals dummy value . [system description] find the summation of area in state table whose country name equals " dummy value " . [question] what is the total area of the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the unique school id . [system description] find the number of rows in basketball match table . [question] How many schools are in the basketball match ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] Make sure affiliation equals public . [system description] find the school and location in university table . [question] List all public schools and their locations . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
[feedback] You need to add sales billion in place of profits billion . [system description] find the rank , company , market value in company table whose main industry equals " Banking " ordered ascending by profits billion . [question] find the rank , company names , market values of the companies in the banking industry order by their sales and profits in billion . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry ( Banking ) [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] Replace tennis club with bootup baltimore . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Tennis Club " . [question] What are the first and last name of the president of the club " Bootup Baltimore " ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( President )
[feedback] In step 1 , use staff table in place of addresses table . [system description] Step 1 : find the number of rows of each value of city in addresses table . Step 2 : find the city and number of rows in addresses table with largest value in the results of step 1 . [question] Which city lives most of staffs ? List the city name and number of staffs . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 , use customer in place of employee . [system description] Step 1 : find the number of rows of each value of employee id in employee table . Step 2 : find the first name and employee id in employee table whose corresponding value in step 1 is greater than or equals 1 . [question] Please show the employee first names and ids of employees who serve at least 10 customers . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Please ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
[feedback] In step 2 , you need to use river 's length instead of state name of border info table . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with smallest value of length . [question] what states does the shortest river run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace department name with course 's department code , find number of rows corresponding to each value of department name . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of department name of the results of step 1 along with the number of the corresponding rows to each value . [question] How many classes are held in each department ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace pid with title , and name equals VLDB and year less than 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of pid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [question] return me the number of papers published in the VLDB conference before 2000 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you need to determine the country whose city id is 3 or more . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are the countries that contain 3 or more cities ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] You need to search for the persons having Alice as a friends . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Dan " with smallest value of year . [question] Find the name of persons who are friends with Alice for the shortest years . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] You should use white in place of green . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name of the results of step 1 whose color description like " green " . [question] What are the names of products with 'white ' as their color description ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( white ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Make sure that population should be maximum in wyoming state . [system description] find the city name and maximum population in city table whose state name equals " dummy value " . [question] what is the largest city in wyoming by population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the average age and the length of experience working in step 2 . [system description] Step 1 : for each row in news report table , find the corresponding rows in journalist table . Step 2 : find each value of work type of the results of step 1 along with the average age of the corresponding rows to each value . [question] Find the average age and experience working length of journalists working on different role type . [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
[feedback] In step 4 , you need to use hosting city . In step 2 , you need to use mar that is less than jul and in step 3 , use mar that is not equal to 19 . 4 % . [system description] Step 1 : for each row in temperature table , find the corresponding rows in city table . Step 2 : find the city of the results of step 1 whose mar less than 19.4 . Step 3 : for each row in temperature table , find the corresponding rows in city table . Step 4 : find the city of the results of step 3 whose mar equals 19.4 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities ? [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] In step 1 , you should use staff , and also ensure that last name is Janessa Sawayn and in step 2 , use lessons instead of customers . [system description] Step 1 : for each row in customers table , find the corresponding rows in lessons table . Step 2 : find the average price of the results of step 1 whose first name equals " Ray " . [question] What is the average price for a lesson taught by Janessa Sawayn ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You should use hometown equals Kentucky , not Columbia , South Carolina . [system description] find the card number in member table whose hometown equals " Columbia , South Carolina " . [question] What are the card numbers of members from Kentucky ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] In step 1 , you need to use the word greater than . [system description] Step 1 : find the average gross in dollar of each value of studio in film table . Step 2 : find the studio in film table whose corresponding value in step 1 is greater than 1 . [question] Which studios have an average gross of over 4500000 ? [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
[feedback] Replace department with class in step 1 , replace last name with Smithson in step 2 . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the course code of the results of step 1 whose student last name equals " Oblonski " . [question] What is the code of the course which the student whose last name is Smithson took ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Smithson ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name ( Smithson ) [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should include organization table and in step 2 , use title and VLDB as conference name and organization name respectively . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the jid of the results of step 1 whose conference 's name equals " dummy value " and author 's name equals " dummy value " . [question] return me all the papers in VLDB conference in " University of Michigan " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , replace faculty id , faculty table with course id , instructor table . Find first and last name for each faculty id . [system description] Step 1 : find the number of rows of each value of faculty id and last name in faculty table . Step 2 : find the first name and last name in faculty table with largest value in the results of step 1 . [question] What are the first and last names of the instructors who teach the top 3 number of courses ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] Replace player 's player id with salary 's player id , team 's year with player 's year , both years with 2000 . [system description] Step 1 : for each row in team table , find the corresponding rows in batting postseason table and in player table . Step 2 : find the number of player 's player id of the results of step 1 whose team 's year equals 1875 and team 's year equals 1883 . [question] How many players did Boston Red Stockings have in 2000 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to use airline id instead of first name . [system description] find the name and name in aircraft table with largest value of distance . [question] What is the id and name of the aircraft that can cover the maximum distance ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 2 , make sure characteristics of characteristics is available in product characteristics and use characteristics data type in place of characteristics name . [system description] Step 1 : find the characteristic name , other characteristic details , characteristic data type in characteristics table . Step 2 : find the characteristic name and other characteristic details in characteristics table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the names , details and data types of the characteristics which are never used by any product ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 1 , you should use date claim made and amount claimed as well as use settlements table in place of claims table . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the date claim made and date claim settled in claims table whose corresponding value in step 1 is equals 1 . [question] Which claims had exactly one settlement ? For each , tell me the the date the claim was made , the date it was settled and the amount settled . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] Make sure bed Type equals King or bed Type equals Queen instead of beds equals 2 . [system description] find the room name in rooms table whose beds equals 2 . [question] List the name of rooms with king or queen bed . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( Queen , King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( QUEEN ) [C] adults [C] kids
[feedback] Find number of rows of river table whose river name equals missouri . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [question] how many states does the missouri river flow through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use name and balance of savings . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the average savings 's balance in savings table . Step 3 : find the checking 's balance of the results of step 1 whose savings 's balance greater than the results of step 2 . [question] What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance ? [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] Make sure area is equals to maximum area . [system description] find the state name in state table with largest value of density . [question] what is the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find lowest elevation of state name where river name equals mississippi . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose river name equals " dummy value " . [question] which is the lowest point of the states that the mississippi runs through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use Maryland or Duke in place of Connecticut or player 's player equals Jeong Suk Young ( 793 ) . [system description] Step 1 : for each row in match season table , find the corresponding rows in country table and in team table and in player table . Step 2 : find the official native language of the results of step 1 whose college equals " Connecticut " or player 's player equals " Jeong Suk-Young ( 793 ) " . [question] Return the official native languages of countries who have players from Maryland or Duke colleges . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( Maryland , Duke ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You should use country instead of languages . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name of the results of step 1 whose gender equals " Male " and languages equals " bangla " . [question] What are the names of artists who are Male and are from UK ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country ( UK ) [C] gender ( Male ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country ( UK ) [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Replace Founded less than 1743 with Founded equals 1850 , and Founded less than 1957 with Founded equals 1850 . [system description] find the school in university table whose founded less than 1743 or founded equals 1957 . [question] What are the schools that were either founded before 1850 or are public ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
[feedback] Remove and state equals AZ . [system description] Step 1 : find the maximum enrollment in college table whose state equals " AZ " and state equals " FL " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [question] What are the names of all colleges with a larger enrollment than the largest college in Florida ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to determine the minimum value of rating stars for each movie 's director . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the title and director of the results of step 1 with smallest value of rating stars . [question] Find the title and score of the movie with the lowest rating among all movies directed by each director . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , name should be Chris Jackson and in step 3 , name should be Sarah Martinez . [system description] Step 1 : find the title in movie table . Step 2 : for each row in reviewer table , find the corresponding rows in rating table and in movie table . Step 3 : find the title of the results of step 2 whose name equals " Sarah Martinez " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] What are the titles of all movies that were not reviewed by Chris Jackson ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name ( Chris Jackson ) [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] You should use how to get there equals bus instead of name equals filmfestival . [system description] find the name in tourist attractions table whose name equals " film festival " . [question] What are the names of the tourist attractions that can be accessed by bus ? [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] You need to verify that the value of treasurer votes is not 0 . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the advisor of the results of step 1 whose election cycle equals " Spring " . [question] Who served as an advisor for students who have treasurer votes in the spring election cycle ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
[feedback] In step 2 , allergy type should be food . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table . Step 2 : find the has allergy 's allergy of the results of step 1 whose allergy type equals " animal " . [question] Show all allergies with type food . [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 2 , you should use sex and club name instead of last name and club name respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Bootup Baltimore " and last name equals " Woods " . [question] What are the first name and last name of each male member in club " Hopkins Student Enterprises " ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to determine the major along with minimum and maximum . [system description] find each value of major in student table along with the average age and maximum age of the corresponding rows to each value . [question] Show the average , minimum , and maximum age for different majors . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] first name Linda and last name Smith should be there from correlated student table . [system description] find the first name and last name in faculty table whose first name equals " Rao " and last name equals " Iglesias " . [question] What are the first name and last name of Linda Smith 's advisor ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , you should use hours played in place of game id . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the number of rows of each value of plays games 's game id of the results of step 1 . Step 3 : find the game name of the results of step 1 with largest value in the results of step 2 . [question] What is the name of the game that has been played the most ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Make sure to find distinct city . [system description] find the city in addresses table . [question] Retrieve the list of all cities . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] You need to search for the faculty 's participation in faculty participates in table and also search for the similar rows number . [system description] find each value of faculty id in faculty table along with the number of the corresponding rows to each value . [question] Show the first and last name of all the faculty members who participated in some activity , together with the number of activities they participated in . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You need to search for the name of state which is adjacent to oklahoma . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose border equals " dummy value " with largest value of population . [question] what state bordering oklahoma has the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to ensure that Alice should be your friend . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name , age , job of the results of step 1 whose friend equals " Bob " with largest value of year . [question] What are the names , ages , and jobs of all people who are friends with Alice for the longest amount of time ? [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] You need to use salary and year range from 1985 to 1990 . [system description] find the summation of death year in player table whose name first equals " Cam " and death year less than or equals 1923 . [question] How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Leon ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Leon ) [C] name first ( Len ) [C] name last ( Barker ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Make sure state has highest population density . [system description] find the state name in state table with largest value of density . [question] which state has the highest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace player with team . [system description] find the team in player table ordered ascending by player . [question] What are the teams of the players , sorted in ascending alphabetical order ? [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
[feedback] Distance should be used instead of aircraft 's name and remove SAAB 340 . [system description] Step 1 : for each row in employee table , find the corresponding rows in certificate table and in aircraft table . Step 2 : only keep the results of step 1 whose aircraft 's name greater than " SAAB 340 " . Step 3 : find the number of rows of each value of employee 's employee id the results of step 2 . Step 4 : find the employee 's name and employee 's name the results of step 2 with largest value in the results of step 3 . [question] What is the salaray and name of the employee with the most certificates to fly planes more than 5000 ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
[feedback] In step 2 , name of state is to be used instead of population . Also , name of state is to be used instead of state name . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the minimum population in state table . Step 3 : find the maximum highest point of the results of step 1 whose population equals the results of step 2 with smallest value of population . [question] what is the highest point in the state with the smallest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the unique number of director . [system description] find the number of rows in movie table . [question] How many movie directors are there ? [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] In step 1 , you should use actor 's table and in step 2 , nationality should be china . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : only keep the results of step 1 whose nationality equals " dummy value " . Step 3 : find the number of rows of each value of title the results of step 2 . Step 4 : find the title the results of step 2 with largest value in the results of step 3 . [question] which movie has the most number of actors from China ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 3 , replace accounts with customers . [system description] Step 1 : for each row in accounts table , find the corresponding rows in customers table . Step 2 : find the number of rows of each value of accounts 's customer id of the results of step 1 . Step 3 : find the accounts 's customer id , customer first name , customer last name of the results of step 1 with smallest value in the results of step 2 . [question] Return the id and full name of the customer who has the fewest accounts . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] In step 2 , you should count the number of students having allergy . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in student table . Step 2 : find each value of allergy of the results of step 1 along with the number of the corresponding rows to each value . [question] Show all allergies with number of students affected . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Make sure code of document status equals done . [system description] find the number of rows in documents table . [question] How many documents have the status code done ? [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code ( done ) [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code ( done ) [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
[feedback] Also find artist name and song 's languages equals english . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table and in artist table . Step 2 : find the song id , preferred genre , genre name of the results of step 1 whose genre 's rating equals 8 ordered ascending by song 's rating . [question] What is the id , genre , and name of the artist for every English song ordered by ascending rating ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] In step 2 , grade should be 5 instead of 3 . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's last name of the results of step 1 whose grade equals 3 . [question] what are the last names of the teachers who teach grade 5 ? [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] You need to search for the number of city name having population more than 150000 . [system description] find the number of rows in city table . [question] how many major cities are there [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure tryout 's decision equals yes , not enrollment . [system description] find the number of rows in college table whose enrollment greater than 18000 . [question] How many students got accepted after the tryout ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] You need to calculate the unique number of party id . [system description] find the number of rows in party table . [question] How many parties do we have ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] In step 2 , use name equals University of Pennsylvania and drop INRIA . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose name equals " INRIA " . [question] How many papers are written by authors from the institution " University of Pennsylvania " ? [schema] [T] institution [C] institution id [C] name ( University of Pennsylvania ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to determine the type of album from the songs table . [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the number of rows of the results of step 1 whose albums 's title equals " dummy value " . [question] How many songs appear in studio albums ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] In step 1 , you should use the population of city instead of name of city . [system description] Step 1 : find the number of rows of each value of city name in city table . Step 2 : find the city name in city table with largest value in the results of step 1 . [question] what is the most populous city [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the settlements made for the largest value of claim id from the settlements table . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the claims 's claim id and settlements 's date claim settled of the results of step 1 with largest value of claims 's date claim settled . [question] Find the claim id and the number of settlements made for the claim with the most recent settlement date . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] In step 3 , class should be Third rate ship of the line . [system description] Step 1 : find the rank in captain table . Step 2 : for each row in ship table , find the corresponding rows in captain table . Step 3 : find the rank of the results of step 2 whose type equals " Panamax " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Find the captain rank that has no captain in Third-rate ship of the line class . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Third-rate ship of the line ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Replace player 's player with match season 's player . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 ordered ascending by college . [question] Return all players sorted by college in ascending alphabetical order . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
[feedback] You need to ensure that attendance of exhibition is on average more than 200 . [system description] Step 1 : for each row in exhibition record table , find the corresponding rows in exhibition table and in artist table . Step 2 : find the average attendance of each value of name of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] Show all artist names with an average exhibition attendance over 200 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
[feedback] Replace genre with keyword in step 1 , and genre with movie , copyright with tags in step 2 . [system description] Step 1 : for each row in genre table , find the corresponding rows in classification table and in copyright table and in directed by table and in director table . Step 2 : find the name of the results of step 1 whose genre equals " dummy value " . [question] List all the directors of movies about nuclear weapons [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace name given with name first and last . [system description] Step 1 : for each row in player award table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of player 's player id of the results of step 1 . Step 3 : find the name given and player award 's player id of the results of step 1 with largest value in the results of step 2 . [question] Which 3 players won the most player awards ? List their full name and id . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Replace largest with smallest . [system description] find the name in captain table with largest value of age . [question] What is the name of the youngest captain ? [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
[feedback] Find area of state name equals new mexico in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " and highest elevation equals " dummy value " . [question] how large is new mexico [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace city with match id and remove year which is equivalent to 2011 . [system description] Step 1 : for each row in hosting city table , find the corresponding rows in city table and in match table . Step 2 : find the city of the results of step 1 whose competition equals " 1994 FIFA World Cup qualification " and year equals 2011 . [question] Find the match ids of the cities that hosted competition " 1994 FIFA World Cup qualification " ? [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] You should use Beijing instead of Paris . [system description] find the number of rows in manufacturers table whose headquarter equals " Tokyo " or headquarter equals " Paris " . [question] Find the number of manufactures that are based in Tokyo or Beijing . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Beijing , Tokyo ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] Position equals CTO should be use in place of last name equals Jones . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Hopkins Student Enterprises " and last name equals " Jones " . [question] Who is the " CTO " of club " Hopkins Student Enterprises " ? Show the first name and last name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( CTO )
[feedback] You need to use department name instead of department code . [system description] find the number of rows in professor table whose department code equals " MATH " . [question] How many professors are in the accounting dept ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use area instead of country name and also delete the city 's name which is equivalent to dummy value . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's country name equals " dummy value " with largest value of density . [question] what is the capital city of the largest state in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace birth year with player award 's year , step 2 : Replace birth year with year , step 3 : Replace 1831 with 1960 . [system description] Step 1 : find the name first and name last in player table whose birth year equals 1982 . Step 2 : find the name first and name last in player table whose birth year equals 1831 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [question] Find the players ' first name and last name who won award both in 1960 and in 1961 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You should use book club 's year and not the title and publisher . [system description] Step 1 : for each row in book club table , find the corresponding rows in culture company table and in movie table . Step 2 : find the book title , title , title of the results of step 1 ordered descending by publisher . [question] What are the years , titles , and publishers for all books , ordered by year descending ? [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] You should use word monadic in place of binders unbound . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the last name of the results of step 1 whose title like " Binders Unbound " . [question] Which authors have written a paper with title containing the word " Monadic " ? Return their last names . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use largest in place of largest . [system description] find the name in person table whose job equals " doctor " with largest value of age . [question] Who is the oldest person whose job is student ? [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
[feedback] You need to ascertain that table should have rows which are equivalent to delegate of election table . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [question] Show the name of each county along with the corresponding number of delegates from that county . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] You need to search for name of state rather than area . [system description] find the minimum area in state table . [question] what is the smallest state by area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , replace maximum age with minimum age and in step 3 , replace name of person friend with age of person table . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the maximum age of the results of step 1 . Step 3 : find the person 's name in person table whose age greater than the results of step 2 ordered ascending by name . [question] Find the name of people whose age is greater than any engineer sorted by their age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
[feedback] In step 1 , you should use dorm amenity table and amenity id in place of dorm table and student capacity respectively . [system description] Step 1 : find the number of rows of each value of dorm id in dorm table . Step 2 : find the dorm name and student capacity in dorm table with smallest value in the results of step 1 . [question] Find the name and capacity of the dorm with least number of amenities . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] In step 3 , only find for two department store chains with largest number of department stores . [system description] Step 1 : for each row in department store chain table , find the corresponding rows in department stores table . Step 2 : find the number of rows of each value of department stores 's department store chain id of the results of step 1 . Step 3 : find the department stores 's department store chain id of the results of step 1 with largest value in the results of step 2 . [question] What are the ids of the two department store chains with the largest number of department stores ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Replace has allergy table with allergy type table . [system description] find the number of allergy in has allergy table . [question] How many distinct allergies are there ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Make sure salary is in excess of $ 1000 . [system description] find the salary in salary table with largest value of salary . [question] How much salary did the top 3 well-paid players get in 2001 ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to search for the largest city in the state of Wyoming . [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [question] what is the biggest city in wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Find artist country in place of releasedate , and make sure song name contains love . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and releasedate of the results of step 1 whose song name like " Aj ei akash " . [question] What are the names of the artists who released a song that has the word love in its title , and where are the artists from ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 2 , list must be replaced by teachers . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 . [question] Report the first name and last name of all the teachers . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Replace Newark Pepper with Boston Red Stockings . [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table . Step 2 : find the maximum wins of the results of step 1 whose name equals " Newark Pepper " and team id winner equals " PRO " . [question] List the maximum scores of the team Boston Red Stockings when the team won in postseason ? [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to find the area where state name is new mexico . [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the density of the results of step 1 whose highlow 's state name equals " dummy value " . [question] what is the size of new mexico [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use customer code instead of date supplied to . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table and in order items table and in products table and in product suppliers table . Step 2 : find the maximum customer code and minimum date supplied to of the results of step 1 . [question] Return the maximum and minimum customer codes . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You should use title Binders Unbound . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the last name of the results of step 1 whose title equals " Nameless , Painless " . [question] Who is the author of the paper titled " Binders Unbound " ? Give me the last name . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title ( Binders Unbound ) [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use product category code and name of product in place of product name and name of product respectively . [system description] find the product name and typical buying price in products table whose product name equals " lotus " . [question] What is the category and typical buying price of the product with name " cumin " ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 2 , you should determine the number of advisor from student table . [system description] Step 1 : find the number of rows of each value of advisor in student table . Step 2 : find the advisor and number of rows in student table with largest value in the results of step 1 . [question] Which Advisor has most of students ? List advisor and the number of students . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
[feedback] You need to search for the code of product having lowest price . [system description] find the code and name in products table with smallest value of price . [question] Select the code of the product that is cheapest in each product category . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] Make sure to find distinct value of faculty 's rank . [system description] find the rank in faculty table . [question] What ranks do we have for faculty ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] I want product details and also make sure that order quantity should be sorted by descending order quantity . [system description] Step 1 : for each row in order items table , find the corresponding rows in products table and in customer orders table and in customers table . Step 2 : find the customer name and products 's product id of the results of step 1 with largest value of order quantity . [question] Find the name and ID of the product whose total order quantity is the largest . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] In step 1 , you should use distinct product id of order items table . [system description] Step 1 : find the number of rows of each value of product name in products table . Step 2 : find the product name in products table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the distinct names of products purchased by at least two different customers ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] In step 1 , you should use max occupancy in place of room id . [system description] Step 1 : find the number of rows of each value of room id in rooms table . Step 2 : find the room name in rooms table with largest value in the results of step 1 . [question] What is the name of the room that can accommodate the most people ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You should use first name of employee instead of first name of professor and also drop the condition whose employee first name equals Gerald . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose employee first name equals " Gerald " ordered ascending by professor office . [question] What are the first names and office locations for all professors sorted alphabetically by first name ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to use Mountain View instead of San Francisco . [system description] find the number of rows in station table whose city equals " San Francisco " . [question] How many stations does Mountain View city has ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You should use description of color as white and name of characteristic as hot . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference colors table . Step 2 : find the number of rows of the results of step 1 whose color description equals " purple " or characteristic name equals " slow " . [question] How many products have their color described as 'white ' or have a characteristic with the name 'hot ' ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( white ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( hot ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 2 , use product description and product category code in place of product name and characteristic name respectively . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference product categories table and in reference colors table . Step 2 : find the product name , color description , product category description of the results of step 1 whose characteristic name equals " error " . [question] List the names , color descriptions and product descriptions of products with category " Herbs " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] Make sure state has the lowest population density . [system description] find the state name in state table with smallest value of density . [question] which state has the smallest population density [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the city name in city table . [system description] find the state name in state table with smallest value of population . [question] what state has the smallest urban population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use the highest value in place of the lowest value . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the title and rating stars of the results of step 1 with smallest value of rating stars . [question] For each reviewer id , what is the title and rating for the movie with the smallest rating ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , you should use author table and year , also make sure that year should be more than 1995 and conference 's name equals VLDB . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the writes 's pid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [question] return me the authors who have papers in VLDB conference before 2002 after 1995 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use river name in place of country name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [question] which is the longest river in usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the country of artist having resolution higher than 900 . [system description] find the artist name and country in song table whose resolution greater than 720 . [question] What is the name and country of origin for each artist who has released a song with a resolution higher than 900 ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] In step 1 , use organization table and in step 3 , cite num in place of name and dummy value respectively . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of jid of each value of name the results of step 2 . Step 4 : find the name the results of step 2 with largest value in the results of step 3 . [question] return me the author in the " University of Michigan " whose papers have the most total citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace department address with department name , school code with school code in step 3 . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the number of rows of each value of school code of the results of step 1 . Step 3 : find the number of department address and number of school code of the results of step 1 whose corresponding value in step 2 is less than 1 . [question] Find the number of different departments in each school whose number of different departments is less than 5 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use date of becoming a customer and first name should be Carole Bernhard . [system description] find the date of birth in customers table whose first name equals " Omer " and last name equals " Trantow " . [question] When did Carole Bernhard first become a customer ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name [C] middle name [C] last name [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name ( Carole ) [C] last name ( Bernhard ) [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to search for the year of opening which is lower than 2010 . [system description] Step 1 : find rows in branch table whose open year less than 2015 . Step 2 : find each value of city the results of step 1 along with the number of the corresponding rows to each value . [question] For each city , how many branches opened before 2010 ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] You need to calculate the different card type code . [system description] find the number of rows in customers cards table . [question] Show the number of card types . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] In step 2 , player position should be mid and in step 4 , goalie should be player position . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the state of the results of step 1 whose player position equals " striker " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the state of the results of step 3 whose player position equals " striker " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] Find the names of states that have some college students playing in the mid position but not in the goalie position . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie , mid ) [C] decision
[feedback] You should use duration of files in place of song name . [system description] find the artist name in song table with smallest value of song name . [question] What is the name of the artist who produced the shortest song ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] birth year equals dummy value and name equals actor_name0 . [system description] find the birth year in actor table whose name equals " dummy value " and birth year equals " dummy value " . [question] When was " Kevin Spacey " born ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search for the country of artist . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and song 's country of the results of step 1 with largest value of rating . [question] What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from ? [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to calculate the number of sex along with the rank . [system description] find each value of rank and sex in faculty table along with the number of the corresponding rows to each value . [question] How many faculty members do we have for each rank and gender ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You need to calculate the population of city where boulder is the name of city . [system description] Step 1 : for each row in city table , find the corresponding rows in state table and in mountain table . Step 2 : find the city name of the results of step 1 whose mountain name equals " dummy value " . [question] people in boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should include table of songs and in step 2 , ensure that title of songs equals Der Kapitan . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table . Step 2 : find the type of the results of step 1 whose last name equals " dummy value " . [question] What are the types of vocals that the musician with the last name " Heilo " played in " Der Kapitan " ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] You should use name of product as substitute of product . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the unit of measure and products 's product category code of the results of step 1 whose product name equals " cumin " . [question] What are the unit of measure and category code for the 'chervil ' product ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( chervil ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] You need to calculate the total number of furniture types manufactured by the manufacturer and its name . [system description] find each value of name in manufacturer table along with the number of the corresponding rows to each value . [question] Find the number of funiture types produced by each manufacturer as well as the company names . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] You need to use Clemson as a substitute of Virginia Tech . [system description] Step 1 : for each row in university table , find the corresponding rows in basketball match table . Step 2 : find the location and all games of the results of step 1 whose team name equals " Virginia Tech " . [question] Find the location and all games score of the school that has Clemson as its team name . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] You should use claims processing stages instead of claims processing stages and also delete claim stage id . [system description] find the number of claim stage id in claims processing table . [question] Find the number of distinct stages in claim processing . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] In step 1 , replace department address with department name , also find professor office , course description for each instructor . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name , department address , department address of the results of step 1 whose course description equals " Intro . to Statistics " . [question] What are the first names , office locations , and departments of all instructors , and also what are the descriptions of the courses they teach ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to find the average number of reviewer id in step 2 . [system description] Step 1 : for each row in reviewer table , find the corresponding rows in rating table . Step 2 : find each value of reviewer 's reviewer id of the results of step 1 along with the name and average rating stars of the corresponding rows to each value . [question] What is the average number of stars that each reviewer awards for a movie ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] what states does the ohio river go through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to calculate the number of rows that are equivalent to all claims . [system description] find each value of claim id in claims table along with the number of the corresponding rows to each value . [question] Find the number of settlements each claim corresponds to . Show the number together with the claim id . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [question] what are the states that the ohio run through [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for cities whose name are in texas . [system description] find the number of rows in city table whose state name equals " dummy value " . [question] how many cities are in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use jan and city 's . [system description] find the sep in temperature table whose dec equals 26.1 and aug equals 21.7 . [question] Give me the temperature of Shanghai in January . [schema] [T] city [C] city id [C] city ( Shanghai ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
[feedback] Make sure they are in sports info , and also make sure they are on scholarship . [system description] find the student id in student table . [question] What are the ids for all sporty students who are on scholarship ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] Smith Hall should be the name of dorm . [system description] Step 1 : for each row in dorm table , find the corresponding rows in has amenity table and in dorm amenity table . Step 2 : find the amenity name of the results of step 1 whose dorm name equals " Anonymous Donor Hall " ordered ascending by amenity name . [question] What amenities does Smith Hall have in alphabetical order ? [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Smith Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You need to determine the number of corresponding rows from the member table for each party id . [system description] find each value of party name in party table along with the number of the corresponding rows to each value . [question] How many members are in each party ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] In step 1 , you should use company id of office locations in place of name in buildings table . [system description] Step 1 : find the number of rows of each value of name in buildings table . Step 2 : find the name in buildings table whose corresponding value in step 1 is greater than 1 . [question] Show the names of the buildings that have more than one company offices . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
[feedback] Make sure those individual id is present under organization contact individuals table . [system description] find the individual last name in individuals table . [question] What are the last names of individuals who have been contact individuals for an organization ? [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] In step 2 , you should use first name Linda and last name Smith . [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table and in video games table . Step 2 : find the game name of the results of step 1 whose first name equals " William " and last name equals " Woods " . [question] Show all game names played by Linda Smith [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] You need to use table of movie , release year and name of director which is equivalent to 2010 and not equivalent to Dummy . [system description] Step 1 : for each row in producer table , find the corresponding rows in made by table and in copyright table and in directed by table and in director table . Step 2 : find the number of rows of the results of step 1 whose director 's name equals " dummy value " and producer 's birth year less than " dummy value " . [question] How many movies did " Quentin Tarantino " direct before 2010 ? [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] Replace course table , course code and course code with enroll table , enroll grade and course code respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name and student last name of the results of step 1 whose course code equals " QM-362 " or course code equals " CIS-220 " . [question] Find names of all students who took some course and got A or C . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 3 , use title and VLDB in place of jid and name respectively . Also , use year in place of dummy value and year equals 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . Step 3 : find the number of rows of each value of jid the results of step 2 . Step 4 : find the jid and number of rows the results of step 2 ordered descending by the results of step 3 . [question] return me the paper after 2000 in VLDB conference with the most citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , you should count the number of rows that correspond to each value of account id in financial transactions table . [system description] Step 1 : for each row in financial transactions table , find the corresponding rows in accounts table . Step 2 : find each value of accounts 's account id of the results of step 1 along with the number of the corresponding rows to each value . [question] Count the number of financial transactions that correspond to each account id . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] In step 1 , sports info 's sex should be M and in step 3 , sports name should be Football . [system description] Step 1 : find the student 's student id in student table whose sex equals " F " . Step 2 : for each row in student table , find the corresponding rows in plays games table . Step 3 : find the plays games 's student id of the results of step 2 whose sex equals " F " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [question] Show all male student ids who do n't play football . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
[feedback] Make sure tryout 's decision equals yes , and find colleges with corresponding enrollment . [system description] find each value of state in college table along with the number of the corresponding rows to each value . [question] How many students are enrolled in colleges that have student accepted during tryouts , and in which states are those colleges ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 2 , you should use principal activities of Cargo and in step 4 principal activities of Catering services should be used in place of type . [system description] Step 1 : for each row in operate company table , find the corresponding rows in flight table . Step 2 : find the pilot of the results of step 1 whose principal activities equals " Travel agency " . Step 3 : for each row in operate company table , find the corresponding rows in flight table . Step 4 : find the pilot of the results of step 3 whose type equals " Corporate " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [question] List the name of the pilots who have flied for both a company that mainly provide 'Cargo ' services and a company that runs 'Catering services ' activities . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities ( Catering services , Cargo ) [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
[feedback] In step 1 , substitute student first name in student table in place of student first name in enroll table . [system description] Step 1 : find the number of rows of each value of student first name in student table . Step 2 : find the student first name in student table whose corresponding value in step 1 is equals 1 . [question] Find the first names of students who took exactly one class . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace student num with student gpa . [system description] find the student first name , student gpa , student phone in student table with largest value of student num . [question] What is the first name , GPA , and phone number of the students with the top 5 GPAs ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You should use name of state instead of name of country . [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the mountain name of the results of step 1 whose state 's country name equals " dummy value " . [question] what mountains are in alaska [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use ascendant order . [system description] find the name in company table ordered descending by sales in billion . [question] List the names of companies by ascending number of sales . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
[feedback] In step 2 , make sure store id equals 1 . [system description] Step 1 : for each row in store table , find the corresponding rows in inventory table . Step 2 : find the number of rows of the results of step 1 whose inventory 's store id equals 2 . [question] How many items in inventory does store 1 have ? [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
[feedback] In step 1 , you need to use the year of openning which is greater than or equal to 2010 . [system description] Step 1 : find rows in cinema table whose openning year less than or equals 2012 . Step 2 : find the number of rows of each value of location the results of step 1 . Step 3 : find the location the results of step 1 with largest value in the results of step 2 . [question] What is the location with the most cinemas opened in year 2010 or later ? [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
[feedback] You need to use acc percent . [system description] find the maximum acc percent in basketball match table . [question] What is the highest acc percent score in the competition ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] In step 3 , use greater than or instead of . [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] What are project ids of projects that have 2 or more corresponding documents ? [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
[feedback] Find population of city table whose city 's population greater than state 's population , remove condition . [system description] find the number of rows in state table whose country name equals " dummy value " . [question] how many citizens does the biggest city have in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the city having minimum population . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose city 's country name equals " dummy value " with smallest value of density . [question] what is the smallest city in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use date contact from of organization contact individuals table instead of uk vat number . [system description] Step 1 : for each row in individuals table , find the corresponding rows in organization contact individuals table and in organizations table . Step 2 : find the individual last name of the results of step 1 with largest value of uk vat number . [question] Find the last name of the first ever contact person of the organization with the highest UK Vat number . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] city of starting and ending station should be mountain view and paloalto respectively . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the number of rows of the results of step 1 whose city equals " Redwood City " and end station name equals " Powell at Post ( Union Square ) " . [question] How many trips stated from a station in Mountain View and ended at one in Palo Alto ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View , Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to calculate the age of editors and also the number of editors . [system description] find each value of age in editor table along with the number of editor id of the corresponding rows to each value . [question] What are the different ages of editors ? Show each age along with the number of editors of that age . [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
[feedback] You need to search for the river name of mississippi . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [question] what are the populations of states through which the mississippi river runs [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure to find names of dependent with spouse employee relation . [system description] find the dependent name in dependent table . [question] find all dependent names who have a spouse relation with some employee . [schema] [T] works on [C] employee ssn [C] project number [C] hours [T] employee [C] first name [C] minit [C] last name [C] ssn [C] birth date [C] address [C] sex [C] salary [C] super ssn [C] department no [T] department [C] department name [C] department number [C] manager ssn [C] manager start date [T] project [C] dependent name [C] dependent number [C] dependent location [C] department number [T] dependent [C] employee ssn [C] dependent name [C] sex [C] birth date [C] relationship ( Spouse ) [T] department locations [C] department number [C] department location
[feedback] Replace location in school table with school id in player in step 1 . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [question] Which schools have more than 1 player ? Give me the school locations . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
[feedback] Replace region name with region id . [system description] find the number of region name in region table . [question] Count the number of different affected regions . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
[feedback] Replace death year equals 1950 with year equals 1998 . [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1950 and death year equals 1950 . [question] List the first and last name for players who participated in all star game in 1998 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] Make sure division equals AS . [system description] find the number of department name in department table . [question] How many departments are in the division AS ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
[feedback] In step 1 , you should use customer id in accounts table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer id , customer first name , customer last name in customers table with largest value in the results of step 1 . [question] What is the customer id , first and last name with most number of accounts . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Replace all neutral with affiliation . [system description] find the number of all neutral in basketball match table . [question] Find how many different affiliation types there are . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] In step 1 , you should use artist table and in step 2 , only show the first three results . [system description] Step 1 : find the number of rows of each value of artist name in song table . Step 2 : find the artist name and number of rows in song table with largest value in the results of step 1 . [question] Find the names and number of works of the three artists who have produced the most songs . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] You need to search for the least value of difference between active from date and active to date . [system description] find the channel code and contact number in customer contact channels table with largest value of active to date . [question] What is the channel code and contact number of the customer contact channel that was active for the longest time ? [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
[feedback] Also find student date of birth instead of student gpa , and ensure that student gpa greater than 3 . [system description] find the student first name and student last name in student table with largest value of student gpa . [question] What is the first and last name of the youngest student with a GPA above 3 , and what is their GPA ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the largest value of population . [system description] find the state name in state table with largest value of population . [question] which state has the biggest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , include student 's class table , in step 2 , use course code and enroll grade in place of enroll grade and class code respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the student first name of the results of step 1 whose enroll grade equals " A " and class code equals 10018 . [question] What is the first name of students enrolled in class ACCT-211 and got grade C ? [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Replace cite with writes , cited with citation num , and dummy with greater than 200 . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the title of the results of step 1 whose cited greater than " dummy value " and citation num equals " dummy value " . [question] return me the papers by " H. V. Jagadish " on PVLDB with more than 200 citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Also find id of medicine . [system description] Step 1 : for each row in medicine enzyme interaction table , find the corresponding rows in medicine table . Step 2 : find the number of rows of each value of medicine id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] For every medicine id , what are the names of the medicines that can interact with more than one enzyme ? [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
[feedback] Replace college id equals carioho with name full equals Yale University . [system description] Step 1 : for each row in college table , find the corresponding rows in player college table and in player table . Step 2 : find the average height of the results of step 1 whose college 's college id equals " carioho " . [question] Find the average height of the players who belong to the college called 'Yale University ' . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( yale ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Yale ) [C] name last ( Yale ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( yale ) [C] name full ( Yale University ) [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] In step 1 , you should use activity id and participates in table in place of activity name and activity table respectively . [system description] Step 1 : find the number of rows of each value of activity name in activity table . Step 2 : find the activity name in activity table with largest value in the results of step 1 . [question] What is the name of the activity with the most students ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You need to use 162 in place of 866 in step 2 . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find the customer first name , customer phone , customer last name of the results of step 1 whose account name equals 866 . [question] Give the full name and phone of the customer who has the account name 162 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] You should use the state instead of college name . [system description] find each value of college name in college table along with the average enrollment of the corresponding rows to each value . [question] How many students , on average , does each college have enrolled ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Find number of rows of each class room and its grade . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find each value of grade of the results of step 1 along with the number of the corresponding rows to each value . [question] For each classroom , report the classroom number and the number of grades using it . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Make sure rank equals Instructor . [system description] find the first name and last name in faculty table . [question] What are the first name and last name of all the instructors ? [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
[feedback] Also find latitude in place of one of the longitude . [system description] find the average longitude and average longitude in station table whose city equals " Redwood City " . [question] What is the average latitude and longitude in San Jose ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Jose ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 1 , you should use customer orders in place of customers table . [system description] Step 1 : find the number of rows of each value of customer name in customers table . Step 2 : find the customer name , customer phone , customer email in customers table with largest value in the results of step 1 . [question] Return the name , phone number and email address for the customer with the most orders . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] You need to determine the average age of student 's dorm . [system description] find each value of dorm name in dorm table along with the average dorm name of the corresponding rows to each value . [question] What is the average age for each dorm and what are the names of each dorm ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
[feedback] You should use length in place of height . [system description] find the speed in roller coaster table with largest value of height . [question] What are the speeds of the longest roller coaster ? [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
[feedback] In step 1 , you should include table of course and in step 2 , use course credit in place of course credit . [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find the department name of the results of step 1 with largest value of course credit . [question] Find the name of the department that offers the largest number of credits of all classes . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , I want authorship count table . Also , find title of papers table . [system description] Step 1 : find the number of rows of each value of paper id in papers table . Step 2 : find the title and title in papers table with largest value in the results of step 1 . [question] Which paper has the most authors ? Give me the paper title . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Replace acc regular season with founded . [system description] find the team name and acc regular season in basketball match table with largest value of acc regular season . [question] What is the team name and acc regular season score of the school that was founded for the longest time ? [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] Make sure gender equals male . [system description] find the name in person table whose age not equals 45 with largest value of age . [question] What is the name of the youngest male ? [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
[feedback] Replace founder with headquarter . [system description] find the founder in manufacturers table . [question] What are the different cities listed ? [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
[feedback] In step 1 , you should count the number of distinct product id in order items table . [system description] Step 1 : find the number of rows of each value of customer name in customers table . Step 2 : find the customer name in customers table whose corresponding value in step 1 is greater than or equals 1 . [question] Find the names of customers who have bought by at least three distinct products . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Also find country , and make sure city equals New York . [system description] find the name , city , elevation in airports table whose elevation equals 3396 . [question] What is the name , city , country , and elevation for every airport in the city of New York ? [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( New York , York ) [C] country [C] x [C] y [C] elevation [C] iata ( NEW ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( NEW YORK , CITY ) [C] country [C] active
[feedback] In step 2 , tourist details equals Vincent and in step 3 , tourist details equals Marcelle . [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table and in tourist attractions table . Step 2 : find the name of the results of step 1 whose visitors 's tourist id equals 545 . Step 3 : find the name in tourist attractions table whose name equals " fun shops " . Step 4 : show the rows that are in both the results of step 2 and step 3 . [question] Which tourist attractions do the tourists Vincent and Marcelle visit ? Tell me the names of the attractions . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Marcelle , Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
[feedback] In step 1 , use the maximum enrollment . [system description] Step 1 : find the minimum enrollment in college table . Step 2 : find the state in college table whose enrollment less than the results of step 1 . [question] What are the states with colleges that have enrollments less than the some other college ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] Find highest point equals guadalupe peak in highlow table . [system description] find the number of rows in mountain table whose mountain name equals " dummy value " . [question] how high is guadalupe peak [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use rating table and make sure rating stars should be 4 in step 2 . [system description] Step 1 : find the reviewer 's reviewer id in reviewer table . Step 2 : find the rating 's reviewer id in rating table whose rating stars equals 5 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [question] What are the ids of all reviewers who did not give 4 stars ? [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 2 , make sure to arrange in ascending order of market 's ranking . [system description] Step 1 : for each row in phone table , find the corresponding rows in phone market table and in market table . Step 2 : find the name and district of the results of step 1 ordered descending by ranking . [question] Show the names of phones and the districts of markets they are on , in ascending order of the ranking of the market . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
[feedback] In step 2 , you should use date contact from of organization contact individuals table instead of uk vat number . [system description] Step 1 : for each row in individuals table , find the corresponding rows in organization contact individuals table and in organizations table . Step 2 : find the individual last name of the results of step 1 with largest value of uk vat number . [question] What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations ? [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
[feedback] In step 2 , you should use faculty id instead of student id . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find each value of rank of the results of step 1 along with the number of the corresponding rows to each value . [question] Show all the faculty ranks and the number of students advised by each rank . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
[feedback] You should use player id instead of decision . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name and college 's college name of the results of step 1 whose decision equals " yes " . [question] Find the name and college of students whose decisions are yes in the tryout . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
[feedback] In step 1 , replace professor high degree with department name of department table and remove Ph.D . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose professor high degree equals " DBA " and professor high degree not equals " Ph.D . " . [question] What are the first names and offices of history professors who do n't have Ph.D.s ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree ( Ph.D. ) [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you should use 1 as the value of author count and also make sure that last name should be Ohori . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table and in papers table . Step 2 : find the title of the results of step 1 whose country equals " UK " and last name equals " Turon " . [question] Find the titles of papers whose first author is affiliated with an institution in the country " Japan " and has last name " Ohori " ? [schema] [T] institution [C] institution id [C] name [C] country ( Japan ) [T] authors [C] author id [C] last name ( Ohori ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] Replace jid with citation num , name with VLDB in step 2 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [question] return me the citations of each paper in the VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You should use river name of river table instead of state name of state table and also ensure that river traverse should be idaho . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [question] how many rivers are found in idaho [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , replace domain author table , domain table and keyword table with publication keyword table , conference name and VLDB conference name respectively . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose conference 's name equals " dummy value " . Step 3 : find the number of conference 's name of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 whose corresponding value in step 3 is greater than 1 . [question] return me the keywords , which have been contained by more than 100 papers in VLDB conference . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Make sure that last name is also Sawayn and first name is Janessa . [system description] find the date of birth in staff table whose date joined staff equals " 2018-01-02 12:24:24 " . [question] What is the date of birth for the staff member named Janessa Sawayn ? [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] You need to determine the number of accounts for each customer . [system description] find each value of customer id in customers table along with the number of the corresponding rows to each value . [question] Show id , first name and last name for all customers and the number of accounts . [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] Make sure university id is not present in basketball match table . [system description] find the number of rows in basketball match table whose all games not equals " 35–2 " . [question] Count the number of universities that do not participate in the baketball match . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
[feedback] You need to ensure that state name should be texas in step 2 . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose border equals " dummy value " . [question] what are the populations of states which border texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use first name Linda and last name Smith . [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table and in video games table . Step 2 : find the game name of the results of step 1 whose first name equals " Bruce " and last name equals " Brody " . [question] What are the names of all games played by Linda Smith ? [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
[feedback] In step 1 , substitute teachers table with list table , and in step 2 , substitute teachers table with students . [system description] Step 1 : find the number of rows of each value of first name in teachers table . Step 2 : find the first name and last name in teachers table with largest value in the results of step 1 . [question] Which teacher teaches the most students ? Give me the first name and last name of the teacher . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
[feedback] Replace largest with smallest . [system description] find the join year in pilot table with largest value of rank . [question] What is the joined year of the pilot of the highest rank ? [schema] [T] aircraft [C] aircraft id [C] order year [C] manufacturer [C] model [C] fleet series [C] powertrain [C] fuel propulsion [T] pilot [C] pilot id [C] pilot name [C] rank [C] age [C] nationality [C] position [C] join year [C] team [T] pilot record [C] record id [C] pilot id [C] aircraft id [C] date
[feedback] Find number of city name in place of country name and state name respectively . Also , use city name instead of country name . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " and city 's country name equals " dummy value " . [question] how many cities named austin are there in the usa [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should include journal table and year greater than 2010 . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the name of the results of step 1 whose year greater than " dummy value " and year greater than " dummy value " . [question] return me the authors who have papers in PVLDB after 2010 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , there should be summation of all area in state table . [system description] Step 1 : find the number of rows of each value of area in state table . Step 2 : find the area in state table whose corresponding value in step 1 is greater than or equals 1 . [question] what is the combined area of all 50 states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use Davis Steven as the first name and last name , also include Davis Steven as a member of the club . [system description] find the club name in club table whose club name equals " Tennis Club " . [question] List the clubs having " Davis Steven " as a member . [schema] [T] student [C] student id [C] last name ( Davis ) [C] first name ( Steven ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You should use enrollment in place of state . [system description] find the college name and enrollment in college table whose state greater than " LA " and state equals " LA " . [question] What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana ? [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
[feedback] In step 1 , name should be Zach . In step 2 , name should be Zach . [system description] Step 1 : find the maximum year in person friend table . Step 2 : find the friend in person friend table whose year equals the results of step 1 . [question] Who is the friend of Zach with longest year relationship ? [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] You should use population in place of state name . [system description] find the city name in city table whose state name equals " dummy value " with smallest value of population . [question] what is the smallest city in the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , I want customer id and email address . [system description] Step 1 : find the complaints 's customer id in complaints table . Step 2 : find the email address and phone number in customers table whose email address not one of the results of step 1 . [question] Find the email and phone number of the customers who have never filed a complaint before . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
[feedback] In step 2 , you should use membership amount in place of branch id . [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : find the number of rows of each value of membership register branch 's branch id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [question] What are the names for the 3 branches that have the most memberships ? [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
[feedback] date assigned from should be like 2016 , not the date assigned from . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff name and staff gender of the results of step 1 whose date assigned from equals " 2016-06-24 17:31:24 " . [question] What are the names and genders of staff who were assigned in 2016 ? [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Also find customers cards 's customer id . [system description] Step 1 : for each row in customers table , find the corresponding rows in customers cards table . Step 2 : find the number of rows of each value of customers cards 's customer id of the results of step 1 . Step 3 : find the customer first name , customer first name , customer last name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [question] Show id , first and last names for all customers with at least two cards . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
[feedback] Replace college table with player table , enrollment with training hours , yes with no . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the average enrollment of the results of step 1 whose decision equals " yes " . [question] Find the average hours for the students whose tryout decision is no . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( no ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( no )
[feedback] Make sure to find for class with enroll grade equals C . [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the student first name of the results of step 1 whose enroll grade equals " C " . [question] What is the first name of students who got grade C in any class ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] You need to search for the unique value of reviewer id and also the least value of rating stars . [system description] Step 1 : for each row in movie table , find the corresponding rows in rating table . Step 2 : find the title and rating stars of the results of step 1 with smallest value of rating stars . [question] Find the title and star rating of the movie that got the least rating star for each reviewer . [schema] [T] movie [C] movie id [C] title [C] year [C] director [T] reviewer [C] reviewer id [C] name [T] rating [C] reviewer id [C] movie id [C] rating stars [C] rating date
[feedback] In step 1 , you should use room in rooms table . [system description] Step 1 : find the number of rows of each value of room in reservations table . Step 2 : find the room in reservations table with largest value in the results of step 1 . [question] Which room has the largest number of reservations ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] In step 1 , you should use party events instead of party table . [system description] Step 1 : find the number of rows of each value of party name in party table . Step 2 : find the party name in party table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the names of parties with at least 2 events ? [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] You need to use population and boulder 's city name instead of summation of population and city name respectively . [system description] find the summation of population in city table whose city name equals " dummy value " . [question] how many people lived in boulder [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace keyword with title and make sure they are distinct . [system description] find the number of rows in keyword table whose keyword equals " dummy value " . [question] return me the number of the keywords of " Making database systems usable " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 2 , use 94103 in place of 94565 . [system description] Step 1 : find the average duration in trip table whose zip code equals 94565 . Step 2 : find the id in trip table whose duration greater than the results of step 1 . [question] Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] You need to calculate the total number of customers from the bank table . [system description] find the number of rows in customer table . [question] How many customers are there ? [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
[feedback] In step 2 , you should use last name and Aaron Turon in place of Amal and also search for title . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Amal " . [question] Find all the papers published by " Aaron Turon " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Turon ) [C] first name ( Aaron ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You should use name of state in place of mountain name which is equivalent to whitney . [system description] find the number of rows in mountain table whose mountain name equals " dummy value " . [question] where is mount whitney [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , river name should be ohio and not dummy value . [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [question] what states border the ohio river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure customer address contains TN . [system description] find the customer name and customer id in customers table . [question] Return the names and ids of customers who have TN in their address . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
[feedback] Make sure to find distinct first name . [system description] find the first name in student table . [question] What are the first names of all the students ? [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] Also find average longitude of trip table . [system description] find the average latitude and average latitude in station table . [question] What is the average latitude and longitude of all starting stations for the trips ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Replace last name with stuid . [system description] find the last name in student table whose age greater than 26 . [question] Show all student ids who are older than 20 . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 2 , languages should be english and in step 3 , rating should be greater than 8 . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name of the results of step 1 whose rating equals 7 . Step 3 : find the song 's artist name in song table whose rating greater than 7 . Step 4 : show the rows that are in the results of step 2 but not in the results of step 3 . [question] Find the names of the artists who have produced English songs but have never received rating higher than 8 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
[feedback] In step 2 , you need to use first name Janessa , last name Sawayn and nickname containing 's ' . [system description] Step 1 : for each row in staff table , find the corresponding rows in lessons table . Step 2 : find the lesson id and lesson id of the results of step 1 whose first name like " Eulalia " and last name like " Jast " . [question] List lesson id of all lessons taught by staff with first name as Janessa , last name as Sawayn and nickname containing letter 's ' . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] staff [C] staff id [C] staff address id [C] nickname [C] first name ( Janessa ) [C] middle name [C] last name ( Sawayn ) [C] date of birth [C] date joined staff [C] date left staff [T] vehicles [C] vehicle id [C] vehicle details [T] customers [C] customer id [C] customer address id [C] customer status code [C] date became customer [C] date of birth [C] first name [C] last name [C] amount outstanding [C] email address [C] phone number [C] cell mobile phone number [T] customer payments [C] customer id [C] datetime payment [C] payment method code [C] amount payment [T] lessons [C] lesson id [C] customer id [C] lesson status code [C] staff id [C] vehicle id [C] lesson date [C] lesson time [C] price
[feedback] In step 1 , use river table and traverse in place of lake table and state name respectively . [system description] Step 1 : find the lake 's state name in lake table . Step 2 : find the number of rows in state table whose state 's state name not one of the results of step 1 . [question] how many states do not have rivers [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Remove and employee 's name equals Lawrence Sperry . [system description] Step 1 : for each row in employee table , find the corresponding rows in certificate table and in aircraft table . Step 2 : find the aircraft 's name of the results of step 1 whose employee 's name equals " Lawrence Sperry " and employee 's name equals " John Williams " . [question] What are the names of all aircrafts that John Williams have certificates to be able to fly ? [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name ( John Williams ) [C] salary [T] certificate [C] employee id [C] airline id
[feedback] Also find check out , rate along with name , check in and rate in step 2 . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name , check in , rate of the results of step 1 with largest value of beds . [question] Return the name , rate , check in and check out date for the room with the highest rate . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
[feedback] You need to search for population in place of summation of state 's population . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the summation of state 's population of the results of step 1 whose city 's state name equals " dummy value " . [question] how much population does california have [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure that actor 's name is Jim Jarmusch and also use director 's name and corresponding movie 's name instead of nationality and dummy value respectively . [system description] find the number of rows in actor table whose nationality equals " dummy value " and nationality equals " dummy value " . [question] find the number of actors from Iran who played in " Jim Jarmusch " movies [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You need to search for the persons having Alice as a friends . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Alice " with largest value of year . [question] What are the names of all people who are friends with Alice for the shortest amount of time ? [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
[feedback] Replace director 's name and role with actor 's name and director 's name respectively , remove and , , , , , , , , , , , , , , , , , , , , , [system description] Step 1 : for each row in director table , find the corresponding rows in directed by table and in copyright table and in cast table and in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and role equals " dummy value " . [question] List all the movies directed by " Asghar Farhadi " in which " Taraneh Alidoosti " played [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] In step 1 , you should use customer id in accounts table . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer first name and customer id in customers table whose corresponding value in step 1 is greater than or equals 1 . [question] What are the first names and ids for customers who have two or more accounts ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to search for the river having its traverse in texas . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of density . [question] what is the biggest river in texas [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for river having different length from state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 with smallest value of length . [question] what state has the shortest river [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to search for the largest city in the state of Wyoming . [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [question] what is the largest city in wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to determine the number of traverses from the river table by making sure that states should be covered by it . [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [question] which river traverses most states [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use length of river 's rather than country name of state . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [question] give me the longest river that passes through the us [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you need to include the rank as professor . [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table whose corresponding value in step 1 is greater than or equals 1 . [question] Show all the buildings that have at least 10 professors . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
[feedback] In step 2 , ensure that enroll 's grade equals A and class code equals 10018 . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table . Step 2 : find the student last name of the results of step 1 whose class 's class code equals 10017 . [question] What is the last name of the student who got a grade A in the class with code 10018 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 2 , you should use sex and club name instead of last name and tennis club respectively . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Tennis Club " and last name equals " Adams " . [question] Find all the male members of club " Hopkins Student Enterprises " . Show the first name and last name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
[feedback] You need to calculate the total number of component . [system description] find the number of rows in furniture table . [question] How many furniture components are there in total ? [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
[feedback] Replace allergy type equals environmental with allergy equals Soy . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and major of the results of step 1 whose allergy type equals " environmental " . [question] What are the first name and major of the students who are able to consume soy ? [schema] [T] allergy type [C] allergy ( Soy ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Soy ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] Replace cite table with publish table , make sure corresponding author 's name equals University of Michigan , replace cited with summation of citations . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table and in cite table . Step 2 : find the author 's name of the results of step 1 whose organization 's name equals " dummy value " and cited greater than " dummy value " . [question] return me the author in the " University of Michigan " whose papers have more than 5000 total citations . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] You need to arrange the floors in ascending order . [system description] find the name , street address , floors in building table ordered descending by floors . [question] Show the name , street address , and number of floors for all buildings ordered by the number of floors . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
[feedback] In step 1 , use student in place of enroll and in step 2 , find professor first name in place of professor extension . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the number of rows of each value of class 's class code of the results of step 1 . Step 3 : find the professor extension and number of rows of the results of step 1 whose corresponding value in step 2 is greater than 1 . [question] What are the first names of all professors who teach more than one class ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use product characteristics and drop characteristics table . [system description] Step 1 : find the number of rows of each value of characteristic id in characteristics table . Step 2 : find the characteristic name in characteristics table whose corresponding value in step 1 is greater than or equals 1 . [question] What are characteristic names used at least twice across all products ? [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
[feedback] In step 3 , you should use city name of city table instead of state name of state table . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the average state 's population of each value of city 's state name of the results of step 1 . Step 3 : find the state 's state name of the results of step 1 with smallest value in the results of step 2 . [question] which state has the smallest average urban population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You need to use city name of city table . Ensure that name of state of city table is wyoming . [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose border info 's state name equals " dummy value " with largest value of population . [question] where is the most populated area of wyoming [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Replace San Francisco with Palo Alto . [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the average bikes available of the results of step 1 whose city not equals " San Francisco " . [question] What is the average bike availability in stations that are not located in Palo Alto ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] In step 2 , use performance table in place of vocals table . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the number of rows of each value of last name of the results of step 1 . Step 3 : find the last name of the results of step 1 with largest value in the results of step 2 . [question] What is the last name of the musician that have produced the most number of songs ? [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
[feedback] Replace rows of student table with stuid . [system description] find the rows in student table whose age greater than 27 . [question] What are the student ids for students over 20 years old ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 3 , you should use attendance in place of team id . [system description] Step 1 : for each row in home game table , find the corresponding rows in team table . Step 2 : only keep the results of step 1 whose home game 's year equals 1995 . Step 3 : find the number of rows of each value of home game 's team id the results of step 2 . Step 4 : find the name the results of step 2 with smallest value in the results of step 3 . [question] Find the team that attended the least number of home games in 1980 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Homer ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
[feedback] You need to use friend from PersonFriend 's table instead of name from Person table . [system description] find the name in person table whose gender equals " male " . [question] Find the names of females who are friends with Zach [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
[feedback] You should use city name equivalent to springfield and not the state name equivalent to dummy value . [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [question] springfield is in what state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use resolution less than 800 . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the file size and formats of the results of step 1 whose resolution less than 320 . [question] List the file size and format for all songs that have resolution lower than 800 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
[feedback] Make sure area is equals to maximum area . [system description] find the density in state table with largest value of population . [question] what is the population density of the largest state [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , you should use date claim made of settlements table . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the claims 's date claim made and settlements 's date claim settled of the results of step 1 . [question] What are the claim dates and settlement dates of all the settlements ? [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
[feedback] You need to calculate the number of students having allergy . [system description] find each value of allergy type in allergy type table along with the number of the corresponding rows to each value . [question] Show all allergy type with number of students affected . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You should use customer details equivalent to Dayana Robel . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the policy type code of the results of step 1 whose customer details equals " Mrs. Lilly Graham III " . [question] Find all the policy type codes associated with the customer " Dayana Robel " [schema] [T] customers [C] customer id [C] customer details ( Dayana Robel ) [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
[feedback] You should use publication table , journal table and drop organization table , name and dummy value respectively . [system description] Step 1 : for each row in organization table , find the corresponding rows in keyword table . Step 2 : find the keyword of the results of step 1 whose name equals " dummy value " . [question] return me the keywords in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] Replace player with team . [system description] find the player in player table ordered ascending by player . [question] Find the team of each player and sort them in ascending alphabetical order . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
[feedback] You should use training hours in place of college name . [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find the college name and player name of the results of step 1 whose decision equals " yes " . [question] Find the name and hours of the students whose tryout decision is yes . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
[feedback] Replace rows of student table with stuid , and sex equals M . [system description] find the rows in student table whose sex equals " F " . [question] What are the student ids for all male students ? [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You should use party name and drop took office . [system description] find the minister and took office in party table ordered descending by took office . [question] Show all ministers and parties they belong to in descending order of the time they took office . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
[feedback] In step 1 , replace department name in department table with department code in student table . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name and department address in department table with largest value in the results of step 1 . [question] Find the name and address of the department that has the highest number of students . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] Also find account name , other account details . [system description] find the account id , date account opened , date account opened in accounts table . [question] What are the ids , date opened , name , and other details for all accounts ? [schema] [T] customers [C] customer id [C] customer first name [C] customer middle initial [C] customer last name [C] gender [C] email address [C] login name [C] login password [C] phone number [C] town city [C] state county province [C] country [T] orders [C] order id [C] customer id [C] date order placed [C] order details [T] invoices [C] invoice number [C] order id [C] invoice date [T] accounts [C] account id [C] customer id [C] date account opened [C] account name [C] other account details [T] product categories [C] production type code [C] product type description [C] vat rating [T] products [C] product id [C] parent product id [C] production type code [C] unit price [C] product name [C] product color [C] product size [T] financial transactions [C] transaction id [C] account id [C] invoice number [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details [T] order items [C] order item id [C] order id [C] product id [C] product quantity [C] other order item details [T] invoice line items [C] order item id [C] invoice number [C] product id [C] product title [C] product quantity [C] product price [C] derived product cost [C] derived vat payable [C] derived total cost
[feedback] You need to search for the city name having highest population . [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [question] which city in wyoming has the largest population [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 1 , you should use institution table and in step 2 , use author count in place of paper id and ensure that institution 's country is USA . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Jeremy " and last name equals " Turon " . [question] Find papers whose second author has last name " Turon " and is affiliated with an institution in the country " USA " . [schema] [T] institution [C] institution id [C] name [C] country ( USA ) [T] authors [C] author id [C] last name ( Turon ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
[feedback] You need to search for the student ID having his or her allergy . [system description] find the rows in student table whose sex equals " M " . [question] Show student ids for all male students . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] You need to ensure that year should be lower than or equal to 2000 . [system description] find the title and director in movie table whose gross worldwide less than 18720175 with largest value of gross worldwide . [question] Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
[feedback] In step 3 , use date and zip code instead of trip and zip code respectively . Also , delete in step 2 . [system description] Step 1 : for each row in trip table , find the corresponding rows in weather table . Step 2 : find the minimum trip 's zip code of the results of step 1 whose weather 's zip code equals 94063 . Step 3 : find the date and weather 's zip code in weather table whose weather 's zip code less than the results of step 2 . [question] On which day and in which zip code was the min dew point lower than any day in zip code 94107 ? [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
[feedback] Make sure to find for distinct companies . [system description] find the main industry in company table . [question] Show all main industry for all companies . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
[feedback] You should use kids and replace number of rows with kids and last name . [system description] find the number of rows in reservations table whose first name equals " KEELY " and last name equals " DIEUDONNE " . [question] How many kids stay in the rooms reserved by ROY SWEAZY ? [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
[feedback] Replace course 's department code equals CIS with department name equals Computer Info Systems . [system description] find the number of rows in course table whose department code equals " CIS " . [question] How many courses does the department of Computer Information Systmes offer ? [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
[feedback] In step 1 , you should use publication table , and also use journal table . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the author 's name of the results of step 1 whose organization 's name equals " dummy value " . [question] return me the authors who have papers in PVLDB . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
[feedback] In step 1 , replace name with age , and in step 2 , replace first name with age . [system description] Step 1 : find the maximum age in person table . Step 2 : find the name in person table whose age greater than the results of step 1 ordered ascending by name . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
[feedback] You should use river name in place of country name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [question] what is the longest river in america [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] Make sure area should be largest . [system description] find the population in state table with largest value of area . [question] what is the population of the state with the largest area [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] In step 2 , add checking 's balance and savings 's balance . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name , savings 's balance , savings 's balance of the results of step 1 ordered descending by checking 's balance . [question] Find the name , checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
[feedback] You need to determine the number of rows relating to the delegate of each county from the election table . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [question] For each county , find the name of the county and the number of delegates from that county . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
[feedback] In step 2 , replace has allergy table with allergy type table . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table . Step 2 : find the has allergy 's allergy and allergy type of the results of step 1 . [question] Show all allergies and their types . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
[feedback] In step 1 , you should use cast 's name in place of name which is equivalent to dummy value . [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [question] How many movies did " Shahab Hosseini " act in [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
[feedback] You should use river name of river table instead of state name of state table . Also , use traverse in place of state name . [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [question] how many rivers run through idaho [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
[feedback] You should use rock as the name of genre . [system description] Step 1 : for each row in genre table , find the corresponding rows in track table . Step 2 : find the number of rows of the results of step 1 whose genre 's name equals " Science Fiction " . [question] Count the number of tracks that are part of the rock genre . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name ( Rock ) [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
