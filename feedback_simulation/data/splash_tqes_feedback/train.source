use market table in place of film market estimation table . consider the number cities less than 300 conditions in place of the low estimate less than 300 conditions . [question] Count the number of markets that have a number of cities lower than 300 . [system description] find the number of rows in film market estimation table whose low estimate less than 300 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
use market table in place of film market estimation table . consider the number cities less than 300 conditions in place of the low estimate less than 300 conditions . [question] Count the number of markets that have a number of cities lower than 300 . [system description] find the number of rows in film market estimation table whose low estimate less than 300 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
additionally use the information from the person table besides the person friend table . [question] What are the names of all of Bob 's friends ? [system description] find the name in person friend table whose friend equals " Bob " . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
additionally use the information from the person table besides the person friend table . [question] What are the names of all of Bob 's friends ? [system description] find the name in person friend table whose friend equals " Bob " . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
consider the studio like % Universal % conditions in place of the title like Universal conditions . [question] Find the titles and studios of the films that are produced by some film studios that contained the word " Universal " . [system description] find the title and studio in film table whose title like " Universal " . [schema] [T] film [C] film id [C] title [C] studio ( Universal ) [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
consider the studio like % Universal % conditions in place of the title like Universal conditions . [question] Find the titles and studios of the films that are produced by some film studios that contained the word " Universal " . [system description] find the title and studio in film table whose title like " Universal " . [schema] [T] film [C] film id [C] title [C] studio ( Universal ) [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
find room name and room id in place of decor . [question] Which room has the highest base price ? [system description] find the decor in rooms table with largest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
find room name and room id in place of decor . [question] Which room has the highest base price ? [system description] find the decor in rooms table with largest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , additionally use the information from the person friend table besides the person table . [question] What are the different names of friends who are younger than the average age for a friend ? [system description] Step 1 : find the average age in person table . Step 2 : find without repetition name in person table whose age less than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , additionally use the information from the person friend table besides the person table . [question] What are the different names of friends who are younger than the average age for a friend ? [system description] Step 1 : find the average age in person table . Step 2 : find without repetition name in person table whose age less than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that job equals student and age is equals maximum age person whose job equals student . you should not find the largest of the results . show me all the results . [question] Who is the oldest person whose job is student ? [system description] find the name in person table with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
additionally make sure that job equals student and age is equals maximum age person whose job equals student . you should not find the largest of the results . show me all the results . [question] Who is the oldest person whose job is student ? [system description] find the name in person table with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
in step 2 , additionally use the information from the person friend table besides the person table . make sure no repetition in the results . [question] Who has friends that are younger than the average age ? [system description] Step 1 : find the average age in person table . Step 2 : find the name in person table whose age less than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , additionally use the information from the person friend table besides the person table . make sure no repetition in the results . [question] Who has friends that are younger than the average age ? [system description] Step 1 : find the average age in person table . Step 2 : find the name in person table whose age less than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the reservations table . in step 2 , consider the decor equals modern conditions in place of the bed type equals modern conditions . find summation of max occupancy in place of summation of adults . [question] What is the total number of people who could stay in the modern rooms in this inn ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose bed type equals " modern " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the reservations table . in step 2 , consider the decor equals modern conditions in place of the bed type equals modern conditions . find summation of max occupancy in place of summation of adults . [question] What is the total number of people who could stay in the modern rooms in this inn ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose bed type equals " modern " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that age is equals minimum age person whose gender equals male and gender equals male . you should not find the smallest of the results . show me all the results . [question] What is the name of the youngest male ? [system description] find the name in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that age is equals minimum age person whose gender equals male and gender equals male . you should not find the smallest of the results . show me all the results . [question] What is the name of the youngest male ? [system description] find the name in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
consider the age is greater than maximum age person whose job equals engineer conditions in place of the age greater than engineer conditions . [question] Find the number of people whose age is greater than all engineers . [system description] find the number of rows in person table whose age greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
consider the age is greater than maximum age person whose job equals engineer conditions in place of the age greater than engineer conditions . [question] Find the number of people whose age is greater than all engineers . [system description] find the number of rows in person table whose age greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 2 , find for each value of room . find check in , rate , and check out in place of room and bed type . [question] Return the name , rate , check in and check out date for the room with the highest rate . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name , bed type , room of the results of step 1 with largest value of rate . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , find for each value of room . find check in , rate , and check out in place of room and bed type . [question] Return the name , rate , check in and check out date for the room with the highest rate . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name , bed type , room of the results of step 1 with largest value of rate . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
find low estimate in place of type . [question] What are the low and high estimates of film markets ? [system description] find the type and high estimate in film market estimation table . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
find low estimate in place of type . [question] What are the low and high estimates of film markets ? [system description] find the type and high estimate in film market estimation table . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
additionally make sure that bed type equals King . find for each value of decor in place of bed type . find decor in place of bed type . [question] How many rooms have king beds ? Report the number for each decor type . [system description] find each value of bed type in rooms table along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that bed type equals King . find for each value of decor in place of bed type . find decor in place of bed type . [question] How many rooms have king beds ? Report the number for each decor type . [system description] find each value of bed type in rooms table along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , find for each value of job in place of city . find job in place of city . [question] What is the average age for a male in each job ? [system description] Step 1 : find rows in person table whose gender equals " male " . Step 2 : find each value of city the results of step 1 along with the average age of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , find for each value of job in place of city . find job in place of city . [question] What is the average age for a male in each job ? [system description] Step 1 : find rows in person table whose gender equals " male " . Step 2 : find each value of city the results of step 1 along with the average age of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person friend table besides the person table . [question] Who has a friend that is from new york city ? [system description] find the name in person table whose city equals " new york city " . [schema] [T] person [C] name [C] age [C] city ( new york city ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person friend table besides the person table . [question] Who has a friend that is from new york city ? [system description] find the name in person table whose city equals " new york city " . [schema] [T] person [C] name [C] age [C] city ( new york city ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
use rooms table in place of reservations table . consider the bed type equals King conditions in place of the check in equals King conditions . [question] How many rooms have a king bed ? [system description] find the number of rows in reservations table whose check in equals " King " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
use rooms table in place of reservations table . consider the bed type equals King conditions in place of the check in equals King conditions . [question] How many rooms have a king bed ? [system description] find the number of rows in reservations table whose check in equals " King " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the person table besides the person friend table . consider the person 's name equals Bob conditions in place of the friend equals Bob conditions . [question] Who are the friends of Bob ? [system description] find the friend in person friend table whose friend equals " Bob " . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
additionally use the information from the person table besides the person friend table . consider the person 's name equals Bob conditions in place of the friend equals Bob conditions . [question] Who are the friends of Bob ? [system description] find the friend in person friend table whose friend equals " Bob " . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
additionally make sure that year is equals minimum year person friend whose friend equals Alice and friend equals Alice . you should not find the smallest of the results . show me all the results . [question] Find the name of persons who are friends with Alice for the shortest years . [system description] find the name in person friend table with smallest value of year . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally make sure that year is equals minimum year person friend whose friend equals Alice and friend equals Alice . you should not find the smallest of the results . show me all the results . [question] Find the name of persons who are friends with Alice for the shortest years . [system description] find the name in person friend table with smallest value of year . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
use person friend table in place of person table . additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] Which friend of Zach has the longest-lasting friendship ? [system description] find the name in person table with largest value of gender . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
use person friend table in place of person table . additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] Which friend of Zach has the longest-lasting friendship ? [system description] find the name in person table with largest value of gender . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
additionally use the information from the person friend table besides the person table . additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] What are the ages of all of Zach 's friends who are in the longest relationship ? [system description] find the age in person table with largest value of age . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
additionally use the information from the person friend table besides the person table . additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] What are the ages of all of Zach 's friends who are in the longest relationship ? [system description] find the age in person table with largest value of age . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , find studio in place of title . in step 2 , find studio in place of title . [question] What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill ? [system description] Step 1 : find the title in film table whose director equals " Nicholas Meyer " . Step 2 : find the title in film table whose director equals " Walter Hill " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] film [C] film id [C] title [C] studio [C] director ( Nicholas Meyer , Walter Hill ) [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , find studio in place of title . in step 2 , find studio in place of title . [question] What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill ? [system description] Step 1 : find the title in film table whose director equals " Nicholas Meyer " . Step 2 : find the title in film table whose director equals " Walter Hill " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] film [C] film id [C] title [C] studio [C] director ( Nicholas Meyer , Walter Hill ) [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 2 , consider the person friend 's name equals Alice and job equals doctor and gender equals male conditions in place of the person 's name equals Alice conditions . [question] Who are the friends of Alice that are doctors ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose person 's name equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , consider the person friend 's name equals Alice and job equals doctor and gender equals male conditions in place of the person 's name equals Alice conditions . [question] Who are the friends of Alice that are doctors ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose person 's name equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally make sure that age is equals minimum age person whose gender equals male and gender equals male . you should not find the smallest of the results . show me all the results . [question] Who is the youngest male ? [system description] find the name in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that age is equals minimum age person whose gender equals male and gender equals male . you should not find the smallest of the results . show me all the results . [question] Who is the youngest male ? [system description] find the name in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person table besides the person friend table . consider the person 's name equals Dan conditions in place of the friend equals Dan conditions . find number of friend in place of number of rows . [question] How many friends does Dan have ? [system description] find the number of rows in person friend table whose friend equals " Dan " . [schema] [T] person [C] name ( Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend ( Dan ) [C] year
additionally use the information from the person table besides the person friend table . consider the person 's name equals Dan conditions in place of the friend equals Dan conditions . find number of friend in place of number of rows . [question] How many friends does Dan have ? [system description] find the number of rows in person friend table whose friend equals " Dan " . [schema] [T] person [C] name ( Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend ( Dan ) [C] year
additionally use the information from the school table besides the player table . find location in place of position . [question] For each player , show the team and the location of school they belong to . [system description] find the team and position in player table . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
additionally use the information from the school table besides the player table . find location in place of position . [question] For each player , show the team and the location of school they belong to . [system description] find the team and position in player table . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
remove the age equals 25 conditions . [question] How many females are in the network ? [system description] find the number of rows in person table whose gender equals " female " and age equals 25 . [schema] [T] person [C] name [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name [C] friend [C] year
remove the age equals 25 conditions . [question] How many females are in the network ? [system description] find the number of rows in person table whose gender equals " female " and age equals 25 . [schema] [T] person [C] name [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name [C] friend [C] year
find base price in place of decor . [question] What are the room name and base price of the room with the lowest base price ? [system description] find the room name and decor in rooms table with smallest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
find base price in place of decor . [question] What are the room name and base price of the room with the lowest base price ? [system description] find the room name and decor in rooms table with smallest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] What is the age of the friend of Zach with longest year relationship ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the age of the results of step 1 with largest value of year . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 2 , additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] What is the age of the friend of Zach with longest year relationship ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the age of the results of step 1 with largest value of year . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , do not use the rooms table . in step 2 , consider the first name equals CONRAD and check in equals 2010-10-23 conditions in place of the last name equals CONRAD and room name equals 2010-10-23 conditions . find adults in place of summation of adults . [question] How many adults stay in the room CONRAD SELBIG checked in on Oct 23 , 2010 ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose room name equals " 2010-10-23 " and last name equals " SELBIG " and last name equals " CONRAD " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
in step 1 , do not use the rooms table . in step 2 , consider the first name equals CONRAD and check in equals 2010-10-23 conditions in place of the last name equals CONRAD and room name equals 2010-10-23 conditions . find adults in place of summation of adults . [question] How many adults stay in the room CONRAD SELBIG checked in on Oct 23 , 2010 ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose room name equals " 2010-10-23 " and last name equals " SELBIG " and last name equals " CONRAD " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
consider the studio like % Universal % conditions in place of the title like Universal conditions . [question] What are the titles and studios of films that have been produced by a studio whose name contains " Universal " ? [system description] find the title and studio in film table whose title like " Universal " . [schema] [T] film [C] film id [C] title [C] studio ( Universal ) [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
consider the studio like % Universal % conditions in place of the title like Universal conditions . [question] What are the titles and studios of films that have been produced by a studio whose name contains " Universal " ? [system description] find the title and studio in film table whose title like " Universal " . [schema] [T] film [C] film id [C] title [C] studio ( Universal ) [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice and job equals doctor conditions in place of the city equals Alice conditions . [question] Find the male friend of Alice whose job is a doctor ? [system description] find the name in person table whose city equals " Alice " and gender equals " male " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( male ) [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice and job equals doctor conditions in place of the city equals Alice conditions . [question] Find the male friend of Alice whose job is a doctor ? [system description] find the name in person table whose city equals " Alice " and gender equals " male " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( male ) [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , find for value of denomination in place of school id . [question] Show the denomination shared by more than one school . [system description] Step 1 : find the number of rows of each value of school id in school table . Step 2 : find the denomination in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , find for value of denomination in place of school id . [question] Show the denomination shared by more than one school . [system description] Step 1 : find the number of rows of each value of school id in school table . Step 2 : find the denomination in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 3 , find denomination in place of school . [question] What is the denomination of the school the most players belong to ? [system description] Step 1 : for each row in school table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of player 's school id of the results of step 1 . Step 3 : find the school of the results of step 1 with largest value in the results of step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 3 , find denomination in place of school . [question] What is the denomination of the school the most players belong to ? [system description] Step 1 : for each row in school table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of player 's school id of the results of step 1 . Step 3 : find the school of the results of step 1 with largest value in the results of step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
find kids in place of number of rows . [question] Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ . [system description] find the number of rows in reservations table whose first name equals " ROY " and last name equals " SWEAZY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( ROY ) [C] adults [C] kids
find kids in place of number of rows . [question] Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ . [system description] find the number of rows in reservations table whose first name equals " ROY " and last name equals " SWEAZY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( ROY ) [C] adults [C] kids
in step 1 , consider the founded less than 1890 conditions in place of the founded greater than 1890 conditions . in step 2 , consider the founded greater than 1900 conditions in place of the founded less than 1900 conditions . [question] Show the denomination shared by schools founded before 1890 and schools founded after 1900 [system description] Step 1 : find the denomination in school table whose founded greater than 1890 . Step 2 : find the denomination in school table whose founded less than 1900 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , consider the founded less than 1890 conditions in place of the founded greater than 1890 conditions . in step 2 , consider the founded greater than 1900 conditions in place of the founded less than 1900 conditions . [question] Show the denomination shared by schools founded before 1890 and schools founded after 1900 [system description] Step 1 : find the denomination in school table whose founded greater than 1890 . Step 2 : find the denomination in school table whose founded less than 1900 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 2 , remove the rate equals 60 conditions . find for each value of room whose number of rows greater than 60 . [question] What are the names of rooms whose reservation frequency exceeds 60 times ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 whose rate equals 60 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , remove the rate equals 60 conditions . find for each value of room whose number of rows greater than 60 . [question] What are the names of rooms whose reservation frequency exceeds 60 times ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 whose rate equals 60 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , additionally make sure that year is equals maximum year person friend whose friend equals Alice and friend equals Alice . you should not find the largest of the results . show me all the results . [question] Find the name , age , and job title of persons who are friends with Alice for the longest years . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name , age , job of the results of step 1 with largest value of year . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , additionally make sure that year is equals maximum year person friend whose friend equals Alice and friend equals Alice . you should not find the largest of the results . show me all the results . [question] Find the name , age , and job title of persons who are friends with Alice for the longest years . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name , age , job of the results of step 1 with largest value of year . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , do not use the person table . in step 2 , additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] Who is the friend of Zach with longest year relationship ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name of the results of step 1 with largest value of year . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , do not use the person table . in step 2 , additionally make sure that year is equals maximum year person friend whose person friend 's name equals Zach and person friend 's name equals Zach . you should not find the largest of the results . show me all the results . [question] Who is the friend of Zach with longest year relationship ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name of the results of step 1 with largest value of year . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
additionally use the information from the school table besides the player table . find location in place of position . [question] What are the team and the location of school each player belongs to ? [system description] find the team and position in player table . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
additionally use the information from the school table besides the player table . find location in place of position . [question] What are the team and the location of school each player belongs to ? [system description] find the team and position in player table . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
use person friend table in place of person table . consider the friend is not one of person 's name person whose city equals Austin conditions in place of the city equals Austin conditions . find number of different person friend 's name in place of number of rows . [question] What is the total number of people who has no friend living in the city of Austin . [system description] find the number of rows in person table whose city equals " Austin " . [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
use person friend table in place of person table . consider the friend is not one of person 's name person whose city equals Austin conditions in place of the city equals Austin conditions . find number of different person friend 's name in place of number of rows . [question] What is the total number of people who has no friend living in the city of Austin . [system description] find the number of rows in person table whose city equals " Austin " . [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that job equals student and age is equals maximum age person whose job equals student . you should not find the largest of the results . show me all the results . [question] What is the name of the oldest student ? [system description] find the name in person table with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
additionally make sure that job equals student and age is equals maximum age person whose job equals student . you should not find the largest of the results . show me all the results . [question] What is the name of the oldest student ? [system description] find the name in person table with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not find for each value of acc percent . in step 2 , order the results by acc percent in place of number of rows . [question] What is the highest acc percent score in the competition ? [system description] Step 1 : find the number of rows of each value of acc percent in basketball match table . Step 2 : find the acc percent in basketball match table with largest value in the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , do not find for each value of acc percent . in step 2 , order the results by acc percent in place of number of rows . [question] What is the highest acc percent score in the competition ? [system description] Step 1 : find the number of rows of each value of acc percent in basketball match table . Step 2 : find the acc percent in basketball match table with largest value in the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the district equals 1 conditions in place of the committee equals 1 conditions . [question] Who is the delegate of district 1 in the elections ? [system description] find the delegate in election table whose committee equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the district equals 1 conditions in place of the committee equals 1 conditions . [question] Who is the delegate of district 1 in the elections ? [system description] find the delegate in election table whose committee equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
order the results by annual interchanges and annual entry exit in place of total passengers . [question] List the names and locations of all stations ordered by their yearly entry exit and interchange amounts . [system description] find the name and location in station table ordered ascending by total passengers . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
order the results by annual interchanges and annual entry exit in place of total passengers . [question] List the names and locations of all stations ordered by their yearly entry exit and interchange amounts . [system description] find the name and location in station table ordered ascending by total passengers . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 1 , consider the memory in g less than 32 conditions in place of the memory in g greater than 32 conditions . in step 2 , consider the memory in g greater than 64 conditions in place of the memory in g less than 64 conditions . [question] Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64 . [system description] Step 1 : find the carrier in phone table whose memory in g greater than 32 . Step 2 : find the carrier in phone table whose memory in g less than 64 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 1 , consider the memory in g less than 32 conditions in place of the memory in g greater than 32 conditions . in step 2 , consider the memory in g greater than 64 conditions in place of the memory in g less than 64 conditions . [question] Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64 . [system description] Step 1 : find the carrier in phone table whose memory in g greater than 32 . Step 2 : find the carrier in phone table whose memory in g less than 64 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 2 , consider the population less than 100000 conditions in place of the population greater than 100000 conditions . find delegate in place of committee . [question] Which delegates are from counties with population smaller than 100000 ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the committee of the results of step 1 whose population greater than 100000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , consider the population less than 100000 conditions in place of the population greater than 100000 conditions . find delegate in place of committee . [question] Which delegates are from counties with population smaller than 100000 ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the committee of the results of step 1 whose population greater than 100000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the county table . in step 2 , consider the district equals 1 conditions in place of the population equals 1 conditions . find governor in place of comptroller . [question] Who were the governors of the parties associated with delegates from district 1 ? [system description] Step 1 : for each row in county table , find the corresponding rows in party table and in election table . Step 2 : find the comptroller of the results of step 1 whose population equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the county table . in step 2 , consider the district equals 1 conditions in place of the population equals 1 conditions . find governor in place of comptroller . [question] Who were the governors of the parties associated with delegates from district 1 ? [system description] Step 1 : for each row in county table , find the corresponding rows in party table and in election table . Step 2 : find the comptroller of the results of step 1 whose population equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , find for each value of governor in place of comptroller . in step 2 , find governor in place of attorney general . [question] Which people severed as governor most frequently ? [system description] Step 1 : find the number of rows of each value of comptroller in party table . Step 2 : find the attorney general in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , find for each value of governor in place of comptroller . in step 2 , find governor in place of attorney general . [question] Which people severed as governor most frequently ? [system description] Step 1 : find the number of rows of each value of comptroller in party table . Step 2 : find the attorney general in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the basketball match table besides the university table . consider the team name equals Clemson conditions in place of the school equals Clemson conditions . find all games in place of enrollment . [question] What are the all games score and location of the school called Clemson ? [system description] find the enrollment and location in university table whose school equals " Clemson " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally use the information from the basketball match table besides the university table . consider the team name equals Clemson conditions in place of the school equals Clemson conditions . find all games in place of enrollment . [question] What are the all games score and location of the school called Clemson ? [system description] find the enrollment and location in university table whose school equals " Clemson " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] Which party has the largest number of delegates ? [system description] Step 1 : find the number of rows of each value of party in party table . Step 2 : find the party in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] Which party has the largest number of delegates ? [system description] Step 1 : find the number of rows of each value of party in party table . Step 2 : find the party in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] Show the name of the party that has the most delegates . [system description] Step 1 : find the number of rows of each value of party in party table . Step 2 : find the party in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] Show the name of the party that has the most delegates . [system description] Step 1 : find the number of rows of each value of party in party table . Step 2 : find the party in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find comptroller in place of governor . [question] Which people severed as comptroller most frequently ? Give me the name of the person and the frequency count . [system description] Step 1 : find the number of rows of each value of comptroller in party table . Step 2 : find the governor and number of rows in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find comptroller in place of governor . [question] Which people severed as comptroller most frequently ? Give me the name of the person and the frequency count . [system description] Step 1 : find the number of rows of each value of comptroller in party table . Step 2 : find the governor and number of rows in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find delegate in place of comptroller . [question] For each delegate , find the names of the party they are part of . [system description] find the comptroller and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find delegate in place of comptroller . [question] For each delegate , find the names of the party they are part of . [system description] find the comptroller and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , use student table in place of faculty participates in table . find advisor in place of faculty participates in 's faculty id . [question] Show ids for the faculty members who do n't advise any student . [system description] Step 1 : find the faculty 's faculty id in faculty table . Step 2 : find the faculty participates in 's faculty id in faculty participates in table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , use student table in place of faculty participates in table . find advisor in place of faculty participates in 's faculty id . [question] Show ids for the faculty members who do n't advise any student . [system description] Step 1 : find the faculty 's faculty id in faculty table . Step 2 : find the faculty participates in 's faculty id in faculty participates in table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , use participates in table in place of student table . remove the age equals 18 conditions . in step 2 , consider the age less than 20 conditions in place of the age equals 20 conditions . [question] Show the ids for all the students who participate in an activity and are under 20 . [system description] Step 1 : find the student id in student table whose age equals 18 . Step 2 : find the student id in student table whose age equals 20 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , additionally use the information from the basketball match table besides the university table . find team name in place of nickname . [question] What are the names of teams from universities that have a below average enrollment ? [system description] Step 1 : find the average enrollment in university table . Step 2 : find the nickname in university table whose enrollment less than the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , additionally use the information from the basketball match table besides the university table . find team name in place of nickname . [question] What are the names of teams from universities that have a below average enrollment ? [system description] Step 1 : find the average enrollment in university table . Step 2 : find the nickname in university table whose enrollment less than the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , do not use the election table . in step 2 , find for each value of comptroller in place of district . in step 3 , find comptroller in place of attorney general . [question] Show the people that have been comptroller the most times and the corresponding number of times . [system description] Step 1 : for each row in party table , find the corresponding rows in election table . Step 2 : find the number of rows of each value of district of the results of step 1 . Step 3 : find the attorney general and number of rows of the results of step 1 with largest value in the results of step 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the election table . in step 2 , find for each value of comptroller in place of district . in step 3 , find comptroller in place of attorney general . [question] Show the people that have been comptroller the most times and the corresponding number of times . [system description] Step 1 : for each row in party table , find the corresponding rows in election table . Step 2 : find the number of rows of each value of district of the results of step 1 . Step 3 : find the attorney general and number of rows of the results of step 1 with largest value in the results of step 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find for each value of room . find rate and check out in place of last name . [question] Which room has the highest rate ? List the room 's full name , rate , check in and check out date . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name , last name , check in of the results of step 1 with largest value of rate . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , find for each value of room . find rate and check out in place of last name . [question] Which room has the highest rate ? List the room 's full name , rate , check in and check out date . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name , last name , check in of the results of step 1 with largest value of rate . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that relationship equals Spouse . [question] find all dependent names who have a spouse relation with some employee . [system description] find the dependent name in dependent table . [schema] [T] works on [C] employee ssn [C] project number [C] hours [T] employee [C] first name [C] minit [C] last name [C] ssn [C] birth date [C] address [C] sex [C] salary [C] super ssn [C] department no [T] department [C] department name [C] department number [C] manager ssn [C] manager start date [T] project [C] dependent name [C] dependent number [C] dependent location [C] department number [T] dependent [C] employee ssn [C] dependent name [C] sex [C] birth date [C] relationship ( Spouse ) [T] department locations [C] department number [C] department location
additionally make sure that relationship equals Spouse . [question] find all dependent names who have a spouse relation with some employee . [system description] find the dependent name in dependent table . [schema] [T] works on [C] employee ssn [C] project number [C] hours [T] employee [C] first name [C] minit [C] last name [C] ssn [C] birth date [C] address [C] sex [C] salary [C] super ssn [C] department no [T] department [C] department name [C] department number [C] manager ssn [C] manager start date [T] project [C] dependent name [C] dependent number [C] dependent location [C] department number [T] dependent [C] employee ssn [C] dependent name [C] sex [C] birth date [C] relationship ( Spouse ) [T] department locations [C] department number [C] department location
in step 1 , do not use the rooms table . in step 2 , consider the first name equals CONRAD and check in equals 2010-10-23 conditions in place of the last name equals CONRAD and room name equals 2010-10-23 conditions . find adults in place of summation of adults . [question] Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23 , 2010 . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose room name equals " 2010-10-23 " and last name equals " SELBIG " and last name equals " CONRAD " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
in step 1 , do not use the rooms table . in step 2 , consider the first name equals CONRAD and check in equals 2010-10-23 conditions in place of the last name equals CONRAD and room name equals 2010-10-23 conditions . find adults in place of summation of adults . [question] Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23 , 2010 . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose room name equals " 2010-10-23 " and last name equals " SELBIG " and last name equals " CONRAD " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
consider the last name equals SWEAZY and first name equals ROY conditions in place of the last name equals ROY conditions . [question] Find the number of times ROY SWEAZY has reserved a room . [system description] find the number of rows in reservations table whose last name equals " ROY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
consider the last name equals SWEAZY and first name equals ROY conditions in place of the last name equals ROY conditions . [question] Find the number of times ROY SWEAZY has reserved a room . [system description] find the number of rows in reservations table whose last name equals " ROY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
in step 1 , do not use the reservations table . in step 2 , consider the max occupancy greater than 2 conditions in place of the adults greater than 2 conditions . find room id in place of decor . [question] Find all the rooms that have a price higher than 160 and can accommodate more than 2 people . Report room names and ids . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name and decor of the results of step 1 whose base price greater than 160 and adults greater than 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the reservations table . in step 2 , consider the max occupancy greater than 2 conditions in place of the adults greater than 2 conditions . find room id in place of decor . [question] Find all the rooms that have a price higher than 160 and can accommodate more than 2 people . Report room names and ids . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name and decor of the results of step 1 whose base price greater than 160 and adults greater than 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that bed type equals King . find summation of beds in place of number of rows . [question] How many king beds are there ? [system description] find the number of rows in rooms table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that bed type equals King . find summation of beds in place of number of rows . [question] How many king beds are there ? [system description] find the number of rows in rooms table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 3 , find room name in place of decor . [question] Which room has the largest number of reservations ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of each value of room of the results of step 1 . Step 3 : find the decor of the results of step 1 with largest value in the results of step 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 3 , find room name in place of decor . [question] Which room has the largest number of reservations ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of each value of room of the results of step 1 . Step 3 : find the decor of the results of step 1 with largest value in the results of step 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
find base price in place of decor . [question] Which room has cheapest base price ? List the room 's name and the base price . [system description] find the room name and decor in rooms table with smallest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
find base price in place of decor . [question] Which room has cheapest base price ? List the room 's name and the base price . [system description] find the room name and decor in rooms table with smallest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that bed type equals King . find summation of beds in place of number of rows . [question] Find the total number of king beds available . [system description] find the number of rows in rooms table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that bed type equals King . find summation of beds in place of number of rows . [question] Find the total number of king beds available . [system description] find the number of rows in rooms table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
find kids in place of summation of adults . [question] How many kids stay in the rooms reserved by ROY SWEAZY ? [system description] find the summation of adults in reservations table whose first name equals " ROY " and last name equals " SWEAZY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
find kids in place of summation of adults . [question] How many kids stay in the rooms reserved by ROY SWEAZY ? [system description] find the summation of adults in reservations table whose first name equals " ROY " and last name equals " SWEAZY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
additionally make sure that decor equals traditional . [question] List the type of bed and name of all traditional rooms . [system description] find the bed type and room name in rooms table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( traditional ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that decor equals traditional . [question] List the type of bed and name of all traditional rooms . [system description] find the bed type and room name in rooms table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( traditional ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the rooms table besides the reservations table . additionally make sure that max occupancy equals adults . find number of rows in place of maximum adults and summation of kids . [question] How many times the number of adults and kids staying in a room reached the maximum capacity of the room ? [system description] find the maximum adults and summation of kids in reservations table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the rooms table besides the reservations table . additionally make sure that max occupancy equals adults . find number of rows in place of maximum adults and summation of kids . [question] How many times the number of adults and kids staying in a room reached the maximum capacity of the room ? [system description] find the maximum adults and summation of kids in reservations table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the person table besides the person friend table . [question] Find the name of persons who are friends with Bob . [system description] find the name in person friend table whose friend equals " Bob " . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
additionally use the information from the person table besides the person friend table . [question] Find the name of persons who are friends with Bob . [system description] find the name in person friend table whose friend equals " Bob " . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice conditions in place of the job equals Alice conditions . [question] Find the female friends of Alice . [system description] find the name in person table whose job equals " Alice " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice conditions in place of the job equals Alice conditions . [question] Find the female friends of Alice . [system description] find the name in person table whose job equals " Alice " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . consider the friend equals Zach conditions in place of the job equals Zach conditions . [question] Find the names of females who are friends with Zach [system description] find the name in person table whose job equals " Zach " and gender equals " female " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
additionally use the information from the person friend table besides the person table . consider the friend equals Zach conditions in place of the job equals Zach conditions . [question] Find the names of females who are friends with Zach [system description] find the name in person table whose job equals " Zach " and gender equals " female " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
find number of different job in place of number of different city . [question] How many different jobs are listed ? [system description] find the number of different city in person table . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
find number of different job in place of number of different city . [question] How many different jobs are listed ? [system description] find the number of different city in person table . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
use rooms table in place of reservations table . consider the bed type equals King conditions in place of the check in equals King conditions . [question] Find the number of rooms with a king bed . [system description] find the number of rows in reservations table whose check in equals " King " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
use rooms table in place of reservations table . consider the bed type equals King conditions in place of the check in equals King conditions . [question] Find the number of rooms with a king bed . [system description] find the number of rows in reservations table whose check in equals " King " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
consider the age is greater than maximum age person whose job equals engineer conditions in place of the age greater than engineer conditions . [question] How many people are older than every engineer ? [system description] find the number of rows in person table whose age greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
consider the age is greater than maximum age person whose job equals engineer conditions in place of the age greater than engineer conditions . [question] How many people are older than every engineer ? [system description] find the number of rows in person table whose age greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
find low estimate in place of type . [question] Return the low and high estimates for all film markets . [system description] find the type and high estimate in film market estimation table . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
find low estimate in place of type . [question] Return the low and high estimates for all film markets . [system description] find the type and high estimate in film market estimation table . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
additionally make sure that job equals engineer . [question] HOw many engineers are older than 30 ? [system description] find the number of rows in person table whose age greater than 30 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
additionally make sure that job equals engineer . [question] HOw many engineers are older than 30 ? [system description] find the number of rows in person table whose age greater than 30 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 2 , consider the person friend 's name not equals Alice and person 's name equals Alice conditions in place of the friend equals Alice conditions . make sure no repetition in the results . [question] What are the names of all of Alice 's friends of friends ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , consider the person friend 's name not equals Alice and person 's name equals Alice conditions in place of the friend equals Alice conditions . make sure no repetition in the results . [question] What are the names of all of Alice 's friends of friends ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally make sure that bed type equals King . find for each value of decor in place of bed type . find decor in place of bed type . [question] Find the number of rooms with king bed for each decor type . [system description] find each value of bed type in rooms table along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that bed type equals King . find for each value of decor in place of bed type . find decor in place of bed type . [question] Find the number of rooms with king bed for each decor type . [system description] find each value of bed type in rooms table along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that gender equals male . do not return age . order the results by age in place of gender . [question] Find the name and age of all males in order of their age . [system description] find the name and age in person table ordered ascending by gender . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that gender equals male . do not return age . order the results by age in place of gender . [question] Find the name and age of all males in order of their age . [system description] find the name and age in person table ordered ascending by gender . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person friend table besides the person table . [question] What are the names of all friends who are from New York ? [system description] find the name in person table whose city equals " new york city " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person friend table besides the person table . [question] What are the names of all friends who are from New York ? [system description] find the name in person table whose city equals " new york city " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , additionally use the information from the person friend table besides the person table . additionally make sure that job equals student . [question] Find the name of the person who has no student friends . [system description] Step 1 : find the name in person table . Step 2 : find the name in person table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
in step 2 , additionally use the information from the person friend table besides the person table . additionally make sure that job equals student . [question] Find the name of the person who has no student friends . [system description] Step 1 : find the name in person table . Step 2 : find the name in person table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the person friend table . in step 2 , consider the age is greater than minimum age person whose job equals engineer conditions in place of the age greater than engineer conditions . in step 3 , do not find for each value of friend . in step 4 , order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : only keep the results of step 1 whose age greater than " engineer " . Step 3 : find the number of rows of each value of friend the results of step 2 . Step 4 : find the person 's name the results of step 2 whose corresponding value in step 3 is greater than or equals 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the person friend table . in step 2 , consider the age is greater than minimum age person whose job equals engineer conditions in place of the age greater than engineer conditions . in step 3 , do not find for each value of friend . in step 4 , order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : only keep the results of step 1 whose age greater than " engineer " . Step 3 : find the number of rows of each value of friend the results of step 2 . Step 4 : find the person 's name the results of step 2 whose corresponding value in step 3 is greater than or equals 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the film table . in step 2 , remove the title equals ET the Extra-Terrestrial conditions . [question] Please list the countries and years of film market estimations . [system description] Step 1 : for each row in film table , find the corresponding rows in market table and in film market estimation table . Step 2 : find the country and year of the results of step 1 whose title equals " ET the Extra-Terrestrial " . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , do not use the film table . in step 2 , remove the title equals ET the Extra-Terrestrial conditions . [question] Please list the countries and years of film market estimations . [system description] Step 1 : for each row in film table , find the corresponding rows in market table and in film market estimation table . Step 2 : find the country and year of the results of step 1 whose title equals " ET the Extra-Terrestrial " . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
additionally use the information from the rooms table besides the reservations table . consider the rate minus base price greater than 0 conditions in place of the rate greater than 0 conditions . [question] Find the first and last names of people who payed more than the rooms ' base prices . [system description] find the first name and last name in reservations table whose rate greater than 0 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the rooms table besides the reservations table . consider the rate minus base price greater than 0 conditions in place of the rate greater than 0 conditions . [question] Find the first and last names of people who payed more than the rooms ' base prices . [system description] find the first name and last name in reservations table whose rate greater than 0 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that age less than 40 . [question] How many people are under 40 for each gender ? [system description] find each value of gender in person table along with the number of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that age less than 40 . [question] How many people are under 40 for each gender ? [system description] find each value of gender in person table along with the number of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the reservations table . in step 2 , order the results by max occupancy in place of adults . [question] What is the name of the room that can accommodate the most people ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 with largest value of adults . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the reservations table . in step 2 , order the results by max occupancy in place of adults . [question] What is the name of the room that can accommodate the most people ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 with largest value of adults . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
use rooms table in place of reservations table . find number of rows in place of summation of kids . [question] What is the total number of rooms available in this inn ? [system description] find the summation of kids in reservations table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
use rooms table in place of reservations table . find number of rows in place of summation of kids . [question] What is the total number of rooms available in this inn ? [system description] find the summation of kids in reservations table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the rooms table besides the reservations table . consider the rate minus base price greater than 0 conditions in place of the rate greater than 0 conditions . [question] What are the first and last names of people who payed more than the rooms ' base prices ? [system description] find the first name and last name in reservations table whose rate greater than 0 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the rooms table besides the reservations table . consider the rate minus base price greater than 0 conditions in place of the rate greater than 0 conditions . [question] What are the first and last names of people who payed more than the rooms ' base prices ? [system description] find the first name and last name in reservations table whose rate greater than 0 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , consider the friend is one of person 's name person whose age greater than 40 conditions in place of the age greater than 40 conditions . in step 3 , additionally use the information from the person friend table besides the person table . consider the friend is one of person 's name person whose age less than 30 conditions in place of the age less than 30 conditions . [question] What are the names of every person who has a friend over 40 and under 30 ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person friend 's name of the results of step 1 whose age greater than 40 . Step 3 : find the person 's name in person table whose age less than 30 . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , consider the friend is one of person 's name person whose age greater than 40 conditions in place of the age greater than 40 conditions . in step 3 , additionally use the information from the person friend table besides the person table . consider the friend is one of person 's name person whose age less than 30 conditions in place of the age less than 30 conditions . [question] What are the names of every person who has a friend over 40 and under 30 ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person friend 's name of the results of step 1 whose age greater than 40 . Step 3 : find the person 's name in person table whose age less than 30 . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the reservations table . in step 2 , consider the decor equals modern conditions in place of the bed type equals modern conditions . find summation of max occupancy in place of summation of adults . [question] How many people in total can stay in the modern rooms of this inn ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose bed type equals " modern " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the reservations table . in step 2 , consider the decor equals modern conditions in place of the bed type equals modern conditions . find summation of max occupancy in place of summation of adults . [question] How many people in total can stay in the modern rooms of this inn ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of adults of the results of step 1 whose bed type equals " modern " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the school details table . in step 2 , find school colors in place of colors . [question] What is the school color of the school with the largest enrollment ? [system description] Step 1 : for each row in school table , find the corresponding rows in school details table . Step 2 : find the colors of the results of step 1 with largest value of enrollment . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , do not use the school details table . in step 2 , find school colors in place of colors . [question] What is the school color of the school with the largest enrollment ? [system description] Step 1 : for each row in school table , find the corresponding rows in school details table . Step 2 : find the colors of the results of step 1 with largest value of enrollment . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
use the largest in place of smallest . [question] Which team has the oldest player ? [system description] find the team in player table with smallest value of age . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
use the largest in place of smallest . [question] Which team has the oldest player ? [system description] find the team in player table with smallest value of age . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , consider the founded less than 1890 conditions in place of the founded greater than 1890 conditions . in step 2 , consider the founded greater than 1900 conditions in place of the founded less than 1900 conditions . [question] What are the denominations used by both schools founded before 1890 and schools founded after 1900 ? [system description] Step 1 : find the denomination in school table whose founded greater than 1890 . Step 2 : find the denomination in school table whose founded less than 1900 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , consider the founded less than 1890 conditions in place of the founded greater than 1890 conditions . in step 2 , consider the founded greater than 1900 conditions in place of the founded less than 1900 conditions . [question] What are the denominations used by both schools founded before 1890 and schools founded after 1900 ? [system description] Step 1 : find the denomination in school table whose founded greater than 1890 . Step 2 : find the denomination in school table whose founded less than 1900 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , additionally use the information from the player table besides the school table . find for value of player 's school id in place of location . [question] Which schools have more than 1 player ? Give me the school locations . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , additionally use the information from the player table besides the school table . find for value of player 's school id in place of location . [question] Which schools have more than 1 player ? Give me the school locations . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , additionally use the information from the person friend table besides the person table . consider the friend equals Dan conditions in place of the job equals Dan conditions . in step 2 , additionally use the information from the person friend table besides the person table . consider the friend equals Alice conditions in place of the job equals Alice conditions . [question] What are the names and ages of every person who is a friend of both Dan and Alice ? [system description] Step 1 : find the name and age in person table whose job equals " Dan " . Step 2 : find the name and age in person table whose job equals " Alice " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 1 , additionally use the information from the person friend table besides the person table . consider the friend equals Dan conditions in place of the job equals Dan conditions . in step 2 , additionally use the information from the person friend table besides the person table . consider the friend equals Alice conditions in place of the job equals Alice conditions . [question] What are the names and ages of every person who is a friend of both Dan and Alice ? [system description] Step 1 : find the name and age in person table whose job equals " Dan " . Step 2 : find the name and age in person table whose job equals " Alice " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 1 , find for each value of studio in place of title . in step 2 , find studio in place of title . [question] List the name of film studio that have the most number of films . [system description] Step 1 : find the number of rows of each value of title in film table . Step 2 : find the title in film table with largest value in the results of step 1 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , find for each value of studio in place of title . in step 2 , find studio in place of title . [question] List the name of film studio that have the most number of films . [system description] Step 1 : find the number of rows of each value of title in film table . Step 2 : find the title in film table with largest value in the results of step 1 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , additionally use the information from the player table besides the school table . find for value of player 's school id in place of location . [question] Show the locations of schools that have more than 1 player . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , additionally use the information from the player table besides the school table . find for value of player 's school id in place of location . [question] Show the locations of schools that have more than 1 player . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
additionally use the information from the person table besides the person friend table . additionally make sure that person friend 's name not equals Alice and person 's name equals Alice . make sure no repetition in the results . [question] Find Alice 's friends of friends . [system description] find the friend in person friend table . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person table besides the person friend table . additionally make sure that person friend 's name not equals Alice and person 's name equals Alice . make sure no repetition in the results . [question] Find Alice 's friends of friends . [system description] find the friend in person friend table . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice and gender equals female conditions in place of the gender equals Alice conditions . [question] What are all the friends of Alice who are female ? [system description] find the name in person table whose gender equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice and gender equals female conditions in place of the gender equals Alice conditions . [question] What are all the friends of Alice who are female ? [system description] find the name in person table whose gender equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . additionally make sure that year is equals maximum year person friend whose friend equals Alice and friend equals Alice . find job in place of city . you should not find the largest of the results . show me all the results . [question] What are the names , ages , and jobs of all people who are friends with Alice for the longest amount of time ? [system description] find the name , age , city in person table with largest value of age . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . additionally make sure that year is equals maximum year person friend whose friend equals Alice and friend equals Alice . find job in place of city . you should not find the largest of the results . show me all the results . [question] What are the names , ages , and jobs of all people who are friends with Alice for the longest amount of time ? [system description] find the name , age , city in person table with largest value of age . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
find number of different job in place of number of rows . [question] How many type of jobs do they have ? [system description] find the number of rows in person table . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
find number of different job in place of number of rows . [question] How many type of jobs do they have ? [system description] find the number of rows in person table . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
find number of different job in place of number of rows . [question] How many type of jobs do they have ? [system description] find the number of rows in person table . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , additionally use the information from the reservations table besides the rooms table . find for each value of decor in place of bed type . in step 2 , find decor in place of bed type . order the results by number of decor in place of number of rows . [question] What is the least popular kind of decor ? [system description] Step 1 : find the number of rows of each value of bed type in rooms table . Step 2 : find the bed type in rooms table with smallest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the reservations table besides the rooms table . find for each value of decor in place of bed type . in step 2 , find decor in place of bed type . order the results by number of decor in place of number of rows . [question] What is the least popular kind of decor ? [system description] Step 1 : find the number of rows of each value of bed type in rooms table . Step 2 : find the bed type in rooms table with smallest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
do not return city . [question] list the name , job title of all people ordered by their names . [system description] find the name , job , city in person table ordered ascending by name . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
do not return city . [question] list the name , job title of all people ordered by their names . [system description] find the name , job , city in person table ordered ascending by name . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
use person friend table in place of person table . consider the friend is not one of person 's name person whose city equals Austin conditions in place of the city equals Austin conditions . find number of different person friend 's name in place of number of rows . [question] What is the total number of people who have no friends living in Austin ? [system description] find the number of rows in person table whose city equals " Austin " . [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
use person friend table in place of person table . consider the friend is not one of person 's name person whose city equals Austin conditions in place of the city equals Austin conditions . find number of different person friend 's name in place of number of rows . [question] What is the total number of people who have no friends living in Austin ? [system description] find the number of rows in person table whose city equals " Austin " . [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person friend table besides the person table . find for each value of person friend 's name . additionally find average age . order the results descending by average age in place of ordering ascending by age . [question] Which person whose friends have the oldest average age ? [system description] find the name in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person friend table besides the person table . find for each value of person friend 's name . additionally find average age . order the results descending by average age in place of ordering ascending by age . [question] Which person whose friends have the oldest average age ? [system description] find the name in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , find studio in place of title . [question] What is the name of teh studio that created the most films ? [system description] Step 1 : find the number of rows of each value of studio in film table . Step 2 : find the title in film table with largest value in the results of step 1 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 2 , find studio in place of title . [question] What is the name of teh studio that created the most films ? [system description] Step 1 : find the number of rows of each value of studio in film table . Step 2 : find the title in film table with largest value in the results of step 1 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
find for each value of denomination in place of school id . find denomination in place of boys or girls . [question] Please show different denominations and the corresponding number of schools . [system description] find each value of school id in school table along with the number of the corresponding rows to each value . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
find for each value of denomination in place of school id . find denomination in place of boys or girls . [question] Please show different denominations and the corresponding number of schools . [system description] find each value of school id in school table along with the number of the corresponding rows to each value . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
order the results ascending . [question] Sort all the rooms according to the price . Just report the room names . [system description] find the room name in rooms table ordered descending by base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
order the results ascending . [question] Sort all the rooms according to the price . Just report the room names . [system description] find the room name in rooms table ordered descending by base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the person table . in step 2 , additionally make sure that friend equals Alice . in step 3 , make sure the year is equals the results of step 2 the age is equals the results of step 2 . additionally make sure that friend equals Alice . [question] What are the names of all people who are friends with Alice for the shortest amount of time ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the minimum year in person friend table . Step 3 : find the person friend 's name of the results of step 1 whose age equals the results of step 2 . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , do not use the person table . in step 2 , additionally make sure that friend equals Alice . in step 3 , make sure the year is equals the results of step 2 the age is equals the results of step 2 . additionally make sure that friend equals Alice . [question] What are the names of all people who are friends with Alice for the shortest amount of time ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the minimum year in person friend table . Step 3 : find the person friend 's name of the results of step 1 whose age equals the results of step 2 . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , additionally use the information from the reservations table besides the rooms table . in step 2 , order the results by number of decor in place of number of rows . [question] What kind of decor has the least number of reservations ? [system description] Step 1 : find the number of rows of each value of decor in rooms table . Step 2 : find the decor in rooms table with smallest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the reservations table besides the rooms table . in step 2 , order the results by number of decor in place of number of rows . [question] What kind of decor has the least number of reservations ? [system description] Step 1 : find the number of rows of each value of decor in rooms table . Step 2 : find the decor in rooms table with smallest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
consider the age is greater than minimum age person whose job equals engineer conditions in place of the age greater than engineer conditions . order the results by age in place of name . [question] Find the name of people whose age is greater than any engineer sorted by their age . [system description] find the name in person table whose age greater than " engineer " ordered ascending by name . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
consider the age is greater than minimum age person whose job equals engineer conditions in place of the age greater than engineer conditions . order the results by age in place of name . [question] Find the name of people whose age is greater than any engineer sorted by their age . [system description] find the name in person table whose age greater than " engineer " ordered ascending by name . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
find for each value of job . additionally find minimum age . you should not find the smallest of the results . show me all the results . [question] How old is the youngest person for each job ? [system description] find the job in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
find for each value of job . additionally find minimum age . you should not find the smallest of the results . show me all the results . [question] How old is the youngest person for each job ? [system description] find the job in person table with smallest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the person friend table besides the person table . consider the friend equals Zach conditions in place of the job equals Zach conditions . [question] What are the names of all females who are friends with Zach ? [system description] find the name in person table whose job equals " Zach " and gender equals " female " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
additionally use the information from the person friend table besides the person table . consider the friend equals Zach conditions in place of the job equals Zach conditions . [question] What are the names of all females who are friends with Zach ? [system description] find the name in person table whose job equals " Zach " and gender equals " female " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
consider the name equals Zach and job equals doctor conditions in place of the name equals doctor conditions . [question] What is the age of the doctor named Zach ? [system description] find the age in person table whose name equals " doctor " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
consider the name equals Zach and job equals doctor conditions in place of the name equals doctor conditions . [question] What is the age of the doctor named Zach ? [system description] find the age in person table whose name equals " doctor " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 2 , additionally use the information from the person friend table besides the person table . make sure no repetition in the results . [question] Who has friends that are older than the average age ? Print their friends and their ages as well [system description] Step 1 : find the average age in person table . Step 2 : find the name and age in person table whose age greater than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , additionally use the information from the person friend table besides the person table . make sure no repetition in the results . [question] Who has friends that are older than the average age ? Print their friends and their ages as well [system description] Step 1 : find the average age in person table . Step 2 : find the name and age in person table whose age greater than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the rooms table besides the reservations table . additionally make sure that max occupancy equals adults . find number of rows in place of maximum adults and summation of kids . [question] List how many times the number of people in the room reached the maximum occupancy of the room . The number of people include adults and kids . [system description] find the maximum adults and summation of kids in reservations table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the rooms table besides the reservations table . additionally make sure that max occupancy equals adults . find number of rows in place of maximum adults and summation of kids . [question] List how many times the number of people in the room reached the maximum occupancy of the room . The number of people include adults and kids . [system description] find the maximum adults and summation of kids in reservations table . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that name equals Zach . find age in place of name . [question] How old is the doctor named Zach ? [system description] find the name in person table whose job equals " doctor " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
additionally make sure that name equals Zach . find age in place of name . [question] How old is the doctor named Zach ? [system description] find the name in person table whose job equals " doctor " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
additionally make sure that gender equals male . do not return age . [question] What is the name and age of every male ? Order the results by age . [system description] find the name and age in person table ordered ascending by age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that gender equals male . do not return age . [question] What is the name and age of every male ? Order the results by age . [system description] find the name and age in person table ordered ascending by age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , consider the first name like % ROY % conditions in place of the first name equals ROY conditions . [question] What are the name of rooms booked by customers whose first name has " ROY " in part ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 whose first name equals " ROY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( ROY ) [C] adults [C] kids
in step 2 , consider the first name like % ROY % conditions in place of the first name equals ROY conditions . [question] What are the name of rooms booked by customers whose first name has " ROY " in part ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 whose first name equals " ROY " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( ROY ) [C] adults [C] kids
find number of different governor in place of number of different comptroller . [question] How many distinct governors are there ? [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find number of different governor in place of number of different comptroller . [question] How many distinct governors are there ? [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find number of different governor in place of number of different comptroller . [question] How many distinct governors are there ? [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find number of different governor in place of number of different comptroller . [question] How many distinct governors are there ? [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find number of different delegate in place of number of different committee . [question] How many distinct delegates are from counties with population larger than 50000 ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the number of different committee of the results of step 1 whose population greater than 50000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find number of different delegate in place of number of different committee . [question] How many distinct delegates are from counties with population larger than 50000 ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the number of different committee of the results of step 1 whose population greater than 50000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find delegate in place of governor . [question] Show the delegates and the names of the party they belong to . [system description] find the governor and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find delegate in place of governor . [question] Show the delegates and the names of the party they belong to . [system description] find the governor and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , consider the district equals 1 or district equals 2 conditions in place of the committee equals 2 or committee equals 1 conditions . [question] Who were the comptrollers of the parties associated with the delegates from district 1 or district 2 ? [system description] Step 1 : for each row in party table , find the corresponding rows in election table . Step 2 : find the comptroller of the results of step 1 whose committee equals 2 or committee equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , consider the district equals 1 or district equals 2 conditions in place of the committee equals 2 or committee equals 1 conditions . [question] Who were the comptrollers of the parties associated with the delegates from district 1 or district 2 ? [system description] Step 1 : for each row in party table , find the corresponding rows in election table . Step 2 : find the comptroller of the results of step 1 whose committee equals 2 or committee equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the district equals 1 conditions in place of the committee equals 1 conditions . [question] Show the delegate from district 1 in election . [system description] find the delegate in election table whose committee equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the district equals 1 conditions in place of the committee equals 1 conditions . [question] Show the delegate from district 1 in election . [system description] find the delegate in election table whose committee equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] For each party , return the name of the party and the number of delegates from that party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] For each party , return the name of the party and the number of delegates from that party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the county table . find for each value of county id in place of county name . [question] For each county , find the name of the county and the number of delegates from that county . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the county table . find for each value of county id in place of county name . [question] For each county , find the name of the county and the number of delegates from that county . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use election table in place of county table . [question] Return all the information for each election record . [system description] find the rows in county table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use election table in place of county table . [question] Return all the information for each election record . [system description] find the rows in county table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use election table in place of county table . [question] Return all the information for each election record . [system description] find the rows in county table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find number of different governor in place of number of different comptroller . [question] Count the number of distinct governors . [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find number of different governor in place of number of different comptroller . [question] Count the number of distinct governors . [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find number of different governor in place of number of different comptroller . [question] Count the number of distinct governors . [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find number of different governor in place of number of different comptroller . [question] Count the number of distinct governors . [system description] find the number of different comptroller in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . consider the district equals 1 or district equals 2 conditions in place of the comptroller equals 2 or comptroller equals 1 conditions . find comptroller in place of party 's party . [question] Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties ? [system description] find the party in party table whose comptroller equals 2 or comptroller equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . consider the district equals 1 or district equals 2 conditions in place of the comptroller equals 2 or comptroller equals 1 conditions . find comptroller in place of party 's party . [question] Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties ? [system description] find the party in party table whose comptroller equals 2 or comptroller equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the election table . in step 2 , find for each value of governor in place of district . in step 3 , find governor in place of attorney general . [question] Show the people that have been governor the most times . [system description] Step 1 : for each row in party table , find the corresponding rows in election table . Step 2 : find the number of rows of each value of district of the results of step 1 . Step 3 : find the attorney general of the results of step 1 with largest value in the results of step 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the election table . in step 2 , find for each value of governor in place of district . in step 3 , find governor in place of attorney general . [question] Show the people that have been governor the most times . [system description] Step 1 : for each row in party table , find the corresponding rows in election table . Step 2 : find the number of rows of each value of district of the results of step 1 . Step 3 : find the attorney general of the results of step 1 with largest value in the results of step 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the party table . consider the committee equals Appropriations conditions in place of the comptroller equals Appropriations conditions . [question] Which parties have delegates in both the " Appropriations " committee and the " Economic Matters " committee ? [system description] Step 1 : find the party 's party in party table whose comptroller equals " Appropriations " . Step 2 : for each row in party table , find the corresponding rows in election table . Step 3 : find the party 's party of the results of step 2 whose committee equals " Economic Matters " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee ( Economic Matters , Appropriations )
in step 1 , additionally use the information from the election table besides the party table . consider the committee equals Appropriations conditions in place of the comptroller equals Appropriations conditions . [question] Which parties have delegates in both the " Appropriations " committee and the " Economic Matters " committee ? [system description] Step 1 : find the party 's party in party table whose comptroller equals " Appropriations " . Step 2 : for each row in party table , find the corresponding rows in election table . Step 3 : find the party 's party of the results of step 2 whose committee equals " Economic Matters " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee ( Economic Matters , Appropriations )
in step 2 , consider the population less than 100000 conditions in place of the population greater than 100000 conditions . [question] Find the delegates who are from counties with population below 100000 . [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the delegate of the results of step 1 whose population greater than 100000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , consider the population less than 100000 conditions in place of the population greater than 100000 conditions . [question] Find the delegates who are from counties with population below 100000 . [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the delegate of the results of step 1 whose population greater than 100000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
remove the comptroller equals Carl McCall conditions . additionally find comptroller . [question] Who are the lieutenant governor and comptroller from the democratic party ? [system description] find the lieutenant governor in party table whose party equals " Democratic " and comptroller equals " Carl McCall " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
remove the comptroller equals Carl McCall conditions . additionally find comptroller . [question] Who are the lieutenant governor and comptroller from the democratic party ? [system description] find the lieutenant governor in party table whose party equals " Democratic " and comptroller equals " Carl McCall " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find lieutenant governor and comptroller in place of governor . [question] Show the lieutenant governor and comptroller from the democratic party . [system description] find the governor in party table whose party equals " Democratic " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find lieutenant governor and comptroller in place of governor . [question] Show the lieutenant governor and comptroller from the democratic party . [system description] find the governor in party table whose party equals " Democratic " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the county table . find for value of county id in place of county name . [question] Show the names of counties that have at least two delegates . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the county table . find for value of county id in place of county name . [question] Show the names of counties that have at least two delegates . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find district in place of committee . [question] Show all the distinct districts for elections . [system description] find without repetition committee in election table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find district in place of committee . [question] Show all the distinct districts for elections . [system description] find without repetition committee in election table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] Show the name of each party and the corresponding number of delegates from that party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] Show the name of each party and the corresponding number of delegates from that party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . consider the district equals 1 conditions in place of the comptroller equals 1 conditions . find governor in place of party 's party . [question] Find the parties associated with the delegates from district 1. Who served as governors of the parties ? [system description] find the party in party table whose comptroller equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . consider the district equals 1 conditions in place of the comptroller equals 1 conditions . find governor in place of party 's party . [question] Find the parties associated with the delegates from district 1. Who served as governors of the parties ? [system description] find the party in party table whose comptroller equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find number of different delegate in place of number of different committee . [question] Count the number of distinct delegates who are from counties with population above 50000 . [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the number of different committee of the results of step 1 whose population greater than 50000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find number of different delegate in place of number of different committee . [question] Count the number of distinct delegates who are from counties with population above 50000 . [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the number of different committee of the results of step 1 whose population greater than 50000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the county table . find for value of county id in place of county name . [question] Which counties have two or more delegates ? Give me the county names . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the county table . find for value of county id in place of county name . [question] Which counties have two or more delegates ? Give me the county names . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the governor equals Eliot Spitzer conditions in place of the comptroller equals Eliot Spitzer conditions . [question] In which distinct years was the governor " Eliot Spitzer " ? [system description] find without repetition year in party table whose comptroller equals " Eliot Spitzer " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor ( Eliot Spitzer ) [C] lieutenant governor [C] comptroller [C] attorney general ( Eliot Spitzer ) [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the governor equals Eliot Spitzer conditions in place of the comptroller equals Eliot Spitzer conditions . [question] In which distinct years was the governor " Eliot Spitzer " ? [system description] find without repetition year in party table whose comptroller equals " Eliot Spitzer " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor ( Eliot Spitzer ) [C] lieutenant governor [C] comptroller [C] attorney general ( Eliot Spitzer ) [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the governor equals Eliot Spitzer conditions in place of the comptroller equals Eliot Spitzer conditions . [question] In which distinct years was the governor " Eliot Spitzer " ? [system description] find without repetition year in party table whose comptroller equals " Eliot Spitzer " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor ( Eliot Spitzer ) [C] lieutenant governor [C] comptroller [C] attorney general ( Eliot Spitzer ) [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the governor equals Eliot Spitzer conditions in place of the comptroller equals Eliot Spitzer conditions . [question] In which distinct years was the governor " Eliot Spitzer " ? [system description] find without repetition year in party table whose comptroller equals " Eliot Spitzer " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor ( Eliot Spitzer ) [C] lieutenant governor [C] comptroller [C] attorney general ( Eliot Spitzer ) [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the county table . find for each value of county id in place of county name . [question] Show the name of each county along with the corresponding number of delegates from that county . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the county table . find for each value of county id in place of county name . [question] Show the name of each county along with the corresponding number of delegates from that county . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use election table in place of county table . [question] Show all the information about election . [system description] find the rows in county table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use election table in place of county table . [question] Show all the information about election . [system description] find the rows in county table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use election table in place of county table . [question] Show all the information about election . [system description] find the rows in county table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not find for each value of station id . in step 2 , order the results by total passengers in place of number of rows . [question] Show the names and main services for train stations that have the top three total number of passengers . [system description] Step 1 : find the number of rows of each value of station id in station table . Step 2 : find the name and main services in station table ordered descending by the results of step 1 . Step 3 : only show the first 3 rows of the results . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 1 , do not find for each value of station id . in step 2 , order the results by total passengers in place of number of rows . [question] Show the names and main services for train stations that have the top three total number of passengers . [system description] Step 1 : find the number of rows of each value of station id in station table . Step 2 : find the name and main services in station table ordered descending by the results of step 1 . Step 3 : only show the first 3 rows of the results . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 1 , additionally use the information from the train station table besides the station table . [question] Show the station name with at least two trains . [system description] Step 1 : find the number of rows of each value of station id in station table . Step 2 : find the name in station table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 1 , additionally use the information from the train station table besides the station table . [question] Show the station name with at least two trains . [system description] Step 1 : find the number of rows of each value of station id in station table . Step 2 : find the name in station table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 1 , do not use the train station table . in step 2 , do not find for each value of train station 's station id . find number of platforms in place of number of rows . [question] Show the name , location , and number of platforms for all stations . [system description] Step 1 : for each row in station table , find the corresponding rows in train station table . Step 2 : find each value of train station 's station id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 1 , do not use the train station table . in step 2 , do not find for each value of train station 's station id . find number of platforms in place of number of rows . [question] Show the name , location , and number of platforms for all stations . [system description] Step 1 : for each row in station table , find the corresponding rows in train station table . Step 2 : find each value of train station 's station id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
additionally use the information from the train station table besides the station table . find for each value of train station 's station id . order the results by number of rows in place of number of platforms . [question] Show the station name with greatest number of trains . [system description] find the name in station table with largest value of number of platforms . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
additionally use the information from the train station table besides the station table . find for each value of train station 's station id . order the results by number of rows in place of number of platforms . [question] Show the station name with greatest number of trains . [system description] find the name in station table with largest value of number of platforms . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
additionally use the information from the train station table besides the station table . find for each value of train station 's station id . order the results by number of rows in place of number of platforms . [question] Show the station name with greatest number of trains . [system description] find the name in station table with largest value of number of platforms . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
use train table in place of station table . [question] Show the number of trains [system description] find the number of rows in station table . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
use train table in place of station table . [question] Show the number of trains [system description] find the number of rows in station table . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
additionally use the information from the train station table besides the station table . [question] Show the station name and number of trains in each station . [system description] find each value of station id in station table along with the number of the corresponding rows to each value . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
additionally use the information from the train station table besides the station table . [question] Show the station name and number of trains in each station . [system description] find each value of station id in station table along with the number of the corresponding rows to each value . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
additionally use the information from the train station table and station table besides the train table . additionally make sure that location equals London . [question] Show all train names and times in stations in London in descending order by train time . [system description] find the name and time in train table ordered descending by time . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location ( London ) [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
additionally use the information from the train station table and station table besides the train table . additionally make sure that location equals London . [question] Show all train names and times in stations in London in descending order by train time . [system description] find the name and time in train table ordered descending by time . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location ( London ) [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 2 , do not find for each value of location . in step 3 , additionally make sure that number of platforms greater than or equals 15 . [question] Show all locations which do n't have a train station with at least 15 platforms . [system description] Step 1 : find the location in station table . Step 2 : find the number of rows of each value of location in station table . Step 3 : find the location in station table whose corresponding value in step 2 is greater than or equals 15 . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
in step 2 , do not find for each value of location . in step 3 , additionally make sure that number of platforms greater than or equals 15 . [question] Show all locations which do n't have a train station with at least 15 platforms . [system description] Step 1 : find the location in station table . Step 2 : find the number of rows of each value of location in station table . Step 3 : find the location in station table whose corresponding value in step 2 is greater than or equals 15 . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] station [C] station id [C] name [C] annual entry exit [C] annual interchanges [C] total passengers [C] location [C] main services [C] number of platforms [T] train [C] train id [C] name [C] time [C] service [T] train station [C] train id [C] station id
order the results by all home in place of team name . [question] List names of all teams in the basketball competition , ordered by all home scores in descending order . [system description] find the team name in basketball match table ordered descending by team name . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
order the results by all home in place of team name . [question] List names of all teams in the basketball competition , ordered by all home scores in descending order . [system description] find the team name in basketball match table ordered descending by team name . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
order the results by all home in place of team name . [question] List names of all teams in the basketball competition , ordered by all home scores in descending order . [system description] find the team name in basketball match table ordered descending by team name . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the founded greater than 1850 or affiliation equals Public conditions in place of the founded equals Public or founded less than 1850 conditions . [question] What are the schools that were either founded before 1850 or are public ? [system description] find the school in university table whose founded equals " Public " or founded less than 1850 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
consider the founded greater than 1850 or affiliation equals Public conditions in place of the founded equals Public or founded less than 1850 conditions . [question] What are the schools that were either founded before 1850 or are public ? [system description] find the school in university table whose founded equals " Public " or founded less than 1850 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
find primary conference in place of school . order the results ascending by founded in place of ordering descending by enrollment . [question] Show the enrollment and primary_conference of the oldest college . [system description] find the enrollment and school in university table with largest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
find primary conference in place of school . order the results ascending by founded in place of ordering descending by enrollment . [question] Show the enrollment and primary_conference of the oldest college . [system description] find the enrollment and school in university table with largest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , do not use the phone market table . in step 2 , consider the memory in g greater than 32 conditions in place of the num of stock greater than 32 conditions . [question] List the distinct carriers of phones with memories bigger than 32 . [system description] Step 1 : for each row in phone table , find the corresponding rows in phone market table . Step 2 : find without repetition carrier of the results of step 1 whose num of stock greater than 32 . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 1 , do not use the phone market table . in step 2 , consider the memory in g greater than 32 conditions in place of the num of stock greater than 32 conditions . [question] List the distinct carriers of phones with memories bigger than 32 . [system description] Step 1 : for each row in phone table , find the corresponding rows in phone market table . Step 2 : find without repetition carrier of the results of step 1 whose num of stock greater than 32 . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 2 , remove the num of stock greater than 2000 conditions . find for each value of name whose summation of num of stock greater than or equals 2000 . order the results by summation of num of stock in place of name . [question] Show the names of phones that have total number of stocks bigger than 2000 , in descending order of the total number of stocks . [system description] Step 1 : for each row in phone table , find the corresponding rows in phone market table . Step 2 : find the name of the results of step 1 whose num of stock greater than 2000 ordered descending by name . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 2 , remove the num of stock greater than 2000 conditions . find for each value of name whose summation of num of stock greater than or equals 2000 . order the results by summation of num of stock in place of name . [question] Show the names of phones that have total number of stocks bigger than 2000 , in descending order of the total number of stocks . [system description] Step 1 : for each row in phone table , find the corresponding rows in phone market table . Step 2 : find the name of the results of step 1 whose num of stock greater than 2000 ordered descending by name . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
additionally use the information from the basketball match table besides the university table . order the results by acc percent in place of enrollment . [question] What is the primary conference of the school that has the lowest acc percent score in the competition ? [system description] find the primary conference in university table with smallest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally use the information from the basketball match table besides the university table . order the results by acc percent in place of enrollment . [question] What is the primary conference of the school that has the lowest acc percent score in the competition ? [system description] find the primary conference in university table with smallest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally use the information from the basketball match table besides the university table . order the results by acc percent in place of enrollment . [question] Return the primary conference of the school with the lowest acc percentage score . [system description] find the primary conference in university table with smallest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally use the information from the basketball match table besides the university table . order the results by acc percent in place of enrollment . [question] Return the primary conference of the school with the lowest acc percentage score . [system description] find the primary conference in university table with smallest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , find acc regular season in place of founded . use the smallest in place of largest . [question] What is the team name and acc regular season score of the school that was founded for the longest time ? [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the team name and founded of the results of step 1 with largest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , find acc regular season in place of founded . use the smallest in place of largest . [question] What is the team name and acc regular season score of the school that was founded for the longest time ? [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the team name and founded of the results of step 1 with largest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , additionally use the information from the basketball match table besides the university table . find team name in place of nickname . [question] Find the team names of the universities whose enrollments are smaller than the average enrollment size . [system description] Step 1 : find the average enrollment in university table . Step 2 : find the nickname in university table whose enrollment less than the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , additionally use the information from the basketball match table besides the university table . find team name in place of nickname . [question] Find the team names of the universities whose enrollments are smaller than the average enrollment size . [system description] Step 1 : find the average enrollment in university table . Step 2 : find the nickname in university table whose enrollment less than the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation equals Public . additionally find school . [question] What are the public schools and what are their locations ? [system description] find the location and location in university table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation equals Public . additionally find school . [question] What are the public schools and what are their locations ? [system description] find the location and location in university table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation not equals Public . order the results by founded in place of enrollment . [question] Find the founded year of the newest non public school . [system description] find the founded in university table with largest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation not equals Public . order the results by founded in place of enrollment . [question] Find the founded year of the newest non public school . [system description] find the founded in university table with largest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation equals Public . [question] List all public schools and their locations . [system description] find the school and location in university table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation equals Public . [question] List all public schools and their locations . [system description] find the school and location in university table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
consider the location like % NY % conditions in place of the location equals NY conditions . [question] How many universities have a location that contains NY ? [system description] find the number of rows in university table whose location equals " NY " . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the location like % NY % conditions in place of the location equals NY conditions . [question] How many universities have a location that contains NY ? [system description] find the number of rows in university table whose location equals " NY " . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
order the results by all home in place of team name . [question] What are the names of all the teams in the basketball competition , sorted by all home scores in descending order ? [system description] find the team name in basketball match table ordered descending by team name . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
order the results by all home in place of team name . [question] What are the names of all the teams in the basketball competition , sorted by all home scores in descending order ? [system description] find the team name in basketball match table ordered descending by team name . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , consider the founded greater than 1850 conditions in place of the founded less than 1850 conditions . in step 2 , find summation of enrollment in place of number of rows . [question] Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type . [system description] Step 1 : find rows in university table whose founded less than 1850 . Step 2 : find each value of affiliation the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , consider the founded greater than 1850 conditions in place of the founded less than 1850 conditions . in step 2 , find summation of enrollment in place of number of rows . [question] Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type . [system description] Step 1 : find rows in university table whose founded less than 1850 . Step 2 : find each value of affiliation the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the founded greater than 1850 or affiliation equals Public conditions in place of the founded greater than Public or founded less than 1850 conditions . [question] Find the schools that were either founded after 1850 or public . [system description] find the school in university table whose founded greater than " Public " or founded less than 1850 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
consider the founded greater than 1850 or affiliation equals Public conditions in place of the founded greater than Public or founded less than 1850 conditions . [question] Find the schools that were either founded after 1850 or public . [system description] find the school in university table whose founded greater than " Public " or founded less than 1850 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
in step 2 , find acc regular season in place of school . [question] Return the name of the team and the acc during the regular season for the school that was founded the earliest . [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the team name and school of the results of step 1 with smallest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , find acc regular season in place of school . [question] Return the name of the team and the acc during the regular season for the school that was founded the earliest . [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the team name and school of the results of step 1 with smallest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation not equals Public . [question] What is the founded year of the non public school that was founded most recently ? [system description] find the founded in university table with largest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation not equals Public . [question] What is the founded year of the non public school that was founded most recently ? [system description] find the founded in university table with largest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
find memory in g in place of name . [question] What are the memories and carriers of phones ? [system description] find the name and carrier in phone table . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
find memory in g in place of name . [question] What are the memories and carriers of phones ? [system description] find the name and carrier in phone table . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 2 , find all games in place of enrollment . [question] Find the location and all games score of the school that has Clemson as its team name . [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the location and enrollment of the results of step 1 whose team name equals " Clemson " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , find all games in place of enrollment . [question] Find the location and all games score of the school that has Clemson as its team name . [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the location and enrollment of the results of step 1 whose team name equals " Clemson " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , use faculty participates in table in place of faculty table . return the rows in both of the results of step 1 and the results of step 2 . [question] Show the ids of all the faculty members who participate in an activity and advise a student . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , use faculty participates in table in place of faculty table . return the rows in both of the results of step 1 and the results of step 2 . [question] Show the ids of all the faculty members who participate in an activity and advise a student . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use faculty participates in table in place of activity table . find number of different faculty id in place of number of rows . [question] How many faculty members participate in an activity ? [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use faculty participates in table in place of activity table . find number of different faculty id in place of number of rows . [question] How many faculty members participate in an activity ? [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , remove the sex equals M conditions . in step 2 , additionally find for each value of sex . additionally find sex . [question] Show all the ranks and the number of male and female faculty for each rank . [system description] Step 1 : find rows in faculty table whose sex equals " M " . Step 2 : find each value of rank the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , remove the sex equals M conditions . in step 2 , additionally find for each value of sex . additionally find sex . [question] Show all the ranks and the number of male and female faculty for each rank . [system description] Step 1 : find rows in faculty table whose sex equals " M " . Step 2 : find each value of rank the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally make sure that rank equals Professor . find last name in place of first name . in step 2 , additionally use the information from the faculty participates in table and activity table besides the faculty table . additionally make sure that activity name equals Kayaking or activity name equals Canoeing . find last name in place of first name . make sure no repetition in the results . [question] Find the first names of professors who are not playing Canoeing or Kayaking . [system description] Step 1 : find the first name in faculty table . Step 2 : find the first name in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , additionally make sure that rank equals Professor . find last name in place of first name . in step 2 , additionally use the information from the faculty participates in table and activity table besides the faculty table . additionally make sure that activity name equals Kayaking or activity name equals Canoeing . find last name in place of first name . make sure no repetition in the results . [question] Find the first names of professors who are not playing Canoeing or Kayaking . [system description] Step 1 : find the first name in faculty table . Step 2 : find the first name in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
additionally use the information from the faculty table besides the student table . consider the faculty 's first name equals Michael and faculty 's last name equals Goodrich conditions in place of the advisor equals Michael conditions . [question] Which students are advised by Michael Goodrich ? Give me their first and last names . [system description] find the first name and last name in student table whose advisor equals " Michael " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Michael ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Goodrich ) [C] first name ( Michael ) [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the faculty table besides the student table . consider the faculty 's first name equals Michael and faculty 's last name equals Goodrich conditions in place of the advisor equals Michael conditions . [question] Which students are advised by Michael Goodrich ? Give me their first and last names . [system description] find the first name and last name in student table whose advisor equals " Michael " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Michael ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Goodrich ) [C] first name ( Michael ) [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , consider the first name equals Mark conditions in place of the last name equals Mark conditions . [question] What are the names of the activities Mark Giuliano is involved in [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the activity name of the results of step 1 whose last name equals " Giuliano " and last name equals " Mark " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally use the information from the party services table besides the parties table . find for each value of party email in place of party phone . [question] Which is the email of the party that has used the services the most number of times ? [system description] Step 1 : find the number of rows of each value of party phone in parties table . Step 2 : find the party email in parties table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , additionally use the information from the party services table besides the parties table . find for each value of party email in place of party phone . [question] Which is the email of the party that has used the services the most number of times ? [system description] Step 1 : find the number of rows of each value of party phone in parties table . Step 2 : find the party email in parties table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the faculty participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] Show all the activity names and the number of faculty involved in each activity . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the faculty participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] Show all the activity names and the number of faculty involved in each activity . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the individuals table . in step 2 , consider the line 1 number building like % 6862 Kaitlyn Knolls % conditions in place of the individual first name equals 6862 Kaitlyn Knolls conditions . [question] Which state can address " 6862 Kaitlyn Knolls " possibly be in ? [system description] Step 1 : for each row in addresses table , find the corresponding rows in individuals table . Step 2 : find the state province county of the results of step 1 whose individual first name equals " 6862 Kaitlyn Knolls " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , do not use the individuals table . in step 2 , consider the line 1 number building like % 6862 Kaitlyn Knolls % conditions in place of the individual first name equals 6862 Kaitlyn Knolls conditions . [question] Which state can address " 6862 Kaitlyn Knolls " possibly be in ? [system description] Step 1 : for each row in addresses table , find the corresponding rows in individuals table . Step 2 : find the state province county of the results of step 1 whose individual first name equals " 6862 Kaitlyn Knolls " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
consider the rank equals Professor conditions in place of the sex equals Professor conditions . [question] How many female Professors do we have ? [system description] find the number of rows in faculty table whose sex equals " Professor " and sex equals " F " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
consider the rank equals Professor conditions in place of the sex equals Professor conditions . [question] How many female Professors do we have ? [system description] find the number of rows in faculty table whose sex equals " Professor " and sex equals " F " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
use the largest in place of smallest . [question] Find the name of the youngest organization . [system description] find the organization name in organizations table with smallest value of date formed . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
use the largest in place of smallest . [question] Find the name of the youngest organization . [system description] find the organization name in organizations table with smallest value of date formed . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
use activity table in place of faculty table . find activity name in place of room . [question] List all the activities we have . [system description] find the room in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use activity table in place of faculty table . find activity name in place of room . [question] List all the activities we have . [system description] find the room in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally use the information from the organizations table . in step 2 , additionally make sure that organization name equals Labour Party . [question] What is the last name of the contact individual from the Labour party organization who was contacted most recently ? [system description] Step 1 : for each row in individuals table , find the corresponding rows in organization contact individuals table . Step 2 : find the individual last name of the results of step 1 with largest value of date contact to . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name ( Labour Party ) [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , additionally use the information from the organizations table . in step 2 , additionally make sure that organization name equals Labour Party . [question] What is the last name of the contact individual from the Labour party organization who was contacted most recently ? [system description] Step 1 : for each row in individuals table , find the corresponding rows in organization contact individuals table . Step 2 : find the individual last name of the results of step 1 with largest value of date contact to . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name ( Labour Party ) [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
remove the room equals 224 conditions . [question] Show all the distinct buildings that have faculty rooms . [system description] find without repetition building in faculty table whose room equals 224 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
remove the room equals 224 conditions . [question] Show all the distinct buildings that have faculty rooms . [system description] find without repetition building in faculty table whose room equals 224 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . [question] How many students are advised by each rank of faculty ? List the rank and the number of students . [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . [question] How many students are advised by each rank of faculty ? List the rank and the number of students . [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , additionally use the information from the party services table besides the services table . [question] Find name of the services that has never been used . [system description] Step 1 : find the service name in services table . Step 2 : find the service name in services table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , additionally use the information from the party services table besides the services table . [question] Find name of the services that has never been used . [system description] Step 1 : find the service name in services table . Step 2 : find the service name in services table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
use faculty table and faculty participates in table in place of student table . consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's first name equals Mark and student 's last name equals Giuliano conditions . [question] How many activities does Mark Giuliano participate in ? [system description] find the number of rows in student table whose first name equals " Mark " and last name equals " Giuliano " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
use faculty table and faculty participates in table in place of student table . consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's first name equals Mark and student 's last name equals Giuliano conditions . [question] How many activities does Mark Giuliano participate in ? [system description] find the number of rows in student table whose first name equals " Mark " and last name equals " Giuliano " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
additionally make sure that rank equals Instructor . [question] Show the first name and last name for all the instructors . [system description] find the first name and last name in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
additionally make sure that rank equals Instructor . [question] Show the first name and last name for all the instructors . [system description] find the first name and last name in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
in step 2 , find for each value of party email in place of customer id . [question] Return the party email that has used party services the greatest number of times . [system description] Step 1 : for each row in parties table , find the corresponding rows in party services table . Step 2 : find the number of rows of each value of customer id of the results of step 1 . Step 3 : find the party email of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , find for each value of party email in place of customer id . [question] Return the party email that has used party services the greatest number of times . [system description] Step 1 : for each row in parties table , find the corresponding rows in party services table . Step 2 : find the number of rows of each value of customer id of the results of step 1 . Step 3 : find the party email of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
remove the building equals NEB conditions . make sure no repetition in the results . [question] What buildings have faculty offices ? [system description] find the building in faculty table whose building equals " NEB " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
remove the building equals NEB conditions . make sure no repetition in the results . [question] What buildings have faculty offices ? [system description] find the building in faculty table whose building equals " NEB " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
consider the rank equals AsstProf conditions in place of the rank equals Instructor and sex equals AsstProf conditions . find for each value of sex . additionally find sex . [question] How many male and female assistant professors do we have ? [system description] find the number of rows in faculty table whose sex equals " AsstProf " and rank equals " Instructor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
consider the rank equals AsstProf conditions in place of the rank equals Instructor and sex equals AsstProf conditions . find for each value of sex . additionally find sex . [question] How many male and female assistant professors do we have ? [system description] find the number of rows in faculty table whose sex equals " AsstProf " and rank equals " Instructor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
consider the rank equals Professor and building equals NEB conditions in place of the building equals Professor conditions . [question] Count the number of Professors who have office in building NEB . [system description] find the number of rows in faculty table whose building equals " Professor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building ( NEB )
consider the rank equals Professor and building equals NEB conditions in place of the building equals Professor conditions . [question] Count the number of Professors who have office in building NEB . [system description] find the number of rows in faculty table whose building equals " Professor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building ( NEB )
additionally use the information from the faculty table besides the student table . consider the rank equals Professor conditions in place of the advisor equals Professor conditions . [question] Which students have professors as their advisors ? Find their student ids . [system description] find the student id in student table whose advisor equals " Professor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
additionally use the information from the faculty table besides the student table . consider the rank equals Professor conditions in place of the advisor equals Professor conditions . [question] Which students have professors as their advisors ? Find their student ids . [system description] find the student id in student table whose advisor equals " Professor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , additionally use the information from the student table besides the faculty table . [question] What are the first and last name of the faculty who has the most students ? [system description] Step 1 : find the number of rows of each value of faculty id in faculty table . Step 2 : find the first name and last name in faculty table with largest value in the results of step 1 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally use the information from the student table besides the faculty table . [question] What are the first and last name of the faculty who has the most students ? [system description] Step 1 : find the number of rows of each value of faculty id in faculty table . Step 2 : find the first name and last name in faculty table with largest value in the results of step 1 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally use the information from the activity table . in step 2 , do not find for each value of faculty participates in 's faculty id . in step 3 , additionally make sure that activity name equals Kayaking or activity name equals Canoeing . find last name in place of first name . make sure no repetition in the results . [question] Which faculty members are playing either Canoeing or Kayaking ? Tell me their first names . [system description] Step 1 : for each row in faculty participates in table , find the corresponding rows in faculty table . Step 2 : find the number of rows of each value of faculty participates in 's faculty id of the results of step 1 . Step 3 : find the first name of the results of step 1 whose corresponding value in step 2 is greater than or equals " Canoeing " . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally use the information from the activity table . in step 2 , do not find for each value of faculty participates in 's faculty id . in step 3 , additionally make sure that activity name equals Kayaking or activity name equals Canoeing . find last name in place of first name . make sure no repetition in the results . [question] Which faculty members are playing either Canoeing or Kayaking ? Tell me their first names . [system description] Step 1 : for each row in faculty participates in table , find the corresponding rows in faculty table . Step 2 : find the number of rows of each value of faculty participates in 's faculty id of the results of step 1 . Step 3 : find the first name of the results of step 1 whose corresponding value in step 2 is greater than or equals " Canoeing " . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , use faculty participates in table in place of faculty table . return the rows in both of the results of step 1 and the results of step 2 . [question] What are ids of the faculty members who not only participate in an activity but also advise a student . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , use faculty participates in table in place of faculty table . return the rows in both of the results of step 1 and the results of step 2 . [question] What are ids of the faculty members who not only participate in an activity but also advise a student . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use faculty participates in table in place of activity table . find number of different faculty id in place of number of rows . [question] Give me the number of faculty members who participate in an activity [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use faculty participates in table in place of activity table . find number of different faculty id in place of number of rows . [question] Give me the number of faculty members who participate in an activity [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the organization contact individuals table besides the individuals table . make sure no repetition in the results . [question] What are the last names of individuals who have been contact individuals for an organization ? [system description] find the individual last name in individuals table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the organization contact individuals table besides the individuals table . make sure no repetition in the results . [question] What are the last names of individuals who have been contact individuals for an organization ? [system description] find the individual last name in individuals table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
use faculty table in place of activity table . [question] What is the total number of faculty members ? [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use faculty table in place of activity table . [question] What is the total number of faculty members ? [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally make sure that rank equals Professor . find last name in place of first name . in step 2 , additionally use the information from the faculty participates in table and activity table besides the faculty table . additionally make sure that activity name equals Kayaking or activity name equals Canoeing . find last name in place of first name . make sure no repetition in the results . [question] What are the first names of the professors who do not play Canoeing or Kayaking as activities ? [system description] Step 1 : find the first name in faculty table . Step 2 : find the first name in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , additionally make sure that rank equals Professor . find last name in place of first name . in step 2 , additionally use the information from the faculty participates in table and activity table besides the faculty table . additionally make sure that activity name equals Kayaking or activity name equals Canoeing . find last name in place of first name . make sure no repetition in the results . [question] What are the first names of the professors who do not play Canoeing or Kayaking as activities ? [system description] Step 1 : find the first name in faculty table . Step 2 : find the first name in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
additionally make sure that rank equals Instructor . [question] What are the first name and last name of all the instructors ? [system description] find the first name and last name in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
additionally make sure that rank equals Instructor . [question] What are the first name and last name of all the instructors ? [system description] find the first name and last name in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
use services table in place of addresses table . [question] Count the number of services . [system description] find the number of rows in addresses table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
use services table in place of addresses table . [question] Count the number of services . [system description] find the number of rows in addresses table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , consider the first name equals Mark and last name equals Giuliano conditions in place of the last name equals Mark conditions . [question] Show the names of all the activities Mark Giuliano participates in . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the activity name of the results of step 1 whose last name equals " Mark " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , consider the first name equals Mark and last name equals Giuliano conditions in place of the last name equals Mark conditions . [question] Show the names of all the activities Mark Giuliano participates in . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the activity name of the results of step 1 whose last name equals " Mark " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . [question] Show all the faculty ranks and the number of students advised by each rank . [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . [question] Show all the faculty ranks and the number of students advised by each rank . [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the organization contact individuals table . in step 2 , do not find for each value of organization contact individuals 's organization id . in step 3 , order the results by date formed in place of number of rows . [question] What is the name of the organization that was formed most recently ? [system description] Step 1 : for each row in organizations table , find the corresponding rows in organization contact individuals table . Step 2 : find the number of rows of each value of organization contact individuals 's organization id of the results of step 1 . Step 3 : find the organization name of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , do not use the organization contact individuals table . in step 2 , do not find for each value of organization contact individuals 's organization id . in step 3 , order the results by date formed in place of number of rows . [question] What is the name of the organization that was formed most recently ? [system description] Step 1 : for each row in organizations table , find the corresponding rows in organization contact individuals table . Step 2 : find the number of rows of each value of organization contact individuals 's organization id of the results of step 1 . Step 3 : find the organization name of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , use forms table in place of parties table in step 2 , find for each value of party forms 's form id in place of party forms 's party id . in step 3 , find form name in place of party email . [question] What is the name of the party form that is most common ? [system description] Step 1 : for each row in parties table , find the corresponding rows in party forms table . Step 2 : find the number of rows of each value of party forms 's party id of the results of step 1 . Step 3 : find the party email of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , use forms table in place of parties table in step 2 , find for each value of party forms 's form id in place of party forms 's party id . in step 3 , find form name in place of party email . [question] What is the name of the party form that is most common ? [system description] Step 1 : for each row in parties table , find the corresponding rows in party forms table . Step 2 : find the number of rows of each value of party forms 's party id of the results of step 1 . Step 3 : find the party email of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the faculty table besides the student table . consider the faculty 's first name equals Michael and faculty 's last name equals Goodrich conditions in place of the advisor equals Michael conditions . [question] Show first name and last name for all the students advised by Michael Goodrich . [system description] find the first name and last name in student table whose advisor equals " Michael " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Michael ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Goodrich ) [C] first name ( Michael ) [C] rank [C] sex [C] phone [C] room [C] building
use faculty table and faculty participates in table in place of student table . consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's first name equals Mark and student 's last name equals Giuliano conditions . [question] Find the number of activities Mark Giuliano is involved in . [system description] find the number of rows in student table whose first name equals " Mark " and last name equals " Giuliano " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
use faculty table and faculty participates in table in place of student table . consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's first name equals Mark and student 's last name equals Giuliano conditions . [question] Find the number of activities Mark Giuliano is involved in . [system description] find the number of rows in student table whose first name equals " Mark " and last name equals " Giuliano " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , use forms table and party forms table in place of parties table . find for each value of party forms 's form id in place of party phone . in step 2 , find form name in place of party phone . [question] Find the name of the most popular party form . [system description] Step 1 : find the number of rows of each value of party phone in parties table . Step 2 : find the party phone in parties table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , use forms table and party forms table in place of parties table . find for each value of party forms 's form id in place of party phone . in step 2 , find form name in place of party phone . [question] Find the name of the most popular party form . [system description] Step 1 : find the number of rows of each value of party phone in parties table . Step 2 : find the party phone in parties table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the student table besides the faculty table . find faculty id in place of rank . [question] What are the faculty id and the number of students each faculty has ? [system description] find each value of faculty id in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . find faculty id in place of rank . [question] What are the faculty id and the number of students each faculty has ? [system description] find each value of faculty id in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally make sure that rank equals Professor . [question] Count the number of female Professors we have . [system description] find the number of rows in faculty table whose sex equals " F " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
additionally make sure that rank equals Professor . [question] Count the number of female Professors we have . [system description] find the number of rows in faculty table whose sex equals " F " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
use faculty table in place of activity table . [question] How many faculty do we have ? [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use faculty table in place of activity table . [question] How many faculty do we have ? [system description] find the number of rows in activity table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
consider the rank equals AsstProf conditions in place of the rank equals Instructor and sex equals AsstProf conditions . find for each value of sex . additionally find sex . [question] Show the number of male and female assistant professors . [system description] find the number of rows in faculty table whose sex equals " AsstProf " and rank equals " Instructor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
consider the rank equals AsstProf conditions in place of the rank equals Instructor and sex equals AsstProf conditions . find for each value of sex . additionally find sex . [question] Show the number of male and female assistant professors . [system description] find the number of rows in faculty table whose sex equals " AsstProf " and rank equals " Instructor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 2 , additionally make sure that uk vat number is equals maximum uk vat number organizations . order the results ascending by date contact to in place of ordering descending by uk vat number . [question] Find the last name of the first ever contact person of the organization with the highest UK Vat number . [system description] Step 1 : for each row in individuals table , find the corresponding rows in organizations table and in organization contact individuals table . Step 2 : find the individual last name of the results of step 1 with largest value of uk vat number . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , additionally make sure that uk vat number is equals maximum uk vat number organizations . order the results ascending by date contact to in place of ordering descending by uk vat number . [question] Find the last name of the first ever contact person of the organization with the highest UK Vat number . [system description] Step 1 : for each row in individuals table , find the corresponding rows in organizations table and in organization contact individuals table . Step 2 : find the individual last name of the results of step 1 with largest value of uk vat number . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the faculty participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] How many faculty members participate in each activity ? Return the activity names and the number of faculty members . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the faculty participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] How many faculty members participate in each activity ? Return the activity names and the number of faculty members . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the organization contact individuals table besides the individuals table . [question] Find the last name of the individuals that have been contact individuals of an organization . [system description] find without repetition individual last name in individuals table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the organization contact individuals table besides the individuals table . [question] Find the last name of the individuals that have been contact individuals of an organization . [system description] find without repetition individual last name in individuals table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
consider the rank equals Professor and building equals NEB conditions in place of the building equals Professor conditions . [question] How many Professors are in building NEB ? [system description] find the number of rows in faculty table whose building equals " Professor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building ( NEB )
additionally find for each value of sex . additionally find rank . [question] How many faculty members do we have for each rank and gender ? [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally find for each value of sex . additionally find rank . [question] How many faculty members do we have for each rank and gender ? [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , additionally use the information from the party services table besides the services table . [question] What are the names of the services that have never been used ? [system description] Step 1 : find the service name in services table . Step 2 : find the service name in services table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , additionally use the information from the party services table besides the services table . [question] What are the names of the services that have never been used ? [system description] Step 1 : find the service name in services table . Step 2 : find the service name in services table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
use services table in place of addresses table . [question] How many services are there ? [system description] find the number of rows in addresses table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
use services table in place of addresses table . [question] How many services are there ? [system description] find the number of rows in addresses table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , additionally use the information from the activity table besides the participates in table . consider the activity name equals Canoeing conditions in place of the participates in 's activity id equals Canoeing conditions . in step 2 , additionally use the information from the activity table besides the participates in table . consider the activity name equals Kayaking conditions in place of the participates in 's activity id equals Kayaking conditions . [question] Which students participate in both Canoeing and Kayaking as their activities ? Tell me their student ids . [system description] Step 1 : find the student id in participates in table whose activity id equals " Canoeing " . Step 2 : find the student id in participates in table whose activity id equals " Kayaking " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , additionally use the information from the activity table besides the participates in table . consider the activity name equals Canoeing conditions in place of the participates in 's activity id equals Canoeing conditions . in step 2 , additionally use the information from the activity table besides the participates in table . consider the activity name equals Kayaking conditions in place of the participates in 's activity id equals Kayaking conditions . [question] Which students participate in both Canoeing and Kayaking as their activities ? Tell me their student ids . [system description] Step 1 : find the student id in participates in table whose activity id equals " Canoeing " . Step 2 : find the student id in participates in table whose activity id equals " Kayaking " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , use student table in place of faculty participates in table . find advisor in place of faculty participates in 's faculty id . [question] What are the ids of the faculty members who do not advise any student . [system description] Step 1 : find the faculty 's faculty id in faculty table . Step 2 : find the faculty participates in 's faculty id in faculty participates in table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , use student table in place of faculty participates in table . find advisor in place of faculty participates in 's faculty id . [question] What are the ids of the faculty members who do not advise any student . [system description] Step 1 : find the faculty 's faculty id in faculty table . Step 2 : find the faculty participates in 's faculty id in faculty participates in table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , additionally find faculty 's faculty id . [question] Show the first and last name of all the faculty members who participated in some activity , together with the number of activities they participated in . [system description] Step 1 : for each row in faculty participates in table , find the corresponding rows in faculty table . Step 2 : find each value of faculty participates in 's faculty id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , find the result with the largest date contact to . [question] Find the last name of the latest contact individual of the organization " Labour Party " . [system description] Step 1 : for each row in individuals table , find the corresponding rows in organizations table and in organization contact individuals table . Step 2 : find the individual last name of the results of step 1 whose organization name equals " Labour Party " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name ( Labour Party ) [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , find the result with the largest date contact to . [question] Find the last name of the latest contact individual of the organization " Labour Party " . [system description] Step 1 : for each row in individuals table , find the corresponding rows in organizations table and in organization contact individuals table . Step 2 : find the individual last name of the results of step 1 whose organization name equals " Labour Party " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name ( Labour Party ) [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
consider the rank equals Professor conditions in place of the rank greater than or equals Professor conditions . find for each value of building whose number of rows greater than or equals 10 . [question] Show all the buildings that have at least 10 professors . [system description] find the building in faculty table whose rank greater than or equals " Professor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
consider the rank equals Professor conditions in place of the rank greater than or equals Professor conditions . find for each value of building whose number of rows greater than or equals 10 . [question] Show all the buildings that have at least 10 professors . [system description] find the building in faculty table whose rank greater than or equals " Professor " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 2 , consider the friend equals Dan or friend equals Alice conditions in place of the friend not equals Dan conditions . [question] What are the different names and ages of every friend of either Dan or alice ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find without repetition person 's name and age of the results of step 1 whose friend not equals " Dan " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 2 , consider the friend equals Dan or friend equals Alice conditions in place of the friend not equals Dan conditions . [question] What are the different names and ages of every friend of either Dan or alice ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find without repetition person 's name and age of the results of step 1 whose friend not equals " Dan " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 2 , consider the friend equals Dan or friend equals Alice conditions in place of the friend not equals Dan conditions . [question] What are the different names and ages of every friend of either Dan or alice ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find without repetition person 's name and age of the results of step 1 whose friend not equals " Dan " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
additionally use the information from the student table besides the faculty table . find for each value of faculty id in place of rank . find faculty id in place of rank . [question] Show the faculty id of each faculty member , along with the number of students he or she advises . [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . find for each value of faculty id in place of rank . find faculty id in place of rank . [question] Show the faculty id of each faculty member , along with the number of students he or she advises . [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . find for each value of faculty id in place of rank . find faculty id in place of rank . [question] Show the faculty id of each faculty member , along with the number of students he or she advises . [system description] find each value of rank in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , find delegate in place of committee . [question] Which delegates are from counties with population smaller than 100000 ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the committee of the results of step 1 whose population less than 100000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find delegate in place of committee . [question] Which delegates are from counties with population smaller than 100000 ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the committee of the results of step 1 whose population less than 100000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , find delegate in place of committee . [question] Which delegates are from counties with population smaller than 100000 ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table . Step 2 : find the committee of the results of step 1 whose population less than 100000 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person friend 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person friend 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , consider the founded less than 1890 conditions in place of the founded greater than 1890 conditions . find denomination in place of boys or girls . in step 2 , consider the founded greater than 1900 conditions in place of the founded less than 1900 conditions . [question] Show the denomination shared by schools founded before 1890 and schools founded after 1900 [system description] Step 1 : find the boys or girls in school table whose founded greater than 1890 . Step 2 : find the denomination in school table whose founded less than 1900 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , consider the founded less than 1890 conditions in place of the founded greater than 1890 conditions . find denomination in place of boys or girls . in step 2 , consider the founded greater than 1900 conditions in place of the founded less than 1900 conditions . [question] Show the denomination shared by schools founded before 1890 and schools founded after 1900 [system description] Step 1 : find the boys or girls in school table whose founded greater than 1890 . Step 2 : find the denomination in school table whose founded less than 1900 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person friend 's name of the results of step 1 whose corresponding value in step 2 is greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person friend 's name of the results of step 1 whose corresponding value in step 2 is greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
consider the max occupancy greater than 2 conditions in place of the base price greater than 2 conditions . find room id in place of decor . [question] Find all the rooms that have a price higher than 160 and can accommodate more than 2 people . Report room names and ids . [system description] find the room name and decor in rooms table whose base price greater than 2 and base price greater than 160 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
consider the max occupancy greater than 2 conditions in place of the base price greater than 2 conditions . find room id in place of decor . [question] Find all the rooms that have a price higher than 160 and can accommodate more than 2 people . Report room names and ids . [system description] find the room name and decor in rooms table whose base price greater than 2 and base price greater than 160 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the election table besides the party table . find delegate in place of governor . [question] For each delegate , find the names of the party they are part of . [system description] find the governor and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find delegate in place of governor . [question] For each delegate , find the names of the party they are part of . [system description] find the governor and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally make sure that affiliation not equals Public . [question] Find the founded year of the newest non public school . [system description] find the founded in university table with largest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation not equals Public . [question] Find the founded year of the newest non public school . [system description] find the founded in university table with largest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
in step 1 , additionally use the information from the person friend table besides the person table . consider the friend equals Dan conditions in place of the job equals Dan conditions . [question] Find the name and age of the person who is a friend of both Dan and Alice . [system description] Step 1 : find the person 's name and age in person table whose job equals " Dan " . Step 2 : for each row in person table , find the corresponding rows in person friend table . Step 3 : find the person 's name and age of the results of step 2 whose friend equals " Alice " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 1 , additionally use the information from the person friend table besides the person table . consider the friend equals Dan conditions in place of the job equals Dan conditions . [question] Find the name and age of the person who is a friend of both Dan and Alice . [system description] Step 1 : find the person 's name and age in person table whose job equals " Dan " . Step 2 : for each row in person table , find the corresponding rows in person friend table . Step 3 : find the person 's name and age of the results of step 2 whose friend equals " Alice " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
additionally use the information from the student table besides the faculty table . consider the student 's last name equals Smith and student 's first name equals Linda conditions in place of the faculty 's first name equals Linda conditions . [question] Who is the advisor of Linda Smith ? Give me the first name and last name . [system description] find the first name and last name in faculty table whose first name equals " Linda " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . consider the student 's last name equals Smith and student 's first name equals Linda conditions in place of the faculty 's first name equals Linda conditions . [question] Who is the advisor of Linda Smith ? Give me the first name and last name . [system description] find the first name and last name in faculty table whose first name equals " Linda " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , find for each value of governor in place of comptroller . in step 2 , find governor in place of lieutenant governor . [question] Which people severed as governor most frequently ? [system description] Step 1 : find the number of rows of each value of comptroller in party table . Step 2 : find the lieutenant governor in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , find for each value of governor in place of comptroller . in step 2 , find governor in place of lieutenant governor . [question] Which people severed as governor most frequently ? [system description] Step 1 : find the number of rows of each value of comptroller in party table . Step 2 : find the lieutenant governor in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
order the results by all home in place of all games percent . [question] What are the names of all the teams in the basketball competition , sorted by all home scores in descending order ? [system description] find the team name in basketball match table ordered descending by all games percent . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
order the results by all home in place of all games percent . [question] What are the names of all the teams in the basketball competition , sorted by all home scores in descending order ? [system description] find the team name in basketball match table ordered descending by all games percent . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
order the results by all home in place of all games percent . [question] What are the names of all the teams in the basketball competition , sorted by all home scores in descending order ? [system description] find the team name in basketball match table ordered descending by all games percent . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , find for value of denomination in place of school id . in step 2 , find denomination in place of boys or girls . [question] Show the denomination shared by more than one school . [system description] Step 1 : find the number of rows of each value of school id in school table . Step 2 : find the boys or girls in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , find for value of denomination in place of school id . in step 2 , find denomination in place of boys or girls . [question] Show the denomination shared by more than one school . [system description] Step 1 : find the number of rows of each value of school id in school table . Step 2 : find the boys or girls in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , additionally make sure that friend equals Alice . in step 2 , additionally make sure that friend equals Alice . [question] What are the names of all people who are friends with Alice for the shortest amount of time ? [system description] Step 1 : find the minimum year in person friend table . Step 2 : find the name in person friend table whose year equals the results of step 1 . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , additionally make sure that friend equals Alice . in step 2 , additionally make sure that friend equals Alice . [question] What are the names of all people who are friends with Alice for the shortest amount of time ? [system description] Step 1 : find the minimum year in person friend table . Step 2 : find the name in person friend table whose year equals the results of step 1 . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the election table besides the party table . find delegate in place of attorney general . [question] For each delegate , find the names of the party they are part of . [system description] find the attorney general and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally use the information from the election table besides the party table . find delegate in place of attorney general . [question] For each delegate , find the names of the party they are part of . [system description] find the attorney general and party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the player table besides the school table . find for each value of player 's school id in place of denomination . [question] Show the denomination of the school that has the most players . [system description] Step 1 : find the number of rows of each value of denomination in school table . Step 2 : find the denomination in school table with largest value in the results of step 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , additionally use the information from the player table besides the school table . find for each value of player 's school id in place of denomination . [question] Show the denomination of the school that has the most players . [system description] Step 1 : find the number of rows of each value of denomination in school table . Step 2 : find the denomination in school table with largest value in the results of step 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice conditions in place of the job equals Alice conditions . [question] What are all the friends of Alice who are female ? [system description] find the name in person table whose job equals " Alice " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice conditions in place of the job equals Alice conditions . [question] What are all the friends of Alice who are female ? [system description] find the name in person table whose job equals " Alice " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the person friend table besides the person table . consider the person friend 's name equals Alice conditions in place of the job equals Alice conditions . [question] What are all the friends of Alice who are female ? [system description] find the name in person table whose job equals " Alice " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the student table besides the faculty table . consider the student 's last name equals Smith and student 's first name equals Linda conditions in place of the faculty 's last name equals Smith and faculty 's first name equals Linda conditions . [question] Who is the advisor of Linda Smith ? Give me the first name and last name . [system description] find the first name and last name in faculty table whose first name equals " Linda " and last name equals " Smith " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . consider the student 's last name equals Smith and student 's first name equals Linda conditions in place of the faculty 's last name equals Smith and faculty 's first name equals Linda conditions . [question] Who is the advisor of Linda Smith ? Give me the first name and last name . [system description] find the first name and last name in faculty table whose first name equals " Linda " and last name equals " Smith " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . consider the student 's last name equals Smith and student 's first name equals Linda conditions in place of the faculty 's last name equals Smith and faculty 's first name equals Linda conditions . [question] Who is the advisor of Linda Smith ? Give me the first name and last name . [system description] find the first name and last name in faculty table whose first name equals " Linda " and last name equals " Smith " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , consider the friend equals Dan conditions in place of the job equals Dan conditions . [question] What are the different names and ages of every friend of either Dan or alice ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find without repetition person 's name and age of the results of step 1 whose job equals " Dan " or friend equals " Alice " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 2 , consider the friend equals Dan conditions in place of the job equals Dan conditions . [question] What are the different names and ages of every friend of either Dan or alice ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find without repetition person 's name and age of the results of step 1 whose job equals " Dan " or friend equals " Alice " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 2 , consider the friend equals Dan conditions in place of the job equals Dan conditions . [question] What are the different names and ages of every friend of either Dan or alice ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find without repetition person 's name and age of the results of step 1 whose job equals " Dan " or friend equals " Alice " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 1 , additionally use the information from the election table besides the county table . [question] Which counties have two or more delegates ? Give me the county names . [system description] Step 1 : find the number of rows of each value of county id in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the county table . [question] Which counties have two or more delegates ? Give me the county names . [system description] Step 1 : find the number of rows of each value of county id in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the election table besides the county table . [question] Which counties have two or more delegates ? Give me the county names . [system description] Step 1 : find the number of rows of each value of county id in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 2 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the school table . in step 2 , find nickname in place of school . [question] Show the nicknames of schools that are not in division 1 . [system description] Step 1 : for each row in school table , find the corresponding rows in school details table . Step 2 : find the school of the results of step 1 whose division not equals " Division 1 " . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division ( Division 1 , Division 3 ) [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , do not use the school table . in step 2 , find nickname in place of school . [question] Show the nicknames of schools that are not in division 1 . [system description] Step 1 : for each row in school table , find the corresponding rows in school details table . Step 2 : find the school of the results of step 1 whose division not equals " Division 1 " . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division ( Division 1 , Division 3 ) [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , do not use the school table . in step 2 , find nickname in place of school . [question] Show the nicknames of schools that are not in division 1 . [system description] Step 1 : for each row in school table , find the corresponding rows in school details table . Step 2 : find the school of the results of step 1 whose division not equals " Division 1 " . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division ( Division 1 , Division 3 ) [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 2 , consider the person friend 's name equals Alice conditions in place of the job equals Alice conditions . [question] What are all the friends of Alice who are female ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose job equals " Alice " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , consider the person friend 's name equals Alice conditions in place of the job equals Alice conditions . [question] What are all the friends of Alice who are female ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose job equals " Alice " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
consider the line 1 number building like % 6862 Kaitlyn Knolls % conditions in place of the town city equals 6862 Kaitlyn Knolls conditions . [question] Which state can address " 6862 Kaitlyn Knolls " possibly be in ? [system description] find the state province county in addresses table whose town city equals " 6862 Kaitlyn Knolls " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
consider the line 1 number building like % 6862 Kaitlyn Knolls % conditions in place of the town city equals 6862 Kaitlyn Knolls conditions . [question] Which state can address " 6862 Kaitlyn Knolls " possibly be in ? [system description] find the state province county in addresses table whose town city equals " 6862 Kaitlyn Knolls " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
consider the line 1 number building like % 6862 Kaitlyn Knolls % conditions in place of the town city equals 6862 Kaitlyn Knolls conditions . [question] Which state can address " 6862 Kaitlyn Knolls " possibly be in ? [system description] find the state province county in addresses table whose town city equals " 6862 Kaitlyn Knolls " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the film market estimation table besides the market table . find year in place of number cities . [question] What are the countries of markets and their corresponding years of market estimation ? [system description] find the country and number cities in market table . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
additionally use the information from the film market estimation table besides the market table . find year in place of number cities . [question] What are the countries of markets and their corresponding years of market estimation ? [system description] find the country and number cities in market table . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
find average base price in place of average max occupancy . [question] For each bed type , find the average room price . [system description] find each value of bed type in rooms table along with the average max occupancy of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
find average base price in place of average max occupancy . [question] For each bed type , find the average room price . [system description] find each value of bed type in rooms table along with the average max occupancy of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , remove the acc road equals 8-0 conditions . [question] Count the number of universities that do not participate in the baketball match . [system description] Step 1 : find the basketball match 's school id in basketball match table whose acc road equals " 8–0 " . Step 2 : find the number of rows in university table whose university 's school id not one of the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , remove the acc road equals 8-0 conditions . [question] Count the number of universities that do not participate in the baketball match . [system description] Step 1 : find the basketball match 's school id in basketball match table whose acc road equals " 8–0 " . Step 2 : find the number of rows in university table whose university 's school id not one of the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , order the results descending . [question] What are the teams that have the 5 oldest players ? [system description] Step 1 : find the team in player table ordered ascending by age . Step 2 : only show the first 5 rows of the results . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , order the results descending . [question] What are the teams that have the 5 oldest players ? [system description] Step 1 : find the team in player table ordered ascending by age . Step 2 : only show the first 5 rows of the results . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , order the results descending . [question] What are the teams that have the 5 oldest players ? [system description] Step 1 : find the team in player table ordered ascending by age . Step 2 : only show the first 5 rows of the results . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 2 , additionally find all games . [question] Find the location and all games score of the school that has Clemson as its team name . [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the location and location of the results of step 1 whose team name equals " Clemson " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , additionally find all games . [question] Find the location and all games score of the school that has Clemson as its team name . [system description] Step 1 : for each row in basketball match table , find the corresponding rows in university table . Step 2 : find the location and location of the results of step 1 whose team name equals " Clemson " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally use the information from the student table besides the faculty table . find faculty id in place of rank . [question] Show the faculty id of each faculty member , along with the number of students he or she advises . [system description] find each value of faculty id in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . find faculty id in place of rank . [question] Show the faculty id of each faculty member , along with the number of students he or she advises . [system description] find each value of faculty id in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the student table besides the faculty table . find faculty id in place of rank . [question] Show the faculty id of each faculty member , along with the number of students he or she advises . [system description] find each value of faculty id in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
consider the party equals Democratic conditions in place of the comptroller equals Democratic and comptroller equals Carl McCall conditions . additionally find comptroller . [question] Who are the lieutenant governor and comptroller from the democratic party ? [system description] find the lieutenant governor in party table whose comptroller equals " Carl McCall " and comptroller equals " Democratic " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the party equals Democratic conditions in place of the comptroller equals Democratic and comptroller equals Carl McCall conditions . additionally find comptroller . [question] Who are the lieutenant governor and comptroller from the democratic party ? [system description] find the lieutenant governor in party table whose comptroller equals " Carl McCall " and comptroller equals " Democratic " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , use faculty participates in table in place of activity table . find faculty id in place of rows . return the rows in both of the results of step 1 and the results of step 2 . [question] Show the ids of all the faculty members who participate in an activity and advise a student . [system description] Step 1 : find the rows in activity table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , use faculty participates in table in place of activity table . find faculty id in place of rows . return the rows in both of the results of step 1 and the results of step 2 . [question] Show the ids of all the faculty members who participate in an activity and advise a student . [system description] Step 1 : find the rows in activity table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , use faculty participates in table in place of activity table . find faculty id in place of rows . return the rows in both of the results of step 1 and the results of step 2 . [question] Show the ids of all the faculty members who participate in an activity and advise a student . [system description] Step 1 : find the rows in activity table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , find for each value of denomination in place of school id . in step 2 , find denomination in place of boys or girls . [question] Please show different denominations and the corresponding number of schools in descending order . [system description] Step 1 : find the number of rows of each value of school id in school table . Step 2 : find the boys or girls and number of rows in school table ordered descending by the results of step 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , find for each value of denomination in place of school id . in step 2 , find denomination in place of boys or girls . [question] Please show different denominations and the corresponding number of schools in descending order . [system description] Step 1 : find the number of rows of each value of school id in school table . Step 2 : find the boys or girls and number of rows in school table ordered descending by the results of step 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , do not use the party table . in step 2 , find delegate in place of governor . [question] What are the delegate and name of the county they belong to , for each county ? [system description] Step 1 : for each row in county table , find the corresponding rows in party table and in election table . Step 2 : find the governor and county name of the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the party table . in step 2 , find delegate in place of governor . [question] What are the delegate and name of the county they belong to , for each county ? [system description] Step 1 : for each row in county table , find the corresponding rows in party table and in election table . Step 2 : find the governor and county name of the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person 's name of the results of step 1 whose corresponding value in step 2 is greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the person friend table . in step 2 , do not find for each value of friend . in step 3 , additionally make sure that age is greater than minimum age person whose job equals engineer . order the results ascending by age . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the summation of age of each value of friend of the results of step 1 . Step 3 : find the person 's name of the results of step 1 whose corresponding value in step 2 is greater than " engineer " . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
find for each value of job in place of city . [question] How old is the average person for each job ? [system description] find each value of city in person table along with the average age and job of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
find for each value of job in place of city . [question] How old is the average person for each job ? [system description] find each value of city in person table along with the average age and job of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
find district in place of committee . [question] What are the distinct districts for elections ? [system description] find without repetition committee in election table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find district in place of committee . [question] What are the distinct districts for elections ? [system description] find without repetition committee in election table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
find district in place of committee . [question] What are the distinct districts for elections ? [system description] find without repetition committee in election table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the governor equals Eliot Spitzer conditions in place of the comptroller equals Eliot Spitzer conditions . [question] Find the distinct years when the governor was named " Eliot Spitzer " . [system description] find without repetition year in party table whose comptroller equals " Eliot Spitzer " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor ( Eliot Spitzer ) [C] lieutenant governor [C] comptroller [C] attorney general ( Eliot Spitzer ) [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the governor equals Eliot Spitzer conditions in place of the comptroller equals Eliot Spitzer conditions . [question] Find the distinct years when the governor was named " Eliot Spitzer " . [system description] find without repetition year in party table whose comptroller equals " Eliot Spitzer " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor ( Eliot Spitzer ) [C] lieutenant governor [C] comptroller [C] attorney general ( Eliot Spitzer ) [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the governor equals Eliot Spitzer conditions in place of the comptroller equals Eliot Spitzer conditions . [question] Find the distinct years when the governor was named " Eliot Spitzer " . [system description] find without repetition year in party table whose comptroller equals " Eliot Spitzer " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor ( Eliot Spitzer ) [C] lieutenant governor [C] comptroller [C] attorney general ( Eliot Spitzer ) [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 3 , additionally use the information from the person friend table besides the person table . consider the friend equals Alice conditions in place of the job equals Alice conditions . [question] Find the name and age of the person who is a friend of both Dan and Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name and age of the results of step 1 whose friend equals " Dan " . Step 3 : find the person 's name and age in person table whose job equals " Alice " . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 3 , additionally use the information from the person friend table besides the person table . consider the friend equals Alice conditions in place of the job equals Alice conditions . [question] Find the name and age of the person who is a friend of both Dan and Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name and age of the results of step 1 whose friend equals " Dan " . Step 3 : find the person 's name and age in person table whose job equals " Alice " . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 3 , additionally use the information from the person friend table besides the person table . consider the friend equals Alice conditions in place of the job equals Alice conditions . [question] Find the name and age of the person who is a friend of both Dan and Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name and age of the results of step 1 whose friend equals " Dan " . Step 3 : find the person 's name and age in person table whose job equals " Alice " . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 3 , additionally use the information from the person friend table besides the person table . consider the friend equals Alice conditions in place of the job equals Alice conditions . [question] Find the name and age of the person who is a friend of both Dan and Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person 's name and age of the results of step 1 whose friend equals " Dan " . Step 3 : find the person 's name and age in person table whose job equals " Alice " . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
