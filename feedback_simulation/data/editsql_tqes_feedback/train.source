in step 1 , use election table in place of party table . [question] Which parties did not have any delegates in elections ? [system description] Step 1 : find the party id in party table . Step 2 : find the party in party table whose party id not one of the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the gender equals female and birth city equals New York City and birth year greater than 1980 conditions in place of the birth city equals dummy value and birth year greater than dummy value conditions . find number of different name in place of number of rows . [question] How many female actors were born in " New York City " after 1980 ? [system description] find the number of rows in actor table whose birth city equals " dummy value " and birth year greater than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
consider the state name equals alaska and population is equals minimum population city whose state name equals alaska conditions in place of the state name equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the smallest city in alaska [system description] find the city name in city table whose state name equals " dummy value " with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , remove the state 's country name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities are there in usa [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use border info table in place of state table . consider the border info 's state name equals kentucky conditions in place of the area equals dummy value conditions . find border in place of area . [question] what is the adjacent state of kentucky [system description] find the area in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the city equals London or open year equals 2011 conditions in place of the city equals Oxford or address road equals Concord Road conditions . [question] What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London ? [system description] find the minimum membership amount and maximum membership amount in branch table whose city equals " Oxford " or address road equals " Concord Road " . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city ( London ) [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 2 , consider the country equals China conditions in place of the country equals Germany conditions . in step 3 , find for each value of name in place of source airport . in step 4 , find name in place of source airport . [question] Find the busiest source airport that runs most number of routes in China . [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table . Step 2 : only keep the results of step 1 whose country equals " Germany " . Step 3 : find the number of rows of each value of source airport the results of step 2 . Step 4 : find the source airport the results of step 2 with largest value in the results of step 3 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
additionally use the information from the enroll table besides the student table . find for each value of enroll 's student number whose number of rows equals 1 . [question] What are the first names of student who only took one course ? [system description] find the student first name in student table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , find for each value of customer name in place of payment method . in step 3 , use the smallest in place of largest . [question] What is the payment method of the customer that has purchased the least quantity of items ? [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of payment method of the results of step 1 . Step 3 : find the payment method of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
consider the area is equals maximum area state conditions in place of the country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the biggest state in continental us [system description] find the state name in state table whose country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the characteristic name equals hot conditions in place of the characteristic name equals error conditions . [question] Count the number of products with the 'hot ' charactersitic . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " error " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( hot ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the party table . in step 2 , consider the member 's party id equals 3 conditions in place of the party 's party id equals 4 conditions . [question] Show the member names which are in both the party with id 3 and the party with id 1 . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the member name of the results of step 1 whose party 's party id equals 4 . Step 3 : find the member name in member table whose member 's party id equals 1 . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . [question] What are the hometowns that are shared by at least two gymnasts ? [system description] Step 1 : for each row in gymnast table , find the corresponding rows in people table . Step 2 : find the number of rows of each value of hometown of the results of step 1 . Step 3 : find the hometown of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
in step 1 , do not use the city table . in step 2 , remove the city 's country name equals dummy value conditions . [question] what is the combined population of all 50 states [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the summation of state 's population of the results of step 1 whose city 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the origin equals Los Angeles and destination equals Honolulu conditions in place of the destination equals New York and destination equals Los Angeles conditions . [question] Show me the departure date and arrival date for all flights from Los Angeles to Honolulu . [system description] find the departure date and arrival date in flight table whose destination equals " Los Angeles " and destination equals " New York " . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles , Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the state table . in step 2 , consider the city 's population is equals maximum city 's population city conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] which us city has the highest population density [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the exhibition table besides the artist table . find for each value of exhibition 's artist id in place of name . [question] How many exhibitions has each artist had ? [system description] find each value of name in artist table along with the number of the corresponding rows to each value . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
additionally use the information from the club table and member of club table besides the student table . consider the last name equals Tai and first name equals Eric conditions in place of the first name equals Sarah conditions . find number of different club name in place of number of rows . [question] Count the number of clubs for which the student named " Eric Tai " is a member . [system description] find the number of rows in student table whose first name equals " Sarah " . [schema] [T] student [C] student id [C] last name ( Tai ) [C] first name ( Eric ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 1 , additionally use the information from the course table besides the faculty table . find for each value of instructor in place of building . [question] Give the building that the instructor who teaches the greatest number of courses lives in . [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
additionally find number of rows . [question] How many dorms are there and what is the total capacity for each gender ? [system description] find each value of gender in dorm table along with the summation of student capacity of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , additionally use the information from the documents table besides the projects table . in step 2 , make sure that the corresponding value in step 1 greater than 2 . [question] What is the project id and detail for the project with at least two documents ? [system description] Step 1 : find the number of rows of each value of project id in projects table . Step 2 : find the project id and project details in projects table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 2 , find for each value of architect 's id in place of mill 's id . in step 3 , find architect 's id in place of mill 's id . [question] What is the id , name and nationality of the architect who built most mills ? [system description] Step 1 : for each row in architect table , find the corresponding rows in mill table . Step 2 : find the number of rows of each value of mill 's id of the results of step 1 . Step 3 : find the mill 's id , architect 's name , nationality of the results of step 1 with largest value in the results of step 2 . [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
additionally make sure that star rating code equals 5 . [question] What is the average price range of five star hotels that allow pets ? [system description] find the average price range in hotels table whose pets allowed yn equals 1 . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , do not return price . [question] What are the title and maximum price of each film ? [system description] Step 1 : for each row in schedule table , find the corresponding rows in film table . Step 2 : find each value of film 's film id of the results of step 1 along with the title , price , and maximum price of the corresponding rows to each value . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
consider the state name equals wyoming conditions in place of the area equals dummy value conditions . [question] what is the density of wyoming [system description] find the density in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value conditions . in step 3 , find the number of different title for each value of conference 's name . in step 4 , make sure that the corresponding value in step 3 greater than 10 . [question] return me the conferences , which have more than 10 papers by " H. V. Jagadish " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose author 's name equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , consider the length greater than 100 or rating equals PG conditions in place of the replacement cost greater than 29.99 conditions . in step 2 , consider the replacement cost greater than 200 conditions in place of the rating greater than G conditions . [question] Find all the films longer than 100 minutes , or rated PG , except those who cost more than 200 for replacement . List the titles . [system description] Step 1 : find the title in film table whose replacement cost greater than 29.99 . Step 2 : find the title in film table whose rating greater than " G " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating ( PG ) [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
find for each value of country . additionally find number of rows . order the results descending by number of rows in place of ordering ascending by country . [question] What is the number of airports per country , ordered from most to least ? [system description] find the country in airports table ordered ascending by country . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( PER ) [C] source airport id [C] source airport ( PER ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Perm ) [C] country ( Peru ) [C] x [C] y [C] elevation [C] iata ( PER ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( PER ) [C] call sign [C] country ( Peru ) [C] active
in step 2 , consider the conference 's name equals VLDB and author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value and conference 's name equals dummy value conditions . [question] return me the papers by " H. V. Jagadish " on VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the title of the results of step 1 whose conference 's name equals " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the city table and state table . in step 2 , consider the traverse equals illinois conditions in place of the city 's state name equals dummy value conditions . [question] rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in city table . Step 2 : find the river name of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
order the results by venue in place of date . [question] Sort the each workshop in alphabetical order of the venue . Return the date and venue of each workshop . [system description] find the date and venue in workshop table ordered ascending by date . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
in step 1 , do not use the state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] through which states does the ohio flow [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the flight table and airport table besides the operate company table . find for each value of airport 's id in place of operate company 's name . find airport 's id in place of operate company 's name . [question] How many companies operates airlines in each airport ? [system description] find each value of name in operate company table along with the number of the corresponding rows to each value . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities ( Airline ) [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
in step 1 , do not use the team table and player table . in step 2 , consider the college equals UCLA conditions in place of the college equals Furman conditions . find match season 's player in place of player 's player . [question] Show the players from college UCLA . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 whose college equals " Furman " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( UCLA ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 2 , do not find for each value of station id . in step 3 , additionally make sure that bikes available equals 7 . make sure no repetition in the results . [question] What are the different names for each station that has ever had 7 bikes available ? [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
order the results descending . [question] Sort all captain names by their ages from old to young . [system description] find the name in captain table ordered ascending by age . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
consider the college name is not one of tryout 's college name tryout whose player position equals goalie conditions in place of the enrollment less than 12000 conditions . [question] What is the total number of students enrolled in schools without any goalies ? [system description] find the summation of enrollment in college table whose enrollment less than 12000 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value conditions . [question] return me the journals , which have papers by " H. V. Jagadish " . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the journal 's name of the results of step 1 whose author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] what states have a city named springfield [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that population is equals maximum population city . you should not find the largest of the results . show me all the results . [question] what state has the city with the most population [system description] find the state name in city table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the claim headers table besides the claims documents table . additionally make sure that created date is equals created date claims documents with smallest created date . find summation of amount claimed in place of summation of created date . you should not find the largest of the results . show me all the results . [question] How much amount in total were claimed in the most recently created document ? [system description] find the summation of created date in claims documents table with largest value of created date . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code ( Document ) [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
additionally make sure that age is equals maximum age student . find stuid in place of last name . you should not find the largest of the results . show me all the results . [question] What student id corresponds to the oldest student ? [system description] find the last name in student table with largest value of age . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
find number of rows in place of number of budget type code . [question] How many budget types do we have ? [system description] find the number of budget type code in reference budget codes table . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
use director table in place of actor table . consider the director 's name equals director_name0 conditions in place of the actor 's name equals dummy value conditions . find director 's nationality in place of actor 's nationality . [question] What is the nationality of " Kevin Spacey " ? [system description] find the nationality in actor table whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , use the smallest in place of largest . [question] Find the name of the ship that is steered by the youngest captain . [system description] Step 1 : for each row in ship table , find the corresponding rows in captain table . Step 2 : find the ship 's name of the results of step 1 with largest value of age . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
additionally use the information from the claim headers table and policies table besides the customers table . additionally make sure that amount claimed is equals maximum amount claimed claim headers . you should not find the largest of the results . show me all the results . [question] Which customer made the largest amount of claim in a single claim ? Return the customer details . [system description] find the customer details in customers table with largest value of customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , use journal table in place of organization table in step 2 , consider the journal 's name equals PVLDB and year less than 2000 conditions in place of the year less than dummy value conditions . find number of different title in place of number of oid . [question] return me the number of papers published on PVLDB before 2000 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of oid of the results of step 1 whose year less than " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the tourist details equals Vincent or tourist details equals Vivian conditions in place of the visitors 's tourist id equals 189 or visit date equals 1990-11-12 00:54:50 conditions . [question] What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there ? [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table and in tourist attractions table . Step 2 : find the name and visit date of the results of step 1 whose visitors 's tourist id equals 189 or visit date equals " 1990-11-12 00:54:50 " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent , Vivian ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the how to get there equals bus or address equals 254 Ottilie Junction conditions in place of the address equals 959 Feest Glen Suite 523 or address equals 770 Edd Lane Apt . 098 conditions . [question] What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction ? [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table . Step 2 : find the name of the results of step 1 whose address equals " 959 Feest Glen Suite 523 " or address equals " 770 Edd Lane Apt . 098 " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address ( 254 Ottilie Junction ) [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the channel code equals Email conditions in place of the channel code like Fax conditions . find active from date in place of active to date . [question] Find the name and active date of the customer that use email as the contact channel . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the customer name and active to date of the results of step 1 whose channel code like " Fax " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code ( Email ) [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , use journal table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . find number of different title in place of number of pid . [question] return me the number of papers on PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of pid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the cite table , publication keyword table , and keyword table . in step 2 , consider the name equals H. V. Jagadish and name equals Divesh Srivastava conditions in place of the name equals dummy value and cited equals dummy value conditions . in step 3 , do not find for each value of jid . in step 4 , find title in place of number of citation num and keyword . order the results by citation num in place of number of rows . [question] return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " with the most number of citations . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in publication keyword table and in keyword table and in cite table . Step 2 : only keep the results of step 1 whose name equals " dummy value " and cited equals " dummy value " . Step 3 : find the number of rows of each value of jid the results of step 2 . Step 4 : find the keyword and number of citation num the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the products table . in step 2 , consider the headquarter equals Austin conditions in place of the founder equals James conditions . in step 3 , remove the headquarter equals Beijing conditions . find manufacturers 's name in place of products 's name . [question] What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin ? [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the minimum revenue in manufacturers table whose founder equals " James " . Step 3 : find the products 's name of the results of step 1 whose revenue less than the results of step 2 and headquarter equals " Beijing " . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , consider the citation num greater than 200 and year greater than 2000 conditions in place of the year greater than dummy value conditions . in step 2 , do not find for each value of title . [question] return me the paper after 2000 with more than 200 citations . [system description] Step 1 : find rows in publication table whose year greater than " dummy value " . Step 2 : find each value of title the results of step 1 along with the of the corresponding rows to each value . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the movie table and directed by table besides the director table . consider the title equals Joy and release year equals 2015 conditions in place of the birth year equals dummy value conditions . [question] Who was the director of the movie Joy from 2015 ? [system description] find the name in director table whose birth year equals " dummy value " and birth year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
find for each value of city . order the results descending by maximum latitude . [question] For each city , list their names in decreasing order by their highest station latitude . [system description] find the city in station table . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 3 , order the results ascending . only show me the first 5 results . [question] What is first names of the top 5 staff who have handled the greatest number of complaints ? [system description] Step 1 : for each row in complaints table , find the corresponding rows in staff table . Step 2 : find the number of rows of each value of complaints 's staff id of the results of step 1 . Step 3 : find the first name of the results of step 1 with largest value in the results of step 2 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 1 , do not use the college table . in step 2 , additionally make sure that tryout 's college name is equals college 's college name college with largest enrollment . you should not find the largest of the results . show me all the results . [question] Find the name of the tryout players who are from the college with largest size . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name of the results of step 1 with largest value of enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
additionally make sure that number deaths greater than or equals 1 . [question] List name , dates active , and number of deaths for all storms with at least 1 death . [system description] find the name , dates active , number deaths in storm table . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , use author table and writes table in place of cite table in step 2 , consider the name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . in step 3 , find number of different title in place of number of year . [question] return me the number of papers written by " H. V. Jagadish " in each year . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of year of the corresponding rows to each value . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of states through which the mississippi runs [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the settlements table besides the claims table . in step 2 , additionally find claims 's claim id . [question] List the date the claim was made , the date it was settled and the amount settled for all the claims which had exactly one settlement . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the date claim made and date claim settled in claims table whose corresponding value in step 1 is equals 1 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 2 , consider the speed greater than 60 conditions in place of the speed greater than 57 conditions . in step 3 , additionally use the information from the roller coaster table besides the country table . additionally make sure that speed less than 55 . additionally find area . [question] What are the country names , area and population which has both roller coasters with speed higher [system description] Step 1 : for each row in country table , find the corresponding rows in roller coaster table . Step 2 : find the country 's name , area , population of the results of step 1 whose speed greater than 57 . Step 3 : find the country 's name and population in country table . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
in step 1 , do not use the city table . in step 2 , consider the area is equals maximum area state conditions in place of the city 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the largest state in the us [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city 's country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the claims processing table besides the claims processing stages table . find for each value of claims processing 's claim stage id in place of claim status name . [question] Which claim processing stage has the most claims ? Show the claim status name . [system description] Step 1 : find the number of rows of each value of claim status name in claims processing stages table . Step 2 : find the claim status name in claims processing stages table with largest value in the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 2 , find supplier phone in place of supplier name . [question] Return the phone numbers for all customers and suppliers . [system description] Step 1 : find the customer phone in customers table . Step 2 : find the supplier name in suppliers table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
additionally use the information from the airports table besides the routes table . consider the name equals John F Kennedy International Airport conditions in place of the destination airport equals A conditions . find number of rows in place of number of route id . [question] Find the number of routes that have destination John F Kennedy International Airport . [system description] find the number of route id in routes table whose destination airport equals " A " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name ( John F Kennedy International Airport ) [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
additionally use the information from the club table and member of club table besides the student table . consider the last name equals Smith and first name equals Linda conditions in place of the first name equals Dinesh conditions . [question] How many clubs does " Linda Smith " belong to ? [system description] find the number of rows in student table whose first name equals " Dinesh " . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 2 , consider the last name equals Ohori and first name equals Atsushi conditions in place of the first name equals Ralf conditions . [question] How many papers have " Atsushi Ohori " published ? [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose first name equals " Ralf " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ohori ) [C] first name ( Atsushi ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , additionally use the information from the faculty participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] What is the name of the activity that has the most faculty members involved in ? [system description] Step 1 : find the number of rows of each value of activity name in activity table . Step 2 : find the activity name in activity table with largest value in the results of step 1 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the lake table . in step 2 , consider the river name equals rio grande conditions in place of the river name equals dummy value and area equals dummy value conditions . [question] how long is the rio grande river in miles [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the length of the results of step 1 whose river name equals " dummy value " and area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use sports info table in place of plays games table . [question] Show ids of students who play video game and play sports . [system description] Step 1 : find the student id in plays games table . Step 2 : find the student id in plays games table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , do not use the state table . in step 2 , consider the border info 's state name equals kentucky conditions in place of the area like dummy value conditions . [question] what are the neighboring states for kentucky [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose area like " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use sports info table in place of plays games table in step 2 , consider the last name equals Shieber conditions in place of the last name equals Apap conditions . find summation of games played and summation of hours per week in place of summation of hours played . [question] Show total hours per week and number of games played for student David Shieber . [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table . Step 2 : find the summation of hours played and summation of hours played of the results of step 1 whose first name equals " David " and last name equals " Apap " . [schema] [T] student [C] student id [C] last name ( Shieber ) [C] first name ( David ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , do not use the border info table . in step 2 , consider the state 's state name equals new mexico conditions in place of the border info 's state name equals dummy value and density equals dummy value conditions . [question] what is the area of new mexico in square kilometers [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose border info 's state name equals " dummy value " and density equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the author table . in step 2 , consider the conference 's name equals VLDB and year less than 2002 conditions in place of the year less than dummy value and conference 's name equals dummy value conditions . find author 's name in place of writes 's pid . [question] return me the authors who have papers in VLDB conference before 2002 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the writes 's pid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , consider the sex equals M conditions in place of the sex equals F conditions . in step 2 , additionally find number of rows . [question] Find the average age and number of male students ( with sex M ) from each city . [system description] Step 1 : find rows in student table whose sex equals " F " . Step 2 : find each value of city code the results of step 1 along with the average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 2 , consider the citation num greater than 200 and name equals VLDB conditions in place of the name equals dummy value conditions . in step 3 , do not find for each value of jid . in step 4 , find title in place of jid . [question] return me the paper in VLDB conference with more than 200 citations . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of name of each value of jid the results of step 2 . Step 4 : find the jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the customer orders table . in step 2 , find the number of different customer id for each value of products 's product id . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . make sure no repetition in the results . [question] Find the names of products that were bought by at least two distinct customers . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table . Step 2 : find the number of rows of each value of order items 's product id of the results of step 1 . Step 3 : find the product name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the state table . in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . you should not find the largest of the results . show me all the results . [question] which state has the highest elevation [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the accounts table besides the statements table . [question] What are the statement id and statement detail for the statement that has the most corresponding accounts ? [system description] Step 1 : find the number of rows of each value of statement id in statements table . Step 2 : find the statement id and statement details in statements table with largest value in the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
use faculty table and faculty participates in table in place of student table . consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's last name equals Simms and student 's first name equals Arthur conditions . [question] Find the number of activities Mark Giuliano is involved in . [system description] find the number of rows in student table whose first name equals " Arthur " and last name equals " Simms " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
additionally make sure that active to date minus active from date is equals active to date minus active from date customer contact channels with largest active to date minus active from date . you should not find the largest of the results . show me all the results . [question] Return the channel code and contact number of the customer contact channel whose active duration was the longest . [system description] find the channel code and contact number in customer contact channels table with largest value of active from date . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
use border info table in place of state table . consider the border info 's state name is equals state 's state name state whose capital equals boston conditions in place of the capital equals dummy value conditions . find number of border in place of number of rows . [question] how many states border on the state whose capital is boston [system description] find the number of rows in state table whose capital equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the savings table . in step 2 , use savings table and accounts table in place of checking table . additionally make sure that savings 's balance is greater than average savings 's balance savings . find name in place of average checking 's balance . in step 3 , make sure the name is one of the results of step 2 the checking 's balance is greater than the results of step 2 . [question] Find the checking balance of the accounts whose savings balance is higher than the average savings balance . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the average checking 's balance in checking table . Step 3 : find the savings 's balance of the results of step 1 whose checking 's balance greater than the results of step 2 . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
additionally use the information from the race table besides the track table . find for each value of race 's track id in place of track 's name . [question] What are the names of different tracks , and how many races has each had ? [system description] find each value of name in track table along with the number of the corresponding rows to each value . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
use department table , course table , enroll table , and class table in place of professor table . consider the department name equals Accounting conditions in place of the professor extension equals 8665 conditions . [question] How many students are enrolled in some classes that are taught by an accounting professor ? [system description] find the number of rows in professor table whose professor extension equals 8665 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use journal table in place of organization table in step 2 , consider the journal 's name equals PVLDB and year greater than 2000 conditions in place of the organization 's name equals dummy value and year greater than dummy value conditions . [question] return me the papers on PVLDB after 2000 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the ship table . in step 2 , consider the captain 's class equals Cutter conditions in place of the type equals Panamax conditions . in step 3 , do not use the ship table . in step 4 , consider the captain 's class equals Armed schooner conditions in place of the type equals Panamax conditions . [question] What are the ranks of captains that are both in the Cutter and Armed schooner classes ? [system description] Step 1 : for each row in ship table , find the corresponding rows in captain table . Step 2 : find the rank of the results of step 1 whose type equals " Panamax " . Step 3 : for each row in ship table , find the corresponding rows in captain table . Step 4 : find the rank of the results of step 3 whose type equals " Panamax " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Armed schooner , Cutter ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
in step 1 , do not use the state table . in step 2 , remove the state 's country name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities does the usa have [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the length is equals minimum length river conditions in place of the length equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the shortest river in the united states [system description] find the river name in river table whose length equals " dummy value " with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the destination airport id is one of airport id airports whose country equals United States and source airport id is one of airport id airports whose country equals United States conditions in place of the source airport equals TTQ conditions . do not return destination airport id . [question] Find the id of routes whose source and destination airports are in the United States . [system description] find the route id and destination airport id in routes table whose source airport equals " TTQ " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( STATES , UNITED ) [C] country ( United States ) [C] active
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of the states through which the mississippi river runs [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the status table . in step 2 , find date and max temperature f minus min temperature f in place of time and mean temperature f . order the results by max temperature f minus min temperature f in place of mean temperature f . [question] What are the days that had the smallest temperature range , and what was that range ? [system description] Step 1 : for each row in weather table , find the corresponding rows in status table . Step 2 : find the time and mean temperature f of the results of step 1 with smallest value of mean temperature f . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the border info table and state table . in step 2 , consider the traverse is one of border border info whose border info 's state name equals alabama conditions in place of the border equals dummy value conditions . [question] what rivers flow through states that alabama borders [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the open year equals 2001 and membership amount greater than 100 conditions in place of the open year equals 2014 and open year greater than 2001 conditions . [question] What are the cities that have a branch that opened in 2001 and a branch with more than 100 members ? [system description] find the city in branch table whose open year equals 2014 and open year greater than 2001 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 3 , additionally find salary . [question] What is the salaray and name of the employee that is certified to fly the most planes ? [system description] Step 1 : for each row in certificate table , find the corresponding rows in employee table . Step 2 : find the number of rows of each value of certificate 's employee id of the results of step 1 . Step 3 : find the name and name of the results of step 1 with largest value in the results of step 2 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
consider the stuid equals 1004 conditions in place of the city code equals NAR conditions . [question] Who is the advisor of student with ID 1004 ? [system description] find the advisor in student table whose city code equals " NAR " . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , do not use the state table . in step 2 , consider the city 's population is equals maximum city 's population city conditions in place of the city 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what city in the united states has the highest population density [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose city 's state name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the checking table . in step 2 , additionally find checking 's balance . [question] What are the names , checking balances , and savings balances for all customers ? [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table . Step 2 : find the name , balance , balance of the results of step 1 . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 2 , consider the customer name equals Tillman Ernser conditions in place of the customer name equals Alexane Kilback conditions . make sure no repetition in the results . [question] Which contact channel has been used by the customer with name " Tillman Ernser " ? [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the channel code of the results of step 1 whose customer name equals " Alexane Kilback " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
consider the sex equals F and rank equals Professor conditions in place of the sex equals M and last name equals Kosaraju conditions . [question] How many female Professors do we have ? [system description] find the number of rows in faculty table whose sex equals " M " and last name equals " Kosaraju " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
order the results ascending . show me all the results . [question] What are the names of all the clubs starting with the oldest ? [system description] find the name in club table with largest value of start year . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
in step 1 , use author table in place of cite table in step 2 , consider the year less than 2000 and name equals H. V. Jagadish and name equals Divesh Srivastava conditions in place of the cited equals dummy value and year less than dummy value conditions . find number of different title in place of number of writes 's pid . [question] return me the number of papers written by " H. V. Jagadish " and " Divesh Srivastava " before 2000 . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table and in cite table . Step 2 : find the number of writes 's pid of the results of step 1 whose cited equals " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally find summation of enrollment . [question] Show institution types , along with the number of institutions and total enrollment for each type . [system description] find each value of type in institution table along with the number of the corresponding rows to each value . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
in step 2 , additionally use the information from the loan table besides the customer table . consider the loan type equals Mortgages conditions in place of the number of loans equals 0 conditions . [question] What are the names of customers who have not taken a Mortage loan ? [system description] Step 1 : find the customer name in customer table . Step 2 : find the customer name in customer table whose number of loans equals 0 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , use employee table and class table in place of professor table . consider the course code equals CIS-220 conditions in place of the department code equals ACCT conditions . find employee first name in place of department code . in step 2 , use class table in place of professor table in step 3 , consider the course code equals QM-261 conditions in place of the department code equals MATH conditions . [question] What is the first name of the professor who is teaching CIS-220 and QM-261 ? [system description] Step 1 : find the department code in professor table whose department code equals " ACCT " . Step 2 : for each row in employee table , find the corresponding rows in professor table . Step 3 : find the employee first name of the results of step 2 whose department code equals " MATH " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] class [C] class code [C] course code ( CIS-220 , QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 , QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the country equals Canada and is male equals F and year equals 2016 conditions in place of the year equals 2014 and year equals 2015 conditions . [question] Show the names for all females from Canada having a wedding in year 2016 . [system description] Step 1 : for each row in people table , find the corresponding rows in wedding table . Step 2 : find the name of the results of step 1 whose year equals 2015 and year equals 2014 . [schema] [T] people [C] people id [C] name [C] country ( Canada ) [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
in step 1 , do not use the customers table . in step 2 , consider the order status equals Cancelled conditions in place of the order status equals Delivered conditions . find number of different customer orders 's customer id in place of number of rows . [question] How many customers have at least one order with status " Cancelled " ? [system description] Step 1 : for each row in customer orders table , find the corresponding rows in customers table . Step 2 : find the number of rows of the results of step 1 whose order status equals " Delivered " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status ( Cancelled ) [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the member of club table and student table besides the club table . consider the last name equals Kim and first name equals Tracy conditions in place of the club name equals Bootup Baltimore conditions . [question] For how many clubs is " Tracy Kim " a member ? [system description] find the number of rows in club table whose club name equals " Bootup Baltimore " . [schema] [T] student [C] student id [C] last name ( Kim ) [C] first name ( Tracy ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally use the information from the airlines table besides the routes table . consider the name equals American Airlines conditions in place of the airline equals BJ conditions . [question] How many routes does American Airlines operate ? [system description] find the number of rows in routes table whose airline equals " BJ " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country [C] active
in step 1 , use enroll table and class table in place of department table in step 2 , additionally find student last name . [question] Find names of all students who took some course and the course description . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name and course description of the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the department table , course table , enroll table , and class table besides the student table . consider the department name equals Accounting conditions in place of the student class equals Sr conditions . in step 2 , additionally use the information from the department table , course table , enroll table , and class table besides the student table . consider the department name equals Computer Info . Systems conditions in place of the student class equals Jr conditions . [question] What are the first names of all students taking accoutning and Computer Information Systems classes ? [system description] Step 1 : find the student first name in student table whose student class equals " Sr " . Step 2 : find the student first name in student table whose student class equals " Jr " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , consider the headquarter equals Austin conditions in place of the founder equals Andy conditions . in step 2 , remove the founder equals Andy conditions . [question] Find the name of companies whose revenue is smaller than the revenue of all companies based in Austin . [system description] Step 1 : find the minimum revenue in manufacturers table whose founder equals " Andy " . Step 2 : find the name in manufacturers table whose revenue less than the results of step 1 and founder equals " Andy " . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 2 , additionally make sure that course name equals COMPUTER LITERACY . find last name in place of instructor . [question] Find the first name and last name of the instructor of course that has course name [system description] Step 1 : for each row in faculty table , find the corresponding rows in course table . Step 2 : find the first name and instructor of the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , do not use the team table . in step 2 , consider the college equals UCLA or college equals Duke conditions in place of the college equals Concordia College or name equals Miami Fusion conditions . make sure no repetition in the results . [question] What are the different positions of players from UCLA or Duke colleges ? [system description] Step 1 : for each row in match season table , find the corresponding rows in team table . Step 2 : find the position of the results of step 1 whose name equals " Miami Fusion " or college equals " Concordia College " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( UCLA , Duke ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 2 , consider the friend equals Dan or friend equals Alice conditions in place of the person friend 's name equals Bob or person friend 's name equals Zach conditions . make sure no repetition in the results . [question] What are the different names and ages of every friend of either Dan or alice ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name and age of the results of step 1 whose person friend 's name equals " Zach " or person friend 's name equals " Bob " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
in step 1 , do not use the border info table and state table . in step 2 , consider the traverse equals illinois conditions in place of the border equals dummy value conditions . [question] what is the river that cross over illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the professor table . in step 2 , consider the department name equals History conditions in place of the department name equals Mathematics conditions . in step 3 , use class table in place of department table in step 4 , remove the department name equals Accounting conditions . [question] What is the first names of the professors from the history department who do not teach a class . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table . Step 2 : find the employee first name of the results of step 1 whose department name equals " Mathematics " . Step 3 : for each row in employee table , find the corresponding rows in department table . Step 4 : find the employee first name of the results of step 3 whose department name equals " Accounting " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use city table in place of river table and state table in step 2 , consider the city 's state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . find city name in place of capital . [question] what are the cities in states through which the mississippi runs [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find title in place of papers 's paper id . make sure no repetition in the results . [question] What are the papers published under the institution " Indiana University " ? [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose name equals " Indiana University " . [schema] [T] institution [C] institution id [C] name ( Indiana University ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , consider the languages equals bangla and gender equals Female conditions in place of the gender equals Male conditions . find artist 's country in place of song 's country . [question] What countries are the female artists who sung in the language Bangla from ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the song 's country of the results of step 1 whose gender equals " Male " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
consider the year greater than 2000 conditions in place of the year greater than dummy value conditions . [question] return me the papers after 2000 . [system description] find the title in publication table whose year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the first name equals Olin and last name equals Shivers conditions in place of the first name equals Jeremy conditions . find title in place of papers 's paper id . [question] Find the papers which have " Olin Shivers " as an author . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Jeremy " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Shivers ) [C] first name ( Olin ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
additionally use the information from the domain author table , domain table , author table , domain publication table , and publication table besides the organization table . consider the domain 's name equals Databases and organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value conditions . find number of different title in place of number of organization 's oid . [question] return me the number of papers in " University of Michigan " in Databases area . [system description] find the number of oid in organization table whose name equals " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
use documents with expenses table in place of reference budget codes table . [question] What are the different budget type codes , and how many documents are there for each ? [system description] find each value of budget type code in reference budget codes table along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
consider the location like % NY % conditions in place of the location like Kingston , RI conditions . find number of rows in place of number of location . [question] How many universities have a location that contains NY ? [system description] find the number of location in university table whose location like " Kingston , RI " . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the stuid equals 1004 conditions in place of the city code equals PEK conditions . [question] Who advises student 1004 ? [system description] find the advisor in student table whose city code equals " PEK " . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , additionally use the information from the staff department assignments table besides the staff table . find for each value of staff department assignments 's staff id whose number of rows greater than 1 . [question] List the name of staff who has been assigned multiple jobs . [system description] Step 1 : find the number of rows of each value of staff name in staff table . Step 2 : find the staff name in staff table whose corresponding value in step 1 is equals 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
additionally find customer id . [question] Show ids , customer ids , card type codes , card numbers for all cards . [system description] find the card id , card type code , card number , card number in customers cards table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , do not use the projects table . [question] Return the id of the project that has the fewest corresponding documents . [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 with smallest value in the results of step 2 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the keyword table , domain table , domain author table , author table , writes table , and domain keyword table . in step 2 , consider the title equals Making database systems usable conditions in place of the keyword equals dummy value conditions . find citation num in place of number of jid . [question] return me the number of citations of " Making database systems usable " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the number of jid of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , additionally make sure that area is equals maximum area state . find state 's state name in place of maximum area . in step 3 , make sure the state 's state name is one of the results of step 2 the area is equals the results of step 2 . find highest point in place of maximum highest point . you should not find the largest of the results . show me all the results . [question] what is the highest point of the state with the largest area [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum area in state table . Step 3 : find the maximum highest point of the results of step 1 whose area equals the results of step 2 with largest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the river name equals colorado and traverse equals texas conditions in place of the river name equals dummy value conditions . [question] what is the length of the colorado river in texas [system description] find the length in river table whose river name equals " dummy value " and river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the country equals Greenland conditions in place of the country equals Kuwait conditions . find number of different city in place of number of rows . [question] In how many cities are there airports in the country of Greenland ? [system description] find the number of rows in airports table whose country equals " Kuwait " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Greenland ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( GREENLAND ) [C] country [C] active
in step 1 , do not use the lives in table and dorm table . in step 2 , you should consider both of the conditions rather than either of them . consider the sex equals F and city code equals BAL conditions in place of the gender equals F or city code equals HKG conditions . in step 3 , consider the sex equals M and age less than 20 conditions in place of the city code equals CHI conditions . return the rows in any of the results of step 2 and the results of step 3 . [question] What is the last name of every student who is either female or living in a city with the code BAL or male and under 20 ? [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the last name of the results of step 1 whose gender equals " F " or city code equals " HKG " . Step 3 : find the last name in student table whose city code equals " CHI " . Step 4 : show the rows that are in the results of step 2 but not in the results of step 3 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( BAL ) [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
use publication table in place of keyword table . consider the title equals Making database systems usable conditions in place of the keyword equals dummy value conditions . find reference num in place of keyword . [question] return me the references of " Making database systems usable " . [system description] find the keyword in keyword table whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the classification table . in step 2 , find for each value of title in place of genre . in step 3 , order the results by number of different genre in place of number of rows . [question] Find the movie which is classified in the most number of genres [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the number of rows of each value of genre of the results of step 1 . Step 3 : find the title of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the team table . in step 2 , consider the position equals Defender conditions in place of the name equals Enrique Osinski conditions . find number of different official native language in place of number of official native language . [question] Count the number of different official languages corresponding to countries that players who play Defender are from . [system description] Step 1 : for each row in team table , find the corresponding rows in match season table and in country table . Step 2 : find the number of official native language of the results of step 1 whose name equals " Enrique Osinski " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position ( Defender ) [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
consider the base price greater than 160 and max occupancy greater than 2 conditions in place of the base price less than 175 and base price greater than 175 conditions . [question] Find all the rooms that have a price higher than 160 and can accommodate more than 2 people . Report room names and ids . [system description] find the room name and room id in rooms table whose base price greater than 175 and base price less than 175 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , use manager award table in place of manager award vote table in step 2 , find for each value of manager award 's player id in place of manager award vote 's award id . in step 3 , additionally find manager award 's player id . [question] What are the manager 's first name , last name and id who won the most manager award ? [system description] Step 1 : for each row in manager award vote table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of award id of the results of step 1 . Step 3 : find the name first , name last , name last of the results of step 1 with largest value in the results of step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Manager ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , consider the home game 's year equals 1980 conditions in place of the team 's year equals 2011 conditions . [question] Which team had the least number of attendances in home games in 1980 ? [system description] Step 1 : for each row in home game table , find the corresponding rows in team table . Step 2 : find the name of the results of step 1 whose team 's year equals 2011 with smallest value of home game 's attendance . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Homer ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , use category table in place of film text table in step 2 , find name in place of title . [question] What are the names and ids of the different categories , and how many films are in each ? [system description] Step 1 : for each row in film text table , find the corresponding rows in film category table . Step 2 : find each value of category id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , do not use the lives in table . [question] Find the code of city where most of students are living in . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table . Step 2 : find the number of rows of each value of city code of the results of step 1 . Step 3 : find the city code of the results of step 1 with largest value in the results of step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
find customer details in place of customer id . [question] List the names of all the customers in alphabetical order . [system description] find the customer id in customers table ordered ascending by customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
consider the bed type equals King conditions in place of the beds equals 2 conditions . [question] List the names and decor of rooms that have a king bed . Sort the list by their price . [system description] find the room name and decor in rooms table whose beds equals 2 ordered ascending by base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that product type code equals Clothes . [question] What is the average price of clothes ? [system description] find the average product price in products table . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Clothes ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
consider the gender equals male conditions in place of the gender equals female conditions . find id in place of gender . order the results by name in place of nationality . [question] List the name , nationality and id of all male architects ordered by their names lexicographically . [system description] find the name , nationality , gender in architect table whose gender equals " female " ordered ascending by nationality . [schema] [T] architect [C] id [C] name [C] nationality [C] gender ( male ) [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
in step 1 , find for each value of event name whose number of rows greater than 2 . [question] Which event names were used more than twice for party events ? [system description] Step 1 : find the number of rows of each value of event id in party events table . Step 2 : find the event name in party events table whose corresponding value in step 1 is greater than 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 2 , consider the year equals 2000 and city equals Atlanta conditions in place of the year equals 1997 and city equals Springfield conditions . find number of rows in place of number of team id . [question] How many games were played in city Atlanta in 2000 ? [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of team id of the results of step 1 whose city equals " Springfield " and year equals 1997 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Atlanta ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Atlanta ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Atlanta ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Atlanta ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 3 , find age in place of year . make sure no repetition in the results . [question] Who has friends that are older than the average age ? Print their friends and their ages as well [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the average age in person table . Step 3 : find the friend and year of the results of step 1 whose age greater than the results of step 2 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , additionally use the information from the songs table . in step 2 , find for each value of first name in place of bandmate . [question] Find the first name of the band mate that has performed in most songs . [system description] Step 1 : for each row in band table , find the corresponding rows in performance table . Step 2 : find the number of rows of each value of bandmate of the results of step 1 . Step 3 : find the first name of the results of step 1 with largest value in the results of step 2 . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
find number of rows in place of number of college name . [question] How many different colleges are there ? [system description] find the number of college name in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the reservations table . in step 2 , consider the decor equals modern conditions in place of the bed type equals Queen conditions . find summation of max occupancy in place of summation of rate . [question] How many people in total can stay in the modern rooms of this inn ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the summation of rate of the results of step 1 whose bed type equals " Queen " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the visits table besides the tourist attractions table . in step 2 , make sure that the corresponding value in step 1 greater than or equals 2 . [question] Show the names and ids of tourist attractions that are visited at least two times . [system description] Step 1 : find the number of rows of each value of tourist attraction id in tourist attractions table . Step 2 : find the name and tourist attraction id in tourist attractions table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
consider the price greater than or equals 180 conditions in place of the price greater than or equals 66 conditions . additionally order the results by name . [question] What are the names and prices of products that cost at least 180 , sorted by price decreasing and name ascending ? [system description] find the name and price in products table whose price greater than or equals 66 ordered ascending by price . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
use border info table in place of state table . consider the border info 's state name equals kentucky conditions in place of the area equals dummy value conditions . find number of border in place of number of rows . [question] kentucky borders how many states [system description] find the number of rows in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use sports info table in place of video games table . find summation of games played in place of number of rows . [question] What is the total number of games played ? [system description] find the number of rows in video games table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , find for each value of event name whose number of rows greater than 2 . [question] find the event names that have more than 2 records . [system description] Step 1 : find the number of rows of each value of event id in party events table . Step 2 : find the event name in party events table whose corresponding value in step 1 is greater than 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
consider the sex equals M conditions in place of the sex equals F conditions . find average weight in place of weight . [question] Find the average height and weight for all males ( sex is M ) . [system description] find the average height and weight in people table whose sex equals " F " . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
in step 1 , additionally use the information from the class table . in step 2 , find for each value of course 's department code in place of department name . in step 3 , do not return summation of course credit . [question] Which department offers the most credits all together ? [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find the summation of course credit of each value of department name of the results of step 1 . Step 3 : find the department name and summation of course credit of the results of step 1 with largest value in the results of step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the river table and state table . in step 2 , consider the lake 's area greater than 750 conditions in place of the state 's country name equals dummy value and river 's country name equals dummy value conditions . [question] what are the major lakes in united states [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in lake table . Step 2 : find the lake name of the results of step 1 whose state 's country name equals " dummy value " and river 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the member of club table and student table besides the club table . consider the city code equals HOU conditions in place of the club location equals HHH conditions . make sure no repetition in the results . [question] Which clubs have one or more members from the city with code " HOU " ? Give me the names of the clubs . [system description] find the club name in club table whose club location equals " HHH " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HOU ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 1 , use journal table , author table , and writes table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . find for each value of author 's name . find author 's name in place of number of publication 's jid . find the result with the largest number of different title . [question] return me the authors who have the most number of papers in PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the city 's population is equals maximum city 's population city conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the biggest city in the usa [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's country name equals " dummy value " with largest value of city 's population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals texas and population greater than 150000 conditions in place of the state name equals dummy value conditions . find number of city name in place of number of rows . [question] how many major cities are in texas [system description] find the number of rows in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the grade equals 4 conditions in place of the grade equals 6 conditions . [question] Report the total number of students for each fourth-grade classroom . [system description] Step 1 : find rows in list table whose grade equals 6 . Step 2 : find each value of class room the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 2 , consider the level equals 6 conditions in place of the level equals 2 conditions . find number of rows in place of summation of total pounds . [question] What are the total purchases for members rated at level 6 ? [system description] Step 1 : for each row in purchase table , find the corresponding rows in member table . Step 2 : find the summation of total pounds of the results of step 1 whose level equals 2 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 1 , additionally use the information from the team table . in step 2 , consider the name equals Washington Nationals and salary 's year equals 2005 conditions in place of the salary 's year equals 1993 conditions . in step 3 , additionally use the information from the team table . in step 4 , consider the name equals Washington Nationals and salary 's year equals 2007 conditions in place of the salary 's year equals 1989 conditions . [question] List players ' first name and last name who received salary from team Washington Nationals in both 2005 and 2007 . [system description] Step 1 : for each row in salary table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1993 . Step 3 : for each row in salary table , find the corresponding rows in player table . Step 4 : find the name first and name last of the results of step 3 whose year equals 1989 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( washington ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Washington ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Washington ) [C] name first ( Washington ) [C] name last ( Washington ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Washington ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( washington ) [C] name full [C] city ( Washington ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Washington Nationals ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Washington Nationals ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the membership register branch table . [question] What is the membership level with the most people ? [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in member table . Step 2 : find the number of rows of each value of level of the results of step 1 . Step 3 : find the level of the results of step 1 with largest value in the results of step 2 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
consider the state name equals delaware conditions in place of the state name equals dummy value conditions . find highest elevation in place of maximum highest elevation . [question] what is the highest elevation in delaware [system description] find the maximum highest elevation in highlow table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of different name in place of number of rows . [question] return me the number of the organizations . [system description] find the number of rows in organization table . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find for each value of school code . find number of different department address in place of number of department address . find school code in place of number of school code . [question] How many different locations does each school have ? [system description] find the number of department address and number of school code in department table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the name equals H. V. Jagadish conditions in place of the name equals dummy value conditions . [question] return me the papers by " H. V. Jagadish " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the course table , enroll table , and class table besides the department table . find for each value of course 's department code in place of department name . [question] What is the name of the department with the most students enrolled ? [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with largest value in the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , remove the secretary vote equals 1020 conditions . make sure no repetition in the results . [question] What are the distinct majors that students with treasurer votes are studying ? [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the major of the results of step 1 whose secretary vote equals 1020 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 2 , consider the sex equals M and election cycle equals Fall conditions in place of the class senator vote equals 1028 and sex equals F conditions . [question] How many male ( sex is M ) students have class senator votes in the fall election cycle ? [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the number of rows of the results of step 1 whose class senator vote equals 1028 and sex equals " F " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Fall ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
additionally make sure that gender equals male . [question] What is average age of male for different job title ? [system description] find each value of job in person table along with the average age of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , use class table in place of student table in step 2 , consider the course code equals ACCT-211 conditions in place of the enroll 's class code equals 10014 conditions . [question] How many students enrolled in class ACCT-211 ? [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the number of rows of the results of step 1 whose class code equals 10014 . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the area is equals maximum area state conditions in place of the country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the biggest state in the usa [system description] find the state name in state table whose country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the length is equals maximum length river conditions in place of the river 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] which states lie on the largest river in the united states [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river 's country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find for each value of architect 's id whose number of rows equals 2 . in step 4 , use mill table in place of bridge table in step 5 , find for each value of architect 's id whose number of rows equals 1 . in step 6 , additionally find gender . return the rows in any of the results of step 3 and the results of step 6 . [question] What are the ids , names and genders of the architects who built two bridges or one mill ? [system description] Step 1 : for each row in architect table , find the corresponding rows in bridge table . Step 2 : find the number of rows of each value of bridge 's id of the results of step 1 . Step 3 : find the architect 's id , architect 's name , gender of the results of step 1 whose corresponding value in step 2 is equals 1 . Step 4 : for each row in architect table , find the corresponding rows in bridge table . Step 5 : find the number of rows of each value of bridge 's id of the results of step 4 . Step 6 : find the architect 's id and architect 's name of the results of step 4 whose corresponding value in step 5 is greater than or equals 1 . Step 7 : show the rows that are in both the results of step 3 and step 6 . [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
additionally make sure that affiliation not equals Public . order the results by founded in place of school . [question] Find the founded year of the newest non public school . [system description] find the founded in university table with largest value of school . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
in step 1 , do not use the state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . find traverse in place of area . [question] where is the ohio river [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the person friend 's name equals Alice and job equals doctor and gender equals male conditions in place of the person 's name equals Zach conditions . [question] Who are the friends of Alice that are doctors ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose person 's name equals " Zach " and person 's name equals " Zach " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , consider the name equals Boston Red Stockings and home game 's year between 2000 and 2010 conditions in place of the team 's year equals 1981 and name equals Atlanta Braves conditions . [question] What is the total home game attendance of team Boston Red Stockings from 2000 to 2010 ? [system description] Step 1 : for each row in home game table , find the corresponding rows in team table . Step 2 : find the summation of home game 's attendance of the results of step 1 whose name equals " Atlanta Braves " and team 's year equals 1981 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston , Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston , Homer ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , additionally use the information from the savings table . in step 2 , use savings table in place of checking table . find average savings 's balance in place of average checking 's balance . in step 3 , make sure the savings 's balance is greater than the results of step 2 the checking 's balance is greater than the results of step 2 . find checking 's balance plus savings 's balance in place of summation of checking 's balance . [question] Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance . [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find the average balance in checking table . Step 3 : find the name and summation of balance of the results of step 1 whose balance greater than the results of step 2 . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , additionally make sure that on scholarship equals Y . [question] Which sport has most number of students on scholarship ? [system description] Step 1 : find the number of rows of each value of sport name in sports info table . Step 2 : find the sport name in sports info table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , use border info table in place of river table and state table in step 2 , consider the border info 's state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . find number of different border in place of number of rows . [question] how many states border the mississippi river [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the traverse is one of border border info whose border info 's state name equals alabama conditions in place of the border equals dummy value conditions . [question] which rivers run through states bordering alabama [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the city equals Shanghai conditions in place of the nov equals 27.2 and city equals Changzhou ( Jiangsu ) conditions . find jan in place of aug . [question] What is the temperature of " Shanghai " city in January ? [system description] Step 1 : for each row in temperature table , find the corresponding rows in city table . Step 2 : find the aug of the results of step 1 whose city equals " Changzhou ( Jiangsu ) " and nov equals 27.2 . [schema] [T] city [C] city id [C] city ( Shanghai ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
in step 1 , consider the state equals AZ and enrollment less than 13000 conditions in place of the enrollment greater than 18000 conditions . in step 2 , consider the enrollment greater than 15000 and state equals LA conditions in place of the state equals AZ and state equals OK conditions . [question] Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment . [system description] Step 1 : find the college name in college table whose enrollment greater than 18000 . Step 2 : find the college name in college table whose state equals " AZ " and state equals " OK " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] college [C] college name [C] state ( AZ , LA ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the song table . [question] What are the id of songs whose format is mp3 . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the song 's song id of the results of step 1 whose formats equals " mp3 " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats ( mp3 ) [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the cite table . in step 2 , consider the citation num greater than 200 and name equals H. V. Jagadish and name equals Divesh Srivastava conditions in place of the name equals dummy value and cited greater than dummy value conditions . find title in place of jid and cited . [question] return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " with more than 200 citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in cite table . Step 2 : find the jid and cited of the results of step 1 whose cited greater than " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the lake table . in step 2 , consider the traverse equals illinois conditions in place of the state name equals dummy value conditions . [question] name all the rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the releasedate like % Mar % conditions in place of the releasedate equals 27-MAR-2004 conditions . [question] List the name and gender for all artists who released songs in March . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and gender of the results of step 1 whose releasedate equals " 27-MAR-2004 " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally use the information from the author table besides the organization table . consider the author 's name equals H. V. Jagadish conditions in place of the organization 's name equals dummy value conditions . [question] return me the organization " H. V. Jagadish " is in . [system description] find the name in organization table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the river table and state table . in step 2 , consider the border info 's state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what states border states which the mississippi runs through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the origin equals Los Angeles conditions in place of the destination equals Sydney conditions . [question] What is the average distance and average price for flights from Los Angeles . [system description] find the average distance and average price in flight table whose destination equals " Sydney " . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , additionally use the information from the journal table and author table . in step 2 , consider the journal 's name equals PVLDB and year equals 2010 conditions in place of the year equals dummy value conditions . find author 's name in place of writes 's pid . [question] return me the authors who have papers in PVLDB 2010 . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table . Step 2 : find the writes 's pid of the results of step 1 whose year equals " dummy value " and year equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals texas conditions in place of the city 's state name equals dummy value conditions . [question] what is the capital of texas [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name is one of border border info whose border info 's state name equals mississippi conditions in place of the area equals dummy value conditions . [question] what are the high points of states surrounding mississippi [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the highest point of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use journal table in place of organization table in step 2 , consider the journal 's name equals PVLDB and year greater than 2000 conditions in place of the organization 's name equals dummy value and year greater than dummy value conditions . find number of different title in place of number of oid . [question] return me the number of papers on PVLDB after 2000 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of oid of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
use state table in place of city table . consider the state 's state name equals rhode island conditions in place of the city 's state name equals dummy value conditions . find number of capital in place of number of rows . [question] how many capitals does rhode island have [system description] find the number of rows in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the activity name equals Canoeing conditions in place of the activity name equals Mountain Climbing conditions . find last name in place of first name . in step 4 , consider the activity name equals Kayaking conditions in place of the activity name equals Accordion Ensemble conditions . find last name in place of first name . [question] Find the first names of the faculty members who participate in Canoeing and Kayaking . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Mountain Climbing " . Step 3 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 4 : find the first name of the results of step 3 whose activity name equals " Accordion Ensemble " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the songs table besides the vocals table . additionally make sure that type equals shared . find number of different title in place of number of vocals 's song id . [question] How many different songs have shared vocals ? [system description] find the number of song id in vocals table . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , use employee table in place of professor table . additionally make sure that employee job code equals PROF . find employee first name in place of professor office . in step 2 , additionally use the information from the class table besides the employee table . [question] What are the first names of the professors who do not teach a class . [system description] Step 1 : find the professor office in professor table . Step 2 : find the employee first name in employee table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the city equals London or open year equals 2011 conditions in place of the open year equals 2014 or address road equals Cecilia Avenue conditions . [question] Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London . [system description] find the minimum membership amount and maximum membership amount in branch table whose open year equals 2014 or address road equals " Cecilia Avenue " . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city ( London ) [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
use border info table in place of state table . consider the border info 's state name equals kentucky conditions in place of the area equals dummy value conditions . [question] what states surround kentucky [system description] find the state name in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
make sure no repetition in the results . [question] What are the details of all products ? [system description] find the product details in products table . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 2 , find for each value of song 's artist name in place of song 's country . in step 3 , use the smallest in place of largest . [question] What country is the artist who made the fewest songs from ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the number of rows of each value of song 's country of the results of step 1 . Step 3 : find the artist 's country of the results of step 1 with largest value in the results of step 2 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the team table and appearances table . in step 2 , consider the home game 's year equals 2008 conditions in place of the appearances 's year equals 1972 conditions . order the results by home game 's attendance in place of team 's attendance . [question] Which park had most attendances in 2008 ? [system description] Step 1 : for each row in appearances table , find the corresponding rows in team table and in home game table and in park table . Step 2 : find the park name of the results of step 1 whose appearances 's year equals 1972 with largest value of team 's attendance . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , additionally use the information from the customers table and complaints table besides the products table . find for each value of customers 's customer id in place of product name . in step 2 , make sure no repetition in the results . [question] Return the names of products that have had complaints filed by the customer who has filed the fewest complaints . [system description] Step 1 : find the number of rows of each value of product name in products table . Step 2 : find the product name in products table with smallest value in the results of step 1 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
use tryout table in place of college table . additionally make sure that decision equals yes . find number of rows in place of number of enrollment . [question] How many students received a yes from tryouts ? [system description] find the number of enrollment in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
in step 1 , use minor in table in place of enrolled in table , department table , and course table in step 2 , consider the minor in 's department number equals 140 conditions in place of the department name equals Physics and Astronomy conditions . [question] What are the full names of students minoring in department 140 ? [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table and in course table and in department table . Step 2 : find the first name and last name of the results of step 1 whose department name equals " Physics and Astronomy " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
use highlow table in place of mountain table . consider the highest point equals guadalupe peak conditions in place of the mountain name equals dummy value conditions . find highest elevation in place of mountain altitude . [question] how tall is guadalupe peak [system description] find the mountain altitude in mountain table whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that population is equals maximum population city . you should not find the largest of the results . show me all the results . [question] whats the largest city [system description] find the city name in city table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that job equals student and age is equals maximum age person whose job equals student . you should not find the largest of the results . show me all the results . [question] What is the name of the oldest student ? [system description] find the name in person table with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
in step 2 , consider the city name equals durham conditions in place of the city name equals dummy value conditions . [question] what is the capital of states that have cities named durham [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals texas and population greater than 150000 conditions in place of the state name equals dummy value conditions . find number of city name in place of number of rows . [question] how many big cities are in texas [system description] find the number of rows in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the domain table and domain publication table besides the publication table . consider the citation num greater than 200 and name equals Databases conditions in place of the citation num equals dummy value conditions . in step 2 , do not find for each value of jid . in step 3 , find title in place of jid . [question] return me the paper in Databases area with more than 200 citations . [system description] Step 1 : find rows in publication table whose citation num equals " dummy value " . Step 2 : find the number of jid of each value of jid the results of step 1 . Step 3 : find the jid the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the state name equals kansas and population greater than 150000 conditions in place of the state name equals dummy value conditions . [question] what are the major cities in kansas [system description] find the city name in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the highlow 's state name equals colorado conditions in place of the highest elevation equals dummy value conditions . find highest elevation in place of maximum highest point . in step 3 , make sure the highest elevation is greater than the results of step 2 the highest point is greater than the results of step 2 . [question] which states have points that are higher than the highest point in colorado [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point in highlow table whose highest elevation equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose highest point greater than the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use faculty table and faculty participates in table in place of participates in table and student table in step 2 , consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's first name equals Stacy and student 's last name equals Smith conditions . [question] What are the names of the activities Mark Giuliano is involved in [system description] Step 1 : for each row in activity table , find the corresponding rows in participates in table and in student table . Step 2 : find the activity name of the results of step 1 whose first name equals " Stacy " and last name equals " Smith " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , additionally make sure that event name equals Annaual Meeting . [question] How many Annual Meeting events happened in the United Kingdom region ? [system description] Step 1 : for each row in party events table , find the corresponding rows in party table and in region table . Step 2 : find the number of rows of the results of step 1 whose region name equals " United Kingdom " . [schema] [T] region [C] region id [C] region name ( United Kingdom ) [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 2 , consider the product category code equals Herbs conditions in place of the product name equals sesame conditions . additionally find product description . [question] What are the names , color descriptions , and product descriptions for products in the 'Herbs ' category ? [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name , color description , color description of the results of step 1 whose product name equals " sesame " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 2 , consider the order status equals Cancelled conditions in place of the order status equals Delivered conditions . find summation of order quantity in place of number of rows . [question] What is the total number of products that are in orders with status " Cancelled " ? [system description] Step 1 : for each row in customer orders table , find the corresponding rows in order items table . Step 2 : find the number of rows of the results of step 1 whose order status equals " Delivered " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status ( Cancelled ) [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
consider the sport name equals Football and on scholarship equals Y conditions in place of the on scholarship equals N conditions . find summation of games played in place of number of rows . [question] What is the total number of all football games played by scholarship students ? [system description] find the number of rows in sports info table whose on scholarship equals " N " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
in step 2 , order the results by summation of market value in place of number of rows . [question] List the main industry with highest total market value and its number of companies . [system description] Step 1 : find the number of rows of each value of main industry in company table . Step 2 : find the main industry and number of rows in company table with largest value in the results of step 1 . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 1 , do not use the characteristics table and product characteristics table . in step 2 , consider the product category code equals Spices and typical buying price greater than 1000 conditions in place of the characteristic name equals warm and product category code equals Herbs conditions . [question] Find the number of products with category " Spices " and typically sold above 1000 . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " warm " and product category code equals " Herbs " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Spices ) [C] product category description ( Spices ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Spices ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] which states border the ohio river [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the files table besides the song table . in step 2 , additionally find maximum duration . order the results by languages in place of resolution . [question] What are the maximum duration and resolution of songs grouped and ordered by languages ? [system description] Step 1 : find the resolution of each value of languages in song table . Step 2 : find the maximum resolution and languages in song table ordered ascending by the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the student table . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . find has allergy 's stuid in place of first name . [question] Show all student IDs who have at least two allergies . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in student table . Step 2 : find the number of rows of each value of has allergy 's stuid of the results of step 1 . Step 3 : find the first name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
additionally make sure that death year equals . you should not order the results . [question] Find all the players ' first name and last name who have empty death record . [system description] find the name first and name last in player table ordered ascending by name first and name first . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
use city table in place of state table . consider the city name equals springfield conditions in place of the area equals dummy value conditions . [question] what state is springfield located in [system description] find the state name in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the domain author table , domain table , and author table besides the organization table . consider the domain 's name equals Databases and continent equals North America conditions in place of the continent equals dummy value conditions . [question] return me all the organizations in Databases area located in " North America " . [system description] find the name in organization table whose continent equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the border info 's state name equals kentucky conditions in place of the border equals dummy value conditions . find number of border in place of number of rows . [question] how many states does kentucky border [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use certificate table in place of employee table . find number of different certificate 's employee id in place of number of rows . [question] How many employees have certificate . [system description] find the number of rows in employee table . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
use player table and tryout table in place of college table . additionally make sure that decision equals yes . find average training hours and maximum training hours in place of average enrollment and maximum enrollment . [question] Find the average and maximum hours for the students whose tryout decision is yes . [system description] find the average enrollment and maximum enrollment in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
in step 1 , use employee table and class table in place of professor table . find for value of professor employee number in place of professor office . in step 2 , find employee first name in place of professor extension . [question] Find the first names of professors who are teaching more than one class . [system description] Step 1 : find the number of rows of each value of professor office in professor table . Step 2 : find the professor extension in professor table whose corresponding value in step 1 is greater than 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the customers table . in step 2 , find for each value of customers 's customer id in place of complaints 's product id . in step 3 , make sure no repetition in the results . [question] Which products has been complained by the customer who has filed least amount of complaints ? [system description] Step 1 : for each row in products table , find the corresponding rows in complaints table . Step 2 : find the number of rows of each value of complaints 's product id of the results of step 1 . Step 3 : find the product name of the results of step 1 with smallest value in the results of step 2 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what is the capital of the largest state [system description] find the capital in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the mountain name equals whitney conditions in place of the mountain name equals dummy value conditions . find mountain 's state name in place of area . [question] where is mount whitney located [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the manufacturers table besides the products table . do not return manufacturer . [question] What is all the product data , as well as each product 's manufacturer ? [system description] find the rows and manufacturer in products table . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 3 , make sure that the corresponding value in step 2 greater than 30 . [question] What are the full names of actors who had roles in more than 30 films ? [system description] Step 1 : for each row in film actor table , find the corresponding rows in actor table . Step 2 : find the number of rows of each value of film actor 's actor id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , do not use the cast table , copyright table , and actor table . in step 2 , consider the release year greater than 2006 and director 's name equals Steven Spielberg conditions in place of the director 's name equals dummy value and actor 's birth year greater than dummy value conditions . [question] Find all movies directed by " Steven Spielberg " after 2006 [system description] Step 1 : for each row in director table , find the corresponding rows in directed by table and in copyright table and in cast table and in actor table and in movie table . Step 2 : find the title of the results of step 1 whose director 's name equals " dummy value " and actor 's birth year greater than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally use the information from the medicine enzyme interaction table besides the enzyme table . consider the interaction type equals inhibitor conditions in place of the name equals Protoporphyrinogen oxidase conditions . make sure no repetition in the results . [question] What are the distinct name , location and products of the enzymes which has any 'inhibitor ' interaction ? [system description] find the name , location , product in enzyme table whose name equals " Protoporphyrinogen oxidase " . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( inhibitor )
additionally use the information from the authors table and authorship count table besides the institution table . consider the first name equals Katsuhiro and last name equals Ueno conditions in place of the country equals France conditions . make sure no repetition in the results . [question] Which institution does " Katsuhiro Ueno " belong to ? [system description] find the name in institution table whose country equals " France " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ueno ) [C] first name ( Katsuhiro ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
use highlow table in place of mountain table . consider the lowest point equals death valley conditions in place of the mountain name equals dummy value conditions . find lowest elevation in place of mountain altitude . [question] what is the elevation of death valley [system description] find the mountain altitude in mountain table whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find for each value of student 's department code in place of department name . in step 3 , find average student gpa in place of average student num . [question] Which department has the highest average student GPA , and what is the average gpa ? [system description] Step 1 : for each row in department table , find the corresponding rows in student table . Step 2 : find the average student gpa of each value of department name of the results of step 1 . Step 3 : find the department name and average student num of the results of step 1 with largest value in the results of step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the country equals UK and gender equals Male conditions in place of the country equals USA and gender equals Female conditions . [question] What are the names of all male British artists ? [system description] find the artist name in artist table whose gender equals " Female " and country equals " USA " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Male ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , use author table and writes table in place of cite table in step 2 , consider the citation num greater than 200 and name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . in step 3 , do not find for each value of jid . in step 4 , find title in place of jid . [question] return me the paper by " H. V. Jagadish " with more than 200 citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of cited of each value of jid the results of step 2 . Step 4 : find the jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the party services table besides the parties table . find for each value of party email in place of party id . [question] Which is the email of the party that has used the services the most number of times ? [system description] Step 1 : find the number of rows of each value of party id in parties table . Step 2 : find the party email in parties table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , additionally find company . [question] What are the main industries of the companies without gas stations and what are the companies ? [system description] Step 1 : find the station company 's company id in station company table . Step 2 : find the main industry and main industry in company table whose company 's company id not one of the results of step 1 . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 1 , do not use the city table . in step 2 , consider the capital equals salem conditions in place of the city 's state name equals dummy value conditions . find state 's state name in place of capital . [question] salem is the capital of which state [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the affected region table besides the storm table . find for each value of storm 's storm id in place of name . [question] What is the storm name and max speed which affected the greatest number of regions ? [system description] Step 1 : find the number of rows of each value of name in storm table . Step 2 : find the name and max speed in storm table with largest value in the results of step 1 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , additionally use the information from the medicine enzyme interaction table besides the enzyme table . additionally make sure that interaction type equals activitor . [question] What is the id and name of the enzyme that can interact with the most medicines as an activator ? [system description] Step 1 : find the number of rows of each value of id in enzyme table . Step 2 : find the id and name in enzyme table with largest value in the results of step 1 . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
in step 2 , do not find for each value of station id . in step 3 , additionally make sure that bikes available greater than 12 . make sure no repetition in the results . [question] What are the id and name of the stations that have ever had more than 12 bikes available ? [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the id and name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , additionally use the information from the player college table besides the college table . [question] Find the full name and id of the college that has the most baseball players . [system description] Step 1 : find the number of rows of each value of college id in college table . Step 2 : find the name full , name full , college id in college table with largest value in the results of step 1 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally use the information from the cast table and actor table besides the movie table . consider the title equals Saving Private Ryan conditions in place of the title equals dummy value conditions . find number of different name in place of number of rows . [question] How many actors are in the movie " Saving Private Ryan " ? [system description] find the number of rows in movie table whose title equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , consider the order status code equals Pending conditions in place of the order status code equals New conditions . make sure no repetition in the results . order the results by customer orders 's customer id in place of customer name . [question] What are the distinct names of customers with an order status of Pending , sorted by customer id ? [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table . Step 2 : find the customer name of the results of step 1 whose order status code equals " New " ordered ascending by customer name . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Pending ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , additionally use the information from the author table . in step 2 , consider the keyword equals Relational Database conditions in place of the keyword like dummy value conditions . find number of different name in place of number of writes 's pid . [question] return me the number of authors who have papers containing keyword " Relational Database " . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table and in publication keyword table and in keyword table . Step 2 : find the number of writes 's pid of the results of step 1 whose keyword like " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , remove the class senator vote equals 1028 conditions . make sure no repetition in the results . [question] Find the distinct first names of the students who have class senator votes . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the first name of the results of step 1 whose class senator vote equals 1028 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , use member of table in place of enrolled in table , course table , minor in table , and student table in step 2 , consider the member of 's department number equals 520 conditions in place of the minor in 's department number equals 50 conditions . [question] Find the full names of faculties who are members of department with department number 520 . [system description] Step 1 : for each row in faculty table , find the corresponding rows in course table and in enrolled in table and in student table and in minor in table . Step 2 : find the faculty 's first name and faculty 's last name of the results of step 1 whose minor in 's department number equals 50 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , use bank table in place of customer table . find for each value of bank 's state in place of customer 's state . in step 2 , find bank 's state in place of customer 's state . order the results by summation of no of customers in place of number of rows . [question] Find the state which has the most number of customers . [system description] Step 1 : find the number of rows of each value of state in customer table . Step 2 : find the state in customer table with largest value in the results of step 1 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
find average velocity in place of velocity . [question] What is the velocity of the pilot named 'Thompson ' ? [system description] find the velocity in flight table whose pilot equals " Thompson " . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot ( Thompson ) [C] velocity [C] altitude [C] airport id [C] company id
in step 1 , do not use the director table . in step 2 , consider the title equals Finding Nemo conditions in place of the name equals dummy value conditions . [question] How much was the budget of " Finding Nemo " [system description] Step 1 : for each row in director table , find the corresponding rows in movie table . Step 2 : find the budget of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally use the information from the flight table besides the aircraft table . find for each value of flight 's airline id in place of name . [question] What is the name of each aircraft and how many flights does each one complete ? [system description] find each value of name in aircraft table along with the number of the corresponding rows to each value . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , consider the club name equals Bootup Baltimore and position equals President conditions in place of the club name equals Pen and Paper Gaming conditions . [question] Who is the president of the club " Bootup Baltimore " ? Give me the first and last name . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Pen and Paper Gaming " and club name equals " Pen and Paper Gaming " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( President )
consider the max temperature f greater than 85 conditions in place of the max temperature f greater than 44 conditions . you should not find the largest of the results . show me all the results . [question] What are the dates with a maximum temperature higher than 85 ? [system description] find the date in weather table whose max temperature f greater than 44 with largest value of max temperature f . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , consider the name equals Google conditions in place of the name equals Tohoku University conditions . make sure no repetition in the results . [question] Find the first names and last names of the authors whose institution affiliation is " Google " . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " Tohoku University " . [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the keyword table , domain table , domain author table , author table , writes table , and domain keyword table . in step 2 , consider the title equals Making database systems usable conditions in place of the keyword equals dummy value conditions . [question] return me the abstract of " Making database systems usable " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the abstract of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what is the biggest state [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the election table besides the county table . find for each value of county id whose number of rows greater than or equals 2 . [question] Which counties have two or more delegates ? Give me the county names . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , use river table in place of state table . consider the traverse equals tennessee conditions in place of the area equals dummy value conditions . find river name in place of state name . [question] what rivers do not run through tennessee [system description] Step 1 : find the state name in state table whose area equals " dummy value " . Step 2 : find the river name in river table whose river name not one of the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use journal table in place of author table and writes table in step 2 , consider the journal 's name equals PVLDB and citation num greater than 200 conditions in place of the author 's name equals dummy value conditions . in step 3 , do not find for each value of publication 's jid . in step 4 , find title in place of publication 's jid . [question] return me the paper in PVLDB with more than 200 citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the student table . in step 2 , consider the grade equals B conditions in place of the grade equals D+ conditions . find number of different enrolled in 's student id in place of number of rows . [question] Find the number of students that have at least one grade " B " . [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table . Step 2 : find the number of rows of the results of step 1 whose grade equals " D+ " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 2 , order the results by event attendance in place of journalist 's name . [question] Show the names of journalists and the names of the events they reported in ascending order [system description] Step 1 : for each row in event table , find the corresponding rows in news report table and in journalist table . Step 2 : find the journalist 's name and event 's name of the results of step 1 ordered ascending by journalist 's name . [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
consider the gender equals female and birth city equals New York City and birth year greater than 1980 conditions in place of the birth city equals dummy value and birth year greater than dummy value conditions . [question] Find all the female actors born in " New York City " after 1980 [system description] find the name in actor table whose birth city equals " dummy value " and birth year greater than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally use the information from the tourist attractions table besides the shops table . additionally make sure that how to get there equals walk . [question] What are the details of the shops that can be accessed by walk ? [system description] find the shop details in shops table . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( walk ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
make sure no repetition in the results . [question] Find the names of all the product characteristics . [system description] find the characteristic name in characteristics table . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the customers table . in step 2 , consider the order status equals Cancelled conditions in place of the order status equals Delivered conditions . find number of different customer orders 's customer id in place of number of rows . [question] Return the number of customers who have at least one order with " Cancelled " status . [system description] Step 1 : for each row in customer orders table , find the corresponding rows in customers table . Step 2 : find the number of rows of the results of step 1 whose order status equals " Delivered " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status ( Cancelled ) [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
remove the country name equals dummy value conditions . [question] give me all the states of usa [system description] find the state name in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use customer table in place of store table . [question] Which store has most the customers ? [system description] Step 1 : find the number of rows of each value of store id in store table . Step 2 : find the store id in store table with largest value in the results of step 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , use publication keyword table in place of domain author table , domain table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 4 , do not return number of rows . order the results by number of different title in place of number of rows . [question] return me the journal , which has the most number of papers containing keyword " Relational Database " . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of journal 's name the results of step 2 . Step 4 : find the journal 's name and number of rows the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 3 , additionally find destination airport id . [question] Find the name and city of the airport which is the destination of the most number of routes . [system description] Step 1 : for each row in routes table , find the corresponding rows in airports table . Step 2 : find the number of rows of each value of destination airport id of the results of step 1 . Step 3 : find the name and city of the results of step 1 with largest value in the results of step 2 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( CITY ) [C] country [C] active
in step 2 , consider the dorm name equals Anonymous Donor Hall conditions in place of the dorm name equals Dorm-plex 2000 conditions . find amenity name in place of dorm name . [question] What are the amenities in alphabetical order that Anonymous Donor Hall has ? [system description] Step 1 : for each row in dorm table , find the corresponding rows in has amenity table and in dorm amenity table . Step 2 : find the dorm name of the results of step 1 whose dorm name equals " Dorm-plex 2000 " ordered ascending by amenity name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Anonymous Donor Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , use state table in place of highlow table . find maximum area in place of maximum highest elevation . in step 2 , additionally use the information from the state table besides the highlow table . make sure the area is equals the results of step 1 the highest elevation is equals the results of step 1 . find highest elevation in place of maximum highest point . [question] how high is the highest point in the largest state [system description] Step 1 : find the maximum highest elevation in highlow table . Step 2 : find the maximum highest point in highlow table whose highest elevation equals the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the class room equals 107 conditions in place of the class room equals 109 conditions . make sure no repetition in the results . [question] List the first names of all the students in room 107 . [system description] find the first name in list table whose class room equals 109 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
make sure no repetition in the results . [question] What are all the labels ? [system description] find the label in albums table . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , consider the amount greater than 10 conditions in place of the amount greater than 10.99 conditions . in step 3 , consider the first name equals Elsa conditions in place of the last name equals dummy value and first name equals dummy value conditions . [question] What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa ? [system description] Step 1 : find the payment date in payment table whose amount greater than 10.99 . Step 2 : for each row in payment table , find the corresponding rows in staff table . Step 3 : find the payment date of the results of step 2 whose first name equals " dummy value " and last name equals " dummy value " . Step 4 : show the rows that are in any of the results of step 1 and step 3 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , use publication keyword table in place of domain author table , domain table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 4 , order the results by number of different title in place of number of rows . [question] return me the conference , which has the most number of papers containing keyword " Relational Database " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
order the results by name in place of assets billion . [question] List the name and assets of each company in ascending order of company name . [system description] find the name and assets billion in companies table ordered ascending by assets billion . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
in step 1 , find for each value of how to get there in place of attraction type code . [question] Which transportation method is used the most often to get to tourist attractions ? [system description] Step 1 : find the number of rows of each value of attraction type code in tourist attractions table . Step 2 : find the how to get there in tourist attractions table with largest value in the results of step 1 . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
additionally use the information from the files table besides the song table . order the results by duration in place of song name . [question] What are the names of the artists who sang the shortest song ? [system description] find the artist name in song table with smallest value of song name . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the state name equals california conditions in place of the area equals dummy value conditions . find population in place of summation of population . [question] how many people live in california [system description] find the summation of population in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the year equals 1995 conditions in place of the year equals 1978 conditions . [question] Return the types of film market estimations in 1995 . [system description] find the type in film market estimation table whose year equals 1978 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , do not use the mountain table and state table . in step 2 , consider the highlow 's state name equals iowa conditions in place of the mountain 's state name equals dummy value conditions . find lowest point in place of minimum lowest point . [question] what is the lowest point in iowa in meters [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose mountain 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find for each value of project id in place of document id . find project id in place of document type code . [question] How many documents are with document type code BK for each product id ? [system description] Step 1 : find rows in documents table whose document type code equals " BK " . Step 2 : find each value of document id the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code ( BK ) [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( BK ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , additionally make sure that competition type equals Tournament . [question] what is the name of the country that participated in the most tournament competitions ? [system description] Step 1 : find the number of rows of each value of country in competition table . Step 2 : find the country in competition table with largest value in the results of step 1 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type ( Tournament ) [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
in step 1 , use journal table in place of cite table in step 2 , consider the journal 's name equals PVLDB and author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value and cited equals dummy value conditions . find number of different title in place of number of publication 's pid . [question] return me the number of papers by " H. V. Jagadish " on PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in cite table . Step 2 : find the number of publication 's pid of the results of step 1 whose cited equals " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the border info table and lake table . in step 2 , consider the state 's state name equals new mexico conditions in place of the lake 's state name equals dummy value and border info 's state name equals dummy value conditions . [question] what is the area of the new mexico state [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in lake table . Step 2 : find the state 's area of the results of step 1 whose border info 's state name equals " dummy value " and lake 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals delaware conditions in place of the state name equals dummy value conditions . find highest elevation in place of maximum highest point . [question] how high is the highest point in delaware [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the enroll table and class table besides the student table . consider the course code equals ACCT-211 conditions in place of the student class equals Jr conditions . [question] What is the first name of each student enrolled in class ACCT-211 ? [system description] find the student first name in student table whose student class equals " Jr " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the bed type equals King conditions in place of the beds equals 1 conditions . [question] What are the names and decor of rooms with a king bed ? Sort them by their price [system description] find the room name and decor in rooms table whose beds equals 1 ordered ascending by base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the product suppliers table and products table besides the suppliers table . consider the product name equals red jeans conditions in place of the supplier name equals Lidl conditions . make sure no repetition in the results . [question] List the names and phone numbers of all the distinct suppliers who supply red jeans . [system description] find the supplier name and supplier phone in suppliers table whose supplier name equals " Lidl " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name ( red jeans ) [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
find end station name in place of end station id . order the results ascending . only show me the first 3 results . [question] Give me the start station and end station for the trips with the three oldest id . [system description] find the start station name and end station id in trip table with largest value of id . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , additionally use the information from the characteristics table . in step 2 , consider the product name equals sesame conditions in place of the product name equals caraway conditions . find number of different characteristic name in place of number of product characteristics 's characteristic id . [question] How many distinct characteristic names does the product " cumin " have ? [system description] Step 1 : for each row in products table , find the corresponding rows in product characteristics table . Step 2 : find the number of characteristic id of the results of step 1 whose product name equals " caraway " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , find for each value of country in place of name . [question] What is the name of the country with the most number of home airlines ? [system description] Step 1 : find the number of rows of each value of name in airlines table . Step 2 : find the country in airlines table with largest value in the results of step 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Homer ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value conditions . [question] return me the conferences , which have papers by " H. V. Jagadish " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the conference 's name of the results of step 1 whose author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the border info 's state name equals kentucky conditions in place of the border equals dummy value conditions . find number of border in place of number of rows . [question] number of states bordering kentucky [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the river name is not one of river name river whose traverse equals tennessee conditions in place of the river name not equals dummy value conditions . [question] which rivers do not run through tennessee [system description] find the river name in river table whose river name not equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the station table . in step 2 , find for each value of start station name whose number of rows greater than or equals 200 . in step 3 , find start station id in place of station 's id . [question] What are the ids and names of all start stations that were the beginning of at least 200 trips ? [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the number of rows of each value of start station id of the results of step 1 . Step 3 : find the station 's id and start station name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 3 , use the largest in place of smallest . [question] What are the names of the aircraft that the least people are certified to fly ? [system description] Step 1 : for each row in certificate table , find the corresponding rows in aircraft table . Step 2 : find the number of rows of each value of certificate 's airline id of the results of step 1 . Step 3 : find the name of the results of step 1 with smallest value in the results of step 2 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] Show the name of each party and the corresponding number of delegates from that party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the age less than 30 conditions in place of the age less than 35 conditions . [question] Find the ids and names of members who are under age 30 or with black membership card . [system description] find the member id and name in member table whose age less than 35 or membership card equals " Black " . [schema] [T] shop [C] shop id [C] address [C] num of staff [C] score [C] open year [T] member [C] member id [C] name [C] membership card ( Black ) [C] age [C] time of purchase [C] level of membership [C] address [T] happy hour [C] hh id [C] shop id [C] month [C] num of shaff in charge [T] happy hour member [C] hh id [C] member id [C] total amount
consider the product details like % Latte % or product details like % Americano % conditions in place of the product details like Dove Chocolate or product details like Latte conditions . [question] Which product 's detail contains the word " Latte " or " Americano " ? Return the full detail . [system description] find the product details and product details in products table whose product details like " Latte " or product details like " Dove Chocolate " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details ( Americano , Latte ) [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the author table besides the organization table . consider the organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value conditions . find author 's name in place of organization 's name . [question] return me all the researchers in " University of Michigan " . [system description] find the name in organization table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the student table . [question] Show all sport name and the number of students . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find each value of sport name of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , use journal table and writes table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . in step 3 , find the number of different title for each value of author 's name . in step 4 , make sure that the corresponding value in step 3 greater than 10 . [question] return me the authors who have more than 10 papers in PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in author table . Step 2 : only keep the results of step 1 whose organization 's name equals " dummy value " . Step 3 : find the number of jid of each value of author 's name the results of step 2 . Step 4 : find the author 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the product name equals keyboard conditions in place of the product price equals 803.74 conditions . make sure no repetition in the results . [question] List the names of all the distinct customers who bought a keyboard . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table and in order items table and in products table . Step 2 : find the customer name of the results of step 1 whose product price equals 803.74 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name ( keyboard ) [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the student table . in step 2 , consider the allergy type equals food conditions in place of the allergy type equals animal conditions . [question] How many students are affected by food related allergies ? [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the number of rows of the results of step 1 whose allergy type equals " animal " . [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , do not use the mountain table and state table . in step 2 , consider the city name equals boulder conditions in place of the mountain name equals dummy value conditions . [question] population of boulder [system description] Step 1 : for each row in city table , find the corresponding rows in state table and in mountain table . Step 2 : find the city 's population of the results of step 1 whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the files table besides the song table . in step 2 , additionally find maximum duration . [question] What are the maximum duration and resolution of all songs , for each language , ordered alphabetically by language ? [system description] Step 1 : find the languages of each value of languages in song table . Step 2 : find the maximum resolution and languages in song table ordered ascending by the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the special features like % Deleted Scenes % conditions in place of the special features like Behind the Scenes and special features like Trailers , Deleted Scenes , Behind the Scenes conditions . [question] Which movies have 'Deleted Scenes ' as a substring in the special feature ? [system description] find the title in film table whose special features like " Trailers , Deleted Scenes , Behind the Scenes " and special features like " Behind the Scenes " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features ( Deleted Scenes ) [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
additionally use the information from the person table besides the person friend table . consider the person 's name equals Bob conditions in place of the person friend 's name equals Alice conditions . [question] Who are Bob 's friends ? [system description] find the name in person friend table whose name equals " Alice " . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
in step 2 , additionally make sure that person friend 's name equals Zach . in step 3 , additionally make sure that person friend 's name equals Zach . [question] What are the ages of all of Zach 's friends who are in the longest relationship ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the maximum year in person friend table . Step 3 : find the age of the results of step 1 whose year equals the results of step 2 . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , additionally use the information from the checking table . in step 2 , consider the name equals Brown conditions in place of the name equals Granger conditions . find checking 's balance in place of rows . [question] What are the checking and savings balances in accounts belonging to Brown ? [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table . Step 2 : find the rows and balance of the results of step 1 whose name equals " Granger " . [schema] [T] accounts [C] customer id [C] name ( Brown ) [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
consider the instrument equals drums conditions in place of the instrument equals dummy value conditions . [question] How many songs have used the instrument " drums " ? [system description] find the number of rows in instruments table whose instrument equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , consider the year greater than 2000 and name equals VLDB conditions in place of the name equals dummy value and year greater than dummy value conditions . find number of different title in place of number of jid . [question] return me the number of papers on VLDB conference after 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the medicine enzyme interaction table besides the enzyme table . additionally make sure that interaction type equals inhibitor . make sure no repetition in the results . [question] What are the different names , locations , and products of the enzymes that are capable inhibitor interactions ? [system description] find the name , location , product in enzyme table . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( inhibitor )
in step 1 , do not use the home game table , team table , batting table , batting postseason table , and player table . in step 2 , consider the postseason 's year equals 1885 conditions in place of the batting 's year equals 1927 conditions . [question] Find the number of tied games ( the value of " ties " is ' 1 ' ) in 1885 postseason . [system description] Step 1 : for each row in home game table , find the corresponding rows in postseason table and in team table and in batting postseason table and in player table and in batting table . Step 2 : find the number of rows of the results of step 1 whose batting 's year equals 1927 and ties equals 1 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , order the results by date assigned to minus date assigned from in place of date assigned to . [question] What is the id and name of the staff who has been assigned for the least amount of time ? [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff 's staff id and staff name of the results of step 1 with smallest value of date assigned to . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , use enroll table and class table in place of department table and course table in step 2 , consider the class 's course code equals ACCT-211 conditions in place of the course 's course code equals ACCT-212 conditions . [question] What are the first names of all students in course ACCT-211 ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name of the results of step 1 whose course code equals " ACCT-212 " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , consider the rental date greater than 2005-08-23 02:06:01 conditions in place of the return date greater than 2005-08-30 12:31:17 conditions . [question] Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01 ' . [system description] Step 1 : find the rental 's customer id in rental table whose return date greater than " 2005-08-30 12:31:17 " . Step 2 : find the first name in customer table whose customer 's customer id not one of the results of step 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date ( 2005-08-23 02:06:01 , 2005-08-23 02:06:41 ) [C] last update [T] rental [C] rental id [C] rental date ( 2005-08-23 02:06:01 , 2005-08-23 02:06:41 ) [C] inventory id [C] customer id [C] return date ( 2005-08-23 02:06:11 ) [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , do not use the state table . in step 2 , consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] which state is springfield in [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the salary greater than 100000 conditions in place of the salary greater than or equals 256481 conditions . [question] What is the id of every employee who has at least a salary of 100000 ? [system description] find the employee id in employee table whose salary greater than or equals 256481 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , use category table in place of film table in step 2 , find name and film category 's category id in place of title and film category 's film id . [question] How many films are there in each category ? List the genre name , genre id and the count . [system description] Step 1 : for each row in film category table , find the corresponding rows in film table . Step 2 : find each value of category id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals texas conditions in place of the city 's state name equals dummy value conditions . [question] what is capital of texas [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the store table . [question] What is the id of the store that has the most items in inventory ? [system description] Step 1 : for each row in store table , find the corresponding rows in inventory table . Step 2 : find the number of rows of each value of inventory 's store id of the results of step 1 . Step 3 : find the inventory 's store id of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 2 , do not find for each value of name . in step 3 , order the results by number deaths in place of summation of number deaths . [question] What are the names of regions that were affected by the storm in which the most people died ? [system description] Step 1 : for each row in region table , find the corresponding rows in affected region table and in storm table . Step 2 : find the summation of number deaths of each value of name of the results of step 1 . Step 3 : find the region name of the results of step 1 with largest value in the results of step 2 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
find for each value of yearid in place of inducted . [question] Count the number of players who enter hall of fame for each year . [system description] find each value of inducted in hall of fame table along with the number of the corresponding rows to each value . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Count ) [C] name last ( Hall ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , additionally use the information from the acceptance table besides the submission table . find the number of different workshop id for each value of author . [question] Show the authors who have submissions to more than one workshop . [system description] Step 1 : find the number of rows of each value of author in submission table . Step 2 : find the author in submission table whose corresponding value in step 1 is greater than 1 . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
in step 1 , use publication keyword table in place of domain author table , domain table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 3 , find the number of different title for each value of conference 's name . in step 4 , make sure that the corresponding value in step 3 greater than 60 . [question] return me the conferences , which have more than 60 papers containing keyword " Relational Database " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally make sure that enrollment greater than 18000 . order the results ascending by college name in place of ordering descending by enrollment . [question] List the name of the colleges whose enrollment is greater 18000 sorted by the college 's name . [system description] find the college name in college table ordered descending by enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the reference document types table . in step 2 , consider the document name equals Noel CV or document name equals King Book conditions in place of the document name equals Review on French files or document description equals None conditions . find document name and documents 's document type code in place of document type name . [question] What are the type come , name , and description of the document that has either the name 'Noel CV ' or 'King Book ' ? [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the document type name , document type name , document description of the results of step 1 whose document name equals " Review on French files " or document description equals " None " . [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( Book , CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name ( King Book , Noel CV ) [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 2 , find document type name and document date in place of document name and document description . [question] Return the type name , type description , and date of creation for each document . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the document name , document type description , document description of the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the bank table . in step 2 , find for each value of customer name . order the results by summation of amount in place of amount . [question] Find the name of customer who has the highest amount of loans . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 with largest value of amount . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , do not use the projects table . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . [question] Show the ids for projects with at least 2 documents . [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , use journal table in place of domain author table , domain table , author table , and writes table in step 2 , consider the journal 's name equals PVLDB conditions in place of the domain 's name equals dummy value conditions . in step 3 , find the number of different title for each value of keyword . in step 4 , make sure that the corresponding value in step 3 greater than 100 . [question] return me the keywords , which have been contained by more than 100 papers in PVLDB . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table and in domain author table and in domain table . Step 2 : only keep the results of step 1 whose domain 's name equals " dummy value " . Step 3 : find the number of rows of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the conference 's name equals VLDB conditions in place of the conference 's name equals dummy value conditions . [question] return me the authors who have papers in the VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the author 's name of the results of step 1 whose conference 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the lake table . in step 2 , consider the traverse equals illinois conditions in place of the state name equals dummy value conditions . [question] what are the rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the visitors table . in step 2 , consider the tourist details equals Vincent conditions in place of the visit details equals conditions . [question] Which tourist attractions does the visitor with detail 'Vincent ' visit ? [system description] Step 1 : for each row in tourist attractions table , find the corresponding rows in visits table . Step 2 : find the name of the results of step 1 whose visit details equals " " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , consider the latitude greater than 37.4 conditions in place of the latitude greater than 37.771058000000004 conditions . in step 2 , do not use the station table . in step 3 , remove the bikes available less than 15 conditions . find for each value of station id whose minimum bikes available less than 7 . [question] What are the ids of stations that have latitude above 37.4 and never had bike availability below 7 ? [system description] Step 1 : find the id in station table whose latitude greater than 37.771058000000004 . Step 2 : for each row in station table , find the corresponding rows in status table . Step 3 : find the id of the results of step 2 whose bikes available less than 15 . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
find for each value of pets allowed yn . additionally find pets allowed yn . [question] What are the average prices of hotels grouped by their pet policy . [system description] find the average price range and average price range in hotels table . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , use class table in place of department table in step 2 , remove the course description equals Statistical Applications conditions . additionally find course description . [question] What are the first names , office locations of all lecturers who have taught some course ? [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table and in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose course description equals " Statistical Applications " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use movie table in place of copyright table in step 2 , consider the director 's name equals Quentin Tarantino conditions in place of the director 's name equals dummy value conditions . order the results by release year in place of actor 's birth year . [question] Find the actors who played in the latest movie by " Quentin Tarantino " [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : find the actor 's name of the results of step 1 whose director 's name equals " dummy value " with largest value of actor 's birth year . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , consider the person friend 's name equals Alice conditions in place of the gender equals male conditions . [question] Find the female friends of Alice . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose gender equals " male " and gender equals " female " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , do not use the publication keyword table and keyword table . in step 2 , consider the title equals Making database systems usable conditions in place of the keyword equals dummy value conditions . [question] return me the authors of " Making database systems usable " . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : find the name of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the source airport id is one of airport id airports whose country equals United States and destination airport id is one of airport id airports whose country equals Canada conditions in place of the destination airport equals CCC and destination airport equals BBK conditions . [question] How many routes go from the United States to Canada ? [system description] find the number of rows in routes table whose destination airport equals " CCC " and destination airport equals " BBK " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( GO ) [C] source airport id [C] source airport ( GO ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States , Canada ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata ( GO ) [C] icao [C] call sign ( STATES , UNITED ) [C] country ( United States , Canada ) [C] active
find number of different party name in place of number of rows . [question] Count the number of different parties . [system description] find the number of rows in party table . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , consider the capacity greater than 300 conditions in place of the capacity greater than 208 conditions . in step 2 , find the number of rows for each value of location . [question] Find the locations that have more than one movie theater with capacity above 300 . [system description] Step 1 : find rows in cinema table whose capacity greater than 208 . Step 2 : find the number of capacity of each value of location the results of step 1 . Step 3 : find the location the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
in step 2 , find for each value of color description in place of products 's color code . [question] What is the description of the color used by least products ? [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the number of rows of each value of products 's color code of the results of step 1 . Step 3 : find the color description of the results of step 1 with smallest value in the results of step 2 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the enroll table , student table , and class table . in step 2 , consider the school code equals BUS conditions in place of the class 's class code equals 10016 conditions . find number of different department address in place of department address . [question] What are the different locations of the school with the code BUS ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the department address of the results of step 1 whose class 's class code equals 10016 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code ( BUS ) [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally use the information from the visits table besides the tourist attractions table . [question] Show different tourist attractions ' names , ids , and the corresponding number of visits . [system description] find each value of tourist attraction id in tourist attractions table along with the number of the corresponding rows to each value . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the teachers 's first name equals MARROTTE and teachers 's last name equals KIRK conditions in place of the teachers 's first name equals ALFREDA and teachers 's last name equals KRIENER conditions . find list 's last name in place of teachers 's last name . [question] Find all students taught by MARROTTE KIRK . Output first and last names of students . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " ALFREDA " and teachers 's last name equals " KRIENER " . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MARROTTE ) [C] first name (  KIRK ) [C] class room
additionally use the information from the checking table and accounts table besides the savings table . order the results by checking 's balance in place of savings 's balance . [question] What is the savings balance of the account belonging to the customer with the highest checking balance ? [system description] find the balance in savings table with largest value of balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , additionally use the information from the exhibition table besides the artist table . find for each value of exhibition 's artist id in place of name . [question] What is the name and country for the artist with most number of exhibitions ? [system description] Step 1 : find the number of rows of each value of name in artist table . Step 2 : find the name and country in artist table with largest value in the results of step 1 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 2 , do not use the person table . in step 3 , consider the friend equals Alice conditions in place of the job equals student conditions . in step 4 , additionally make sure that friend equals Alice . [question] Find the name , age , and job title of persons who are friends with Alice for the longest years . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : for each row in person table , find the corresponding rows in person friend table . Step 3 : find the maximum year of the results of step 2 whose job equals " student " . Step 4 : find the person 's name , age , job of the results of step 1 whose year equals the results of step 3 . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , consider the country equals Australia conditions in place of the country equals Brunei conditions . [question] Count the number of cities in Australia . [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of the results of step 1 whose country equals " Brunei " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country ( Australia ) [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
additionally use the information from the address table besides the customer table . consider the first name equals LINDA conditions in place of the first name equals MINNIE conditions . find address in place of last name . [question] Where does the customer with the first name Linda live ? And what is her email ? [system description] find the email and last name in customer table whose first name equals " MINNIE " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name ( LINDA ) [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , consider the grade equals 0 conditions in place of the class room equals 111 conditions . in step 2 , find for each value of class room in place of grade . find class room in place of grade . [question] For each grade 0 classroom , report the total number of students . [system description] Step 1 : find rows in list table whose class room equals 111 . Step 2 : find each value of grade the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , do not use the border info table and state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas conditions in place of the length equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] through which states does the longest river in texas run [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose length equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
order the results by origin in place of destination . [question] What is the flight number , origin , and destination for all flights in alphabetical order by departure cities ? [system description] find the flight number , origin , destination in flight table ordered ascending by destination . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
consider the headquarter equals Tokyo or headquarter equals Beijing conditions in place of the founder equals Andy or headquarter equals Taiwan conditions . [question] How many manufacturers have headquarters in either Tokyo or Beijing ? [system description] find the number of rows in manufacturers table whose headquarter equals " Taiwan " or founder equals " Andy " . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Beijing , Tokyo ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
consider the birth city equals Los Angeles and birth year greater than 2000 conditions in place of the birth city equals dummy value and birth year greater than dummy value conditions . find number of different name in place of number of rows . [question] How many actors were born in " Los Angeles " after 2000 ? [system description] find the number of rows in actor table whose birth city equals " dummy value " and birth year greater than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the documents table . [question] Give the ids of documents with expenses that have the budget code 'SF ' . [system description] Step 1 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 2 : find the documents 's document id of the results of step 1 whose budget type code equals " SF " . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( SF ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
only show me the first 3 results . [question] What are the name and id of the three highest priced rooms ? [system description] find the room name and room id in rooms table with largest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally make sure that job equals engineer . find maximum age in place of minimum age . [question] Find the number of people whose age is greater than all engineers . [system description] Step 1 : find the minimum age in person table . Step 2 : find the number of rows in person table whose age greater than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
additionally use the information from the publication table besides the conference table . consider the name equals VLDB conditions in place of the name equals dummy value conditions . find title in place of homepage . [question] return me the papers on VLDB conference . [system description] find the homepage in conference table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the airlines table . in step 2 , consider the airports 's country equals China conditions in place of the airlines 's country equals Guinea conditions . in step 3 , find for each value of airports 's name in place of destination airport . [question] What is the name of the airport that is the destination of the most number of routes that start in China ? [system description] Step 1 : for each row in routes table , find the corresponding rows in airports table and in airlines table . Step 2 : only keep the results of step 1 whose airlines 's country equals " Guinea " . Step 3 : find the number of rows of each value of destination airport the results of step 2 . Step 4 : find the airports 's name the results of step 2 with largest value in the results of step 3 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
remove the country name equals dummy value conditions . find number of state name in place of number of rows . [question] how many states does usa have [system description] find the number of rows in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the professor high degree equals Ph.D. conditions in place of the professor high degree equals DBA conditions . find number of rows in place of number of professor high degree . [question] How many professors do have a Ph.D. degree ? [system description] find the number of professor high degree in professor table whose professor high degree equals " DBA " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree ( Ph.D. ) [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the club table , competition table , and competition result table . in step 2 , consider the total less than 10 conditions in place of the gold less than 2 conditions . [question] What is the total number of clubs that have less than 10 medals in total ? [system description] Step 1 : for each row in club rank table , find the corresponding rows in club table and in competition result table and in competition table . Step 2 : find the number of rows of the results of step 1 whose gold less than 2 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
additionally find for each value of rank . [question] Show all the ranks and the number of male and female faculty for each rank . [system description] find each value of sex in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , find check out in place of maximum rate . find the result with the largest rate . [question] Which room has the highest rate ? List the room 's full name , rate , check in and check out date . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find each value of room id of the results of step 1 along with the room name , check in , rate , and maximum rate of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , consider the base price greater than 120 conditions in place of the base price greater than 150 conditions . [question] How many rooms cost more than 120 , for each different decor ? [system description] Step 1 : find rows in rooms table whose base price greater than 150 . Step 2 : find each value of decor the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the flight table . in step 2 , consider the aircraft 's distance greater than 5000 conditions in place of the flight 's distance greater than 5478 conditions . in step 4 , do not return salary . [question] What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000 ? [system description] Step 1 : for each row in employee table , find the corresponding rows in certificate table and in aircraft table and in flight table . Step 2 : only keep the results of step 1 whose flight 's distance greater than 5478 . Step 3 : find the number of rows of each value of employee 's employee id the results of step 2 . Step 4 : find the salary and employee 's name the results of step 2 with largest value in the results of step 3 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
additionally use the information from the department table and course table besides the class table . find for each value of school code in place of class room . find school code in place of class room . [question] Find the number of classes in each school . [system description] find each value of class room in class table along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally make sure that age is equals maximum age person . you should not find the largest of the results . show me all the results . [question] Who is the oldest person ? [system description] find the name in person table with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , consider the border info 's state name equals texas conditions in place of the border equals dummy value conditions . [question] what is the total population of the states that border texas [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the summation of population of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the professor table and class table . in step 2 , remove the course 's course code equals ACCT-212 conditions . additionally find professor office . [question] Find the first names and offices of all instructors who have taught some course and the course description and the department name . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name , course description , department name of the results of step 1 whose course code equals " ACCT-212 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , make sure that the corresponding value in step 1 greater than or equals 2 . additionally find class room . [question] Find the number of classes offered for all class rooms that held at least 2 classes . [system description] Step 1 : find the number of rows of each value of class room in class table . Step 2 : find the number of rows in class table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally make sure that rank equals Professor . [question] Count the number of female Professors we have . [system description] find the number of rows in faculty table whose sex equals " F " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , do not use the bank table . in step 2 , consider the amount greater than 3000 conditions in place of the amount greater than 2050 conditions . [question] Find the the name of the customers who have a loan with amount more than 3000 . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 whose amount greater than 2050 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , do not use the mountain table . in step 2 , do not use the highlow table . in step 3 , find minimum area in place of state 's state name . you should not find the smallest of the results . show me all the results . in step 4 , make sure the area is equals the results of step 3 the mountain 's state name is equals the results of step 3 . find highest point in place of maximum highest point . [question] what is the highest point in the smallest state [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : for each row in state table , find the corresponding rows in highlow table . Step 3 : find the state 's state name of the results of step 2 with smallest value of lowest point . Step 4 : find the maximum highest point of the results of step 1 whose mountain 's state name equals the results of step 3 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of state name in place of number of rows . [question] how many states are there [system description] find the number of rows in state table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . you should not find the largest of the results . show me all the results . [question] what state has the highest elevation [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the publisher equals Alyson conditions in place of the book title equals Obedience conditions . [question] List all company names with a book published by Alyson . [system description] Step 1 : for each row in culture company table , find the corresponding rows in book club table . Step 2 : find the company name of the results of step 1 whose book title equals " Obedience " . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher ( Alyson ) [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 1 , do not use the party table . in step 2 , consider the member 's party id equals 3 conditions in place of the party 's party id equals 4 conditions . in step 3 , do not use the party table . in step 4 , consider the member 's party id equals 1 conditions in place of the party name equals 3 conditions . [question] Which member names are shared among members in the party with the id 3 and the party with the id 1 ? [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the member name of the results of step 1 whose party 's party id equals 4 . Step 3 : for each row in party table , find the corresponding rows in member table . Step 4 : find the member name of the results of step 3 whose party name equals 3 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , do not use the team table and player table . in step 3 , only show me the first 3 results . [question] What are the three colleges from which the most players are from ? [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the number of rows of each value of college of the results of step 1 . Step 3 : find the college of the results of step 1 with largest value in the results of step 2 . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 2 , consider the name equals H. V. Jagadish conditions in place of the name equals dummy value conditions . in step 3 , find the number of different title for each value of keyword . in step 4 , make sure that the corresponding value in step 3 greater than 10 . [question] return me the keywords , which have been contained by more than 10 papers of " H. V. Jagadish " . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in publication keyword table and in keyword table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of rows of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the state name equals texas conditions in place of the state name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities does texas have [system description] find the number of rows in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use city table in place of state table . consider the city name is equals capital state whose state 's state name equals texas conditions in place of the capital equals dummy value conditions . find city 's population in place of number of rows . [question] how many people live in the capital of texas [system description] find the number of rows in state table whose capital equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use movie table in place of cast table , copyright table , and actor table in step 2 , consider the director 's name equals Woody Allen conditions in place of the actor 's name equals dummy value conditions . in step 3 , find for each value of release year in place of director 's birth year . find release year and number of different title in place of director 's name and number of rows . [question] What is the number of movies directed by " Woody Allen " per year ? [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : only keep the results of step 1 whose actor 's name equals " dummy value " . Step 3 : find each value of director 's birth year the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the player table . [question] Which position is most popular among players in the tryout ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of player position of the results of step 1 . Step 3 : find the player position of the results of step 1 with largest value in the results of step 2 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the border info table and state table . in step 2 , consider the city 's population greater than 150000 and city name equals austin conditions in place of the city name equals dummy value conditions . [question] which states have a major city named austin [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the border info 's state name of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the pilot record table besides the pilot table . in step 2 , additionally find number of rows . [question] Show names of pilots that have more than one record . [system description] Step 1 : find the number of rows of each value of pilot name in pilot table . Step 2 : find the pilot name in pilot table whose corresponding value in step 1 is greater than 1 . [schema] [T] aircraft [C] aircraft id [C] order year [C] manufacturer [C] model [C] fleet series [C] powertrain [C] fuel propulsion [T] pilot [C] pilot id [C] pilot name [C] rank [C] age [C] nationality [C] position [C] join year [C] team [T] pilot record [C] record id [C] pilot id [C] aircraft id [C] date
in step 2 , consider the song name like % love % conditions in place of the song name like Aj ei akash conditions . find artist 's country in place of song 's country . [question] What is the name and country of origin of the artist who released a song that has " love " in its title ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and song 's country of the results of step 1 whose song name like " Aj ei akash " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what is the population of the largest state [system description] find the population in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the department store chain table . in step 3 , only show me the first 2 results . [question] Return the ids of the two department store chains with the most department stores . [system description] Step 1 : for each row in department store chain table , find the corresponding rows in department stores table . Step 2 : find the number of rows of each value of department stores 's department store chain id of the results of step 1 . Step 3 : find the department store chain 's department store chain id of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , additionally use the information from the settlements table besides the claims table . in step 2 , make sure that the corresponding value in step 1 greater than 2 . in step 3 , additionally use the information from the settlements table besides the claims table . do not find for each value of claims 's claim id . in step 4 , additionally make sure that claims 's amount claimed is equals maximum claims 's amount claimed claims . [question] Find the claims that led to more than two settlements or have the maximum claim value . For each of them , return the date the claim was made and the id of the claim . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the date claim made and claim id in claims table whose corresponding value in step 1 is greater than 1 . Step 3 : find the number of rows of each value of claim id in claims table . Step 4 : find the date claim made and claim id in claims table whose corresponding value in step 3 is greater than 1 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 2 , additionally make sure that start date is equals maximum start date policies . you should not find the largest of the results . show me all the results . [question] Which customer is associated with the latest policy ? [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 with largest value of end date . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 2 , order the results by date assigned to in place of date assigned from . [question] What is the name and job title of the staff who was assigned the latest ? [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff name and job title code of the results of step 1 with largest value of date assigned from . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , additionally use the information from the player table besides the school table . find for value of player 's school id in place of location . [question] Show the locations of schools that have more than 1 player . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , do not use the list table . in step 2 , consider the teachers 's class room equals 109 conditions in place of the list 's class room equals 111 conditions . [question] Find the last names of teachers teaching in classroom 109 . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's last name of the results of step 1 whose list 's class room equals 111 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 2 , consider the register year greater than 2015 conditions in place of the register year greater than 2016 conditions . in step 3 , find for each value of branch 's branch id in place of name . [question] Show all branch names with the number of members in each branch registered after 2015 . [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : only keep the results of step 1 whose register year greater than 2016 . Step 3 : find each value of name the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
remove the sex equals M and sex equals F conditions . find for each value of sex . additionally find sex . [question] What are the average ages for male and female students ? [system description] find the average age in student table whose sex equals " M " and sex equals " F " . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , find for each value of manager award 's player id in place of award id . [question] Which manager won the most manager award ? Give me the manager 's first name , last name and id . [system description] Step 1 : for each row in manager award table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of award id of the results of step 1 . Step 3 : find the name first , manager award 's player id , name last of the results of step 1 with largest value in the results of step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Manager ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , consider the sex equals M conditions in place of the sex equals F conditions . in step 2 , use sports info table in place of student table . consider the sport name equals Football conditions in place of the sex equals F conditions . [question] What are the ids of all male students who do not play football ? [system description] Step 1 : find the student id in student table whose sex equals " F " . Step 2 : find the student id in student table whose sex equals " F " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
make sure no repetition in the results . [question] Find the different billing countries for all invoices . [system description] find the billing country in invoice table . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
consider the state name equals kentucky conditions in place of the border equals dummy value conditions . [question] which state border kentucky [system description] find the border in border info table whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find for each value of studio . find number of rows in place of title . [question] How films are produced by each studio ? [system description] find the title and studio in film table . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 2 , you should not order the results . [question] Group by ships by flag , and return number of ships that have each flag . [system description] Step 1 : find the number of rows of each value of flag in ship table . Step 2 : find the flag and number of rows in ship table ordered descending by the results of step 1 . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
additionally use the information from the artist table besides the song table . find artist 's country in place of song 's country . only show me the first 3 results . [question] What are the names and countries of origin for the artists who produced the top three highly rated songs . [system description] find the artist name and country in song table with largest value of rating . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , do not return number of rows . [question] Sort all the industries in descending order of the count of companies in each industry [system description] Step 1 : find the number of rows of each value of industry in companies table . Step 2 : find the industry and number of rows in companies table ordered descending by the results of step 1 . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
find founded in place of school . [question] When was the school with the largest enrollment founded ? [system description] find the school in university table with largest value of enrollment . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , find for each value of name in place of checking 's customer id . [question] What are the names of customers with accounts , and how many checking accounts do each of them have ? [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find each value of checking 's customer id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , use producer table and made by table in place of writer table in step 2 , consider the producer 's name equals Shonda Rhimes conditions in place of the writer 's name equals dummy value conditions . [question] What are all the tv series created by " Shonda Rhimes " ? [system description] Step 1 : for each row in writer table , find the corresponding rows in tv series table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the border info table and state table . in step 2 , consider the traverse equals idaho conditions in place of the border info 's state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers does idaho have [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use roles table in place of employees table . [question] What are all role codes ? [system description] find the role code in employees table . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
consider the sport name equals Football and on scholarship equals Y conditions in place of the on scholarship equals N conditions . find summation of games played in place of number of rows . [question] How many games are played for all football games by students on scholarship ? [system description] find the number of rows in sports info table whose on scholarship equals " N " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] what is the capital of the state with the largest population [system description] find the capital in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , use sports info table in place of plays games table . [question] What are the ids of all students who do n't play sports ? [system description] Step 1 : find the student 's student id in student table . Step 2 : find the plays games 's student id in plays games table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] how many states have a city called springfield [system description] find the number of state name in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the lake table . in step 2 , consider the river name equals colorado conditions in place of the state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many colorado rivers are there [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , use trip table in place of station table . find for each value of end station name whose number of rows greater than 100 . find end station name in place of name . [question] What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips [system description] Step 1 : find the name in station table whose city equals " Palo Alto " . Step 2 : find the name in station table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , consider the list 's last name equals BROMLEY and list 's first name equals EVELINA conditions in place of the teachers 's first name equals OTHA and teachers 's last name equals MARROTTE conditions . find teachers 's first name in place of list 's first name . [question] Which teachers teach the student named EVELINA BROMLEY ? Give me the first and last name of the teachers . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " OTHA " and teachers 's last name equals " MARROTTE " . [schema] [T] list [C] last name ( BROMLEY ) [C] first name (  EVELINA ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
consider the state name equals wyoming conditions in place of the area equals dummy value conditions . [question] what is the population density of wyoming [system description] find the density in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the lake table . in step 2 , additionally make sure that state 's area is equals maximum state 's area state . you should not find the largest of the results . show me all the results . in step 3 , make sure the traverse is one of the results of step 2 the state name is equals the results of step 2 . [question] what rivers flow through the largest state [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the state 's state name in state table with largest value of density . Step 3 : find the river name of the results of step 1 whose lake 's state name equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the highlow 's state name equals colorado conditions in place of the highest elevation equals dummy value conditions . find highest elevation in place of maximum highest point . in step 3 , make sure the highest elevation is greater than the results of step 2 the highest point is greater than the results of step 2 . [question] which states have points higher than the highest point in colorado [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point in highlow table whose highest elevation equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose highest point greater than the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find highest elevation in place of maximum highest point . [question] how high are the highest points of all the states [system description] find the maximum highest point in highlow table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the author table and writes table . in step 2 , consider the organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value conditions . find summation of citation num in place of summation of jid . [question] return me the total citations of the papers in " University of Michigan " . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the summation of jid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally make sure that rank equals Professor . find last name in place of first name . in step 3 , consider the activity name equals Canoeing or activity name equals Kayaking conditions in place of the activity name equals Crossword Puzzles conditions . find last name in place of first name . make sure no repetition in the results . [question] Find the first names of professors who are not playing Canoeing or Kayaking . [system description] Step 1 : find the first name in faculty table . Step 2 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 3 : find the first name of the results of step 2 whose activity name equals " Crossword Puzzles " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 2 , consider the account type equals saving conditions in place of the account balance equals 2000 conditions . [question] What are the names of customers who do not have saving accounts ? [system description] Step 1 : find the customer name in customer table . Step 2 : find the customer name in customer table whose account balance equals 2000 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type ( saving ) [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
consider the title equals Making database systems usable conditions in place of the title equals dummy value conditions . [question] return me the citations of " Making database systems usable " . [system description] find the citation num in publication table whose title equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the name like % a % conditions in place of the name like Lulu Santos conditions . [question] Find the names of all artists that have " a " in their names . [system description] find the name in artist table whose name like " Lulu Santos " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 2 , consider the level equals 6 conditions in place of the level equals 2 conditions . [question] What is the total number of purchases for members with level 6 ? [system description] Step 1 : for each row in purchase table , find the corresponding rows in member table . Step 2 : find the number of rows of the results of step 1 whose level equals 2 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
additionally find releasedate . [question] What is the name of the song that was released in the most recent year ? [system description] find the song name in song table with largest value of releasedate . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , additionally use the information from the band table and performance table . in step 2 , consider the title equals Le Pop and last name equals Heilo conditions in place of the title equals dummy value conditions . [question] What instrument did the musician with last name " Heilo " use in the song " Le Pop " ? [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the domain journal table . in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 3 , find for each value of name in place of domain journal 's jid . in step 4 , find name in place of domain journal 's jid and number of rows . order the results by number of different title in place of number of rows . [question] return me the journal that has the most number of papers containing keyword " Relational Database " . [system description] Step 1 : for each row in domain journal table , find the corresponding rows in journal table and in publication table and in publication keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of domain journal 's jid the results of step 2 . Step 4 : find the number of rows and domain journal 's jid the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not find for each value of citation num . in step 2 , do not return number of jid . find the result with the largest citation num . [question] return me the paper with the most citations . [system description] Step 1 : find the number of jid of each value of citation num in publication table . Step 2 : find the number of jid and title in publication table ordered descending by the results of step 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the actor table , film actor table , inventory table , and film table . in step 2 , consider the customer 's first name equals APRIL and customer 's last name equals BURNS conditions in place of the staff 's last name equals dummy value and customer 's first name equals MARTHA conditions . find staff 's first name in place of actor 's first name . make sure no repetition in the results . [question] Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental . [system description] Step 1 : for each row in customer table , find the corresponding rows in rental table and in staff table and in inventory table and in film table and in film actor table and in actor table . Step 2 : find the actor 's first name and staff 's last name of the results of step 1 whose customer 's first name equals " MARTHA " and staff 's last name equals " dummy value " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name ( APRIL ) [C] last name ( BURNS ) [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . [question] What are the product ids and color descriptions for products with two or more characteristics ? [system description] Step 1 : for each row in product characteristics table , find the corresponding rows in products table and in reference colors table . Step 2 : find the number of rows of each value of product characteristics 's product id of the results of step 1 . Step 3 : find the products 's product id and color description of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the reference document types table , documents table , and reference budget codes table . in step 2 , consider the documents with expenses 's budget type code equals SF conditions in place of the reference budget codes 's budget type code equals GV conditions . find documents with expenses 's document id in place of reference document types 's document type code . [question] What are the document ids for the budget type code 'SF ' ? [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table and in reference document types table . Step 2 : find the reference document types 's document type code of the results of step 1 whose reference budget codes 's budget type code equals " GV " . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( SF ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 2 , make sure no repetition in the results . [question] Find names of colleges with enrollment greater than that of some ( at least one ) college in the FL state . [system description] Step 1 : find the minimum enrollment in college table whose state equals " FL " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [schema] [T] college [C] college name [C] state ( FL ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
consider the languages equals bangla conditions in place of the song name equals Shukno patar nupur pae conditions . find average resolution in place of resolution . [question] What is the average rating and resolution of all bangla songs ? [system description] find the average rating and resolution in song table whose song name equals " Shukno patar nupur pae " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
in step 1 , additionally use the information from the student table . in step 2 , consider the gender equals M conditions in place of the gender equals F conditions . [question] What are the total number of students who are living in a male dorm ? [system description] Step 1 : for each row in dorm table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose gender equals " F " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the state table . in step 2 , consider the traverse equals idaho conditions in place of the state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers in idaho [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the year equals 1995 conditions in place of the year equals 1944 conditions . [question] What are the types of film market estimations in year 1995 ? [system description] find the type in film market estimation table whose year equals 1944 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , do not use the song table . [question] For each file format , return the number of artists who released songs in that format . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find each value of formats of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , additionally make sure that start date is equals maximum start date policies . you should not find the largest of the results . show me all the results . [question] Find the customer who started a policy most recently . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 with largest value of start date . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
additionally use the information from the movie table , cast table , directed by table , and actor table besides the director table . consider the actor 's name equals Taraneh Alidoosti and director 's name equals Asghar Farhadi conditions in place of the director 's name equals dummy value conditions . find title in place of number of rows . [question] How many movies are there that are directed by " Asghar Farhadi " and featuring " Taraneh Alidoosti " ? [system description] find the number of rows in director table whose name equals " dummy value " and name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , additionally use the information from the party events table besides the party table . find for each value of party events 's party id whose number of rows greater than or equals 2 . [question] Return the names of parties that have two or more events . [system description] Step 1 : find the number of rows of each value of party name in party table . Step 2 : find the party name in party table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , do not use the furniture table . in step 2 , do not find for each value of num of shops . in step 3 , find num of shops in place of number of rows . order the results by price in dollar in place of summation of market rate . [question] Find the id and number of shops for the company that produces the most expensive furniture . [system description] Step 1 : for each row in furniture manufacte table , find the corresponding rows in furniture table and in manufacturer table . Step 2 : find the summation of market rate of each value of num of shops of the results of step 1 . Step 3 : find the furniture manufacte 's manufacturer id and number of rows of the results of step 1 with largest value in the results of step 2 . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
consider the age less than 25 conditions in place of the sex equals M conditions . [question] How many female students ( sex is F ) whose age is below 25 ? [system description] find the number of rows in student table whose sex equals " F " and sex equals " M " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] which states do ohio river flow through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the distance greater than 1000 conditions in place of the distance greater than 1805 conditions . find airline id in place of name . [question] What are the ids of all aircrafts that can cover a distance of more than 1000 ? [system description] find the name in aircraft table whose distance greater than 1805 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , find for each value of name in place of accounts 's customer id . [question] What are the names of customers with accounts , and what are the total savings balances for each ? [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table . Step 2 : find each value of accounts 's customer id of the results of step 1 along with the summation of balance and name of the corresponding rows to each value . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
additionally use the information from the movie table and directed by table besides the director table . consider the title equals James Bond conditions in place of the name equals dummy value conditions . [question] List " James Bond " directors [system description] find the name in director table whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals california conditions in place of the city 's state name equals dummy value conditions . [question] what is the population of california [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's population of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the address table besides the city table . [question] What are the city name , id , and number of addresses corresponding to the city with the most addressed ? [system description] Step 1 : find the number of rows of each value of city id in city table . Step 2 : find the city , city id , number of rows in city table with largest value in the results of step 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 2 , find for each value of name in place of album 's artist id . [question] What is the name of the artist with the greatest number of albums ? [system description] Step 1 : for each row in artist table , find the corresponding rows in album table . Step 2 : find the number of rows of each value of album 's artist id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the college table . in step 2 , order the results by player name in place of enrollment . [question] What are the names of all students who tried out in alphabetical order ? [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name of the results of step 1 ordered ascending by enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , consider the park name equals Columbia Park and year equals 1907 conditions in place of the city equals Miami and year equals 1926 conditions . find number of rows in place of number of city . [question] How many games were played in park " Columbia Park " in 1907 ? [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of city of the results of step 1 whose city equals " Miami " and year equals 1926 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( columbia ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Columbiana ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Columbia , Park ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name ( Columbia Park ) [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( columbia ) [C] name full [C] city ( Columbia ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park ( Columbia Park ) [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the area equals dummy value conditions . [question] what river flows through illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the registration date equals 08/30/2015 conditions in place of the president vote equals 1004 conditions . make sure no repetition in the results . [question] What are the distinct president votes on 08/30/2015 ? [system description] find the president vote in voting record table whose president vote equals 1004 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date ( 08/30/2015 , 08/30/2012 ) [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
additionally order the results by phone number . [question] Find the emails and phone numbers of all the customers , ordered by email address and phone number . [system description] find the email address and phone number in customers table ordered ascending by email address . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
consider the capital equals salem conditions in place of the capital equals dummy value conditions . find state name in place of capital . [question] what state is salem the capital of [system description] find the capital in state table whose capital equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the person friend table besides the person table . consider the person 's name equals Dan conditions in place of the person 's name equals Alice conditions . find number of friend in place of number of rows . [question] How many friends does Dan have ? [system description] find the number of rows in person table whose name equals " Alice " . [schema] [T] person [C] name ( Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend ( Dan ) [C] year
in step 1 , use performance table in place of vocals table , songs table , and track lists table in step 2 , consider the stage position equals back conditions in place of the position equals dummy value conditions . [question] What is the last name of the musicians who has played back position the most ? [system description] Step 1 : for each row in track lists table , find the corresponding rows in songs table and in vocals table and in band table . Step 2 : only keep the results of step 1 whose position equals " dummy value " . Step 3 : find the number of rows of each value of last name the results of step 2 . Step 4 : find the last name the results of step 2 with largest value in the results of step 3 . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
consider the decor equals modern conditions in place of the bed type equals Queen conditions . find summation of max occupancy in place of number of rows . [question] What is the total number of people who could stay in the modern rooms in this inn ? [system description] find the number of rows in rooms table whose bed type equals " Queen " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the customers table and customer contact channels table . in step 2 , consider the order date less than 2018-03-17 07:13:53 conditions in place of the active from date less than 2017-12-06 15:25:33 conditions . [question] What is the total amount of products purchased before 2018-03-17 07:13:53 ? [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table and in customer contact channels table . Step 2 : find the summation of order quantity of the results of step 1 whose active from date less than " 2017-12-06 15:25:33 " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date ( 2018-03-17 07:13:53 ) [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 2 , additionally make sure that grade equals 1 . find list 's last name in place of teachers 's last name . make sure no repetition in the results . in step 4 , consider the teachers 's first name equals OTHA and teachers 's last name equals MOYER conditions in place of the teachers 's first name equals JEROME conditions . find list 's last name in place of teachers 's last name . [question] Find all first-grade students who are NOT taught by OTHA MOYER . Report their first and last names . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 . Step 3 : for each row in teachers table , find the corresponding rows in list table . Step 4 : find the list 's first name and teachers 's last name of the results of step 3 whose teachers 's first name equals " JEROME " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
in step 2 , find trip 's id in place of end date . [question] For each trip , return its ending station 's installation date . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the installation date and end date of the results of step 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the allergy type table . in step 2 , consider the has allergy 's allergy equals Milk and has allergy 's allergy equals Cat conditions in place of the allergy type equals environmental conditions . find city code in place of last name . make sure no repetition in the results . [question] Find the different first names and cities of the students who have allergy to milk or cat . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and last name of the results of step 1 whose allergy type equals " environmental " or allergy type equals " environmental " . [schema] [T] allergy type [C] allergy ( Milk , Cat ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
consider the state name equals california conditions in place of the state name equals dummy value conditions . find population in place of summation of population . [question] how many citizens in california [system description] find the summation of population in state table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , additionally make sure that length is equals maximum length river . you should not find the largest of the results . show me all the results . [question] what are the states through which the longest river runs [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the customers table . in step 2 , consider the order date is greater than minimum order date customer orders whose order status code equals Cancelled conditions in place of the order status code equals New conditions . make sure no repetition in the results . [question] Find the ids of all distinct customers who made order after some orders that were Cancelled . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table . Step 2 : find the customers 's customer id of the results of step 1 whose order status code equals " New " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Cancelled ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 2 , find for each value of customer name in place of customers 's customer id . [question] Give me the name of the customer who ordered the most items in total . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of customers 's customer id of the results of step 1 . Step 3 : find the customer name of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , do not use the student table . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . find has allergy 's stuid in place of first name . [question] What are the students ids of students who have more than one allergy ? [system description] Step 1 : for each row in has allergy table , find the corresponding rows in student table . Step 2 : find the number of rows of each value of has allergy 's stuid of the results of step 1 . Step 3 : find the first name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , additionally use the information from the student table . in step 2 , consider the dorm name equals Smith Hall and sex equals F conditions in place of the gender equals X conditions . [question] How many female students live in Smith Hall ? [system description] Step 1 : for each row in dorm table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose gender equals " X " and gender equals " X " . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Smith Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , use employee table in place of student table in step 2 , consider the employee last name equals Heffington conditions in place of the student last name equals Robertson conditions . [question] What is department name and office for the professor whose last name is Heffington ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in professor table . Step 2 : find the department name and professor office of the results of step 1 whose student last name equals " Robertson " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Heffington ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals california conditions in place of the city 's state name equals dummy value conditions . [question] what are the population of california [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's population of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the characteristics table and product characteristics table . in step 2 , consider the color description equals red and characteristic name equals fast conditions in place of the color description equals purple and product description equals eius conditions . [question] Find the name of the products that have the color description " red " and have the characteristic name " fast " . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name of the results of step 1 whose color description equals " purple " and product description equals " eius " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( red ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( fast ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the team table and player table . in step 2 , find match season 's player in place of player 's player . [question] What are all the players who played in match season , sorted by college in ascending alphabetical order ? [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 ordered ascending by college and college . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , use employee table in place of student table and enroll table in step 2 , consider the department name equals Accounting conditions in place of the department name equals Economics/Finance conditions . find employee first name in place of professor office . [question] Find the first names of all professors in the Accounting department who is teaching some course and the class room . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the professor office and class room of the results of step 1 whose department name equals " Economics/Finance " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use customers cards table in place of accounts table in step 2 , find for each value of customers cards 's customer id in place of accounts 's customer id . in step 3 , find customers cards 's customer id in place of accounts 's customer id . [question] What is the customer id , first and last name with least number of accounts . [system description] Step 1 : for each row in accounts table , find the corresponding rows in customers table . Step 2 : find the number of rows of each value of accounts 's customer id of the results of step 1 . Step 3 : find the accounts 's customer id , customer first name , customer last name of the results of step 1 with smallest value in the results of step 2 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , additionally make sure that population is equals maximum population state . do not find for each value of state name . in step 2 , you should not find the largest of the results . show me all the results . [question] what state has the most people [system description] Step 1 : find the number of rows of each value of state name in state table . Step 2 : find the state name in state table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , remove the class senator vote equals 1028 conditions . make sure no repetition in the results . [question] What are the distinct last names of the students who have class president votes ? [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the last name of the results of step 1 whose class senator vote equals 1028 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
consider the address equals 1031 Daugavpils Parkway conditions in place of the address2 equals None conditions . [question] What is the phone number and postal code of the address 1031 Daugavpils Parkway ? [system description] find the phone and postal code in address table whose address2 equals " None " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address ( 1031 Daugavpils Parkway ) [C] address2 [C] district ( Daugavpils ) [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city ( Daugavpils ) [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
consider the customer name like % a % conditions in place of the account type like checking conditions . [question] What are the names and account balances of customers with the letter a in their names ? [system description] find the customer name and account balance in customer table whose account type like " checking " . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
make sure no repetition in the results . [question] Report the first name and last name of all the students . [system description] find the first name and last name in list table . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
show me all the results . [question] List venues of all matches in the order of their dates starting from the most recent one . [system description] find the venue in match table with largest value of date . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
consider the class room equals 105 conditions in place of the class room equals 104 conditions . make sure no repetition in the results . [question] Which grade is studying in room 105 ? [system description] find the grade in list table whose class room equals 104 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , do not use the instruments table and songs table . [question] What is the type of vocables that appears most frequently ? [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table and in instruments table . Step 2 : find the number of rows of each value of type of the results of step 1 . Step 3 : find the type of the results of step 1 with largest value in the results of step 2 . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , find for each value of end station id . additionally find name . find minimum duration in place of duration . [question] For each station , find its latitude and the minimum duration of trips that ended at the station . [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the latitude and duration of the results of step 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
find minimum consider rate in place of consider rate . [question] Return the maximum support rate , minimum consider rate , and minimum oppose rate across all candidates ? [system description] find the maximum support rate , minimum oppose rate , consider rate in candidate table . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
in step 2 , use the largest in place of smallest . [question] Return the rank for which there are the fewest captains . [system description] Step 1 : find the number of rows of each value of rank in captain table . Step 2 : find the rank in captain table with smallest value in the results of step 1 . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
additionally use the information from the sports info table besides the student table . additionally make sure that on scholarship equals Y . [question] What are the last names for all scholarship students ? [system description] find the last name in student table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 2 , additionally make sure that lowest elevation is equals minimum lowest elevation highlow . you should not find the smallest of the results . show me all the results . [question] what is capital of the state with the lowest point [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with smallest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the first name equals Aaron and last name equals Turon conditions in place of the first name equals Katsuhiro conditions . [question] Find the titles of all the papers written by " Aaron Turon " . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose first name equals " Katsuhiro " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Turon ) [C] first name ( Aaron ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , additionally make sure that country equals United States . [question] How many airports are there per city in the US ordered from most to least ? [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city and number of rows in airports table ordered descending by the results of step 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( PER ) [C] source airport id [C] source airport ( PER ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Perm ) [C] country ( Peru ) [C] x [C] y [C] elevation [C] iata ( PER ) [C] icao [T] airlines [C] airline id [C] name [C] iata ( US ) [C] icao ( PER ) [C] call sign ( CITY ) [C] country ( Peru ) [C] active
in step 1 , use journal table in place of author table and writes table in step 2 , consider the journal 's name equals PVLDB conditions in place of the author 's name equals dummy value conditions . find summation of citation num in place of publication 's jid . [question] return me the total citations of all the papers in PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
use border info table in place of state table . consider the border info 's state name equals kentucky conditions in place of the area like dummy value conditions . [question] what states neighbor kentucky [system description] find the state name in state table whose area like " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the has allergy table . [question] What are the allergies and their types ? [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table . Step 2 : find the has allergy 's allergy and allergy type of the results of step 1 . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , do not use the workshop table . in step 2 , find number of different acceptance 's workshop id in place of number of rows . [question] Show each author and the number of workshops they submitted to . [system description] Step 1 : for each row in submission table , find the corresponding rows in acceptance table and in workshop table . Step 2 : find each value of author of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
consider the state name equals california conditions in place of the state name equals dummy value conditions . find population in place of number of rows . [question] how many people are there in california [system description] find the number of rows in state table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the statements table . [question] Show all statement id and the number of accounts for each statement . [system description] Step 1 : for each row in statements table , find the corresponding rows in accounts table . Step 2 : find each value of accounts 's statement id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
find average active to date minus active from date in place of average active to date . [question] Compute the average active time span of contact channels . [system description] find the average active to date in customer contact channels table . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the has allergy table besides the student table . you should consider both of the conditions rather than either of them . consider the sex equals F and allergy equals Milk or allergy equals Eggs conditions in place of the sex equals M conditions . [question] How many female students have milk or egg allergies ? [system description] find the number of rows in student table whose sex equals " M " or sex equals " M " . [schema] [T] allergy type [C] allergy ( Milk , Eggs ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Eggs ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
do not find for each value of vice president vote . do not return number of president vote . make sure no repetition in the results . [question] List all the distinct president votes and the vice president votes . [system description] find each value of vice president vote in voting record table along with the number of president vote of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
consider the line 1 number building like % 6862 Kaitlyn Knolls % conditions in place of the town city equals Lake Meaghan conditions . [question] Which state can address " 6862 Kaitlyn Knolls " possibly be in ? [system description] find the state province county in addresses table whose town city equals " Lake Meaghan " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , consider the name equals Columbus Crew conditions in place of the name equals Miami Fusion conditions . in step 3 , do not find for each value of player . find years played in place of number of rows . [question] What are the players who played for Columbus Crew , and how many years did each play for ? [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : only keep the results of step 1 whose name equals " Miami Fusion " . Step 3 : find each value of player the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name ( Columbus Crew ) [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , additionally use the information from the medicine enzyme interaction table besides the medicine table . in step 2 , do not return number of rows . [question] What are the ids , names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with . [system description] Step 1 : find the number of rows of each value of id in medicine table . Step 2 : find the id , name , fda approved , number of rows in medicine table ordered descending by the results of step 1 . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
additionally use the information from the voting record table besides the student table . consider the age equals 18 conditions in place of the age equals 17 conditions . make sure no repetition in the results . [question] What are the first names and last names of the students who are 18 years old and have vice president votes . [system description] find the first name and last name in student table whose age equals 17 and age equals 17 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 2 , consider the decision equals yes and player position equals striker conditions in place of the player position equals mid conditions . [question] What are the names of all students who successfully tried out for the position of striker ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find the player name of the results of step 1 whose player position equals " mid " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( striker ) [C] decision
in step 2 , additionally make sure that position equals CTO . [question] Find the first name and last name for the " CTO " of the club " Hopkins Student Enterprises " ? [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Hopkins Student Enterprises " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( CTO )
in step 1 , do not use the debate table and debate people table . in step 2 , find for each value of party . order the results by number of rows in place of num of audience . [question] Show the party that has the most people . [system description] Step 1 : for each row in debate table , find the corresponding rows in debate people table and in people table . Step 2 : find the party of the results of step 1 with largest value of num of audience . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
in step 1 , do not use the border info table . in step 2 , consider the state 's state name is not one of border border info whose border info 's state name equals texas conditions in place of the border not equals dummy value conditions . [question] which states does not border texas [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose border not equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the postseason 's year equals 2008 conditions in place of the team 's year equals 2008 conditions . in step 4 , find team id winner in place of div win . [question] Find the name and id of the team that won the most times in 2008 postseason . [system description] Step 1 : for each row in postseason table , find the corresponding rows in team table . Step 2 : only keep the results of step 1 whose team 's year equals 2008 . Step 3 : find the number of rows of each value of team id winner the results of step 2 . Step 4 : find the name and div win the results of step 2 with largest value in the results of step 3 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , consider the border info 's state name equals texas conditions in place of the border equals dummy value conditions . [question] what are the capitals of the states that border texas [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the mountain altitude is equals maximum mountain altitude mountain whose state name not equals alaska conditions in place of the mountain name not equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] which is the highest peak not in alaska [system description] find the mountain name in mountain table whose mountain name not equals " dummy value " with largest value of mountain altitude . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the name equals American Airlines conditions in place of the name equals Aerotaxi del Cabo conditions . find number of different destination airport id in place of number of destination airport . [question] What is the number of different different airports that are destinations for American Airlines ? [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of destination airport of the results of step 1 whose name equals " Aerotaxi del Cabo " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country [C] active
in step 1 , use journal table , author table , and writes table in place of cite table and organization table in step 2 , consider the year greater than 2005 and journal 's name equals PVLDB and author 's name equals H. V. Jagadish and author 's name equals Yunyao Li conditions in place of the cited equals dummy value and year greater than dummy value conditions . find title in place of organization 's name . [question] return me the papers written by " H. V. Jagadish " and " Yunyao Li " on PVLDB after 2005 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally make sure that country equals United States . [question] How many airports are there per city in the United States ? Order the cities by decreasing number of airports . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the number of rows and city in airports table ordered descending by the results of step 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport ( PER ) [C] source airport id [C] source airport ( PER ) [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Perm ) [C] country ( United States , Peru ) [C] x [C] y [C] elevation [C] iata ( PER ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( PER ) [C] call sign ( STATES , UNITED ) [C] country ( United States , Peru ) [C] active
use sports info table in place of plays games table . additionally find summation of games played . [question] Show all student IDs with the number of sports and total number of games played [system description] find each value of student id in plays games table along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , use movie table in place of cast table , copyright table , and actor table in step 2 , consider the title equals James Bond conditions in place of the actor 's name equals dummy value conditions . [question] Who directed the movie " James Bond " ? [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : find the director 's name of the results of step 1 whose actor 's name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
use class table in place of course table . [question] How many sections does each course have ? [system description] find each value of course code in course table along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] how many states have cities named springfield [system description] find the number of state name in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use player table in place of college table in step 2 , additionally make sure that tryout 's college name is equals college 's college name college with largest enrollment . find player name in place of tryout 's college name . you should not find the largest of the results . show me all the results . [question] What are the names of all tryout participants who are from the largest college ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the tryout 's college name of the results of step 1 with largest value of enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the mountain table and state table . in step 2 , do not use the mountain table and state table . in step 3 , remove the mountain 's state name equals dummy value conditions . find maximum highest elevation in place of maximum highest point . in step 4 , remove the mountain 's state name equals dummy value conditions . find highest point in place of maximum highest point . [question] what is the highest point in the united states [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 3 : find the maximum highest point of the results of step 2 whose mountain 's state name equals " dummy value " . Step 4 : find the maximum highest point of the results of step 1 whose mountain 's state name equals " dummy value " and highest elevation equals the results of step 3 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the river name equals missouri conditions in place of the river name equals dummy value conditions . find number of traverse in place of number of rows . [question] how many states does the missouri river run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally find rating . [question] Which restaurants have highest rating ? List the restaurant name and its rating . [system description] find the restaurant name and restaurant name in restaurant table with largest value of rating . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
remove the country name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities are there in the united states [system description] find the number of rows in city table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the rooms table besides the reservations table . in step 2 , find room name in place of room . [question] Find the most popular room in the hotel . The most popular room is the room that had seen the largest number of reservations . [system description] Step 1 : find the number of rows of each value of room in reservations table . Step 2 : find the room in reservations table with largest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the member table . in step 2 , find took office and left office in place of in office . order the results by left office in place of in office . [question] Show the ministers and the time they took and left office , listed by the time they left office . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the minister and in office of the results of step 1 ordered ascending by in office . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
additionally use the information from the election table besides the party table . find for each value of election 's party in place of party 's party . [question] For each party , return the name of the party and the number of delegates from that party . [system description] find each value of party in party table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the address equals 1031 Daugavpils Parkway conditions in place of the address2 equals conditions . [question] Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway ' . [system description] find the phone and postal code in address table whose address2 equals " " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address ( 1031 Daugavpils Parkway ) [C] address2 [C] district ( Daugavpils ) [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city ( Daugavpils ) [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 2 , order the results by days held in place of eliminated by . [question] What are the names of wrestlers and their teams in elimination , ordered descending by days held ? [system description] Step 1 : for each row in elimination table , find the corresponding rows in wrestler table . Step 2 : find the name and team of the results of step 1 ordered descending by eliminated by . [schema] [T] wrestler [C] wrestler id [C] name [C] reign [C] days held [C] location [C] event [T] elimination [C] elimination id [C] wrestler id [C] team [C] eliminated by [C] elimination move [C] time
additionally use the information from the employee table besides the customer table . consider the customer 's postal code equals 70174 conditions in place of the customer 's postal code equals 75009 conditions . find employee 's city in place of customer 's city . [question] What city does the employee who helps the customer with postal code 70174 live in ? [system description] find the city in customer table whose postal code equals 75009 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
find number of different customer id in place of number of rows . [question] Show all card type codes and the number of customers holding cards in each type . [system description] find each value of card type code in customers cards table along with the number of the corresponding rows to each value . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 2 , do not use the ship table . in step 3 , consider the class equals Third-rate ship of the line conditions in place of the ship 's class equals KR conditions . [question] What are the ranks of captains that have no captain that are in the Third-rate ship of the line class ? [system description] Step 1 : find the rank in captain table . Step 2 : for each row in ship table , find the corresponding rows in captain table . Step 3 : find the rank of the results of step 2 whose ship 's class equals " KR " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Third-rate ship of the line ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
make sure no repetition in the results . [question] What are the distinct unit prices of all tracks ? [system description] find the unit price in track table . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the songs table . in step 2 , consider the instrument equals drums conditions in place of the instrument equals dummy value conditions . [question] How many songs use drums as an instrument ? [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the number of rows of the results of step 1 whose instrument equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
order the results ascending . [question] Find the id and star rating of each hotel and sort them in increasing order of price . [system description] find the hotel id and star rating code in hotels table ordered descending by price range . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , additionally use the information from the route table besides the train table . [question] Find the name of the train whose route runs through greatest number of stations . [system description] Step 1 : find the number of rows of each value of id in train table . Step 2 : find the name in train table with largest value in the results of step 1 . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
in step 1 , do not use the border info table and state table . in step 2 , consider the traverse is one of border border info whose border info 's state name equals colorado conditions in place of the border equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers run through the states bordering colorado [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the bank table . in step 2 , do not find for each value of account type . in step 3 , additionally make sure that number of loans equals 0 . find customer 's state in place of bank 's state . [question] What are the states , account types , and credit scores for customers who have 0 loans ? [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the number of rows of each value of account type of the results of step 1 . Step 3 : find the bank 's state , account type , credit score of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , do not use the college table . in step 2 , consider the player position equals mid conditions in place of the player position equals striker conditions . in step 3 , do not use the college table . return the rows in the results of step 2 but not the results of step 4 . [question] Find the names of schools that have some players in the mid position but not in the goalie position . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " striker " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " goalie " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie , mid ) [C] decision
consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] how many states have a city named springfield [system description] find the number of state name in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the minor in table besides the student table . consider the department number equals 140 conditions in place of the major equals 600 conditions . [question] What are the first names and last names of the students that minor in the department with DNO 140 . [system description] find the first name and last name in student table whose major equals 600 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 2 , make sure no repetition in the results . [question] Which customers have an insurance policy with the type code " Deputy " ? Give me the customer details . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 whose policy type code equals " Deputy " . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code ( Deputy ) [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , additionally use the information from the dorm table . in step 2 , additionally make sure that dorm name equals Smith Hall . [question] Find the number of female students ( with F sex ) living in Smith Hall [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose sex equals " F " and sex equals " F " . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Smith Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the river table and state table . in step 2 , consider the highlow 's state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . find lowest point in place of minimum lowest point . find the result with the smallest lowest elevation . [question] what is the lowest point of all states through which the mississippi river runs through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the employment table and people table besides the company table . additionally find people 's name . [question] Show the names of companies and of employees . [system description] find the name and name in company table . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
additionally make sure that complaint type code equals Product Failure . [question] Find the number of complaints with Product Failure type for each complaint status . [system description] find each value of complaint status code in complaints table along with the number of the corresponding rows to each value . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code ( Product Failure ) [C] date complaint raised [C] date complaint closed [C] staff id
in step 2 , make sure that the corresponding value in step 1 between 2 and 4 . [question] Which cities have 2 to 4 parks ? [system description] Step 1 : find the number of rows of each value of city in park table . Step 2 : find the city in park table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , additionally make sure that dribbling is equals maximum overall rating player attributes . make sure no repetition in the results . you should not find the largest of the results . show me all the results . [question] What are the names of players who have the best dribbling ? [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name of the results of step 1 with largest value of dribbling . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
in step 1 , do not use the city table . in step 2 , consider the capital equals salem conditions in place of the city 's state name equals dummy value conditions . find state 's state name in place of capital . [question] what states capital is salem [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find minimum training hours in place of maximum training hours . [question] For each position , what is the minimum time students spent practicing ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find each value of player position of the results of step 1 along with the maximum training hours of the corresponding rows to each value . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , consider the statement details equals Private Project conditions in place of the other details equals None conditions . [question] What are the details for statements with the details 'Private Project ' , and what are the names of the corresponding documents ? [system description] Step 1 : for each row in statements table , find the corresponding rows in documents table . Step 2 : find the statement details and document name of the results of step 1 whose other details equals " None " . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details ( Private Project ) [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , additionally use the information from the medicine table . in step 2 , consider the enzyme 's name equals ALA synthase and medicine 's name equals Aripiprazole conditions in place of the enzyme 's name equals Coproporphyrinogen III oxidase conditions . [question] What is the type of interaction for the enzyme named 'ALA synthase ' and the medicine named 'Aripiprazole ' ? [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table . Step 2 : find the interaction type of the results of step 1 whose name equals " Coproporphyrinogen III oxidase " and name equals " Coproporphyrinogen III oxidase " . [schema] [T] medicine [C] id [C] name ( Aripiprazole ) [C] trade name [C] fda approved [T] enzyme [C] id [C] name ( ALA synthase ) [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
consider the origin equals Los Angeles conditions in place of the destination equals Chicago conditions . find flight number in place of number of rows . [question] What are the numbers of all flights coming from Los Angeles ? [system description] find the number of rows in flight table whose destination equals " Chicago " . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , additionally make sure that order quantity is equals maximum order quantity order items . you should not find the largest of the results . show me all the results . [question] What is the name of the customer that made the order with the largest quantity ? [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the customer name of the results of step 1 with largest value of order quantity . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
consider the days equals MTW conditions in place of the course id equals 520.432 conditions . [question] What are the course names for courses taught on MTW ? [system description] find the course name in course table whose course id equals " 520.432 " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days ( MTW ) [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
consider the city name equals springfield conditions in place of the city name equals dummy value conditions . find number of state name in place of number of rows . [question] how many states have cities or towns named springfield [system description] find the number of rows in city table whose city name equals " dummy value " or city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the border info 's state name equals kentucky conditions in place of the border equals dummy value conditions . find number of border in place of number of rows . [question] how many states border kentucky [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of rows in place of number of paper id . [question] How many papers are published in total ? [system description] find the number of paper id in papers table . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , additionally use the information from the student table . in step 2 , consider the gender equals M conditions in place of the gender equals F conditions . [question] Find the total number of students living in the male dorm ( with gender M ) . [system description] Step 1 : for each row in dorm table , find the corresponding rows in lives in table . Step 2 : find the number of rows of the results of step 1 whose gender equals " F " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 2 , make sure no repetition in the results . only show me the first 3 results . [question] Who are the top 3 players in terms of overall rating ? [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name of the results of step 1 with largest value of overall rating . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
consider the city code not equals HKG conditions in place of the city code not equals BAL conditions . order the results by age in place of last name . [question] What are the first and last names of all students who are not living in the city HKG and order the results by age ? [system description] find the first name and last name in student table whose city code not equals " BAL " ordered ascending by last name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HKG ) [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the customer table . in step 2 , consider the bname equals morningside conditions in place of the customer name like Owen conditions . [question] What city and state is the bank with the name morningside in ? [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the city and bank 's state of the results of step 1 whose customer name like " Owen " . [schema] [T] bank [C] branch id [C] bname ( morningside ) [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
find average active to date minus active from date in place of average active to date . [question] What is the average time span of contact channels in the database ? [system description] find the average active to date in customer contact channels table . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , do not use the cite table . in step 2 , consider the name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . find number of different title in place of number of oid . [question] return me the number of papers by " H. V. Jagadish " . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the number of oid of the results of step 1 whose cited equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the policies table besides the customers table . find for each value of customer details in place of customers 's customer id . in step 2 , find customer details in place of customers 's customer id . [question] Find the name of the customer that has been involved in the most policies . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer id in customers table with largest value in the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , do not use the person friend table . in step 2 , consider the person 's name equals Zach and job equals doctor conditions in place of the person friend 's name equals Zach conditions . [question] What is the age of the doctor named Zach ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the age of the results of step 1 whose person friend 's name equals " Zach " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
find number of rows in place of number of customer id . [question] Return the total number of distinct customers . [system description] find the number of customer id in customers table . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
find for each value of headquarter . additionally find headquarter . find maximum revenue in place of revenue . you should not find the largest of the results . show me all the results . [question] Find the name and revenue of the company that earns the highest revenue in each city . [system description] find the name , revenue , revenue in manufacturers table with largest value of revenue . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] which state has the most population [system description] find the state name in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the enroll table , student table , and class table . in step 2 , find number of different department name in place of number of rows . [question] How many departments are in each school ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of school code of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the headquarter equals Austin conditions in place of the founder equals James conditions . [question] What is the sum of revenue from companies with headquarters in Austin ? [system description] find the summation of revenue in manufacturers table whose founder equals " James " . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , additionally use the information from the actor table . in step 2 , consider the title equals Daddy Long Legs conditions in place of the title equals dummy value conditions . [question] What are the major roles in the movie " Daddy Long Legs " [system description] Step 1 : for each row in cast table , find the corresponding rows in movie table . Step 2 : find the role of the results of step 1 whose title equals " dummy value " and title equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , additionally use the information from the accounts table besides the statements table . [question] Show the statement id and the statement detail for the statement with most number of accounts . [system description] Step 1 : find the number of rows of each value of statement id in statements table . Step 2 : find the statement id and statement details in statements table with largest value in the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
find for each value of city . find maximum latitude in place of latitude . you should not find the largest of the results . show me all the results . [question] For each city , what is the highest latitude for its stations ? [system description] find the city and latitude in station table with largest value of latitude . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] what is the area of the state with the smallest population density [system description] find the area in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the airlines table . in step 2 , consider the airports 's country equals China conditions in place of the airlines 's country equals Liberia conditions . [question] What is the name of the airport with the most number of routes that start in China ? [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table and in airlines table . Step 2 : only keep the results of step 1 whose airlines 's country equals " Liberia " . Step 3 : find the number of rows of each value of airports 's name the results of step 2 . Step 4 : find the airports 's name the results of step 2 with largest value in the results of step 3 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
use the largest in place of smallest . [question] What is the name , location and seating for the most recently opened track ? [system description] find the name , location , seating in track table with smallest value of year opened . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
in step 1 , find for each value of name whose average points greater than or equals 20 . [question] What are the positions of players whose average number of points scored by that position is larger than 20 ? [system description] Step 1 : find the average points of each value of position in player table . Step 2 : find the position in player table whose corresponding value in step 1 is greater than 1 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
in step 1 , additionally make sure that population is equals maximum population state . do not find for each value of state name . in step 2 , you should not find the largest of the results . show me all the results . [question] what is the most populous state [system description] Step 1 : find the number of rows of each value of state name in state table . Step 2 : find the state name in state table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the lowest elevation is equals minimum lowest elevation highlow conditions in place of the border info 's state name equals dummy value conditions . find lowest point in place of minimum lowest point . [question] what is the lowest point of the us [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose border info 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the genre table . in step 2 , consider the genre is equals pop conditions in place of the genre name equals tagore conditions . order the results by song name in place of duration . [question] What is the duration , file size , and song format for every pop song , ordered by title alphabetically ? [system description] Step 1 : for each row in files table , find the corresponding rows in song table and in genre table . Step 2 : find the duration , file size , duration , formats of the results of step 1 whose genre name equals " tagore " ordered ascending by duration . [schema] [T] genre [C] genre name ( pop ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( pop ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( pop ) [C] rating [C] languages [C] releasedate [C] resolution
consider the studio like % Universal % conditions in place of the title like Star Trek II : The Wrath of Khan conditions . [question] Find the titles and studios of the films that are produced by some film studios that contained the word " Universal " . [system description] find the title and studio in film table whose title like " Star Trek II : The Wrath of Khan " . [schema] [T] film [C] film id [C] title [C] studio ( Universal ) [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , additionally use the information from the player table besides the school table . find for each value of player 's school id in place of denomination . [question] What is the denomination of the school the most players belong to ? [system description] Step 1 : find the number of rows of each value of denomination in school table . Step 2 : find the denomination in school table with largest value in the results of step 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
additionally use the information from the tryout table besides the college table . additionally make sure that decision equals yes . make sure no repetition in the results . [question] What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision . [system description] find the state and enrollment in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
remove the country name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities are there in us [system description] find the number of rows in city table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the languages equals bangla conditions in place of the song 's artist name equals Topu conditions . [question] What is the country of origin of the artist who is female and produced a song in Bangla ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's country of the results of step 1 whose gender equals " Female " and song 's artist name equals " Topu " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
in step 1 , consider the title equals Making database systems usable conditions in place of the title equals dummy value conditions . in step 2 , find summation of citation num in place of number of citation num . [question] return me the number of citations of " Making database systems usable " in each year . [system description] Step 1 : find rows in publication table whose title equals " dummy value " . Step 2 : find each value of year the results of step 1 along with the number of citation num of the corresponding rows to each value . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the department table and employee table besides the professor table . consider the department name equals History conditions in place of the professor office equals KLR 203E conditions . find employee first name in place of professor office . in step 2 , use class table in place of professor table in step 3 , remove the professor office equals KLR 409B conditions . [question] What are the first names of all history professors who do not teach ? [system description] Step 1 : find the professor office in professor table whose professor office equals " KLR 203E " . Step 2 : for each row in employee table , find the corresponding rows in professor table . Step 3 : find the employee first name of the results of step 2 whose professor office equals " KLR 409B " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] which state has the greatest population [system description] find the state name in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the building equals NEB and rank equals Professor conditions in place of the building equals Krieger conditions . [question] Count the number of Professors who have office in building NEB . [system description] find the number of rows in faculty table whose building equals " Krieger " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building ( NEB )
in step 1 , additionally use the information from the classification table . in step 2 , consider the genre equals Sci-Fi and release year equals 2010 conditions in place of the genre equals dummy value conditions . find title in place of title aka . [question] Find all Sci-Fi produced in year 2010 [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the title aka of the results of step 1 whose genre equals " dummy value " and genre equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the city table . in step 2 , consider the state 's population is equals maximum state 's population state conditions in place of the city 's country name equals dummy value conditions . in step 3 , do not find for each value of state 's state name . in step 4 , you should not find the largest of the results . show me all the results . [question] what is the most populous state in the us [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : only keep the results of step 1 whose city 's country name equals " dummy value " . Step 3 : find the number of rows of each value of state 's state name the results of step 2 . Step 4 : find the state 's state name the results of step 2 with largest value in the results of step 3 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the product description like % t % conditions in place of the product name like cinnam conditions . [question] Find the category descriptions of the products whose descriptions include letter 't ' . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description of the results of step 1 whose product name like " cinnam " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
additionally use the information from the member of club table and student table besides the club table . consider the city code equals BAL conditions in place of the club location equals AKW conditions . make sure no repetition in the results . [question] Find the names of all the clubs that have at least a member from the city with city code " BAL " . [system description] find the club name in club table whose club location equals " AKW " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( BAL ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
find number of different governor in place of number of lieutenant governor . [question] How many distinct governors are there ? [system description] find the number of lieutenant governor in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , use class table in place of department table and course table in step 2 , remove the course description equals Intro . to Statistics conditions . [question] Find the first names of all instructors who have taught some course and the course code . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course code of the results of step 1 whose course description equals " Intro . to Statistics " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
find number of different game type in place of number of rows . [question] How many video game types exist ? [system description] find the number of rows in video games table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what state is the biggest [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the trip table besides the station table . additionally find average latitude . [question] What is the average latitude and longitude of the starting points of all trips ? [system description] find the average longitude and average longitude in station table . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
find for each value of city . order the results by maximum latitude in place of latitude . [question] List all the cities in a decreasing order of each city 's stations ' highest latitude . [system description] find the city in station table ordered descending by latitude . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the draft copies table , documents table , and document drafts table . in step 2 , find number of different employee id in place of number of rows . [question] For each document , list the number of employees who have showed up in the circulation history of that document . List the document ids and number of employees . [system description] Step 1 : for each row in documents table , find the corresponding rows in document drafts table and in draft copies table and in circulation history table . Step 2 : find each value of circulation history 's document id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
additionally use the information from the tryout table besides the player table . additionally make sure that decision equals yes . [question] What is the average and maximum number of hours students who made the team practiced ? [system description] find the average training hours and maximum training hours in player table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , additionally use the information from the visitors table and visits table besides the tourist attractions table . consider the tourist details equals Alison conditions in place of the name equals jungle cruise conditions . in step 2 , use visitors table and visits table in place of staff table in step 3 , consider the tourist details equals Rosalind conditions in place of the staff 's name equals Kaela conditions . [question] Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit . [system description] Step 1 : find the tourist attractions 's name in tourist attractions table whose tourist attractions 's name equals " jungle cruise " . Step 2 : for each row in staff table , find the corresponding rows in tourist attractions table . Step 3 : find the tourist attractions 's name of the results of step 2 whose staff 's name equals " Kaela " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Rosalind , Alison ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , use home game table in place of batting postseason table , player table , and team franchise table in step 2 , consider the name equals Boston Red Stockings and home game 's year between 2000 and 2010 conditions in place of the team 's year less than or equals 1930 and franchise name equals Altoona Mountain City conditions . find summation of home game 's attendance in place of number of rows . [question] How many games in total did team Boston Red Stockings attend from 2000 to 2010 ? [system description] Step 1 : for each row in team table , find the corresponding rows in batting postseason table and in player table and in team franchise table . Step 2 : find the number of rows of the results of step 1 whose franchise name equals " Altoona Mountain City " and team 's year less than or equals 1930 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , use movie table in place of copyright table , directed by table , and director table in step 2 , consider the title equals The Truman Show conditions in place of the director 's name equals dummy value conditions . [question] Who is the writer of " The Truman Show " [system description] Step 1 : for each row in writer table , find the corresponding rows in written by table and in copyright table and in directed by table and in director table . Step 2 : find the writer 's name of the results of step 1 whose director 's name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
consider the death year equals conditions in place of the death day equals 9 conditions . [question] What are the first name and last name of the players whose death record is empty ? [system description] find the name first and name last in player table whose death day equals 9 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the state table . in step 2 , consider the river name equals missouri conditions in place of the river name equals dummy value conditions . find number of traverse in place of number of rows . [question] how many states does the missouri run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use files table in place of song table . order the results by duration in place of releasedate . [question] What is the id of the longest song ? [system description] find the song id in song table with largest value of releasedate . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , order the results by number of different traverse in place of number of rows . [question] what river flows through the most states [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use faculty table and faculty participates in table in place of student table . consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's first name equals Tracy and student 's last name equals Lee conditions . [question] How many activities does Mark Giuliano participate in ? [system description] find the number of rows in student table whose first name equals " Tracy " and last name equals " Lee " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the lives in table and dorm table . in step 2 , find for each value of sex in place of gender . find sex and maximum age in place of gender . [question] What is the average and oldest age for each gender of student ? [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find each value of gender of the results of step 1 along with the average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 2 , consider the statement details equals Private Project conditions in place of the statement id equals 192 conditions . [question] Show the statement detail and the corresponding document name for the statement with detail 'Private Project ' . [system description] Step 1 : for each row in statements table , find the corresponding rows in documents table . Step 2 : find the statement details and document name of the results of step 1 whose statement id equals 192 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details ( Private Project ) [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , additionally use the information from the employee table and class table . in step 2 , find employee first name in place of professor 's department code . make sure no repetition in the results . [question] Find the first names and degree of all professors who are teaching some class in Computer Info . Systems department . [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the professor 's department code and professor high degree of the results of step 1 whose department name equals " Computer Info . Systems " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] what states does the ohio run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the flight table besides the aircraft table . find for each value of flight 's airline id in place of name . [question] Show aircraft names and number of flights for each aircraft . [system description] find each value of name in aircraft table along with the number of the corresponding rows to each value . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
additionally use the information from the faculty participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] Show all the activity names and the number of faculty involved in each activity . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , consider the title equals Nameless , Painless conditions in place of the title equals Proving the Unique Fixed-Point Principle Correct : An Adventure with Category Theory and last name equals Blume conditions . [question] Find the first and last name of the author ( s ) who wrote the paper " Nameless , Painless " . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the first name and last name of the results of step 1 whose title equals " Proving the Unique Fixed-Point Principle Correct : An Adventure with Category Theory " and last name equals " Blume " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
additionally make sure that product type code equals Hardware . [question] Find the name of the most expensive hardware product . [system description] find the product name in products table with largest value of product price . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Hardware ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the claim headers table . in step 2 , consider the claim status name equals Open conditions in place of the claim status code equals Disputed conditions . [question] Find the description of the claim status " Open " . [system description] Step 1 : for each row in claim headers table , find the corresponding rows in claims processing stages table . Step 2 : find the claim status description of the results of step 1 whose claim status code equals " Disputed " . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name ( Open ) [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
consider the release year equals 2013 conditions in place of the release year equals dummy value conditions . find number of different title in place of number of rows . [question] What is the number of movies produced in 2013 ? [system description] find the number of rows in movie table whose release year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the border info table and highlow table . in step 2 , consider the state 's state name equals new mexico conditions in place of the border info 's state name equals dummy value and highest elevation equals dummy value conditions . find area in place of number of rows . [question] how big is new mexico [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " and highest elevation equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the course code equals QM-261 conditions in place of the department code equals ACCT conditions . [question] What is the course description and number of credits for QM-261 ? [system description] find the course description and course credit in course table whose department code equals " ACCT " . [schema] [T] class [C] class code [C] course code ( QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
find number of different allergy name in place of number of rows . [question] How many allergy entries are there ? [system description] find the number of rows in allergy type table . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
find minimum training hours in place of summation of training hours . find maximum training hours in place of summation of training hours . [question] Find the max , average and min training hours of all players . [system description] find the summation of training hours , average training hours , average training hours in player table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the course table . in step 2 , consider the class 's course code equals ACCT-211 conditions in place of the course 's course code equals ACCT-212 conditions . find number of different class section in place of number of class section . [question] What is the number of different class sections offered in the course ACCT-211 ? [system description] Step 1 : for each row in class table , find the corresponding rows in course table . Step 2 : find the number of class section of the results of step 1 whose course 's course code equals " ACCT-212 " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the course table . in step 2 , find class code in place of course 's course code . [question] List the codes of all courses that take place in room KLR209 . [system description] Step 1 : for each row in class table , find the corresponding rows in course table . Step 2 : find the course 's course code of the results of step 1 whose class room equals " KLR209 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room ( KLR209 ) [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the city name equals boulder conditions in place of the city name equals dummy value conditions . find population in place of number of rows . [question] how many people live in boulder [system description] find the number of rows in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the domain author table , domain table , and author table besides the organization table . consider the domain 's name equals Databases and continent equals North America conditions in place of the continent equals dummy value conditions . find number of different organization 's name in place of number of rows . [question] return me the number of organizations in Databases area located in " North America " . [system description] find the number of rows in organization table whose continent equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
order the results by name in place of number of name . [question] What are the names of all the customers in alphabetical order ? [system description] find the name in accounts table ordered ascending by number of name . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
do not find for each value of letter grade . find minimum grade point in place of letter grade . [question] Find the max and min grade point for all letter grade . [system description] find each value of letter grade in grade conversion table along with the maximum grade point of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 2 , additionally make sure that activity name equals Kayaking . find last name in place of first name . make sure no repetition in the results . [question] Find the first names of the faculty members who are playing Canoeing or Kayaking . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Canoeing " or activity name equals " Canoeing " . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the office locations table . in step 3 , make sure that the corresponding value in step 2 greater than 2 . [question] Show the headquarters shared by more than two companies . [system description] Step 1 : for each row in office locations table , find the corresponding rows in companies table . Step 2 : find the number of rows of each value of headquarters of the results of step 1 . Step 3 : find the headquarters of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
in step 1 , do not use the state table . in step 2 , remove the state 's country name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities are there in the us [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , remove the class senator vote equals 1028 conditions . make sure no repetition in the results . [question] What are the distinct first names of the students who have class president votes ? [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the first name of the results of step 1 whose class senator vote equals 1028 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 2 , find team in place of player . [question] For each player , show the team and the location of school they belong to . [system description] Step 1 : for each row in school table , find the corresponding rows in player table . Step 2 : find the player and location of the results of step 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 2 , consider the name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . [question] return me the authors who have cited the papers by " H. V. Jagadish " . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 3 , additionally find player 's player id . [question] Which player has the most all star game experiences ? Give me the first name , last name and id of the player , as well as the number of times the player participated in all star game . [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of all star 's player id of the results of step 1 . Step 3 : find the name first , name last , number of rows of the results of step 1 with largest value in the results of step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , remove the hours played greater than or equals 1337 conditions . find for each value of plays games 's game id whose summation of hours played greater than or equals 1000 . [question] Show all game names played by at least 1000 hours . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the game name of the results of step 1 whose hours played greater than or equals 1337 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , find election 's party in place of committee . [question] What are the names of parties that do not have delegates in election ? [system description] Step 1 : find the committee in election table . Step 2 : find the party 's party in party table whose party id not one of the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the genre table . in step 2 , use song table in place of genre table . consider the genre is equals blues conditions in place of the genre 's rating equals 9 conditions . find maximum song 's rating in place of minimum genre 's rating . in step 3 , make sure the song 's rating is less than the results of step 2 the genre 's rating is less than the results of step 2 . [question] What are the names of all songs that have a lower rating than some song of blues genre ? [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the minimum genre 's rating in genre table whose genre 's rating equals 9 . Step 3 : find the song name of the results of step 1 whose genre 's rating less than the results of step 2 . [schema] [T] genre [C] genre name ( blues ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( blues ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( blues ) [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , remove the oppose rate equals 0.45 conditions . find for each value of sex . additionally find minimum oppose rate . [question] For each sex , what is the name and sex of the candidate with the oppose rate for their sex ? [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the name and sex of the results of step 1 whose oppose rate equals 0.45 . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
in step 2 , find class in place of type . [question] what are the names and classes of the ships that do not have any captain yet ? [system description] Step 1 : find the captain 's ship id in captain table . Step 2 : find the ship 's name and type in ship table whose ship 's ship id not one of the results of step 1 . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals texas conditions in place of the city 's state name equals dummy value conditions . [question] can you tell me the capital of texas [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals kansas and population greater than 150000 conditions in place of the state name equals dummy value conditions . [question] show major cities in kansas [system description] find the city name in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the number of loans equals 0 conditions in place of the number of loans less than 0 conditions . [question] Find the state , account type , and credit score of the customer whose number of loan is 0 . [system description] find the state , account type , credit score in customer table whose number of loans less than 0 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 2 , consider the first name equals Olin and last name equals Shivers conditions in place of the first name equals Nicolas conditions . [question] Which papers did the author " Olin Shivers " write ? Give me the paper titles . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose first name equals " Nicolas " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Shivers ) [C] first name ( Olin ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , consider the albums 's title equals A Kiss Before You Go : Live in Hamburg conditions in place of the year less than dummy value and label equals dummy value conditions . [question] What are the song titles on the album " A Kiss Before You Go : Live in Hamburg " ? [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the songs 's title of the results of step 1 whose label equals " dummy value " and year less than " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] what is the population density of the smallest state [system description] find the density in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use the smallest in place of largest . [question] What is the first and last name of the oldest employee ? [system description] find the employee first name and employee last name in employee table with largest value of employee date of birth . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally use the information from the rooms table besides the reservations table . additionally find room name . [question] For each room , find its name and the number of times reservations were made for it . [system description] find each value of room in reservations table along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 3 , make sure no repetition in the results . [question] Whare the names , friends , and ages of all people who are older than the average age of a person ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the average age in person table . Step 3 : find the person 's name , friend , age of the results of step 1 whose age greater than the results of step 2 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , find for each value of weather 's zip code whose average mean temperature f greater than 60 . [question] Give me ids for all the trip that took place in a zip code area with average mean temperature above 60 . [system description] Step 1 : for each row in trip table , find the corresponding rows in weather table . Step 2 : find the average mean humidity of each value of id of the results of step 1 . Step 3 : find the id of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , consider the person friend 's name equals Alice and gender equals female conditions in place of the gender equals male conditions . [question] What are all the friends of Alice who are female ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose gender equals " male " and gender equals " male " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , find for each value of origin in place of destination . in step 2 , find origin in place of destination . [question] What place has the most flights coming from there ? [system description] Step 1 : find the number of rows of each value of destination in flight table . Step 2 : find the destination in flight table with largest value in the results of step 1 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the genre table . in step 2 , consider the genre is equals pop conditions in place of the genre name equals nazrul conditions . order the results by song name in place of duration . [question] List the duration , file size and format of songs whose genre is pop , ordered by title ? [system description] Step 1 : for each row in files table , find the corresponding rows in song table and in genre table . Step 2 : find the duration , file size , formats of the results of step 1 whose genre name equals " nazrul " ordered ascending by duration . [schema] [T] genre [C] genre name ( pop ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( pop ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( pop ) [C] rating [C] languages [C] releasedate [C] resolution
only show me the first 3 results . [question] What are the aircrafts with top 3 shortest lengthes ? List their names . [system description] find the name in aircraft table with smallest value of distance . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the state table . in step 2 , consider the lake 's area greater than 750 conditions in place of the state 's country name equals dummy value conditions . [question] show me all the major lakes in the us [system description] Step 1 : for each row in state table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose state 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use border info table in place of state table . consider the border info 's state name equals kentucky conditions in place of the area like dummy value conditions . [question] what states are next to kentucky [system description] find the state name in state table whose area like " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use class table in place of department table in step 2 , remove the employee job code equals TECH conditions . [question] What are the first names of all teachers who have taught a course and the corresponding descriptions ? [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course description of the results of step 1 whose employee job code equals " TECH " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the team table . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . find college in place of name . [question] What are the names of all colleges that have two or more players ? [system description] Step 1 : for each row in match season table , find the corresponding rows in team table . Step 2 : find the number of rows of each value of college of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
additionally make sure that date like 8/ % . find average mean temperature f in place of average mean humidity . [question] For each zip code , return the average mean temperature of August there . [system description] find each value of zip code in weather table along with the average mean humidity of the corresponding rows to each value . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , consider the genre 's name equals Rock conditions in place of the genre 's name equals Drama conditions . [question] How many tracks belong to rock genre ? [system description] Step 1 : for each row in genre table , find the corresponding rows in track table . Step 2 : find the number of rows of the results of step 1 whose genre 's name equals " Drama " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name ( Rock ) [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Belong ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 2 , consider the country equals Australia conditions in place of the country equals Saint Vincent and the Grenadines conditions . [question] How many cities are in Australia ? [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of the results of step 1 whose country equals " Saint Vincent and the Grenadines " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country ( Australia ) [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
consider the state name equals california conditions in place of the area equals dummy value conditions . find population in place of summation of population . [question] how many people reside in california [system description] find the summation of population in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally find number of rows . [question] Find the number and average age of students living in each city . [system description] find each value of city code in student table along with the average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the reference document types table . in step 3 , make sure that the corresponding value in step 2 less than 3 . [question] What are the codes corresponding to document types for which there are less than 3 documents ? [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the number of rows of each value of documents 's document type code of the results of step 1 . Step 3 : find the reference document types 's document type code of the results of step 1 whose corresponding value in step 2 is less than 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , additionally use the information from the affected region table besides the region table . find for each value of region 's region id whose number of rows greater than or equals 2 . [question] What are the names of regions with two or more storms ? [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] storm [C] storm id [C] name ( Two ) [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , do not use the bank table . in step 2 , find for each value of customer name . order the results by summation of amount in place of amount . [question] List the name of all different customers who have some loan sorted by their total loan amount . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 ordered ascending by amount . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally use the information from the tags table and keyword table besides the movie table . consider the keyword equals Iraq war and release year equals 2015 conditions in place of the release year equals dummy value conditions . find number of different title in place of number of rows . [question] How many movies about Iraq war were produced in 2015 ? [system description] find the number of rows in movie table whose release year equals " dummy value " and release year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
order the results by rental rate in place of rating . [question] What are the title and rental rate of the film with the highest rental rate ? [system description] find the title and rental rate in film table with largest value of rating . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , do not use the film text table . in step 2 , consider the special features like % Deleted Scenes % conditions in place of the special features like Trailers conditions . find film 's title in place of film text 's title . [question] Return the titles of films that include 'Deleted Scenes ' in their special feature section . [system description] Step 1 : for each row in film text table , find the corresponding rows in film table . Step 2 : find the film text 's title of the results of step 1 whose special features like " Trailers " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features ( Deleted Scenes ) [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , use student table in place of faculty participates in table [question] What are the first and last name of the faculty who has the most students ? [system description] Step 1 : for each row in faculty participates in table , find the corresponding rows in faculty table . Step 2 : find the number of rows of each value of faculty participates in 's faculty id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 with largest value in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the station table besides the trip table . find for each value of start station id in place of start station name . find name and longitude in place of start station name . [question] For each station , return its longitude and the average duration of trips that started from the station . [system description] find each value of start station name in trip table along with the average duration of the corresponding rows to each value . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
only show me the first 3 results . [question] Show the details and star ratings of the 3 least expensive hotels . [system description] find the other hotel details and star rating code in hotels table with smallest value of price range . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , do not use the state table . in step 2 , consider the lake 's state name equals michigan and lake 's area greater than 750 conditions in place of the state 's state name equals dummy value conditions . [question] name the major lakes in michigan [system description] Step 1 : for each row in state table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose state 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the band table . in step 2 , consider the last name equals Heilo and title equals Der Kapitan conditions in place of the title equals dummy value conditions . [question] Which vocal type did the musician with last name " Heilo " played in the song with title " Der Kapitan " ? [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the type of the results of step 1 whose title equals " dummy value " and title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
use the smallest in place of largest . [question] Return the name of the youngest captain . [system description] find the name in captain table with largest value of age . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
order the results by origin in place of flight number . [question] Show flight number , origin , destination of all flights in the alphabetical order of the departure cities . [system description] find the flight number , origin , destination in flight table ordered ascending by flight number . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] what states does the ohio river run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , you shoud consider either of the conditions rather than both of them . consider the district equals 2 or district equals 1 conditions in place of the district equals 4 and comptroller equals John Faso conditions . find comptroller in place of party 's party . [question] Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties ? [system description] Step 1 : for each row in election table , find the corresponding rows in party table . Step 2 : find the party 's party of the results of step 1 whose district equals 4 and comptroller equals " John Faso " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the state name equals washington and city name equals seattle conditions in place of the city name equals dummy value conditions . find population in place of number of rows . [question] how many people live in seattle washington [system description] find the number of rows in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] what states have cities named springfield [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . order the results by length in place of highest point . [question] what is the longest river in the state with the highest point [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in highlow table . Step 2 : find the river name of the results of step 1 with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the staff table . in step 2 , additionally make sure that job title code equals Clerical Staff . find maximum date assigned to in place of minimum date assigned from . in step 3 , make sure the date assigned to is less than the results of step 2 the date assigned from is less than the results of step 2 . [question] Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the minimum date assigned from in staff department assignments table . Step 3 : find the staff 's staff id of the results of step 1 whose date assigned from less than the results of step 2 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code ( Clerical Staff ) [C] date assigned to
in step 2 , consider the resolution greater than 900 conditions in place of the resolution greater than 320 conditions . find for each value of song 's artist name whose number of rows greater than or equals 1 . find artist 's country in place of song 's country . [question] Find the name and country of origin for all artists who have release at least one song of resolution above 900 . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and song 's country of the results of step 1 whose resolution greater than 320 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , consider the name equals VLDB conditions in place of the name equals dummy value conditions . find summation of citation num in place of jid . [question] return me the total citations of all the papers in the VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the origin equals Los Angeles and destination equals Honolulu conditions in place of the destination equals Chicago conditions . [question] What is the average price for flights from Los Angeles to Honolulu . [system description] find the average price in flight table whose destination equals " Chicago " and destination equals " Chicago " . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles , Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the border info table and state table . in step 2 , consider the highest elevation is equals maximum highest elevation highlow conditions in place of the highest elevation equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] in which state does the highest point in usa exist [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the border info 's state name of the results of step 1 whose highest elevation equals " dummy value " with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not find for each value of storm id . in step 2 , additionally make sure that number deaths greater than or equals 1 . [question] What are the names , dates active , and number of deaths for storms that had 1 or more death ? [system description] Step 1 : find the number of rows of each value of storm id in storm table . Step 2 : find the name , dates active , number deaths in storm table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 2 , consider the duration like 3 : % conditions in place of the duration less than 4:34 conditions . [question] What are the maximum and minimum resolution of songs whose duration is 3 minutes ? [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the maximum resolution and minimum resolution of the results of step 1 whose duration less than " 4:34 " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally find name . [question] List the id , country , city and name of the airports ordered alphabetically by the name . [system description] find the id , city , country in airport table ordered ascending by name . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
in step 1 , do not use the allergy type table and has allergy table . in step 2 , consider the student 's stuid is not one of has allergy 's stuid has allergy whose has allergy 's allergy equals Soy conditions in place of the allergy type not equals animal conditions . [question] Find the first name and major of the students who are not allegry to soy . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and major of the results of step 1 whose allergy type not equals " animal " . [schema] [T] allergy type [C] allergy ( Soy ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Soy ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , consider the name equals University of Pennsylvania conditions in place of the name equals Tohoku University conditions . find number of different title in place of number of papers 's paper id . [question] Find the number of papers published by the institution " University of Pennsylvania " . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of papers 's paper id of the results of step 1 whose name equals " Tohoku University " . [schema] [T] institution [C] institution id [C] name ( University of Pennsylvania ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
additionally use the information from the station company table besides the company table . [question] Show the company name with the number of gas station . [system description] find each value of company id in company table along with the number of the corresponding rows to each value . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
remove the country name equals dummy value conditions . [question] give me the cities in usa [system description] find the city name in city table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the bed type equals King conditions in place of the beds equals 1 conditions . [question] How many rooms have a king bed ? [system description] find the number of rows in rooms table whose beds equals 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the length of the longest river in the usa [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . in step 2 , do not find for each value of city name . in step 3 , you should not find the largest of the results . show me all the results . [question] what is the most populous city in wyoming [system description] Step 1 : find rows in city table whose state name equals " dummy value " . Step 2 : find the number of rows of each value of city name the results of step 1 . Step 3 : find the city name the results of step 1 with largest value in the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the customers table besides the customer contact channels table . consider the customer name equals Tillman Ernser conditions in place of the active to date equals 2018-03-23 01:30:52 conditions . find maximum active to date in place of active from date . you should not find the largest of the results . show me all the results . [question] What is the " active to date " of the latest contact channel used by " Tillman Ernser " ? [system description] find the active from date in customer contact channels table whose active to date equals " 2018-03-23 01:30:52 " with largest value of active to date . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
order the results by duration in place of start date . [question] What is the id of the shortest trip ? [system description] find the id in trip table with smallest value of start date . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] what state has the greatest population density [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of different department name in place of number of rows . [question] How many departments does the college has ? [system description] find the number of rows in department table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the student table , enroll table , and class table . in step 2 , find for each value of school code in place of class 's class code . in step 3 , find school code in place of professor office . use the smallest in place of largest . [question] Which school has the smallest amount of professors ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the number of rows of each value of class 's class code of the results of step 1 . Step 3 : find the professor office of the results of step 1 with largest value in the results of step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the band table and performance table . in step 2 , consider the last name equals Heilo and title equals Badlands conditions in place of the title equals dummy value conditions . [question] What instrument did the musician with last name " Heilo " use in the song " Badlands " ? [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , additionally use the information from the person table besides the person friend table . consider the job equals student conditions in place of the friend equals Zach conditions . [question] What are the names of the people who have no friends who are students ? [system description] Step 1 : find the person 's name in person table . Step 2 : find the person friend 's name in person friend table whose friend equals " Zach " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the border info table and state table . in step 2 , consider the traverse equals ohio and length greater than 750 conditions in place of the border info 's state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many major rivers cross ohio [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the order status code equals Pending conditions in place of the order status code equals Cancelled conditions . make sure no repetition in the results . order the results by customer orders 's customer id in place of customer name . [question] Return the distinct name of customers whose order status is Pending , in the order of customer id . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table . Step 2 : find the customer name of the results of step 1 whose order status code equals " Cancelled " ordered ascending by customer name . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Pending ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the border info table and state table . in step 2 , consider the traverse is one of border border info whose border info 's state name equals alabama conditions in place of the border equals dummy value conditions . [question] what rivers are in states that border alabama [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use journal table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . in step 3 , find number of different title in place of number of publication 's jid . [question] return me the number of papers published in PVLDB in each year . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of jid of the corresponding rows to each value . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , use performance table in place of vocals table [question] What is the last name of the musician that have produced the most songs ? [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the number of rows of each value of last name of the results of step 1 . Step 3 : find the last name of the results of step 1 with largest value in the results of step 2 . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the documents table . in step 2 , find document type description in place of document description . [question] Show all document type codes , document type names , document type descriptions . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the reference document types 's document type code , document type name , document description of the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
consider the state equals NY conditions in place of the state equals FL conditions . [question] How many parks are there in the state of NY ? [system description] find the number of rows in park table whose state equals " FL " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the enroll table , student table , and class table . in step 2 , find for each value of school code in place of class 's class code . find school code in place of number of rows . find number of different department address in place of department address . [question] Count different addresses of each school . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of class 's class code of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the city code not equals HKG conditions in place of the city code not equals DAL conditions . order the results by age in place of last name . [question] List the first and last name of students who are not living in the city with code HKG , and sorted the results by their ages . [system description] find the first name and last name in student table whose city code not equals " DAL " ordered ascending by last name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HKG ) [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 2 , make sure no repetition in the results . [question] Find the name and age of the person who is a friend of Dan or Alice . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name and age of the results of step 1 whose friend equals " Alice " or friend equals " Dan " . [schema] [T] person [C] name ( Dan , Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Dan , Alice ) [C] year
do not return number cities . [question] What are the countries for each market ordered by decreasing number of cities ? [system description] find the country and number cities in market table ordered descending by number cities . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
use plays games table in place of student table . find summation of hours played in place of number of rows . [question] Show all student ids and the number of hours played . [system description] find each value of student id in student table along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 2 , remove the rate greater than 156.25 conditions . find for each value of room whose number of rows greater than 60 . [question] What are the names of rooms whose reservation frequency exceeds 60 times ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name of the results of step 1 whose rate greater than 156.25 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally find minimum product price . [question] For each product type , return the maximum and minimum price . [system description] find each value of product type code in products table along with the maximum product price of the corresponding rows to each value . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the products table . in step 2 , consider the reference product categories 's product category code equals Herbs conditions in place of the product name equals ginger conditions . [question] Return the description and unit of measurement for products in the 'Herbs ' category . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description and unit of measure of the results of step 1 whose product name equals " ginger " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals texas conditions in place of the city 's state name equals dummy value conditions . [question] what is the capital of the texas state [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use student table in place of faculty participates in table [question] Give me the the first and last name of the faculty who advises the most students . [system description] Step 1 : for each row in faculty participates in table , find the corresponding rows in faculty table . Step 2 : find the number of rows of each value of faculty participates in 's faculty id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 with largest value in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] what is the capital of the smallest state [system description] find the capital in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] which state has the least population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the border info 's state name equals kentucky conditions in place of the border equals dummy value conditions . [question] give me the states that border kentucky [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use publication table , author table , and writes table in place of cite table . consider the name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . find number of different name in place of number of rows . [question] return me the number of authors who have cooperated with " H. V. Jagadish " . [system description] find the number of rows in cite table whose cited equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , find for each value of member 's party id . order the results by number of rows in place of member name . [question] Return the name of the party with the most members . [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the party name of the results of step 1 with largest value of member name . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 2 , consider the first name equals Davis and last name equals Steven conditions in place of the first name equals Bruce conditions . make sure no repetition in the results . [question] What are the names of the clubs that have " Davis Steven " as a member ? [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose first name equals " Bruce " . [schema] [T] student [C] student id [C] last name ( Davis ) [C] first name ( Steven ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 2 , consider the organization name equals Labour Party conditions in place of the organization name equals Liberal Democrats conditions . order the results by date contact to in place of date contact from . [question] What is the last name of the contact individual from the Labour party organization who was contacted most recently ? [system description] Step 1 : for each row in organization contact individuals table , find the corresponding rows in individuals table and in organizations table . Step 2 : find the individual last name of the results of step 1 whose organization name equals " Liberal Democrats " with largest value of date contact from . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name ( Labour Party ) [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the city in wyoming with the largest population [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] which state has the ohio river [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , additionally make sure that population is equals maximum population state . find state 's state name in place of maximum population . in step 3 , make sure the border info 's state name is one of the results of step 2 the population is equals the results of step 2 . [question] what states border states that border the state with the largest population [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the maximum population in state table . Step 3 : find the border of the results of step 1 whose population equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the savings table besides the checking table . do not find for each value of checking 's customer id . in step 2 , find checking 's balance plus savings 's balance in place of checking 's balance and summation of checking 's balance . order the results by checking 's balance plus savings 's balance in place of summation of checking 's balance . [question] Find the total checking and saving balance of all accounts sorted by the total balance in ascending order . [system description] Step 1 : find the summation of balance of each value of customer id in checking table . Step 2 : find the balance and summation of balance in checking table ordered ascending by the results of step 1 . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] what state is the largest in population [system description] find the state name in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , remove the state 's country name equals dummy value conditions . [question] what are the major rivers in the us [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the person friend table . in step 2 , consider the person 's name equals Zach and job equals doctor conditions in place of the person friend 's name equals Bob conditions . [question] How old is the doctor named Zach ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the age of the results of step 1 whose person friend 's name equals " Bob " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job ( doctor ) [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , do not find for each value of citation num . in step 2 , additionally make sure that citation num greater than 200 . find title in place of citation num . [question] return me the paper with more than 200 citations . [system description] Step 1 : find the number of jid of each value of citation num in publication table . Step 2 : find the citation num in publication table whose corresponding value in step 1 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the teachers table . in step 2 , find number of different list 's class room in place of teachers 's class room . [question] For each grade , report the grade , the number of classrooms in which it is taught and the total number of students in the grade . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find each value of grade of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
remove the gender equals Female conditions . find for each value of gender . additionally find gender . [question] How many artists are male and how many are female ? [system description] find the number of rows in artist table whose gender equals " Female " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female , Male ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the mountain table and state table . in step 2 , additionally make sure that lowest elevation is equals minimum lowest elevation highlow . you should not find the smallest of the results . show me all the results . [question] what is the name of the state with the lowest point [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain 's state name of the results of step 1 with smallest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals texas conditions in place of the city 's state name equals dummy value conditions . [question] what are the capital city in texas [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use movie table in place of copyright table , directed by table , and director table in step 2 , consider the title equals James Bond and actor 's nationality equals Canada conditions in place of the director 's nationality equals dummy value and actor 's nationality equals dummy value conditions . [question] Find all actors from Canada who acted in " James Bond " movies [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in directed by table and in director table . Step 2 : find the actor 's name of the results of step 1 whose actor 's nationality equals " dummy value " and director 's nationality equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
find for each value of status . order the results by number of rows in place of status . [question] Return the different statuses of cities , ascending by frequency . [system description] find the status in city table ordered ascending by status . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
in step 1 , consider the state equals FL conditions in place of the state equals OK conditions . find maximum enrollment in place of minimum enrollment . [question] Find names of all colleges whose enrollment is greater than that of all colleges in the FL state . [system description] Step 1 : find the minimum enrollment in college table whose state equals " OK " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [schema] [T] college [C] college name [C] state ( FL ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
additionally use the information from the track table besides the media type table . consider the media type 's name equals AAC audio file conditions in place of the media type 's name equals MPEG audio file conditions . [question] How many tracks are in the AAC audio file media type ? [system description] find the number of rows in media type table whose name equals " MPEG audio file " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name ( AAC audio file ) [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , use match season table in place of team table and player table in step 2 , consider the college equals UCLA conditions in place of the name equals Ryley Goldner conditions . find match season 's player in place of player 's player . [question] Who are the players from UCLA ? [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : find the player of the results of step 1 whose name equals " Ryley Goldner " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( UCLA ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , additionally use the information from the sports info table besides the student table . [question] What is the first and last name of the student who played the most sports ? [system description] Step 1 : find the number of rows of each value of student id in student table . Step 2 : find the first name and last name in student table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , do not use the domain author table and domain table . in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the domain 's name equals dummy value conditions . find number of different keyword in place of number of rows . [question] return me the number of the keywords related to " H. V. Jagadish " . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table and in domain author table and in domain table . Step 2 : find the number of rows of the results of step 1 whose domain 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the city name equals boulder conditions in place of the area equals dummy value conditions . find city 's population in place of summation of city 's population . [question] how many citizens in boulder [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the summation of city 's population of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the college table . in step 2 , order the results descending by number of rows . [question] How many students participated in tryouts for each college by descennding count ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find each value of tryout 's college name of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
additionally make sure that how to get there equals bus . [question] Which tourist attractions can we get to by bus ? Tell me the names of the attractions . [system description] find the name in tourist attractions table . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , do not use the mountain table and state table . in step 2 , consider the highlow 's state name equals delaware conditions in place of the mountain 's state name equals dummy value conditions . find highest elevation in place of maximum highest point . [question] what is the highest point in delaware in meters [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose mountain 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find party name in place of took office . [question] Who are the ministers and what parties do they belong to , listed descending by the times they took office ? [system description] find the minister and took office in party table ordered descending by took office . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
additionally make sure that age is equals maximum age student . find stuid in place of first name . you should not find the largest of the results . show me all the results . [question] Show the student id of the oldest student . [system description] find the first name in student table with largest value of age . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , consider the list 's last name equals RAY and list 's first name equals MADLOCK conditions in place of the list 's last name equals NAKAHARA and teachers 's first name equals ALFREDA conditions . [question] Find the number of teachers who teach the student called MADLOCK RAY . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the number of rows of the results of step 1 whose teachers 's first name equals " ALFREDA " and list 's last name equals " NAKAHARA " . [schema] [T] list [C] last name ( MADLOCK ) [C] first name (  RAY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , use faculty participates in table in place of participates in table [question] Which activity has the most faculty members participating in ? Find the activity name . [system description] Step 1 : for each row in activity table , find the corresponding rows in participates in table . Step 2 : find the number of rows of each value of participates in 's activity id of the results of step 1 . Step 3 : find the activity name of the results of step 1 with largest value in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
additionally use the information from the loan table besides the bank table . make sure no repetition in the results . [question] Find the name of bank branches that provided some loans . [system description] find the bname in bank table . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , do not use the lake table . in step 2 , do not find for each value of state name . in step 3 , additionally make sure that length greater than 750 . find traverse in place of state name . [question] what states contain at least one major rivers [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the number of rows of each value of state name of the results of step 1 . Step 3 : find the state name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the team table besides the salary table . additionally find name . [question] What is the highest salary among each team ? List the team name , id and maximum salary . [system description] find each value of team id in salary table along with the maximum salary of the corresponding rows to each value . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the teachers table . in step 2 , do not find for each value of grade . find list 's class room in place of teachers 's class room and number of rows . make sure no repetition in the results . [question] For each classroom report the grade that is taught in it . Report just the classroom number and the grade number . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find each value of grade of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , do not use the border info table and state table . in step 2 , consider the highest elevation is equals maximum highest elevation highlow conditions in place of the highest elevation equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what state contains the highest point in the us [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the border info 's state name of the results of step 1 whose highest elevation equals " dummy value " with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the country equals Bangladesh conditions in place of the gender equals Male conditions . [question] How many Bangladeshi artists are listed ? [system description] find the number of rows in artist table whose gender equals " Male " . [schema] [T] genre [C] genre name [C] rating [C] most popular in ( Bangladesh ) [T] artist [C] artist name [C] country ( Bangladesh ) [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country ( Bangladesh ) [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
use product suppliers table in place of products table . order the results by total amount purchased in place of product price . only show me the first 3 results . [question] What are the ids of the top three products that were purchased in the largest amount ? [system description] find the product id in products table with largest value of product price . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 2 , make sure that the corresponding value in step 1 greater than or equals 2 . [question] Show the name of colleges that have at least two players . [system description] Step 1 : find the number of rows of each value of college in match season table . Step 2 : find the college in match season table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , consider the country equals United States conditions in place of the city greater than Salon conditions . in step 3 , make sure that the corresponding value in step 2 greater than 3 . find city in place of number of rows . [question] What is the number of cities in the United States with more than 3 airports ? [system description] Step 1 : find rows in airports table whose city greater than " Salon " . Step 2 : find the number of rows of each value of city the results of step 1 . Step 3 : find the number of rows the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( STATES , UNITED ) [C] country ( United States ) [C] active
in step 1 , do not use the film text table . in step 3 , find actor 's actor id in place of film text 's film id . [question] Which film actor ( actress ) starred the most films ? List his or her first name , last name and actor id . [system description] Step 1 : for each row in film text table , find the corresponding rows in film actor table and in actor table . Step 2 : find the number of rows of each value of film actor 's actor id of the results of step 1 . Step 3 : find the first name , last name , film text 's film id of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , additionally use the information from the course table , enroll table , and class table besides the department table . find for each value of course 's department code in place of department name . [question] What is the name of the department that has the largest number of students enrolled ? [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with largest value in the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the highlow table and state table . in step 2 , consider the mountain altitude is equals maximum mountain altitude mountain conditions in place of the state 's country name equals dummy value conditions . find mountain name in place of mountain altitude . you should not find the largest of the results . show me all the results . [question] what is the highest mountain in the us [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals iowa conditions in place of the state name equals dummy value conditions . find lowest point in place of minimum lowest point . [question] what is the lowest point of iowa [system description] find the minimum lowest point in highlow table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the list 's last name equals BROMLEY and list 's first name equals EVELINA conditions in place of the teachers 's first name equals OTHA conditions . find teachers 's first name in place of list 's first name . [question] Find the first and last name of all the teachers that teach EVELINA BROMLEY . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " OTHA " . [schema] [T] list [C] last name ( BROMLEY ) [C] first name (  EVELINA ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
additionally use the information from the manufacturers table besides the products table . find for each value of manufacturers 's name in place of products 's name . find manufacturers 's name in place of products 's name . [question] What are the average prices of products , grouped by manufacturer name ? [system description] find each value of name in products table along with the average price of the corresponding rows to each value . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
additionally use the information from the phone market table besides the phone table . find summation of num of stock in place of number of rows . [question] For each phone , show its names and total number of stocks . [system description] find each value of name in phone table along with the number of the corresponding rows to each value . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 2 , consider the credit score less than 100 conditions in place of the credit score less than 210 conditions . find for each value of bname . find bname in place of customer name . order the results by summation of amount in place of amount . [question] What is the name of the bank branch that has lended the largest total amount in loans , specifically to customers with credit scores below 100 ? [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 whose credit score less than 210 with largest value of amount . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally use the information from the region table and affected region table besides the storm table . consider the region name equals Denmark conditions in place of the name equals One conditions . [question] What are the names of the storms that affected Denmark ? [system description] find the name in storm table whose name equals " One " . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name ( Denmark ) [T] affected region [C] region id [C] storm id [C] number city affected
consider the destination airport id is one of airport id airports whose country equals United States and source airport id is one of airport id airports whose country equals United States conditions in place of the source airport equals ST conditions . do not return destination airport id . [question] What is the id of the routes whose source and destination airports are in the United States ? [system description] find the route id and destination airport id in routes table whose source airport equals " ST " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( STATES , UNITED ) [C] country ( United States ) [C] active
in step 2 , consider the city equals London and year equals 2018 conditions in place of the city equals Oxford and address road equals Concord Road conditions . [question] What is the sum of total pounds of purchase in year 2018 for all branches in London ? [system description] Step 1 : for each row in branch table , find the corresponding rows in purchase table . Step 2 : find the summation of total pounds of the results of step 1 whose city equals " Oxford " and address road equals " Concord Road " . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city ( London ) [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 1 , do not use the customers table . in step 3 , make sure that the corresponding value in step 2 greater than 2 . [question] Find all the policy types that are used by more than 2 customers . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the number of rows of each value of policy type code of the results of step 1 . Step 3 : find the policy type code of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
additionally find rating . you should not order the results by rating . [question] What are the names of all genres in alphabetical order , combined with its ratings ? [system description] find the genre name in genre table ordered ascending by genre name and rating . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the payment method code equals Visa conditions in place of the payment method code equals Discover Card conditions . additionally find amount payment . [question] Give me the payment Id , the date and the amount for all the payments processed with Visa . [system description] find the payment id , date payment made , date payment made in payments table whose payment method code equals " Discover Card " . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code ( Visa ) [C] date payment made [C] amount payment
in step 2 , consider the title equals Demon Kitty Rag conditions in place of the title equals dummy value conditions . find number of rows in place of type . [question] What are the types of vocals used in the song " Demon Kitty Rag " ? [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the type of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the team table and player table . in step 2 , consider the capital equals Dublin conditions in place of the capital equals Baghdad conditions . find position in place of player 's player . make sure no repetition in the results . [question] Give the different positions of players who play for the country with the capital Dublin . [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose capital equals " Baghdad " . [schema] [T] country [C] country id [C] country name [C] capital ( Dublin ) [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , do not use the state table . in step 2 , consider the city 's population greater than 150000 conditions in place of the city 's state name equals dummy value conditions . find city name in place of capital . [question] what are the major cities of the us [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that population is equals maximum population city . you should not find the largest of the results . show me all the results . [question] what city has the largest population [system description] find the city name in city table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
make sure no repetition in the results . [question] Show all card type codes . [system description] find the card type code in customers cards table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name is one of state 's state name state whose capital equals des moines conditions in place of the capital equals dummy value conditions . find highest point in place of maximum highest point . [question] what is the highest point in the state with the capital des moines [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose capital equals " dummy value " and capital equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the party forms table besides the forms table . find for each value of party forms 's form id in place of form name . [question] What is the name of the party form that is most common ? [system description] Step 1 : find the number of rows of each value of form name in forms table . Step 2 : find the form name in forms table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the race table besides the track table . find for each value of race 's track id in place of track 's name . [question] Show the name of track and the number of races in each track . [system description] find each value of name in track table along with the number of the corresponding rows to each value . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
consider the active equals Y conditions in place of the active like N conditions . [question] Find the number of team franchises that are active ( have ' Y ' as " active " information ) . [system description] find the number of rows in team franchise table whose active like " N " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , consider the course code equals CIS-220 conditions in place of the course code equals ACCT-211 conditions . in step 2 , do not find for each value of course description . find course credit in place of summation of course credit . [question] How many credits does course CIS-220 have , and what its description ? [system description] Step 1 : find rows in course table whose course code equals " ACCT-211 " . Step 2 : find each value of course description the results of step 1 along with the summation of course credit of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code ( CIS-220 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , additionally make sure that event name equals Annaual Meeting . [question] Count the number of Annual Meeting events that took place in the region of the United Kingdom . [system description] Step 1 : for each row in party events table , find the corresponding rows in party table and in region table . Step 2 : find the number of rows of the results of step 1 whose region name equals " United Kingdom " . [schema] [T] region [C] region id [C] region name ( United Kingdom ) [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , do not use the reference document types table . [question] How many documents are there of each type ? [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find each value of documents 's document type code of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , additionally use the information from the journal table , publication table , and writes table . in step 2 , consider the journal 's name equals PVLDB and organization 's name equals University of Michigan conditions in place of the author 's name equals dummy value and organization 's name equals dummy value conditions . find number of different title in place of number of organization 's oid . [question] return me the number of papers in PVLDB in " University of Michigan " . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the number of organization 's oid of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , find number of different state in place of number of rows . [question] How many states have smaller colleges than average ? [system description] Step 1 : find the average enrollment in college table . Step 2 : find the number of rows in college table whose enrollment less than the results of step 1 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , consider the customer 's first name equals Leonie conditions in place of the customer 's first name equals Dan conditions . find employee 's first name in place of customer 's first name . [question] What is the first name and last name employee helps the customer with first name Leonie ? [system description] Step 1 : for each row in employee table , find the corresponding rows in customer table . Step 2 : find the customer 's first name and employee 's last name of the results of step 1 whose customer 's first name equals " Dan " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name ( Leonie ) [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
additionally use the information from the customers cards table besides the customers table . consider the card type code equals Credit and customer first name equals Blanche and customer last name equals Huels conditions in place of the customer first name equals Armani and customer last name equals Erdman conditions . [question] Count the number of credit cards that the customer with first name Blanche and last name Huels has . [system description] find the number of rows in customers table whose customer first name equals " Armani " and customer last name equals " Erdman " . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name ( Blanche ) [C] customer last name ( Huels ) [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code ( Credit ) [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , do not use the mountain table and state table . in step 2 , consider the highlow 's state name equals pennsylvania conditions in place of the mountain 's state name equals dummy value conditions . find lowest elevation in place of minimum highest elevation . [question] what is the lowest elevation in pennsylvania [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum highest elevation of the results of step 1 whose mountain 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of different label in place of label . [question] What are the unique labels for the albums ? [system description] find the label in albums table . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , use domain author table , domain table , and organization table in place of cite table in step 2 , consider the domain 's name equals Databases and organization 's name equals University of Michigan conditions in place of the cited greater than dummy value and cited less than dummy value conditions . find for each value of author 's name whose summation of citation num greater than 5000 . [question] return me the author in the " University of Michigan " in Databases area whose papers have more than 5000 total citations . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited greater than " dummy value " and cited less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the reference budget codes table . in step 2 , consider the documents with expenses 's budget type code equals GV conditions in place of the reference budget codes 's budget type code equals ORG conditions . in step 3 , do not use the reference budget codes table . in step 4 , consider the documents with expenses 's budget type code equals SF conditions in place of the reference budget codes 's budget type code equals SF conditions . [question] Give the dates of creation for documents that have both budget type codes 'GV ' and 'SF ' . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the document date of the results of step 1 whose reference budget codes 's budget type code equals " ORG " . Step 3 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 4 : find the document date of the results of step 3 whose reference budget codes 's budget type code equals " SF " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF , GV ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( SF , GV ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
additionally use the information from the domain table and domain conference table besides the conference table . consider the conference 's name equals VLDB conditions in place of the conference 's name equals dummy value conditions . find domain 's name in place of homepage . [question] return me the area of the VLDB conference . [system description] find the homepage in conference table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the ref hotel star ratings table . in step 2 , find average price range in place of average hotels 's star rating code . [question] Show the average price of hotels for each star rating code . [system description] Step 1 : for each row in hotels table , find the corresponding rows in ref hotel star ratings table . Step 2 : find each value of ref hotel star ratings 's star rating code of the results of step 1 along with the average hotels 's star rating code of the corresponding rows to each value . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
consider the state name equals alaska and population is equals maximum population city whose state name equals alaska conditions in place of the state name equals dummy value conditions . find population in place of number of rows . [question] how large is the largest city in alaska [system description] find the number of rows in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the class room equals 107 conditions in place of the class room equals 104 conditions . make sure no repetition in the results . [question] What are the first names of students studying in room 107 ? [system description] find the first name in list table whose class room equals 104 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
find total horses in place of summation of total horses . [question] List the total number of horses on farms in ascending order . [system description] find the summation of total horses in farm table ordered ascending by total horses . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
consider the title equals Juno and release year equals 2007 conditions in place of the release year equals dummy value and title equals dummy value conditions . [question] What was the budget of the movie Juno from 2007 ? [system description] find the budget in movie table whose title equals " dummy value " and release year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , additionally use the information from the department table . in step 2 , consider the department name equals History conditions in place of the professor office equals DRE 102 conditions . [question] What are the last name and office of all history professors ? [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee last name and professor office of the results of step 1 whose professor office equals " DRE 102 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , do not find for each value of station id . in step 3 , additionally make sure that bikes available greater than 12 . make sure no repetition in the results . [question] What are the different ids and names of the stations that have had more than 12 bikes available ? [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the id and name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , find supplier phone in place of supplier name . [question] What are the phone numbers of all customers and suppliers . [system description] Step 1 : find the customer phone in customers table . Step 2 : find the supplier name in suppliers table . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the video games table . in step 2 , find summation of hours played in place of number of rows . [question] Show all game ids and the number of hours played . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find each value of plays games 's game id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 2 , find for each value of customer 's customer id . order the results by summation of amount in place of amount . [question] What is the full name and id of the customer who has the lowest total amount of payment ? [system description] Step 1 : for each row in payment table , find the corresponding rows in customer table . Step 2 : find the first name , last name , customer 's customer id of the results of step 1 with smallest value of amount . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
additionally use the information from the customer table besides the employee table . consider the customer 's first name equals Leonie conditions in place of the employee 's first name equals Andrew conditions . find employee 's first name in place of title . [question] Find the full names of employees who help customers with the first name Leonie . [system description] find the title and last name in employee table whose first name equals " Andrew " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name ( Leonie ) [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , additionally use the information from the person friend table besides the person table . [question] What is the name of the person who has the oldest average age for their friends , and what is that average age ? [system description] Step 1 : find the average age of each value of name in person table . Step 2 : find the name and average age in person table with largest value in the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , consider the state province county equals Colorado conditions in place of the country equals USA conditions . [question] Find the name of customers who are living in Colorado ? [system description] Step 1 : for each row in addresses table , find the corresponding rows in customer addresses table and in customers table . Step 2 : find the customer name of the results of step 1 whose country equals " USA " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county ( Colorado ) [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the list table besides the teachers table . consider the list 's last name equals RAY and list 's first name equals MADLOCK conditions in place of the teachers 's first name equals LEIA and teachers 's last name equals KRIENER conditions . [question] How many teachers does the student named MADLOCK RAY have ? [system description] find the number of rows in teachers table whose first name equals " LEIA " and last name equals " KRIENER " . [schema] [T] list [C] last name ( MADLOCK ) [C] first name (  RAY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , do not use the college table . in step 2 , additionally make sure that decision equals yes . [question] What are the names of all the players who received a yes during tryouts , and also what are the names of their colleges ? [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name and college 's college name of the results of step 1 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
in step 1 , do not use the team franchise table . in step 2 , consider the name equals Boston Red Stockings and postseason 's year equals 2009 conditions in place of the franchise name equals Cleveland Infants and team 's year equals 1923 conditions . find number of rows in place of number of wins . [question] Count the number of times the team " Boston Red Stockings " lost in 2009 postseason . [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table and in team franchise table . Step 2 : find the number of wins of the results of step 1 whose franchise name equals " Cleveland Infants " and team 's year equals 1923 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red , Count ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally use the information from the cast table and movie table besides the actor table . consider the title equals Rush Hour 3 and nationality equals China conditions in place of the nationality equals dummy value conditions . find number of different name in place of number of rows . [question] How many actors from China have acted in " Rush Hour 3 " [system description] find the number of rows in actor table whose nationality equals " dummy value " and nationality equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally make sure that enrollment greater than 18000 . order the results ascending by college name in place of ordering descending by enrollment . [question] What is the name of every college in alphabetical order that has more than 18000 students enrolled ? [system description] find the college name in college table ordered descending by enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the projects table . [question] What is the id of the project with least number of documents ? [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 with smallest value in the results of step 2 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the state table . in step 2 , consider the city name is equals capital state whose state 's state name equals texas conditions in place of the city 's state name equals dummy value conditions . find city 's population in place of capital . [question] what is the size of the capital of texas [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the reference document types table . in step 2 , consider the document name equals Noel CV or document name equals King Book conditions in place of the document description equals None or document name equals Review on UK files conditions . find document name in place of document type name . [question] List the document type code , document name , and document description for the document with name 'Noel CV ' or name 'King Book ' . [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the documents 's document type code , document type name , document description of the results of step 1 whose document name equals " Review on UK files " or document description equals " None " . [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( Book , CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name ( King Book , Noel CV ) [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the lake table . in step 2 , consider the traverse equals illinois conditions in place of the state name equals dummy value conditions . [question] what rivers are there in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the cite table . in step 2 , consider the year greater than 2000 and name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . [question] return me the authors who have cooperated with " H. V. Jagadish " after 2000 . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : find the name of the results of step 1 whose cited equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the city equals Mountain View conditions in place of the end station name equals 5th at Howard conditions . [question] How many trips started from Mountain View city and ended at Palo Alto city ? [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the number of rows of the results of step 1 whose city equals " Palo Alto " and end station name equals " 5th at Howard " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View , Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
find number of different customer id in place of number of rows . [question] What are the different card type codes , and how many different customers hold each type ? [system description] find each value of card type code in customers cards table along with the number of the corresponding rows to each value . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , do not use the state table . in step 2 , consider the city 's state name equals kansas and city 's population greater than 150000 conditions in place of the state 's state name equals dummy value conditions . [question] what are the major cities in the state of kansas [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 3 , find staff 's staff id in place of payment id . [question] Which staff handled least number of payments ? List the full name and the id . [system description] Step 1 : for each row in payment table , find the corresponding rows in staff table . Step 2 : find the number of rows of each value of payment 's staff id of the results of step 1 . Step 3 : find the first name , last name , payment id of the results of step 1 with smallest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
remove the country name equals dummy value conditions . find number of state name in place of number of rows . [question] how many states are there in the usa [system description] find the number of rows in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the year less than 2009 conditions in place of the year less than 2006 conditions . additionally find minimum ticket price . [question] Show the average , minimum , and maximum ticket prices for exhibitions for all years before 2009 . [system description] find the average ticket price , maximum ticket price , maximum ticket price , maximum ticket price in exhibition table whose year less than 2006 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 2 , order the results by number of different traverse in place of number of rows . [question] which river runs through most states [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use tryout table in place of college table . find number of different tryout 's college name in place of number of college 's college name . [question] How many different colleges were represented at tryouts ? [system description] find the number of college name in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , use tags table and keyword table in place of genre table in step 2 , consider the keyword equals nuclear weapons conditions in place of the genre equals dummy value conditions . [question] Find all movies about nuclear weapons [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose genre equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , additionally use the information from the medicine table . in step 2 , consider the enzyme 's name equals ALA synthase and medicine 's name equals Aripiprazole conditions in place of the enzyme 's name equals ALA dehydratase and enzyme 's name equals Ferrochelatase conditions . [question] What is the interaction type of the enzyme named 'ALA synthase ' and the medicine named 'Aripiprazole ' ? [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table . Step 2 : find the interaction type of the results of step 1 whose name equals " Ferrochelatase " and name equals " ALA dehydratase " . [schema] [T] medicine [C] id [C] name ( Aripiprazole ) [C] trade name [C] fda approved [T] enzyme [C] id [C] name ( ALA synthase ) [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
in step 1 , do not use the purchase table and member table . in step 2 , consider the membership amount greater than or equals 100 conditions in place of the membership amount greater than 7 conditions . find city in place of hometown . make sure no repetition in the results . [question] What are the different cities that have more than 100 memberships ? [system description] Step 1 : for each row in branch table , find the corresponding rows in purchase table and in member table . Step 2 : find the hometown of the results of step 1 whose membership amount greater than 7 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
consider the genre is equals modern conditions in place of the languages equals bangla conditions . [question] Find the names of songs whose genre is modern or language is English . [system description] find the song name in song table whose languages equals " english " or languages equals " bangla " . [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 1 , do not find for each value of name . in step 2 , order the results by membership amount in place of number of rows . only show me the first 3 results . [question] What are names for top three branches with most number of membership ? [system description] Step 1 : find the number of rows of each value of name in branch table . Step 2 : find the name in branch table with largest value in the results of step 1 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 1 , do not use the student table . in step 2 , consider the grade equals B conditions in place of the grade equals C- conditions . find number of different enrolled in 's student id in place of number of rows . [question] How many students have had at least one " B " grade ? [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table . Step 2 : find the number of rows of the results of step 1 whose grade equals " C- " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] which state has the greatest density [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use class table in place of professor table in step 2 , consider the course code equals ACCT-211 conditions in place of the department code equals PSYCH conditions . make sure no repetition in the results . [question] What are the first names and birthdates of the professors in charge of ACCT-211 ? [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and employee date of birth of the results of step 1 whose department code equals " PSYCH " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the state name equals kentucky conditions in place of the border equals dummy value conditions . [question] states bordering kentucky [system description] find the border in border info table whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the checking table . in step 2 , order the results by savings 's balance in place of checking 's balance . only show me the first 3 results . [question] Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name and savings 's balance of the results of step 1 with largest value of checking 's balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
consider the bname equals morningside conditions in place of the city equals Austin conditions . [question] Find the city and state of the bank branch named morningside . [system description] find the city and state in bank table whose city equals " Austin " . [schema] [T] bank [C] branch id [C] bname ( morningside ) [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
consider the gender equals female and birth city equals Austin conditions in place of the name equals dummy value and gender equals dummy value conditions . [question] Find all the female actors from Austin [system description] find the name in actor table whose gender equals " dummy value " and name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , consider the account type equals saving conditions in place of the account balance equals 800000 conditions . [question] What are the names of customers who have both savings and checking accounts ? [system description] Step 1 : find the customer name in customer table whose account balance equals 800000 . Step 2 : find the customer name in customer table whose account type equals " checking " . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type ( checking , saving ) [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 2 , consider the name last equals Barker and name first equals Len and year between 1985 and 1990 conditions in place of the year less than or equals 2013 and name first equals Hanser conditions . [question] Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990 . [system description] Step 1 : for each row in salary table , find the corresponding rows in player table . Step 2 : find the summation of salary of the results of step 1 whose name first equals " Hanser " and year less than or equals 2013 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Leon ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Leon ) [C] name first ( Len ) [C] name last ( Barker ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , make sure that the corresponding value in step 1 greater than or equals 4500000 . [question] List the studios which average gross is above 4500000 . [system description] Step 1 : find the average gross in dollar of each value of studio in film table . Step 2 : find the studio in film table whose corresponding value in step 1 is greater than 1 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 2 , consider the tourist details equals Vincent conditions in place of the visit details equals conditions . find visit details in place of tourist details . [question] Find the visit date and details of the tourist whose detail is 'Vincent ' [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table . Step 2 : find the visit date and tourist details of the results of step 1 whose visit details equals " " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the first name equals Solveig conditions in place of the first name equals dummy value conditions . make sure no repetition in the results . [question] Find all the stage positions of the musicians with first name " Solveig " [system description] Step 1 : for each row in band table , find the corresponding rows in performance table . Step 2 : find the stage position of the results of step 1 whose first name equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , consider the name equals American Airlines conditions in place of the name equals Aerolineas Uruguayas conditions . find number of different destination airport id in place of number of destination airport . [question] Find the number of different airports which are the destinations of the American Airlines . [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of destination airport of the results of step 1 whose name equals " Aerolineas Uruguayas " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country [C] active
additionally use the information from the department table besides the professor table . consider the department name equals Accounting conditions in place of the professor 's department code equals ART conditions . [question] Find the number of professors in accounting department . [system description] find the number of rows in professor table whose department code equals " ART " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
use sports info table in place of plays games table . find number of different sports info 's student id in place of number of plays games 's student id . [question] How many students play sports ? [system description] find the number of student id in plays games table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , use journal table , publication table , and writes table in place of organization table in step 2 , consider the journal 's name equals PVLDB and author 's name equals H. V. Jagadish and author 's name equals Yunyao Li conditions in place of the author 's name equals dummy value and organization 's name equals dummy value conditions . find title in place of organization 's name . [question] return me the papers written by " H. V. Jagadish " and " Yunyao Li " on PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the organization 's name of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the max speed greater than 1000 conditions in place of the max speed greater than 972 conditions . find average damage millions usd and maximum damage millions usd in place of maximum max speed and average max speed . [question] What is the average and maximum damage in millions for storms that had a max speed over 1000 ? [system description] find the average max speed and maximum max speed in storm table whose max speed greater than 972 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
additionally make sure that population is equals minimum population city . you should not find the smallest of the results . show me all the results . [question] what city has the least population [system description] find the city name in city table with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the age is equals minimum age person whose gender equals male and gender equals male conditions in place of the age not equals 35 conditions . you should not find the largest of the results . show me all the results . [question] Who is the youngest male ? [system description] find the name in person table whose age not equals 35 with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , additionally use the information from the student table besides the department table . find for each value of student 's department code in place of department name . [question] What is the name and address of the department with the most students ? [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name and department address in department table with largest value in the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use domain publication table in place of keyword table , domain author table , author table , writes table , and domain keyword table in step 2 , consider the domain 's name equals Databases conditions in place of the keyword equals dummy value conditions . in step 3 , do not find for each value of keyword . in step 4 , find title in place of number of jid and keyword . find the result with the largest citation num . [question] return me the paper in Databases area with the most citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of jid of each value of keyword the results of step 2 . Step 4 : find the number of jid and keyword the results of step 2 ordered descending by the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the reservations table besides the rooms table . additionally find room . [question] Return the name and number of reservations made for each of the rooms . [system description] find each value of room id in rooms table along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , consider the policy type code equals Deputy or policy type code equals Uniform conditions in place of the policy type code equals Uniformed or policy type code equals Normal conditions . make sure no repetition in the results . [question] Find the names of customers who either have an deputy policy or uniformed policy . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 whose policy type code equals " Normal " or policy type code equals " Uniformed " . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code ( Uniformed , Deputy ) [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , do not use the claim headers table . in step 2 , consider the claim status name equals Open conditions in place of the claim status code equals In Progress conditions . [question] What is the description of the claim status " Open " ? [system description] Step 1 : for each row in claim headers table , find the corresponding rows in claims processing stages table . Step 2 : find the claim status description of the results of step 1 whose claim status code equals " In Progress " . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name ( Open ) [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
additionally use the information from the exhibition table besides the artist table . find for each value of exhibition 's artist id in place of name . [question] Show all artist names and the number of exhibitions for each artist . [system description] find each value of name in artist table along with the number of the corresponding rows to each value . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 1 , use trip table in place of station table . find for each value of start station name whose number of rows greater than or equals 200 . in step 2 , find start station id and start station name in place of station 's id and name . [question] Find the ids and names of stations from which at least 200 trips started . [system description] Step 1 : find the number of rows of each value of id in station table . Step 2 : find the id and name in station table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , consider the founded greater than 1850 conditions in place of the founded greater than 1892 conditions . [question] What are the different affiliations , and what is the total enrollment of schools founded after 1850 for each enrollment type ? [system description] Step 1 : find rows in university table whose founded greater than 1892 . Step 2 : find each value of affiliation the results of step 1 along with the summation of enrollment of the corresponding rows to each value . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the state name equals washington and city name equals seattle conditions in place of the city name equals dummy value conditions . [question] what is the population of seattle washington [system description] find the population in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals california conditions in place of the area equals dummy value conditions . find population in place of summation of population . [question] how many people stay in california [system description] find the summation of population in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the student table , enroll table , and class table . in step 2 , find for each value of school code in place of class 's class code . in step 3 , find school code in place of professor office . [question] Which school has the fewest professors ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the number of rows of each value of class 's class code of the results of step 1 . Step 3 : find the professor office of the results of step 1 with smallest value in the results of step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , remove the country name equals dummy value conditions . in step 2 , do not find for each value of capital . in step 3 , make sure no repetition in the results . [question] name the 50 capitals in the usa [system description] Step 1 : find rows in state table whose country name equals " dummy value " . Step 2 : find the number of rows of each value of capital the results of step 1 . Step 3 : find the capital the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the enroll table besides the student table . consider the enroll grade equals A or enroll grade equals C conditions in place of the student gpa equals 3.87 or student gpa equals 3.09 conditions . additionally find student last name . [question] What are the names of all students taking a course who received an A or C ? [system description] find the student first name in student table whose student gpa equals 3.09 or student gpa equals 3.87 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the name full equals Yale University conditions in place of the college 's college id equals txnavar conditions . [question] What is the average height of the players from the college named 'Yale University ' ? [system description] Step 1 : for each row in college table , find the corresponding rows in player college table and in player table . Step 2 : find the average height of the results of step 1 whose college 's college id equals " txnavar " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( yale ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Yale ) [C] name last ( Yale ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( yale ) [C] name full ( Yale University ) [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , consider the medicine 's name equals Amisulpride and interaction type equals inhibitor conditions in place of the medicine 's name equals Melperone conditions . [question] What are the names of enzymes in the medicine named 'Amisulpride ' that can serve as an 'inhibitor ' ? [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table and in medicine table . Step 2 : find the enzyme 's name of the results of step 1 whose medicine 's name equals " Melperone " . [schema] [T] medicine [C] id [C] name ( Amisulpride ) [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( inhibitor )
additionally find room id . [question] Which room has the highest base price ? [system description] find the room name in rooms table with largest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the tryout table besides the player table . additionally make sure that decision equals yes . [question] What are the names and hours spent practicing of every student who received a yes at tryouts ? [system description] find the player name and training hours in player table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
in step 1 , additionally use the information from the cast table . in step 2 , consider the name equals Shahab Hosseini conditions in place of the name equals dummy value conditions . find number of different title in place of number of rows . [question] What is the number of movies in which " Shahab Hosseini " acted ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , use class table in place of department table in step 2 , remove the course 's course code equals CIS-420 conditions . [question] Find the first names of all instructors who have taught some course and the course description . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course description of the results of step 1 whose course code equals " CIS-420 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the country equals Russia conditions in place of the country equals Eritrea conditions . [question] What is the number of airlines based in Russia ? [system description] find the number of rows in airlines table whose country equals " Eritrea " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Russia ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( Russia ) [C] active
do not return summation of age . [question] How old is each student and how many students are each age ? [system description] find each value of age in student table along with the number of the corresponding rows to each value . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
consider the award equals Cleavant Derricks conditions in place of the award equals Drama Desk Award conditions . find nominee in place of name . [question] Show the musical nominee with award " Bob Fosse " or " Cleavant Derricks " . [system description] find the name in musical table whose award equals " Drama Desk Award " or award equals " Tony Award " . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee ( Cleavant Derricks , Bob Fosse ) [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
additionally make sure that affiliation equals Public . [question] What are the public schools and what are their locations ? [system description] find the school and location in university table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
use city table in place of state table . consider the city name equals boulder conditions in place of the area equals dummy value conditions . find city 's population in place of number of rows . [question] how many people in boulder [system description] find the number of rows in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , remove the continuation of equals Church of Christ conditions . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . [question] Show the opening year in whcih at least two churches opened . [system description] Step 1 : find rows in church table whose continuation of equals " Church of Christ " . Step 2 : find the number of rows of each value of open date the results of step 1 . Step 3 : find the open date the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
in step 1 , additionally use the information from the farm competition table besides the city table . find for each value of host city id in place of status . [question] What is the status of the city that has hosted the most competitions ? [system description] Step 1 : find the number of rows of each value of status in city table . Step 2 : find the status in city table with largest value in the results of step 1 . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
additionally use the information from the member of club table and student table besides the club table . remove the club name equals Hopkins Student Enterprises conditions . [question] Find the number of members of club " Pen and Paper Gaming " . [system description] find the number of rows in club table whose club name equals " Hopkins Student Enterprises " and club name equals " Pen and Paper Gaming " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Pen and Paper Gaming ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 2 , consider the albums 's title equals A Kiss Before You Go : Live in Hamburg conditions in place of the year less than dummy value and albums 's title equals dummy value conditions . [question] What are the songs in album " A Kiss Before You Go : Live in Hamburg " ? [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the songs 's title of the results of step 1 whose albums 's title equals " dummy value " and year less than " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the state table . in step 2 , additionally make sure that population is equals maximum population state . find state name in place of maximum population . in step 3 , make sure the traverse is one of the results of step 2 the population is equals the results of step 2 . [question] what rivers flow through the state with the largest population [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the maximum population in state table . Step 3 : find the river name of the results of step 1 whose population equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] how long is the longest river in the usa [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the city name equals springfield conditions in place of the capital equals dummy value and city name equals dummy value conditions . [question] what states in the united states have a city of springfield [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the border info 's state name of the results of step 1 whose city name equals " dummy value " and capital equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the state equals AZ and enrollment less than 13000 conditions in place of the enrollment greater than 22000 conditions . in step 2 , consider the enrollment greater than 15000 and state equals LA conditions in place of the enrollment less than 19000 conditions . return the rows in any of the results of step 1 and the results of step 2 . [question] What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students ? [system description] Step 1 : find the college name in college table whose enrollment greater than 22000 . Step 2 : find the college name in college table whose enrollment less than 19000 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] college [C] college name [C] state ( AZ , LA ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , use city table in place of mountain table and state table in step 2 , consider the city name equals boulder conditions in place of the mountain name equals dummy value conditions . find city 's population in place of state 's population . [question] what is the population of boulder [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the domain table and domain keyword table besides the keyword table . consider the name equals Databases conditions in place of the keyword equals dummy value conditions . [question] return me all the keywords in Databases area . [system description] find the keyword in keyword table whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . you should not find the largest of the results . show me all the results . [question] what is the capital of the state with the highest point [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find savings 's balance in place of checking 's balance . order the results by checking 's balance in place of savings 's balance . [question] Find the saving balance of the account with the highest checking balance . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the checking 's balance of the results of step 1 with largest value of savings 's balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , additionally make sure that population is equals minimum population state . do not find for each value of state name . in step 2 , you should not find the smallest of the results . show me all the results . [question] what is the least populous state [system description] Step 1 : find the number of rows of each value of state name in state table . Step 2 : find the state name in state table with smallest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the policy type code equals Deputy or policy type code equals Uniform conditions in place of the policy type code equals Uniformed or policy type code equals Normal conditions . make sure no repetition in the results . [question] Which customers have an insurance policy with the type code " Deputy " or " Uniform " ? Return the customer details . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the customer details of the results of step 1 whose policy type code equals " Normal " or policy type code equals " Uniformed " . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code ( Deputy , Uniformed ) [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , do not use the products table . in step 2 , consider the reference product categories 's product category code equals Herbs conditions in place of the products 's product category code equals Herbs conditions . [question] What is the unit of measuerment of the product category code " Herbs " ? [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the unit of measure of the results of step 1 whose products 's product category code equals " Herbs " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
consider the year greater than or equals 2005 conditions in place of the year greater than 2005 conditions . [question] How many exhibition are there in year 2005 or after ? [system description] find the number of rows in exhibition table whose year greater than 2005 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 1 , use employee table and class table in place of professor table , department table , and course table in step 2 , consider the class 's course code equals CIS-220 conditions in place of the course 's course code equals CIS-420 conditions . find employee first name in place of professor extension . in step 3 , use employee table and class table in place of professor table , department table , and course table in step 4 , consider the class 's course code equals QM-261 conditions in place of the course 's course code equals QM-261 conditions . find employee first name in place of professor extension . [question] Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261 . [system description] Step 1 : for each row in course table , find the corresponding rows in department table and in professor table . Step 2 : find the professor extension of the results of step 1 whose course code equals " CIS-420 " . Step 3 : for each row in course table , find the corresponding rows in department table and in professor table . Step 4 : find the professor extension of the results of step 3 whose course code equals " QM-261 " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] class [C] class code [C] course code ( CIS-220 , QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 , QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the routes table besides the airports table . in step 2 , additionally find destination airport id . [question] What is the name and city of the airport that the most routes end at ? [system description] Step 1 : find the number of rows of each value of airport id in airports table . Step 2 : find the name and city in airports table with largest value in the results of step 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Ende , Enid ) [C] country [C] x [C] y [C] elevation [C] iata ( END ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( END ) [C] call sign ( CITY ) [C] country [C] active
in step 2 , find longitude in place of start station id . [question] For each start station id , what is its name , longitude and average duration of trips started there ? [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find each value of start station id of the results of step 1 along with the average duration and name of the corresponding rows to each value . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
consider the last name equals SWEAZY and first name equals ROY conditions in place of the last name equals WITTROCK and first name equals PHEBE conditions . [question] How many times does ROY SWEAZY has reserved a room . [system description] find the number of rows in reservations table whose first name equals " PHEBE " and last name equals " WITTROCK " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
in step 1 , find for each value of first name and last name in place of actor id . [question] What is the most popular full name of the actors ? [system description] Step 1 : find the number of rows of each value of actor id in actor table . Step 2 : find the first name and last name in actor table with largest value in the results of step 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , use author table and writes table in place of cite table in step 2 , consider the year greater than 2000 and name equals H. V. Jagadish conditions in place of the cited equals dummy value and year greater than dummy value conditions . [question] return me the papers by " H. V. Jagadish " after 2000 . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the title of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the exhibition table besides the artist table . [question] Return the name and country corresponding to the artist who has had the most exhibitions . [system description] Step 1 : find the number of rows of each value of artist id in artist table . Step 2 : find the name and country in artist table with largest value in the results of step 1 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 1 , do not use the allergy type table . in step 2 , consider the has allergy 's allergy equals Milk and has allergy 's allergy equals Cat conditions in place of the allergy type equals environmental or allergy type equals food conditions . find city code in place of last name . make sure no repetition in the results . [question] What are the distinct first names and cities of the students who have allergy either to milk or to cat ? [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and last name of the results of step 1 whose allergy type equals " food " or allergy type equals " environmental " . [schema] [T] allergy type [C] allergy ( Milk , Cat ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , find for each value of flight 's id in place of airport id . in step 3 , additionally find iata . [question] What is the id , name and IATA code of the airport that had most number of flights ? [system description] Step 1 : for each row in airport table , find the corresponding rows in flight table . Step 2 : find the number of rows of each value of airport id of the results of step 1 . Step 3 : find the airport id , name , name of the results of step 1 with largest value in the results of step 2 . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
use reference document status table in place of documents table . [question] What document status codes do we have ? [system description] find the document status code in documents table . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
in step 1 , additionally use the information from the routes table besides the airlines table . find for each value of name in place of airlines 's airline id . [question] What is the name of the airline with the most routes ? [system description] Step 1 : find the number of rows of each value of airline id in airlines table . Step 2 : find the name in airlines table with largest value in the results of step 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
additionally use the information from the journal table besides the publication table . consider the year less than 2005 and name equals PVLDB conditions in place of the year less than dummy value conditions . find summation of citation num in place of number of publication 's jid . [question] return me the total citations of papers in PVLDB before 2005 . [system description] find the number of jid in publication table whose year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the mountain table besides the climber table . consider the mountain 's country equals Uganda conditions in place of the climber 's country equals United Kingdom conditions . [question] Show the times used by climbers to climb mountains in Country Uganda . [system description] find the time in climber table whose country equals " United Kingdom " . [schema] [T] mountain [C] mountain id [C] name [C] height [C] prominence [C] range [C] country ( Uganda ) [T] climber [C] climber id [C] name [C] country [C] time [C] points [C] mountain id
in step 1 , do not use the city table and state table . in step 2 , use city table in place of state table . additionally make sure that city 's population greater than 150000 . find for each value of city 's state name . order the results by number of city name in place of density . in step 3 , find the result with the largest length . [question] what is the longest river in the state with the most major cities [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in city table . Step 2 : find the state 's state name in state table with largest value of density . Step 3 : find the river name of the results of step 1 whose city 's state name equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the bed type equals King conditions in place of the beds equals 2 conditions . find summation of beds in place of number of rows . [question] Find the total number of king beds available . [system description] find the number of rows in rooms table whose beds equals 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the characteristics table . in step 2 , consider the product name equals sesame conditions in place of the product name equals cumin conditions . find number of different characteristic name in place of number of product characteristics 's characteristic id . [question] Count the number of different characteristic names the product 'cumin ' has . [system description] Step 1 : for each row in products table , find the corresponding rows in product characteristics table . Step 2 : find the number of characteristic id of the results of step 1 whose product name equals " cumin " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , use journal table and publication keyword table in place of domain table , domain author table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Keyword search and journal 's name equals PVLDB conditions in place of the keyword equals dummy value conditions . find title in place of publication 's jid . [question] return me the papers in PVLDB containing keyword " Keyword search " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the jid of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , use aircraft table in place of flight table . find average distance in place of average flight 's distance . [question] Show names for all aircrafts with distances more than the average . [system description] Step 1 : find the average flight 's distance in flight table . Step 2 : find the name in aircraft table whose aircraft 's distance greater than the results of step 1 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the list table . in step 2 , consider the teachers 's class room equals 110 conditions in place of the list 's class room equals 111 conditions . [question] Which teachers teach in classroom 110 ? Give me their first names . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's first name of the results of step 1 whose list 's class room equals 111 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , do not use the border info table . in step 2 , consider the state 's state name equals pennsylvania conditions in place of the border info 's state name equals dummy value conditions . find population divided by area in place of average population . [question] what is the average population per square km in pennsylvania [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the average population of the results of step 1 whose border info 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
only show me the first 3 results . [question] What are the details and star ratings of the three hotels with the lowest price ranges ? [system description] find the other hotel details and star rating code in hotels table with smallest value of price range . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the languages equals bangla conditions in place of the languages equals english conditions . in step 4 , only show me the first 3 results . [question] What are the top 3 artists with the largest number of songs in the language Bangla ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : only keep the results of step 1 whose languages equals " english " . Step 3 : find the number of rows of each value of artist 's artist name the results of step 2 . Step 4 : find the artist 's artist name the results of step 2 with largest value in the results of step 3 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
use allergy type table in place of has allergy table . additionally make sure that allergy type equals food . make sure no repetition in the results . [question] What are all the different food allergies ? [system description] find the allergy in has allergy table . [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , additionally make sure that population is equals maximum population state . do not find for each value of state name . in step 2 , you should not find the largest of the results . show me all the results . [question] which state has the most people [system description] Step 1 : find the summation of population of each value of state name in state table . Step 2 : find the state name in state table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , find the number of customer id for each value of channel code . in step 2 , make sure that the corresponding value in step 1 less than 5 . [question] Which contact channel codes were used less than 5 times ? [system description] Step 1 : find the number of rows of each value of channel code in customer contact channels table . Step 2 : find the channel code in customer contact channels table whose corresponding value in step 1 is less than 1 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , do not use the border info table and state table . in step 2 , consider the highlow 's state name is one of border border info whose border info 's state name equals colorado conditions in place of the border equals dummy value conditions . find highest point in place of maximum highest point . find the result with the largest highest elevation . [question] what is the highest point in states bordering colorado [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the club table and member of club table besides the student table . consider the last name equals Smith and first name equals Linda conditions in place of the first name equals Jandy conditions . [question] How many clubs does " Linda Smith " have membership for ? [system description] find the number of rows in student table whose first name equals " Jandy " . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 1 , additionally use the information from the author table . in step 2 , consider the name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . find number of different name in place of number of writes 's pid . [question] return me the number of authors who have cited the papers by " H. V. Jagadish " . [system description] Step 1 : for each row in writes table , find the corresponding rows in publication table and in cite table . Step 2 : find the number of writes 's pid of the results of step 1 whose cited equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find number of rows in place of number of editor id . [question] How many editors are there ? [system description] find the number of editor id in editor table . [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
additionally use the information from the airports table besides the routes table . consider the country equals Canada conditions in place of the destination airport equals TTT conditions . [question] Find the number of routes whose destination airports are in Canada . [system description] find the number of rows in routes table whose destination airport equals " TTT " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Canada ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( Canadian ) [C] country ( Canada ) [C] active
additionally use the information from the has amenity table besides the dorm table . additionally make sure that student capacity greater than 100 . find for each value of dorm 's dorm id in place of dorm name . find dorm 's dorm id in place of dorm name . [question] For each dorm , how many amenities does it have ? [system description] find each value of dorm name in dorm table along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] what is the state with the lowest population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the first name equals Lisa conditions in place of the first name equals David conditions . order the results by allergy type 's allergy name in place of last name . [question] What are the allergies the girl named Lisa has ? And what are the types of them ? Order the result by allergy names . [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the allergy type 's allergy name and allergy type of the results of step 1 whose first name equals " David " ordered ascending by last name . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name ( Lisa ) [C] age [C] sex [C] major [C] advisor [C] city code
remove the area equals dummy value conditions . find number of state name in place of number of rows . [question] how many states are in the united states [system description] find the number of rows in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the museums table and tourist attractions table . in step 2 , consider the location name equals UK Gallery conditions in place of the location name equals Film Festival conditions . find locations 's other details in place of museum details . [question] What is the detail of the location UK Gallery ? [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table and in museums table . Step 2 : find the museum details of the results of step 1 whose location name equals " Film Festival " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name ( UK Gallery ) [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description ( gallery ) [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name ( UK gallery ) [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , do not use the characteristics table , product characteristics table , and products table . in step 2 , consider the reference product categories 's product category code equals Herbs conditions in place of the characteristic name equals error conditions . [question] What is the product category description and unit of measurement of category " Herbs " ? [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference product categories table . Step 2 : find the product category description and unit of measure of the results of step 1 whose characteristic name equals " error " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 2 , consider the country 's name equals England conditions in place of the country 's name equals Spain conditions . [question] How many leagues are there in England ? [system description] Step 1 : for each row in league table , find the corresponding rows in country table . Step 2 : find the number of rows of the results of step 1 whose country 's name equals " Spain " . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name ( England ) [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
in step 1 , do not use the plays games table . in step 2 , consider the age less than 20 conditions in place of the age less than 18 conditions . in step 3 , do not find for each value of hours per week . find summation of games played and summation of hours per week in place of summation of hours played . [question] Show total hours per week and number of games played for students under 20 . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : only keep the results of step 1 whose age less than 18 . Step 3 : find each value of hours per week the results of step 2 along with the summation of hours played of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , do not use the author table and writes table . in step 2 , consider the conference 's name equals VLDB and citation num greater than 200 and year greater than 2000 conditions in place of the author 's name equals dummy value and conference 's name equals dummy value and year greater than dummy value conditions . find title in place of jid . [question] return me the paper after 2000 in VLDB conference with more than 200 citations . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the jid of the results of step 1 whose conference 's name equals " dummy value " and year greater than " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
use settlements table in place of claims table . find settlements 's date claim settled and settlements 's date claim made in place of claims 's date claim settled and claims 's date claim made . [question] Tell me the the claim date and settlement date for each settlement case . [system description] find the date claim made and date claim settled in claims table . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 2 , consider the advisor equals 1121 conditions in place of the advisor equals 8772 conditions . make sure no repetition in the results . [question] Which clubs have one or more members whose advisor is " 1121 " ? [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose advisor equals 8772 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 1 , do not use the plays games table and student table . [question] How many students play each sport ? [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : find each value of sport name of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
additionally use the information from the institution table and protein table besides the building table . consider the floors greater than or equals 20 conditions in place of the floors greater than or equals 17 conditions . find number of rows in place of number of building 's building id . [question] How many proteins are associated with an institution in a building with at least 20 floors ? [system description] find the number of building id in building table whose floors greater than or equals 17 . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
use customer addresses table and addresses table in place of customers table . consider the customer addresses 's customer id equals 10 conditions in place of the customer name equals Yasmeen conditions . find address details in place of customer address . [question] Return the address of customer 10 . [system description] find the customer address in customers table whose customer name equals " Yasmeen " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
consider the division equals AS conditions in place of the division equals EN conditions . find number of rows in place of number of department number . [question] What is the number of departments in Division " AS " ? [system description] find the number of department number in department table whose division equals " EN " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
consider the num of shops greater than 10 or num of factories less than 10 conditions in place of the num of shops greater than 7 or num of shops less than 8 conditions . [question] Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops . [system description] find the name and open year in manufacturer table whose num of shops less than 8 or num of shops greater than 7 . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
consider the year less than or equals 2000 conditions in place of the gross worldwide equals 456774 conditions . [question] What is the title and director for the movie with highest worldwide gross in the year 2000 or before ? [system description] find the title and director in movie table whose gross worldwide equals 456774 with largest value of gross worldwide . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 1 , do not use the border info table . in step 2 , consider the state 's state name is one of border border info whose border info 's state name equals oklahoma conditions in place of the area equals dummy value conditions . [question] which of the states bordering oklahoma has the largest population [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose area equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the cast table , directed by table , and actor table . in step 2 , consider the actor 's name equals Taraneh Alidoosti and director 's name equals Asghar Farhadi conditions in place of the director 's name equals dummy value conditions . [question] What are all the movies directed by " Asghar Farhadi " featuring " Taraneh Alidoosti " ? [system description] Step 1 : for each row in director table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
use has amenity table in place of dorm table . find number of different has amenity 's dorm id in place of number of rows . [question] How many dorms have amenities ? [system description] find the number of rows in dorm table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
use river table in place of state table . consider the river name equals ohio conditions in place of the area like dummy value conditions . [question] what states are next to the ohio [system description] find the state name in state table whose area like " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] state the state with the largest area [system description] find the state name in state table with largest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use directed by table and director table in place of actor table in step 2 , consider the director 's name equals Jim Jarmusch conditions in place of the actor 's name equals dummy value conditions . order the results by release year in place of actor 's birth year . [question] What is the latest movie by " Jim Jarmusch " [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " with largest value of birth year . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
do not return age . [question] What is the name and age of every male ? Order the results by age . [system description] find the name and age in person table whose gender equals " male " ordered ascending by age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , additionally use the information from the domain table and domain publication table besides the publication table . consider the name equals Databases and year greater than 2000 conditions in place of the year greater than dummy value conditions . in step 2 , do not find for each value of year . in step 3 , find title in place of year and number of jid . find the result with the largest citation num . [question] return me the paper after 2000 in Databases area with the most citations . [system description] Step 1 : find rows in publication table whose year greater than " dummy value " . Step 2 : find the number of jid of each value of year the results of step 1 . Step 3 : find the number of jid and year the results of step 1 ordered descending by the results of step 2 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the author table and writes table . in step 2 , consider the conference 's name equals VLDB and year greater than 2000 and author 's name equals H. V. Jagadish conditions in place of the conference 's name equals dummy value and year greater than dummy value conditions . find title in place of conference 's name . [question] return me the papers by " H. V. Jagadish " on VLDB conference after 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the name of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] which state has the lowest population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the department table . in step 2 , consider the department name equals Biology conditions in place of the professor 's department code equals PSYCH conditions . find employee first name in place of professor 's department code . [question] What is the first and last name of the professor in biology department ? [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the department code and employee last name of the results of step 1 whose department code equals " PSYCH " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the person friend table besides the person table . consider the friend is one of person 's name person whose age greater than 40 conditions in place of the age greater than 25 conditions . in step 2 , additionally use the information from the person table besides the person friend table . consider the friend is one of person 's name person whose age less than 30 conditions in place of the year less than 10 conditions . [question] What are the names of the people who are older 40 but no friends under age 30 ? [system description] Step 1 : find the person 's name in person table whose age greater than 25 . Step 2 : find the person friend 's name in person friend table whose year less than 10 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
consider the bed type equals King conditions in place of the beds equals 2 conditions . [question] Find the number of rooms with a king bed . [system description] find the number of rows in rooms table whose beds equals 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , use student table in place of faculty table . find advisor in place of faculty id . [question] Show ids for the faculty members who do n't advise any student . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the faculty id in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use director table in place of actor table . consider the director 's name equals director_name0 conditions in place of the actor 's name equals dummy value conditions . find director 's birth city in place of actor 's birth city . [question] In what city was " Kevin Spacey " born ? [system description] find the birth city in actor table whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , additionally make sure that person friend 's name equals Zach . in step 3 , additionally make sure that person friend 's name equals Zach . [question] What is the age of the friend of Zach with longest year relationship ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the maximum year in person friend table . Step 3 : find the age of the results of step 1 whose year equals the results of step 2 . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
use border info table in place of state table . consider the border info 's state name equals kentucky conditions in place of the area like dummy value conditions . find number of border in place of number of rows . [question] what is the number of neighboring states for kentucky [system description] find the number of rows in state table whose area like " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , find average student gpa in place of average student num . in step 2 , make sure the student gpa is less than the results of step 1 the student num is less than the results of step 1 . [question] What is the first name and GPA of every student that has a GPA lower than average ? [system description] Step 1 : find the average student num in student table . Step 2 : find the student first name and student gpa in student table whose student num less than the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the activity table , participates in table , and faculty participates in table . [question] How many students are advised by each rank of faculty ? List the rank and the number of students . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find each value of rank of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
use city table in place of state table . consider the city name equals boulder conditions in place of the area equals dummy value conditions . find city 's population in place of number of rows . [question] number of citizens in boulder [system description] find the number of rows in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the customer id is not one of customer address history 's customer id customer address history conditions in place of the customer address equals 10823 Rollin Spur conditions . [question] Show names and phones of customers who do not have address information . [system description] find the customer name and customer phone in customers table whose customer address equals " 10823 Rollin Spur " . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] products [C] product id [C] product type code [C] product name [C] product price [T] customers [C] customer id [C] payment method code [C] customer number [C] customer name [C] customer address [C] customer phone [C] customer email [T] contacts [C] contact id [C] customer id [C] gender [C] first name [C] last name [C] contact phone [T] customer address history [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order date [C] order status code [T] order items [C] order item id [C] order id [C] product id [C] order quantity
in step 1 , do not use the team table and player table . in step 2 , consider the country name equals Indonesia conditions in place of the official native language equals Persian ( Arabic script ) conditions . find match season 's player in place of player 's player . [question] Who are the players from Indonesia ? [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose official native language equals " Persian ( Arabic script ) " . [schema] [T] country [C] country id [C] country name ( Indonesia ) [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
additionally find number of different class room . [question] For each grade , return the grade number , the number of classrooms used for the grade , and the total number of students enrolled in the grade . [system description] find each value of grade in list table along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , consider the open year greater than 2000 conditions in place of the open year greater than 2008 conditions . [question] Show the manager name with most number of gas stations opened after 2000 . [system description] Step 1 : find rows in gas station table whose open year greater than 2008 . Step 2 : find the number of rows of each value of manager name the results of step 1 . Step 3 : find the manager name the results of step 1 with largest value in the results of step 2 . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 1 , consider the credit score less than 50 conditions in place of the credit score less than 30 conditions . [question] For each account type , find the average account balance of customers with credit score lower than 50 . [system description] Step 1 : find rows in customer table whose credit score less than 30 . Step 2 : find each value of account type the results of step 1 along with the average account balance of the corresponding rows to each value . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally use the information from the artist table besides the song table . consider the languages equals english conditions in place of the languages equals bangla conditions . find for each value of song 's artist name whose number of rows greater than or equals 1 . [question] What are the names and number of works for all artists who have sung at least one song in English ? [system description] find the artist name and number of rows in song table whose languages equals " bangla " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 2 , find for each value of schedule 's cinema id in place of name . [question] What is total number of show times per dat for each cinema ? [system description] Step 1 : for each row in schedule table , find the corresponding rows in cinema table . Step 2 : find each value of name of the results of step 1 along with the summation of show times per day of the corresponding rows to each value . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
additionally use the information from the club table and member of club table besides the student table . consider the last name equals Tai and first name equals Eric conditions in place of the first name equals Jandy conditions . find number of different club name in place of number of rows . [question] How many clubs does the student named " Eric Tai " belong to ? [system description] find the number of rows in student table whose first name equals " Jandy " . [schema] [T] student [C] student id [C] last name ( Tai ) [C] first name ( Eric ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 1 , consider the customer type code equals Good Credit Rating conditions in place of the customer type code equals Defaults on payments conditions . [question] Return the city with the customer type code " Good Credit Rating " that had the fewest customers . [system description] Step 1 : find rows in customers table whose customer type code equals " Defaults on payments " . Step 2 : find the number of rows of each value of town city the results of step 1 . Step 3 : find the town city the results of step 1 with smallest value in the results of step 2 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code ( Good Credit Rating ) [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
additionally use the information from the publication keyword table and publication table besides the keyword table . consider the keyword equals Natural Language conditions in place of the keyword like dummy value conditions . find number of different title in place of number of rows . [question] return me the number of papers which contain the keyword " Natural Language " . [system description] find the number of rows in keyword table whose keyword like " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the characteristics table , reference product categories table , and product characteristics table . in step 2 , consider the product name equals cumin conditions in place of the characteristic name equals error conditions . find typical buying price in place of typical selling price . [question] Return the category code and typical price of 'cumin ' . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference product categories table . Step 2 : find the reference product categories 's product category code and typical selling price of the results of step 1 whose characteristic name equals " error " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 3 , use the largest in place of smallest . [question] Show the name of aircraft which fewest people have its certificate . [system description] Step 1 : for each row in certificate table , find the corresponding rows in aircraft table . Step 2 : find the number of rows of each value of certificate 's airline id of the results of step 1 . Step 3 : find the name of the results of step 1 with smallest value in the results of step 2 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
order the results by height feet in place of years as tallest . [question] What is the name of the tallest building ? [system description] find the name in building table with largest value of years as tallest . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
additionally use the information from the trip table besides the station table . additionally find trip 's id . [question] What is the installation date for each ending station on all the trips ? [system description] find the installation date in station table . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value conditions . in step 3 , find the number of different title for each value of journal 's name . in step 4 , make sure that the corresponding value in step 3 greater than 10 . [question] return me the journals , which have more than 10 papers by " H. V. Jagadish " . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose author 's name equals " dummy value " . Step 3 : find the number of rows of each value of journal 's name the results of step 2 . Step 4 : find the journal 's name the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the name equals Google conditions in place of the name equals University of Pennsylvania conditions . find title in place of papers 's paper id . make sure no repetition in the results . [question] Which papers were written by authors from the institution " Google " ? [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose name equals " University of Pennsylvania " . [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the settlements table . in step 3 , find claims 's date claim settled in place of settlements 's date claim settled . [question] Give me the claim date , settlement date for all the claims whose claimed amount is larger than the average . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the average claims 's amount claimed in claims table . Step 3 : find the claims 's date claim made and settlements 's date claim settled of the results of step 1 whose claims 's amount claimed greater than the results of step 2 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 1 , additionally use the information from the reference colors table . in step 2 , consider the unit of measure not equals Handful and color description equals white conditions in place of the products 's color code equals 1 and unit of measure not equals Weight - pound , kilo . conditions . [question] What are the names of products that are not 'white ' in color and are not measured by the unit 'Handful ' ? [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product name of the results of step 1 whose color code equals 1 and unit of measure not equals " Weight - pound , kilo . " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( white ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure ( Handful              ) [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , use author table and writes table in place of domain table and organization table in step 2 , consider the year greater than 2005 and author 's name equals H. V. Jagadish and author 's name equals Yunyao Li conditions in place of the organization 's name equals dummy value and year greater than dummy value conditions . find title in place of domain 's name . [question] return me the papers written by " H. V. Jagadish " and " Yunyao Li " after 2005 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in domain table . Step 2 : find the domain 's name of the results of step 1 whose organization 's name equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , find the number of customer id for each value of channel code . in step 2 , make sure that the corresponding value in step 1 less than 5 . [question] List all the contact channel codes that were used less than 5 times . [system description] Step 1 : find the number of rows of each value of channel code in customer contact channels table . Step 2 : find the channel code in customer contact channels table whose corresponding value in step 1 is less than 1 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the cast table and movie table besides the actor table . consider the gender equals female and title equals Saving Private Ryan conditions in place of the gender equals dummy value conditions . [question] Find all the female actors in the movie " Saving Private Ryan " [system description] find the name in actor table whose gender equals " dummy value " and gender equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , find for each value of manufacturers 's name whose average price greater than or equals 150 . in step 3 , additionally find average price . [question] Select the names of manufacturer whose products have an average price higher than or equal to $ 150 . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the average price of each value of products 's name of the results of step 1 . Step 3 : find the manufacturers 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
additionally use the information from the product suppliers table and products table besides the suppliers table . consider the product name equals red jeans conditions in place of the supplier name equals Audi conditions . make sure no repetition in the results . [question] What are the distinct names and phone numbers for suppliers who have red jeans ? [system description] find the supplier name and supplier phone in suppliers table whose supplier name equals " Audi " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name ( red jeans ) [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
consider the state name equals kansas and population greater than 150000 conditions in place of the state name equals dummy value conditions . [question] what are the names of the major cities in kansas [system description] find the city name in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the area equals dummy value conditions . [question] what rivers flow through illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the domain table and domain keyword table besides the keyword table . consider the name equals Databases conditions in place of the keyword equals dummy value conditions . find number of different keyword in place of number of rows . [question] return me the number of keywords in Databases area . [system description] find the number of rows in keyword table whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the customer table , invoice table , track table , and invoice line table . in step 2 , remove the last name equals Zimmermann conditions . [question] List the names of all music genres . [system description] Step 1 : for each row in customer table , find the corresponding rows in invoice table and in invoice line table and in track table and in genre table . Step 2 : find the genre 's name of the results of step 1 whose last name equals " Zimmermann " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name ( Music ) [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the state table . in step 2 , consider the traverse equals idaho conditions in place of the state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers are in idaho [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
remove the club name equals Tennis Club conditions . [question] What is the description of the club " Pen and Paper Gaming " ? [system description] find the club description in club table whose club name equals " Tennis Club " and club name equals " Pen and Paper Gaming " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Pen and Paper Gaming ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally use the information from the affected region table besides the region table . find for each value of region 's region id in place of region name . [question] How many storms occured in each region ? [system description] find each value of region name in region table along with the number of the corresponding rows to each value . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
consider the course code equals ACCT-211 conditions in place of the course code equals QM-261 conditions . find number of different professor employee number in place of number of class code . [question] How many professors are teaching class with code ACCT-211 ? [system description] find the number of class code in class table whose course code equals " QM-261 " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the songs table and performance table . in step 2 , consider the last name equals Heilo and title equals Badlands conditions in place of the last name equals dummy value conditions . [question] What instruments did the musician with the last name " Heilo " play in " Badlands " ? [system description] Step 1 : for each row in band table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose last name equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the college table . in step 2 , consider the player position equals goalie conditions in place of the player position equals mid conditions . in step 3 , do not use the college table . in step 4 , consider the player position equals mid conditions in place of the player position equals striker conditions . [question] What are the names of all schools that have students trying out for the position of goal and 'mid'-field . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " mid " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " striker " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( mid ) [C] decision
in step 2 , consider the incorporated in equals China conditions in place of the company name equals Cathay Pacific Culture conditions . [question] What are the titles of movies and books corresponding to companies incorporated in China ? [system description] Step 1 : for each row in culture company table , find the corresponding rows in book club table and in movie table . Step 2 : find the title and book title of the results of step 1 whose company name equals " Cathay Pacific Culture " . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in ( China ) [C] group equity shareholding [C] book club id [C] movie id
consider the continent equals North America conditions in place of the continent equals dummy value conditions . find number of different name in place of number of rows . [question] return me the number of the organizations in " North America " . [system description] find the number of rows in organization table whose continent equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the domain author table , domain table , and author table besides the organization table . consider the domain 's name equals Databases and organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value conditions . find number of different author 's name in place of number of organization 's oid . [question] return me the number of researchers in Databases area in " University of Michigan " . [system description] find the number of oid in organization table whose name equals " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the exhibition record table besides the exhibition table . consider the ticket price less than 10 or attendance greater than 100 conditions in place of the ticket price greater than 14.95 or summation of ticket price less than 1 conditions . [question] How many exhibitions have a attendance more than 100 or have a ticket price below 10 ? [system description] find the number of rows in exhibition table whose ticket price greater than 14.95 or summation of ticket price less than 1 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
consider the beds equals 2 and base price less than 160 and decor equals modern conditions in place of the bed type less than Double and base price less than 75 conditions . [question] Find the names of all modern rooms with a base price below $ 160 and two beds . [system description] find the room name in rooms table whose base price less than 75 and bed type less than " Double " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , consider the party 's party equals Democratic conditions in place of the party 's party equals Working Families conditions . [question] Which committees have delegates from the Democratic party ? [system description] Step 1 : for each row in election table , find the corresponding rows in party table . Step 2 : find the committee of the results of step 1 whose party 's party equals " Working Families " . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party ( Democratic ) [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , additionally use the information from the cast table . in step 2 , consider the role equals Mr. Bean and name equals Rowan Atkinson conditions in place of the name equals dummy value conditions . [question] find all films in which " Rowan Atkinson " acted as " Mr. Bean " [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , consider the name equals University of Oxford conditions in place of the name equals Portland State University conditions . make sure no repetition in the results . [question] Find the first names and last names of the authors whose institution affiliation is " University of Oxford " . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " Portland State University " . [schema] [T] institution [C] institution id [C] name ( University of Oxford ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
consider the state province county equals Colorado conditions in place of the state province county equals Vermont conditions . find number of rows in place of number of town city . [question] How many cities are there in state " Colorado " ? [system description] find the number of town city in addresses table whose state province county equals " Vermont " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county ( Colorado ) [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , additionally use the information from the branch table . in step 2 , additionally find branch 's name . [question] What are the names of the members and branches at which they are registered sorted by year of registration ? [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in member table . Step 2 : find the name of the results of step 1 ordered ascending by register year . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 1 , do not use the region table . in step 2 , consider the took office greater than 1961 or took office less than 1959 conditions in place of the took office greater than 1959 or date less than 16 July 2002 conditions . [question] Show the minister who took office after 1961 or before 1959 . [system description] Step 1 : for each row in party table , find the corresponding rows in region table . Step 2 : find the minister of the results of step 1 whose took office greater than 1959 or date less than " 16 July 2002 " . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
find duration in place of start date . only show me the first 3 results . [question] What are the ids of the trips that lasted the longest and how long did they last ? [system description] find the id and start date in trip table with largest value of duration . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , do not find for each value of station id . in step 3 , additionally make sure that bikes available equals 7 . make sure no repetition in the results . [question] Return the unique name for stations that have ever had 7 bikes available . [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the number of rows of each value of station id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , additionally use the information from the flight table besides the aircraft table . find for each value of flight 's airline id whose number of rows greater than or equals 2 . [question] What are the names for all aircrafts with at least 2 flights ? [system description] Step 1 : find the number of rows of each value of name in aircraft table . Step 2 : find the name in aircraft table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the actor table . in step 2 , consider the award equals Cleavant Derricks or award equals Tony Award conditions in place of the actor 's name equals Ian Smith conditions . [question] Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards ? [system description] Step 1 : for each row in musical table , find the corresponding rows in actor table . Step 2 : find the nominee of the results of step 1 whose actor 's name equals " Ian Smith " or actor 's name equals " Ian Smith " . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee ( Cleavant Derricks , Bob Fosse ) [C] result ( Nominated ) [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
in step 1 , use performance table in place of vocals table in step 2 , consider the title equals Badlands and stage position equals back conditions in place of the title equals dummy value conditions . [question] Who is performing in the back stage position for the song " Badlands " ? Show the first name and the last name . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the first name and last name of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , use writes table , author table , and organization table in place of conference table in step 2 , consider the year greater than 2000 and organization 's name equals University of Michigan conditions in place of the year equals dummy value and year greater than dummy value conditions . find title in place of conference 's name . [question] return me all the papers after 2000 in " University of Michigan " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the name of the results of step 1 whose year greater than " dummy value " and year equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , find player id in place of player 's name . [question] Please show the names and the players of clubs . [system description] Step 1 : for each row in club table , find the corresponding rows in player table . Step 2 : find the club 's name and player 's name of the results of step 1 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] how long is the longest river in texas [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the visits table besides the tourist attractions table . find visits 's tourist attraction id in place of attraction type code . [question] What are the name , id and the corresponding number of visits for each tourist attraction ? [system description] find each value of tourist attraction id in tourist attractions table along with the number of the corresponding rows to each value . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , consider the grade equals 0 conditions in place of the grade equals 5 conditions . in step 2 , find for each value of class room in place of grade . find class room in place of grade . [question] For each grade 0 classroom , return the classroom number and the count of students . [system description] Step 1 : find rows in list table whose grade equals 5 . Step 2 : find each value of grade the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , use journal table , publication keyword table , and publication table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . find number of different keyword in place of number of rows . [question] return me the number of keywords in PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in keyword table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not find for each value of name . in step 2 , order the results by num of shops in place of number of rows . [question] Which manufacturer has the most number of shops ? List its name and year of opening . [system description] Step 1 : find the number of rows of each value of name in manufacturer table . Step 2 : find the name and open year in manufacturer table with largest value in the results of step 1 . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
in step 2 , consider the unit price greater than 1 conditions in place of the unit price greater than 1.99 conditions . find for each value of track 's album id . [question] What are the titles and ids for albums containing tracks with unit price greater than 1 ? [system description] Step 1 : for each row in album table , find the corresponding rows in track table . Step 2 : find the title and album 's album id of the results of step 1 whose unit price greater than 1.99 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value conditions . in step 4 , do not return number of rows . order the results by number of different title in place of number of journal 's name . [question] return me the journal , which have the most number of papers by " H. V. Jagadish " . [system description] Step 1 : for each row in journal table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose author 's name equals " dummy value " . Step 3 : find the number of journal 's name of each value of journal 's name the results of step 2 . Step 4 : find the journal 's name and number of rows the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the sex equals F and election cycle equals Spring conditions in place of the sex equals M and secretary vote equals 1030 conditions . [question] What is the average age of the female students with secretary votes in the spring election cycle ? [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the average age of the results of step 1 whose sex equals " M " and secretary vote equals 1030 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , do not find for each value of student first name . in step 2 , additionally make sure that student gpa greater than 3 . find the result with the largest student date of birth . [question] What is the first , last name , gpa of the youngest one among students whose GPA is above 3 ? [system description] Step 1 : find the number of rows of each value of student first name in student table . Step 2 : find the student first name , student last name , student gpa in student table whose corresponding value in step 1 is greater than 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use certificate table in place of flight table in step 2 , consider the aircraft 's distance greater than 5000 conditions in place of the aircraft 's distance greater than 6900 and aircraft 's distance less than or equals 8430 conditions . find for each value of certificate 's airline id . do not return flight 's distance . order the results ascending by number of rows . [question] Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate . [system description] Step 1 : for each row in flight table , find the corresponding rows in aircraft table . Step 2 : find the name and flight 's distance of the results of step 1 whose aircraft 's distance greater than 6900 and aircraft 's distance less than or equals 8430 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the person friend table . in step 2 , consider the city equals Austin conditions in place of the city equals salt lake city conditions . in step 3 , use person friend table in place of person table . find number of different person friend 's name in place of number of rows . [question] What is the total number of people who have no friends living in Austin ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person friend 's name of the results of step 1 whose city equals " salt lake city " . Step 3 : find the number of rows in person table whose person 's name not one of the results of step 2 . [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 2 , remove the feb equals 18.9 conditions . order the results by feb in place of sep . [question] In February , which city marks the highest temperature ? [system description] Step 1 : for each row in temperature table , find the corresponding rows in city table . Step 2 : find the city of the results of step 1 whose feb equals 18.9 with largest value of sep . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
consider the state name equals kentucky conditions in place of the border equals dummy value conditions . [question] which states border kentucky [system description] find the border in border info table whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the open year less than 1990 conditions in place of the open year less than 2001 conditions . find maximum num of shops in place of number of rows . [question] what is the average number of factories and maximum number of shops for manufacturers that opened before 1990 . [system description] find the average num of factories and number of rows in manufacturer table whose open year less than 2001 . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
use director table in place of actor table . consider the director 's name equals director_name0 conditions in place of the actor 's name equals dummy value conditions . find director 's birth city in place of actor 's birth city . [question] Where is the birth place of " Kevin Spacey " [system description] find the birth city in actor table whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , consider the base price greater than 120 conditions in place of the base price greater than 100 conditions . [question] Find the number of rooms with price higher than 120 for different decor . [system description] Step 1 : find rows in rooms table whose base price greater than 100 . Step 2 : find each value of decor the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
consider the training hours less than 1500 conditions in place of the training hours less than 1200 conditions . additionally find training hours . [question] Find the name and training hours of players whose hours are below 1500 . [system description] find the player name and player name in player table whose training hours less than 1200 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the border info table and state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the border info 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the length of the longest river that runs through texas [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the length of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that length is equals maximum length river . you should not find the largest of the results . show me all the results . [question] what is the longest river [system description] find the river name in river table with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the trip table besides the station table . consider the city not equals San Francisco conditions in place of the city equals San Jose conditions . [question] How many trips did not end in San Francisco ? [system description] find the number of rows in station table whose city equals " San Jose " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Francisco ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 3 , additionally find player 's player id and number of rows . [question] What are the first name , last name and id of the player with the most all star game experiences ? Also list the count . [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of all star 's player id of the results of step 1 . Step 3 : find the name first , name last , name last of the results of step 1 with largest value in the results of step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Count ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , use city table in place of river table and state table in step 2 , consider the city 's population greater than 150000 and city 's state name is one of traverse river whose length greater than 750 and river name equals mississippi conditions in place of the river name equals dummy value conditions . find city name in place of capital . [question] what are the major cities in states through which the mississippi runs [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the domain table , author table , writes table , and domain author table . in step 2 , consider the title equals Making database systems usable conditions in place of the domain 's name equals dummy value conditions . [question] return me the year of " Making database systems usable " [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table . Step 2 : find the year of the results of step 1 whose domain 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the postseason 's year equals 2008 conditions in place of the team 's year equals 1974 conditions . find for each value of team id winner . find team id winner in place of div win . order the results by number of rows in place of wins . [question] What are the name and id of the team with the most victories in 2008 postseason ? [system description] Step 1 : for each row in postseason table , find the corresponding rows in team table . Step 2 : find the name and div win of the results of step 1 whose team 's year equals 1974 with largest value of wins . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally find releasedate . [question] What is the name of the song that was released most recently ? [system description] find the song name in song table with largest value of releasedate . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , use journal table in place of cite table in step 2 , consider the name equals PVLDB conditions in place of the cited equals dummy value conditions . in step 3 , do not find for each value of publication 's jid . in step 4 , find title in place of number of publication 's jid and publication 's jid . find the result with the largest citation num . [question] return me the paper in PVLDB with the most citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid and number of jid the results of step 2 ordered descending by the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , find for each value of manufacturers 's name in place of manufacturer . [question] What are the average prices of products for each manufacturer ? [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find each value of manufacturer of the results of step 1 along with the manufacturers 's name and average price of the corresponding rows to each value . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
additionally use the information from the person table besides the person friend table . consider the friend equals Bob conditions in place of the year like 5 conditions . [question] What are the names of all of Bob 's friends ? [system description] find the name in person friend table whose year like 5 . [schema] [T] person [C] name ( Bob ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Bob ) [C] friend ( Bob ) [C] year
consider the title like % ML % conditions in place of the title like Just do it : Simple Monadic Equational Reasoning conditions . find title in place of paper id . [question] Which papers have the substring " ML " in their titles ? Return the titles of the papers . [system description] find the paper id in papers table whose title like " Just do it : Simple Monadic Equational Reasoning " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
additionally make sure that customer id is one of loan 's customer id loan . [question] What is the average credit score for customers who have taken a loan ? [system description] find the average credit score in customer table . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , consider the max wind speed mph greater than or equals 25 conditions in place of the max wind speed mph greater than 128 conditions . [question] For each zip code , how many times has the maximum wind speed reached 25 mph ? [system description] Step 1 : find rows in weather table whose max wind speed mph greater than 128 . Step 2 : find each value of zip code the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , find for each value of customer name in place of payment method . in step 3 , use the smallest in place of largest . [question] Tell me the payment method used by the customer who ordered the least amount of goods in total . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of payment method of the results of step 1 . Step 3 : find the payment method of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 2 , consider the name equals H. V. Jagadish conditions in place of the name equals dummy value conditions . in step 3 , do not find for each value of jid . in step 4 , find title in place of jid and number of jid . find the result with the largest citation num . [question] return me the paper by " H. V. Jagadish " with the most citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid and number of jid the results of step 2 ordered descending by the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , make sure that the corresponding value in step 1 greater than 2 . [question] Who are the nominees who have been nominated more than two times ? [system description] Step 1 : find the number of rows of each value of nominee in musical table . Step 2 : find the nominee in musical table whose corresponding value in step 1 is greater than 1 . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result ( Nominated ) [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
additionally make sure that population is equals minimum population city . you should not find the smallest of the results . show me all the results . [question] what is the city with the smallest population [system description] find the city name in city table with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the member of table besides the department table . find for each value of member of 's department number in place of department name . [question] Find the name of the department that has the fewest members . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with smallest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the area equals dummy value conditions . [question] what rivers run through illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the area equals dummy value conditions . [question] which rivers flow through illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the origin equals Los Angeles conditions in place of the destination equals Sydney conditions . [question] Show all flight number from Los Angeles . [system description] find the flight number in flight table whose destination equals " Sydney " . [schema] [T] flight [C] flight number [C] origin ( Los Angeles ) [C] destination ( Los Angeles ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the activity table , participates in table , and faculty participates in table . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . [question] Show the ids for all the faculty members who have at least 2 students . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find the number of rows of each value of faculty 's faculty id of the results of step 1 . Step 3 : find the faculty 's faculty id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the lives in table and dorm table . in step 2 , consider the sex equals M conditions in place of the gender equals X conditions . in step 3 , additionally find number of rows . [question] What is the average age and how many male students are there in each city ? [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : only keep the results of step 1 whose gender equals " X " . Step 3 : find each value of city code the results of step 2 along with the average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , use directed by table and director table in place of actor table in step 2 , consider the director 's name equals Quentin Tarantino conditions in place of the actor 's name equals dummy value conditions . order the results by release year in place of budget . [question] Find the name and budget of the latest movie by " Quentin Tarantino " [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title and budget of the results of step 1 whose name equals " dummy value " with largest value of budget . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] what is the area of the smallest state [system description] find the area in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find highest point in place of maximum highest point . [question] what are the highest points of all the states [system description] find the maximum highest point in highlow table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that age is equals minimum age student . you should not find the smallest of the results . show me all the results . [question] What is the last name of the youngest student ? [system description] find the last name in student table with smallest value of age . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , do not use the allergy type table and student table . in step 2 , consider the has allergy 's allergy equals Cat conditions in place of the allergy type equals environmental conditions . [question] How many students are affected by cat allergies ? [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the number of rows of the results of step 1 whose allergy type equals " environmental " . [schema] [T] allergy type [C] allergy ( Cat ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , consider the register year greater than 2015 conditions in place of the register year greater than 2016 conditions . find for each value of branch 's branch id . find number of rows in place of branch 's branch id . [question] For each branch id , what are the names of the branches that were registered after 2015 ? [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : find the name and branch 's branch id of the results of step 1 whose register year greater than 2016 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 2 , consider the month equals May conditions in place of the month like April conditions . [question] What are the id and address of the shops which have a happy hour in May ? [system description] Step 1 : for each row in happy hour table , find the corresponding rows in shop table . Step 2 : find the shop 's shop id and address of the results of step 1 whose month like " April " . [schema] [T] shop [C] shop id [C] address [C] num of staff [C] score [C] open year [T] member [C] member id [C] name [C] membership card [C] age [C] time of purchase [C] level of membership [C] address [T] happy hour [C] hh id [C] shop id [C] month ( May ) [C] num of shaff in charge [T] happy hour member [C] hh id [C] member id [C] total amount
in step 1 , additionally use the information from the settlements table besides the claims table . in step 2 , additionally find number of rows . [question] Find the claim id and claim date of the claim that incurred the most settlement count . Also tell me the count . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the claim id and date claim made in claims table with largest value in the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 1 , do not use the student table . in step 2 , remove the hours per week greater than 29 conditions . find for each value of sports info 's student id whose summation of hours per week greater than 10 . [question] What are the student IDs for everybody who worked for more than 10 hours per week on all sports ? [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find the student 's student id of the results of step 1 whose hours per week greater than 29 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , do not use the state table . in step 2 , remove the state 's country name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers are there in us [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , additionally make sure that lowest elevation is equals minimum lowest elevation highlow . you should not find the smallest of the results . show me all the results . [question] what is the state with the lowest point [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with smallest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the cast table . in step 2 , consider the name equals Humphrey Bogart and release year less than 1942 conditions in place of the name equals dummy value and birth year less than dummy value conditions . find number of different title in place of number of rows . [question] How many movies did " Humphrey Bogart " act in before 1942 ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and birth year less than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
consider the river name equals colorado conditions in place of the river name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers are called colorado [system description] find the number of rows in river table whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , find average height feet in place of average floors . in step 2 , remove the height feet greater than or equals 537 conditions . [question] Show the number of buildings with a height above the average or a number of floors above the average . [system description] Step 1 : find the average floors in building table . Step 2 : find the number of rows in building table whose height feet greater than the results of step 1 or height feet greater than or equals 537 . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
in step 1 , do not use the documents table and reference budget codes table . in step 2 , find for each value of documents with expenses 's budget type code in place of document type code . [question] What is the budget type code with most number of documents . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the number of rows of each value of document type code of the results of step 1 . Step 3 : find the reference budget codes 's budget type code of the results of step 1 with largest value in the results of step 2 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] name the longest river in us [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the author table . in step 2 , consider the conference 's name equals VLDB and year equals 2002 conditions in place of the conference 's name equals dummy value and year equals dummy value conditions . find author 's name in place of writes 's pid . [question] return me the authors who have papers in VLDB conference in 2002 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the writes 's pid of the results of step 1 whose name equals " dummy value " and year equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the roles table besides the employees table . find role description in place of employee id . [question] How many employees does each role have ? List role description , id and number of employees . [system description] find each value of role code in employees table along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
consider the bed type equals Queen or bed type equals King conditions in place of the beds equals 2 or beds equals 1 conditions . [question] What are the names of rooms that have either king or queen bed ? [system description] find the room name in rooms table whose beds equals 2 or beds equals 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King , Queen ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( QUEEN ) [C] adults [C] kids
use sports info table in place of student table . additionally make sure that on scholarship equals Y . [question] List ids for all student who are on scholarship . [system description] find the student id in student table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 2 , find for each value of name in place of album 's artist id . [question] Which artist has the most albums ? [system description] Step 1 : for each row in artist table , find the corresponding rows in album table . Step 2 : find the number of rows of each value of album 's artist id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( The Moth ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
additionally use the information from the department table besides the professor table . find for each value of school code . find school code and number of rows in place of number of professor office . [question] How many different professors are there for the different schools ? [system description] find the number of professor office and number of professor office in professor table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the state table . in step 2 , consider the city 's population is equals maximum city 's population city conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the biggest city in usa [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose state 's country name equals " dummy value " with largest value of city 's population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
remove the country name equals dummy value conditions . find number of state name in place of number of rows . [question] how many states are there in united states [system description] find the number of rows in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name equals iowa conditions in place of the lowest elevation not equals dummy value conditions . find lowest point in place of area . you should not find the smallest of the results . show me all the results . [question] where is the lowest spot in iowa [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose lowest elevation not equals " dummy value " with smallest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the length is equals minimum length river whose traverse equals texas and traverse equals texas conditions in place of the length equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the shortest river in texas [system description] find the river name in river table whose length equals " dummy value " with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the people table . in step 2 , find people 's name in place of year working . order the results ascending . [question] Show names of companies and that of employees in descending order of number of years working for that employee . [system description] Step 1 : for each row in company table , find the corresponding rows in employment table . Step 2 : find the name and year working of the results of step 1 ordered descending by year working . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
in step 1 , additionally use the information from the journal table . in step 2 , consider the journal 's name equals PVLDB and author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value conditions . find title in place of publication 's jid . [question] return me the papers by " H. V. Jagadish " on PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find state name in place of mountain name . [question] where are mountains [system description] find the mountain name in mountain table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table . in step 2 , consider the state 's state name is one of border border info whose border info 's state name equals oklahoma conditions in place of the border equals dummy value conditions . [question] what state that borders oklahoma has the highest population [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose border equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the claim headers table besides the claims documents table . additionally make sure that created date is equals created date claims documents with smallest created date . find summation of amount claimed in place of summation of created date . you should not find the largest of the results . show me all the results . [question] Find the total amount claimed in the most recently created document . [system description] find the summation of created date in claims documents table with largest value of created date . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code ( Document ) [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 2 , find for each value of plays games 's game id . order the results by summation of hours played in place of hours played . [question] Show the game name that has most number of hours played . [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the game name of the results of step 1 with largest value of hours played . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 2 , consider the name equals VLDB conditions in place of the name equals dummy value conditions . find number of different title in place of number of jid . [question] return me the number of papers on VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the cast table . in step 2 , consider the title equals The Imitation Game and role equals Alan Turing conditions in place of the title equals dummy value conditions . [question] Who was the actor that played " Alan Turing " in the movie " The Imitation Game " ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , find river name in place of traverse . order the results by number of different traverse in place of number of rows . [question] what river traverses the most states [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the traverse in river table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the document drafts table . in step 2 , consider the draft copies 's document id equals 2 conditions in place of the draft copies 's document id equals 4 conditions . [question] How many draft copies does the document with id 2 have ? [system description] Step 1 : for each row in document drafts table , find the corresponding rows in draft copies table . Step 2 : find the number of rows of the results of step 1 whose draft copies 's document id equals 4 . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
additionally use the information from the journal table , author table , writes table , and organization table besides the publication table . consider the journal 's name equals PVLDB and year greater than 2000 and organization 's name equals University of Michigan conditions in place of the year greater than dummy value conditions . find number of different title in place of number of publication 's pid . [question] return me the number of papers in PVLDB after 2000 in " University of Michigan " . [system description] find the number of pid in publication table whose year greater than " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the products table . in step 3 , make sure the reference colors 's color code is not one of the results of step 2 the product id is not one of the results of step 2 . [question] Count the number of colors that are not used in any products . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the products 's color code in products table . Step 3 : find the number of rows of the results of step 1 whose product id not one of the results of step 2 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
additionally find customer last name . [question] Show ids , first names , last names , and phones for all customers . [system description] find the customer id , customer first name , customer phone , customer phone in customers table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , use publication keyword table and publication table in place of organization table in step 2 , consider the conference 's name equals VLDB and keyword equals Information Retrieval conditions in place of the keyword equals dummy value and organization 's name equals dummy value conditions . find number of different title in place of number of conference 's homepage . [question] return me the number of papers in VLDB conference containing keyword " Information Retrieval " . [system description] Step 1 : for each row in organization table , find the corresponding rows in conference table and in keyword table . Step 2 : find the number of conference 's homepage of the results of step 1 whose keyword equals " dummy value " and organization 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the savings table . in step 2 , consider the name equals Brown conditions in place of the name equals Weeks conditions . additionally find savings 's balance . [question] Find the checking balance and saving balance in the Brown ' s account . [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find the balance and balance of the results of step 1 whose name equals " Weeks " . [schema] [T] accounts [C] customer id [C] name ( Brown ) [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 2 , consider the teachers 's first name equals OTHA and teachers 's last name equals MOYER conditions in place of the teachers 's first name equals MIN and teachers 's last name equals SUGAI conditions . find list 's last name in place of teachers 's last name . [question] Which students study under the teacher named OTHA MOYER ? Give me the first and last names of the students . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " MIN " and teachers 's last name equals " SUGAI " . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
in step 1 , additionally use the information from the storm table and affected region table besides the region table . do not find for each value of region name . in step 2 , additionally make sure that number deaths greater than or equals 10 . [question] What are the region names affected by the storm with a number of deaths of least 10 ? [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 2 , consider the park name equals Columbia Park and year equals 1907 conditions in place of the city equals Bloomington and year equals 2003 conditions . find number of rows in place of number of city . [question] Count the number of games taken place in park " Columbia Park " in 1907 . [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of city of the results of step 1 whose city equals " Bloomington " and year equals 2003 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( columbia ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Columbiana ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Columbia , Park ) [C] name first ( Count ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name ( Columbia Park ) [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( columbia ) [C] name full [C] city ( Columbia ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park ( Columbia Park ) [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] what state has the highest population density [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the decor equals traditional conditions in place of the decor equals rustic conditions . [question] What are the bed type and name of all the rooms with traditional decor ? [system description] find the bed type and room name in rooms table whose decor equals " rustic " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( traditional ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the teachers table . in step 2 , consider the list 's class room equals 103 conditions in place of the teachers 's class room equals 103 conditions . make sure no repetition in the results . [question] Find the grade taught in classroom 103 . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the grade of the results of step 1 whose teachers 's class room equals 103 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] what is the population of the state with the highest population density [system description] find the population in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the bats equals R and birth country equals USA conditions in place of the birth year equals 1857 and birth country equals Cuba conditions . [question] Count the number of players who were born in USA and have bats information ' R ' . [system description] find the number of rows in player table whose birth country equals " Cuba " and birth year equals 1857 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country ( USA ) [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country ( USA ) [C] death state [C] death city [C] name first ( Count ) [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country ( USA ) [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 3 , order the results by average unsure rate in place of average consider rate . [question] which gender got the highest average uncertain ratio . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the average consider rate of each value of sex of the results of step 1 . Step 3 : find the sex of the results of step 1 with largest value in the results of step 2 . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
in step 2 , remove the class senator vote equals 1028 conditions . make sure no repetition in the results . [question] Find the distinct last names of the students who have class president votes . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the last name of the results of step 1 whose class senator vote equals 1028 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 2 , consider the first name equals Jeremy and last name equals Gibbons conditions in place of the first name equals Olin conditions . [question] What are the titles of papers published by " Jeremy Gibbons " ? [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose first name equals " Olin " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Gibbons ) [C] first name ( Jeremy ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the state table . in step 2 , consider the city 's population greater than 150000 conditions in place of the city 's state name equals dummy value conditions . find city name in place of capital . [question] what are the major cities of the united states [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the movie table and culture company table . in step 2 , find book club 's year , book title , and publisher in place of movie 's year and title . order the results by book club 's year in place of publisher . [question] Show the years , book titles , and publishers for all books , in descending order by year . [system description] Step 1 : for each row in book club table , find the corresponding rows in culture company table and in movie table . Step 2 : find the movie 's year , title , title of the results of step 1 ordered descending by publisher . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 2 , consider the conference 's name equals VLDB conditions in place of the conference 's name equals dummy value conditions . in step 4 , find author 's name in place of number of author 's name . order the results by number of different title in place of number of conference 's name . [question] return me the author who has the most number of papers in the VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose conference 's name equals " dummy value " . Step 3 : find the number of conference 's name of each value of author 's name the results of step 2 . Step 4 : find the number of author 's name the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , use class table in place of student table in step 2 , consider the course code equals ACCT-211 conditions in place of the enroll 's class code equals 10021 conditions . [question] What are the total number of students enrolled in ACCT-211 ? [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the number of rows of the results of step 1 whose class code equals 10021 . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the sales in billion greater than 200 conditions in place of the sales in billion greater than 310.1 conditions . do not return profits in billion . additionally order the results by sales in billion . [question] list the names of the companies with more than 200 sales in the descending order of sales and profits . [system description] find the name and profits in billion in company table whose sales in billion greater than 310.1 ordered descending by profits in billion . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
in step 1 , do not use the bank table . in step 2 , find for each value of customer name in place of loan 's customer id . in step 3 , do not return summation of amount . [question] What are the names of the different customers who have taken out a loan , ordered by the total amount that they have taken ? [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the summation of amount of each value of loan 's customer id of the results of step 1 . Step 3 : find the customer name and summation of amount of the results of step 1 ordered ascending by the results of step 2 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally make sure that length is equals minimum length river . you should not find the smallest of the results . show me all the results . [question] what is the shortest river [system description] find the river name in river table with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the class equals Cutter conditions in place of the class equals Frigate conditions . in step 2 , do not use the ship table . in step 3 , consider the class equals Armed schooner conditions in place of the type equals Panamax conditions . [question] Find the captain rank that has some captains in both Cutter and Armed schooner classes . [system description] Step 1 : find the rank in captain table whose captain 's class equals " Frigate " . Step 2 : for each row in ship table , find the corresponding rows in captain table . Step 3 : find the rank of the results of step 2 whose type equals " Panamax " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Armed schooner , Cutter ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
consider the last name equals SWEAZY and first name equals ROY conditions in place of the last name equals HANUS and first name equals LENNY conditions . find kids in place of number of rows . [question] Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ . [system description] find the number of rows in reservations table whose first name equals " LENNY " and last name equals " HANUS " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( ROY ) [C] adults [C] kids
in step 2 , use the smallest in place of largest . [question] What is the name of the ship that is commanded by the youngest captain ? [system description] Step 1 : for each row in ship table , find the corresponding rows in captain table . Step 2 : find the ship 's name of the results of step 1 with largest value of age . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
in step 1 , do not find for each value of group equity shareholding . in step 2 , find maximum group equity shareholding in place of group equity shareholding . you should not find the largest of the results . show me all the results . [question] What is maximum group equity shareholding of the companies ? [system description] Step 1 : find the number of rows of each value of group equity shareholding in operate company table . Step 2 : find the group equity shareholding in operate company table with largest value in the results of step 1 . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
in step 1 , remove the department name equals English conditions . in step 2 , additionally use the information from the minor in table besides the department table . [question] What is the name of the department htat has no students minoring in it ? [system description] Step 1 : find the department name in department table whose department name equals " English " . Step 2 : find the department name in department table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
consider the release year equals 2013 conditions in place of the release year equals dummy value conditions . find number of different title in place of number of rows . [question] How many movies were produced in the year 2013 ? [system description] find the number of rows in movie table whose release year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , make sure no repetition in the results . [question] What are the first names of all students who got a grade C in a class ? [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the student first name of the results of step 1 whose enroll grade equals " C " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the genre table . in step 2 , consider the genre is equals modern conditions in place of the genre name equals modern conditions . [question] What are the ids of all songs that have higher resolution of the average resolution in the modern genre ? [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the average resolution of the results of step 1 whose genre name equals " modern " . Step 3 : find the song id in song table whose resolution greater than the results of step 2 . [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , additionally use the information from the participants in events table , participants table , and events table besides the services table . [question] Which service id and type has the least number of participants ? [system description] Step 1 : find the number of rows of each value of service id in services table . Step 2 : find the service id and service type code in services table with smallest value in the results of step 1 . [schema] [T] services [C] service id [C] service type code [T] participants [C] participant id [C] participant type code ( Participant ) [C] participant details [T] events [C] event id [C] service id [C] event details [T] participants in events [C] event id [C] participant id
in step 1 , use class table in place of department table in step 2 , remove the course 's course code equals CIS-220 conditions . [question] Find the first names and offices of all instructors who have taught some course and also find the course description . [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table and in professor table . Step 2 : find the employee first name , professor office , course description of the results of step 1 whose course code equals " CIS-220 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the name equals Indiana University conditions in place of the name equals INRIA conditions . make sure no repetition in the results . [question] List the titles of the papers whose authors are from the institution " Indiana University " . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the title of the results of step 1 whose name equals " INRIA " . [schema] [T] institution [C] institution id [C] name ( Indiana University ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the list table . in step 2 , consider the teachers 's class room equals 109 conditions in place of the list 's class room equals 111 conditions . [question] Which teachers teach in classroom 109 ? Give me their last names . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's last name of the results of step 1 whose list 's class room equals 111 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 2 , consider the first name equals Katsuhiro and last name equals Ueno conditions in place of the first name equals Olin conditions . make sure no repetition in the results . [question] What is the name of the institution the author " Katsuhiro Ueno " belongs to ? [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the name of the results of step 1 whose first name equals " Olin " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ueno ) [C] first name ( Katsuhiro ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what are the biggest rivers in texas [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the tourist attractions 's name equals film festival conditions in place of the tourist attractions 's name equals exploration trial conditions . find photos 's description in place of tourist attractions 's description . [question] Find the names and descriptions of the photos taken at the tourist attraction called " film festival " . [system description] Step 1 : for each row in photos table , find the corresponding rows in tourist attractions table . Step 2 : find the photos 's name and tourist attractions 's description of the results of step 1 whose tourist attractions 's name equals " exploration trial " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name ( Film Festival ) [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name ( film festival ) [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , additionally use the information from the has amenity table besides the dorm amenity table . find for each value of has amenity 's amenity id in place of amenity name . [question] Find the name of amenity that is most common in all dorms . [system description] Step 1 : find the number of rows of each value of amenity name in dorm amenity table . Step 2 : find the amenity name in dorm amenity table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
consider the first name equals DAMIEN and check in equals 2010-09-21 and last name equals TRACHSEL conditions in place of the last name equals JAHR and last name equals CORSARO and first name equals KELLY conditions . find kids in place of number of rows . [question] Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on Sep 21 , 2010 . [system description] find the number of rows in reservations table whose first name equals " KELLY " and last name equals " CORSARO " and last name equals " JAHR " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( TRACHSEL ) [C] first name ( DAMIEN ) [C] adults [C] kids
consider the destination equals Chennai conditions in place of the destination equals Kanniyakumari conditions . order the results by time in place of train number . [question] Give me the times and numbers of all trains that go to Chennai , ordered by time . [system description] find the time and train number in train table whose destination equals " Kanniyakumari " ordered ascending by train number . [schema] [T] train [C] id [C] train number [C] name [C] origin ( Chennai ) [C] destination ( Chennai ) [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
in step 1 , additionally use the information from the event table . in step 2 , find for value of journalist 's name in place of news report 's journalist id . [question] Show the names of journalists that have reported more than one event . [system description] Step 1 : for each row in news report table , find the corresponding rows in journalist table . Step 2 : find the number of rows of each value of news report 's journalist id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
only show me the first 3 results . [question] Find the name and id of the top 3 expensive rooms . [system description] find the room name and room id in rooms table with largest value of base price . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the staff department assignments table besides the staff table . find for each value of staff department assignments 's staff id whose number of rows greater than 1 . [question] What are the names of staff who have been assigned multiple jobs ? [system description] Step 1 : find the number of rows of each value of staff name in staff table . Step 2 : find the staff name in staff table whose corresponding value in step 1 is equals 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the postseason table . in step 2 , find for each value of birth country . order the results by number of rows in place of losses . only show me the first 3 results . [question] List three countries which are the origins of the least players . [system description] Step 1 : for each row in postseason table , find the corresponding rows in player table . Step 2 : find the birth country of the results of step 1 with smallest value of losses . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the staff table and complaints table . in step 2 , find complaints 's customer id in place of product id . in step 3 , make sure the customers 's customer id is not one of the results of step 2 the customers 's email address is not one of the results of step 2 . find customers 's phone number in place of staff 's phone number . [question] What are the emails and phone numbers of custoemrs who have never filed a complaint ? [system description] Step 1 : for each row in customers table , find the corresponding rows in complaints table and in staff table . Step 2 : find the product id in complaints table . Step 3 : find the customers 's email address and staff 's phone number of the results of step 1 whose customers 's email address not one of the results of step 2 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois and length greater than 750 conditions in place of the state name equals dummy value conditions . [question] what are the major rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the team table and player table . in step 2 , consider the college equals UCLA conditions in place of the college equals Wake Forest conditions . find position in place of player 's player . make sure no repetition in the results . [question] Show the distinct position of players from college UCLA or Duke . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 whose college equals " Wake Forest " or college equals " Duke " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( UCLA , Duke ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , do not use the state table . in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . you should not find the largest of the results . show me all the results . [question] what state has highest elevation [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name is one of state 's state name state whose capital equals des moines conditions in place of the capital equals dummy value conditions . find highest point in place of maximum highest point . [question] what is the highest point in the state with capital des moines [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose capital equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the length is equals maximum length river conditions in place of the border info 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what river is the longest one in the united states [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the bed type equals King conditions in place of the beds equals 1 conditions . in step 2 , find for each value of decor in place of bed type . find decor in place of bed type . [question] Find the number of rooms with king bed for each decor type . [system description] Step 1 : find rows in rooms table whose beds equals 1 . Step 2 : find each value of bed type the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the store table besides the address table . consider the store id equals 1 conditions in place of the address2 equals conditions . [question] Return the address of store 1 . [system description] find the address in address table whose address2 equals " " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , use sports info table in place of plays games table in step 2 , consider the last name equals Shieber and first name equals David conditions in place of the first name equals Dinesh conditions . find summation of games played and summation of hours per week in place of summation of hours played . [question] What is the total number of hours per work and number of games played by David Shieber ? [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table . Step 2 : find the summation of hours played and summation of hours played of the results of step 1 whose first name equals " Dinesh " . [schema] [T] student [C] student id [C] last name ( Shieber ) [C] first name ( David ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
additionally use the information from the office locations table and buildings table besides the companies table . additionally find buildings 's name . [question] List the name of a building along with the name of a company whose office is in the building . [system description] find the name and name in companies table . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
in step 1 , additionally use the information from the member table besides the party table . find for each value of member 's party id in place of party name . [question] What is the name of party with most number of members ? [system description] Step 1 : find the number of rows of each value of party name in party table . Step 2 : find the party name in party table with largest value in the results of step 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , use publication table and writes table in place of organization table in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the organization 's name equals dummy value conditions . [question] return me the authors who have cooperated with " H. V. Jagadish " . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the author 's name of the results of step 1 whose organization 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the border info table and state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the border info 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the longest river that flows through texas [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find for each value of manufacturer in place of code . [question] Select the average price of each manufacturer 's products , showing only the manufacturer 's code . [system description] find each value of code in products table along with the manufacturer and average price of the corresponding rows to each value . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 3 , find product details in place of products 's product id . [question] Which product has been ordered most number of times ? [system description] Step 1 : for each row in products table , find the corresponding rows in order items table . Step 2 : find the number of rows of each value of products 's product id of the results of step 1 . Step 3 : find the products 's product id of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , do not use the enroll table , student table , and class table . in step 2 , find number of different department name in place of number of rows . [question] Find the number of departments in each school . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of school code of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the training hours greater than 1000 conditions in place of the training hours greater than 300 conditions . [question] For each position , what is the maximum number of hours for students who spent more than 1000 hours training ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : only keep the results of step 1 whose training hours greater than 300 . Step 3 : find each value of player position the results of step 2 along with the maximum training hours of the corresponding rows to each value . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the largest city of wyoming [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , remove the country name equals dummy value conditions . find minimum different length in place of minimum length . in step 2 , find number of different traverse in place of number of rows . [question] how many states in the us does the shortest river run through [system description] Step 1 : find the minimum length in river table whose country name equals " dummy value " . Step 2 : find the number of rows in river table whose length equals the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the order date is greater than minimum order date customer orders whose order status code equals Cancelled conditions in place of the order status code equals Cancelled conditions . make sure no repetition in the results . [question] What are the distinct ids of customers who made an order after any order that was Cancelled ? [system description] find the customer id in customer orders table whose order status code equals " Cancelled " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code ( Cancelled ) [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the river table and state table . in step 2 , consider the border info 's state name is one of traverse river whose river name equals mississippi conditions in place of the traverse equals dummy value conditions . [question] which states border states through which the mississippi traverses [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose traverse equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals california conditions in place of the area equals dummy value conditions . find population in place of summation of population . [question] how many residents live in california [system description] find the summation of population in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use journal table in place of author table and writes table in step 2 , consider the journal 's name equals PVLDB and year equals 2005 conditions in place of the author 's name equals dummy value and year equals dummy value conditions . find summation of citation num in place of number of publication 's jid . [question] return me the total citations of papers in PVLDB in 2005 . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the number of jid of the results of step 1 whose year equals " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . [question] return me the authors who have papers containing keyword " Relational Database " . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : find the name of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the area equals dummy value conditions . [question] what rivers are in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use documents table in place of projects table . [question] Show project ids and the number of documents in each project . [system description] find each value of project id in projects table along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 2 , consider the how to get there equals bus or address equals 254 Ottilie Junction conditions in place of the address equals 0692 Georgiana Pass or address equals 4510 Schuster Stream Apt . 613 conditions . [question] Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction . [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table . Step 2 : find the name of the results of step 1 whose address equals " 4510 Schuster Stream Apt . 613 " or address equals " 0692 Georgiana Pass " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address ( 254 Ottilie Junction ) [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , do not use the ref hotel star ratings table . [question] What is the average price range of hotels for each each star rating code ? [system description] Step 1 : for each row in ref hotel star ratings table , find the corresponding rows in hotels table . Step 2 : find each value of hotels 's star rating code of the results of step 1 along with the ref hotel star ratings 's star rating code and average price range of the corresponding rows to each value . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the department name equals Biology or department name equals Accounting conditions in place of the department name equals Marketing/Management or department name equals Sociology conditions . [question] How many professors who are from either Accounting or Biology department ? [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the number of rows of the results of step 1 whose department name equals " Marketing/Management " or department name equals " Sociology " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting , Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the settlements table . in step 2 , use claims table in place of settlements table . find average claims 's amount settled in place of average settlements 's amount claimed . in step 3 , make sure the claims 's amount settled is less than or equals the results of step 2 the settlements 's amount claimed is less than the results of step 2 . find claims 's date claim made in place of claims 's date claim settled . [question] Among all the claims , which settlements have a claimed amount that is no more than the average ? List the claim start date . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the average settlements 's amount claimed in settlements table . Step 3 : find the claims 's date claim settled of the results of step 1 whose settlements 's amount claimed less than the results of step 2 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 1 , consider the rating less than 8 conditions in place of the rating less than 7 conditions . find maximum resolution in place of minimum resolution . [question] What is the id of every song that has a resolution higher than that of a song with a rating below 8 ? [system description] Step 1 : find the minimum resolution in song table whose rating less than 7 . Step 2 : find the song id in song table whose resolution greater than the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , order the results by product type code in place of product name . [question] Give the maximum and minimum product prices for each product type , grouped and ordered by product type . [system description] Step 1 : find the product name of each value of product type code in products table . Step 2 : find the maximum product price , minimum product price , product type code in products table ordered ascending by the results of step 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
additionally make sure that area is equals minimum area state . find density in place of population . you should not find the smallest of the results . show me all the results . [question] what is the population density of the state with the smallest area [system description] find the population in state table with smallest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the year equals 2000 conditions in place of the year equals 2001 conditions . [question] Show all director names who have a movie in the year 1999 or 2000 . [system description] find the director in movie table whose year equals 1999 or year equals 2001 . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 2 , consider the team name equals Clemson conditions in place of the nickname equals Flying Dutchmen conditions . [question] What are the all games score and location of the school called Clemson ? [system description] Step 1 : for each row in university table , find the corresponding rows in basketball match table . Step 2 : find the all games and location of the results of step 1 whose nickname equals " Flying Dutchmen " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , additionally use the information from the race table besides the track table . find for each value of race 's track id in place of track 's name . [question] Show the name of track with most number of races . [system description] Step 1 : find the number of rows of each value of name in track table . Step 2 : find the name in track table with largest value in the results of step 1 . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the largest river in texas state [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the directed by table . in step 2 , consider the title equals House of Cards and release year equals 2013 conditions in place of the birth year equals dummy value and title equals dummy value conditions . [question] Who is the director of the tv series " House of Cards " from 2013 ? [system description] Step 1 : for each row in director table , find the corresponding rows in tv series table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " and birth year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , find for value of country 's name in place of roller coaster 's country id . [question] Show the names of countries that have more than one roller coaster . [system description] Step 1 : for each row in country table , find the corresponding rows in roller coaster table . Step 2 : find the number of rows of each value of roller coaster 's country id of the results of step 1 . Step 3 : find the country 's name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
additionally make sure that is male equals F . [question] How many female people are older than 30 in our record ? [system description] find the number of rows in people table whose age greater than 30 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] what state has the smallest area [system description] find the state name in state table with smallest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the county table . in step 2 , find for each value of election 's party . order the results by number of rows in place of population . [question] Which party has the largest number of delegates ? [system description] Step 1 : for each row in county table , find the corresponding rows in election table and in party table . Step 2 : find the party 's party of the results of step 1 with largest value of population . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use match season table in place of player table . find for each value of position in place of player 's player . find position in place of player 's player . [question] Show the position of players and the corresponding number of players . [system description] find each value of player in player table along with the number of the corresponding rows to each value . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
consider the state name equals kansas and population greater than 150000 conditions in place of the state name equals dummy value conditions . [question] what are the major cities of kansas [system description] find the city name in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the department table . in step 2 , find for each value of student 's department code in place of department name . find summation of student class hours took and student 's department code in place of department name and summation of student num . [question] How many hours do the students spend studying in each department ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table . Step 2 : find each value of department name of the results of step 1 along with the summation of student num of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the affected region table besides the region table . find for each value of region 's region id whose number of rows greater than or equals 2 . [question] Show the region name with at least two storms . [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] storm [C] storm id [C] name ( Two ) [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , additionally use the information from the papers table and authorship count table besides the institution table . find for each value of name in place of institution 's institution id . [question] Which institution has the most papers ? Find the name of the institution . [system description] Step 1 : find the number of rows of each value of institution id in institution table . Step 2 : find the name in institution table with largest value in the results of step 1 . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , consider the role equals Mr. Bean conditions in place of the name equals dummy value conditions . find name in place of role . [question] who acted the role of " Mr. Bean " [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table . Step 2 : find the role of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , consider the author count equals 1 and last name equals Ohori and country equals Japan conditions in place of the last name equals Turon and country equals France conditions . [question] Which papers ' first author is affiliated with an institution in the country " Japan " and has last name " Ohori " ? Give me the titles of the papers . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table and in papers table . Step 2 : find the title of the results of step 1 whose country equals " France " and last name equals " Turon " . [schema] [T] institution [C] institution id [C] name [C] country ( Japan ) [T] authors [C] author id [C] last name ( Ohori ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the genre table . in step 2 , consider the title equals The Imitation Game conditions in place of the genre equals dummy value conditions . [question] What year is the movie " The Imitation Game " from ? [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the release year of the results of step 1 whose genre equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the student table . in step 2 , find summation of hours played in place of number of rows . [question] What are the ids of all students and number of hours played ? [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table . Step 2 : find each value of plays games 's student id of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] what state has the sparsest population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use journal table and publication keyword table in place of domain table , domain author table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Keyword search and journal 's name equals PVLDB conditions in place of the keyword equals dummy value conditions . find number of different title in place of number of publication 's pid . [question] return me the number of papers in PVLDB containing keyword " Keyword search " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the number of publication 's pid of the results of step 1 whose keyword equals " dummy value " and keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the customer table . in step 2 , do not find for each value of customer 's branch id . in step 3 , find bname in place of customer name . order the results by no of customers in place of summation of no of customers . [question] What is the name of the bank branch with the greatest number of customers ? [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the summation of no of customers of each value of customer 's branch id of the results of step 1 . Step 3 : find the customer name of the results of step 1 with largest value in the results of step 2 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally make sure that number deaths greater than 0 . [question] Count the number of storms in which at least 1 person died . [system description] find the number of rows in storm table . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
additionally use the information from the route table besides the station table . find for each value of station id in place of network name . additionally find services . [question] Find the number of trains for each station , as well as the station network name and services . [system description] find each value of network name in station table along with the number of the corresponding rows to each value . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
in step 1 , additionally use the information from the flight table besides the aircraft table . find for each value of flight 's airline id whose number of rows greater than or equals 2 . [question] Show names for all aircraft with at least two flights . [system description] Step 1 : find the number of rows of each value of name in aircraft table . Step 2 : find the name in aircraft table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , order the results by number of different traverse in place of number of rows . [question] what river runs through the most states [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the sex equals F conditions in place of the club name equals Pen and Paper Gaming conditions . [question] Give me the first name and last name for all the female members of the club " Bootup Baltimore " . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Bootup Baltimore " and club name equals " Pen and Paper Gaming " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 1 , do not use the customers table and customer orders table . in step 3 , find product details in place of customer name . order the results ascending by summation of order quantity in place of ordering descending by number of rows . [question] What are the name and ID of the product bought the most . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table and in customer orders table and in customers table . Step 2 : find the number of rows of each value of products 's product id of the results of step 1 . Step 3 : find the customer name and products 's product id of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , do not use the highlow table and state table . in step 2 , consider the mountain altitude is equals maximum mountain altitude mountain conditions in place of the state 's country name equals dummy value conditions . find mountain name in place of mountain altitude . you should not find the largest of the results . show me all the results . [question] what is the highest mountain in us [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the affected region table besides the storm table . find for each value of storm 's storm id whose number of rows greater than or equals 2 . in step 3 , additionally use the information from the affected region table besides the storm table . find for each value of storm 's storm id whose summation of number city affected greater than or equals 10 . [question] What are the names of storms that both affected two or more regions and affected a total of 10 or more cities ? [system description] Step 1 : find the number of rows of each value of name in storm table . Step 2 : find the name in storm table whose corresponding value in step 1 is greater than or equals 1 . Step 3 : find the number of rows of each value of name in storm table . Step 4 : find the name in storm table whose corresponding value in step 3 is greater than or equals 1 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] storm [C] storm id [C] name ( Two ) [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , additionally use the information from the activity table besides the participates in table . consider the activity name equals Canoeing conditions in place of the participates in 's activity id equals 776 conditions . in step 3 , consider the activity name equals Kayaking conditions in place of the activity name equals Football conditions . [question] Find the ids of the students who participate in Canoeing and Kayaking . [system description] Step 1 : find the student id in participates in table whose participates in 's activity id equals 776 . Step 2 : for each row in participates in table , find the corresponding rows in activity table . Step 3 : find the student id of the results of step 2 whose activity name equals " Football " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the station table . in step 2 , find end station name and start station name in place of name and end station id . only show me the first 3 results . [question] What is the station station and end station for the trips with the three smallest ids ? [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the name and end station id of the results of step 1 with smallest value of trip 's id . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , use faculty participates in table in place of faculty table . [question] What are ids of the faculty members who not only participate in an activity but also advise a student . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the advisor in student table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the department table . [question] What is the total credit does each department offer ? [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find each value of department 's department code of the results of step 1 along with the summation of course credit of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the sport name equals Football or sport name equals Lacrosse conditions in place of the sport name equals Baseball or games played equals 18 conditions . [question] Find the last and first name of students who are playing Football or Lacrosse . [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find the last name and first name of the results of step 1 whose sport name equals " Baseball " or games played equals 18 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Lacrosse , Football ) [C] hours per week [C] games played [C] on scholarship
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] what state has the largest population [system description] find the state name in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the party table besides the party events table . find party name in place of event name . [question] How many events are there for each party ? [system description] find each value of party id in party events table along with the number of the corresponding rows to each value . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , do not use the status table . in step 2 , consider the zip code equals 94107 conditions in place of the zip code equals 94041 conditions . find minimum min dew point f in place of minimum zip code . in step 3 , make sure the min dew point f is less than the results of step 2 the zip code is less than the results of step 2 . find zip code and date in place of time and mean dew point f . [question] Which days had a minimum dew point smaller than any day in zip code 94107 , and in which zip codes were those measurements taken ? [system description] Step 1 : for each row in weather table , find the corresponding rows in status table . Step 2 : find the minimum zip code in weather table whose zip code equals 94041 . Step 3 : find the time and mean dew point f of the results of step 1 whose zip code less than the results of step 2 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
additionally make sure that length is equals minimum length river . you should not find the smallest of the results . show me all the results . [question] which is the shortest river [system description] find the river name in river table with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use class table in place of department table , course table , and student table in step 2 , consider the class 's course code equals ACCT-211 conditions in place of the course 's course code equals CIS-220 conditions . find employee date of birth in place of student date of birth . make sure no repetition in the results . [question] What are the first names and date of birth of professors teaching course ACCT-211 ? [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table and in student table . Step 2 : find the employee first name and student date of birth of the results of step 1 whose course code equals " CIS-220 " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the party forms table besides the forms table . find for each value of party forms 's form id in place of form name . [question] Find the name of the most popular party form . [system description] Step 1 : find the number of rows of each value of form name in forms table . Step 2 : find the form name in forms table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
consider the city name equals boulder conditions in place of the city name equals dummy value conditions . find population in place of number of rows . [question] how big is the city of boulder [system description] find the number of rows in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use participants in events table in place of participants table . find number of different participants in events 's participant id in place of participants 's participant id . [question] What are all the distinct participant ids who attended any events ? [system description] find the participant id in participants table . [schema] [T] services [C] service id [C] service type code [T] participants [C] participant id [C] participant type code ( Participant ) [C] participant details [T] events [C] event id [C] service id [C] event details [T] participants in events [C] event id [C] participant id
in step 2 , order the results by date assigned to minus date assigned from in place of date assigned to . [question] Find the id and name of the staff who has been assigned for the shortest period . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff 's staff id and staff name of the results of step 1 with smallest value of date assigned to . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the lake table . in step 2 , consider the traverse equals illinois and length greater than 750 conditions in place of the state name equals dummy value conditions . [question] name the major rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the base price greater than 160 and max occupancy greater than 2 conditions in place of the base price greater than 250 and base price less than 250 conditions . [question] What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people . [system description] find the room name and room id in rooms table whose base price greater than 250 and base price less than 250 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
consider the river name equals rio grande conditions in place of the river name equals dummy value conditions . find length in place of summation of length . [question] how long is rio grande [system description] find the summation of length in river table whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the cast table . in step 2 , consider the name equals Shahab Hosseini conditions in place of the name equals dummy value conditions . find number of different title in place of number of rows . [question] What is the number of movies featuring " Shahab Hosseini " ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally use the information from the track table besides the race table . additionally find track 's name . [question] What are the names and dates of races , and the names of the tracks where they are held ? [system description] find the name , date , date in race table . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
do not return type . additionally order the results by class . [question] What are the names of ships , ordered by year they were built and their class ? [system description] find the name and type in ship table ordered ascending by built year . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
in step 1 , do not use the city table . in step 2 , consider the capital equals albany conditions in place of the capital equals dummy value conditions . in step 3 , make sure the traverse is not one of the results of step 2 the river name is not one of the results of step 2 . find number of river name in place of number of rows . [question] how many rivers do not traverse the state with the capital albany [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city 's state name of the results of step 1 whose capital equals " dummy value " . Step 3 : find the number of rows in river table whose river name not one of the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use river table in place of state table . [question] which states have a river [system description] find the state name in state table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , order the results by number of major in place of number of rows . [question] Which major has least number of students ? List the major and the number of students . [system description] Step 1 : find the number of rows of each value of major in student table . Step 2 : find the major and number of rows in student table with smallest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
in step 1 , use match season table in place of player table in step 2 , consider the name equals Ryley Goldner conditions in place of the name equals Evalyn Feil conditions . find position in place of player 's player . [question] Show the positions of the players from the team with name " Ryley Goldner " . [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : find the player of the results of step 1 whose name equals " Evalyn Feil " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name ( Ryley Goldner ) [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
use employee table and class table in place of student table . consider the employee last name equals Graztevski conditions in place of the student last name equals Oblonski conditions . [question] How many classes are professor whose last name is Graztevski has ? [system description] find the number of rows in student table whose student last name equals " Oblonski " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Graztevski ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , consider the length greater than 3000 conditions in place of the height greater than 163 conditions . [question] How many countries do not have an roller coaster longer than 3000 ? [system description] Step 1 : find the roller coaster 's country id in roller coaster table whose height greater than 163 . Step 2 : find the number of rows in country table whose country 's country id not one of the results of step 1 . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the longest river in texas [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the student table besides the department table . find for each value of student 's department code in place of department name . in step 2 , only show me the first 3 results . [question] Find the name , address , number of students in the departments that have the top 3 highest number of students . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name , department address , number of rows in department table with largest value in the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , additionally make sure that person friend 's name not equals Alice . make sure no repetition in the results . [question] Find Alice 's friends of friends . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose person 's name equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , consider the release year greater than 2010 and name equals Jennifer Aniston conditions in place of the name equals dummy value and role equals dummy value conditions . find number of different title in place of number of rows . [question] What is the number of movies in which " Jennifer Aniston " acted after 2010 ? [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table and in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and role equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , use person friend table in place of person table . [question] What are the names of everybody who has exactly one friend ? [system description] Step 1 : find the number of rows of each value of name in person table . Step 2 : find the name in person table whose corresponding value in step 1 is equals 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
use tryout table in place of college table . find number of different tryout 's college name in place of number of college 's college name . [question] How many different colleges do attend the tryout test ? [system description] find the number of college name in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , additionally use the information from the author table . in step 2 , consider the conference 's name equals VLDB conditions in place of the conference 's name equals dummy value conditions . find number of different author 's name in place of number of writes 's pid . [question] return me the number of authors who have papers in the VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the number of writes 's pid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the state name equals texas conditions in place of the border equals dummy value conditions . [question] what states border states that border states that border states that border texas [system description] find the border in border info table whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the tryout table . in step 2 , do not use the player table . in step 3 , consider the player position equals goalie conditions in place of the player position equals striker conditions . find tryout 's college name in place of player 's player id . in step 4 , make sure the college 's college name is not one of the results of step 3 the player position is not one of the results of step 3 . [question] What is the total number of enrollment of schools that do not have any goalie player ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : for each row in tryout table , find the corresponding rows in player table . Step 3 : find the player 's player id of the results of step 2 whose player position equals " striker " . Step 4 : find the summation of enrollment of the results of step 1 whose player position not one of the results of step 3 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
find for each value of birth country . order the results by number of rows in place of birth state . only show me the first 3 results . [question] What are the three countries that the least players are from ? [system description] find the birth country in player table with smallest value of birth state . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
do not return class . additionally order the results by class . [question] List all ship names in the order of built year and class . [system description] find the name and class in ship table ordered ascending by built year . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
additionally use the information from the protein table besides the institution table . consider the founded greater than 1880 conditions in place of the type equals Tribal conditions . [question] How many proteins are associated with an institution founded after 1880 or an institution with type " Private " ? [system description] find the number of rows in institution table whose type equals " Private " or type equals " Tribal " . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type ( Private ) [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
consider the employee job code equals PROF conditions in place of the employee date of birth equals 1950-11-2 conditions . [question] What are the first names of all employees that are professors ordered by date of birth ? [system description] find the employee first name in employee table whose employee date of birth equals " 1950-11-2 " ordered ascending by employee date of birth . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the lake table . in step 2 , consider the traverse equals illinois conditions in place of the state name equals dummy value conditions . [question] name the rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the company table besides the station company table . find company in place of station company 's company id . [question] For each company id , what are the companies and how many gas stations does each one operate ? [system description] find each value of company id in station company table along with the number of the corresponding rows to each value . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 1 , do not use the plays games table and student table . in step 2 , find for each value of sports info 's student id . additionally find number of rows . find summation of games played in place of games played . [question] What are the ids of all students along with how many sports and games did they play ? [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : find the plays games 's student id and games played of the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , use team table in place of team franchise table in step 2 , consider the name equals Boston Red Stockings conditions in place of the franchise name equals St. Paul Apostles conditions . [question] For each year , return the year and the number of times the team Boston Red Stockings won in the postseasons . [system description] Step 1 : for each row in postseason table , find the corresponding rows in team franchise table . Step 2 : only keep the results of step 1 whose franchise name equals " St. Paul Apostles " . Step 3 : find each value of year the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the border info table and state table . in step 2 , consider the lowest elevation is equals minimum lowest elevation highlow conditions in place of the border info 's state name equals dummy value conditions . find lowest point in place of maximum lowest point . [question] what is the lowest point in the united states [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum lowest point of the results of step 1 whose border info 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the movie table and directed by table besides the director table . consider the title equals The Past conditions in place of the birth year equals dummy value conditions . find birth city in place of name . [question] where is the director of " The Past " from [system description] find the name in director table whose birth year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the state table . in step 2 , consider the city 's population greater than 150000 and city 's state name equals wisconsin conditions in place of the city 's state name equals dummy value conditions . find city 's population in place of state 's population . [question] what are the populations of all the major cities in wisconsin [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's population of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not find for each value of church id . in step 2 , order the results by open date in place of summation of open date . only show me the first 3 results . [question] Show the name and opening year for three churches that opened most recently . [system description] Step 1 : find the summation of open date of each value of church id in church table . Step 2 : find the name and open date in church table with largest value in the results of step 1 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
in step 1 , do not use the workshop table . in step 2 , find the number of different acceptance 's workshop id for each value of author . [question] Which authors have submitted to more than one workshop ? [system description] Step 1 : for each row in submission table , find the corresponding rows in acceptance table and in workshop table . Step 2 : find the number of rows of each value of author of the results of step 1 . Step 3 : find the author of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
in step 1 , use performance table in place of vocals table in step 2 , consider the title equals Der Kapitan and stage position equals back conditions in place of the title equals dummy value conditions . [question] Who is performing in the back stage position for the song " Der Kapitan " ? Show the first name and last name . [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the first name and last name of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , additionally find venue . order the results by name in place of negative . [question] Show the names of people , and dates and venues of debates they are on the negative side , ordered in ascending alphabetical order of name . [system description] Step 1 : for each row in debate table , find the corresponding rows in debate people table and in people table . Step 2 : find the name and date of the results of step 1 ordered ascending by negative and negative . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
in step 2 , consider the type equals Studio conditions in place of the albums 's title equals dummy value conditions . find number of different songs 's title in place of number of rows . [question] Find the number of songs in all the studio albums . [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the number of rows of the results of step 1 whose albums 's title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 3 , make sure no repetition in the results . [question] List all player names who have an overall rating higher than the average . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the average overall rating in player attributes table . Step 3 : find the player name of the results of step 1 whose overall rating greater than the results of step 2 . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
in step 1 , additionally use the information from the order items table and customer orders table besides the customers table . find for each value of customers 's customer id whose number of different product id greater than or equals 3 . in step 2 , make sure no repetition in the results . [question] What are the distinct names of customers who have purchased at least three different products ? [system description] Step 1 : find the number of rows of each value of customer name in customers table . Step 2 : find the customer name in customers table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 2 , consider the department name equals Biology or department name equals Accounting conditions in place of the department name equals History or professor 's department code equals CIS conditions . [question] What is the number of professors who are in the Accounting or Biology departments ? [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the number of rows of the results of step 1 whose professor 's department code equals " CIS " or department name equals " History " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting , Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the product details equals Latte conditions in place of the products 's product id equals 2 conditions . in step 3 , additionally use the information from the order items table and products table . in step 4 , consider the product details equals Americano conditions in place of the order status equals Delivered conditions . [question] What are the names of customers who have purchased both products Latte and Americano ? [system description] Step 1 : for each row in products table , find the corresponding rows in order items table and in customer orders table and in customers table . Step 2 : find the customer name of the results of step 1 whose products 's product id equals 2 . Step 3 : for each row in customer orders table , find the corresponding rows in customers table . Step 4 : find the customer name of the results of step 3 whose order status equals " Delivered " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details ( Americano , Latte ) [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
use city table in place of state table . additionally make sure that city 's population is equals maximum city 's population city . you should not find the largest of the results . show me all the results . [question] what state has the largest city [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the furniture manufacte table besides the furniture table . find price in dollar in place of market rate . [question] Give me the names and prices of furnitures which some companies are manufacturing . [system description] find the name and market rate in furniture table . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
find for each value of department code . additionally find department code . [question] How many credits does the department offer ? [system description] find the summation of course credit in course table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use journal table , author table , and writes table in place of cite table in step 2 , consider the journal 's name equals PVLDB and year greater than 2000 and author 's name equals H. V. Jagadish conditions in place of the cited equals dummy value and year greater than dummy value conditions . find number of different title in place of number of publication 's pid . [question] return me the number of papers by " H. V. Jagadish " on PVLDB after 2000 . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the number of pid of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , use enroll table and class table in place of department table and course table in step 2 , consider the class 's course code equals ACCT-211 conditions in place of the course 's course code equals CIS-220 conditions . [question] What is the average gpa of the students enrolled in the course with code ACCT-211 ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the average student gpa of the results of step 1 whose course code equals " CIS-220 " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
use reference document types table in place of documents table . [question] What document type codes do we have ? [system description] find the document type code in documents table . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
in step 2 , consider the product name equals chervil conditions in place of the product name equals cinnam conditions . [question] What is the color code and description of the product named " chervil " ? [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the reference colors 's color code and color description of the results of step 1 whose product name equals " cinnam " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( chervil ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 2 , find for each value of artist 's artist id whose average attendance greater than 200 . [question] What are the names of artist whose exhibitions draw over 200 attendees on average ? [system description] Step 1 : for each row in exhibition record table , find the corresponding rows in exhibition table and in artist table . Step 2 : find the average attendance of each value of name of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
consider the year greater than or equals 2005 conditions in place of the year greater than 2006 conditions . [question] Count the number of exhibitions that happened in or after 2005 . [system description] find the number of rows in exhibition table whose year greater than 2006 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
consider the gender equals female conditions in place of the gender equals male conditions . find number of rows in place of number of gender . [question] How many females does this network has ? [system description] find the number of gender in person table whose gender equals " male " . [schema] [T] person [C] name [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name [C] friend [C] year
consider the fda approved equals Yes conditions in place of the fda approved like Yes conditions . [question] What are the names and trade names of the medicines which has 'Yes ' value in the FDA record ? [system description] find the name and trade name in medicine table whose fda approved like " Yes " . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved ( Yes ) [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
in step 2 , consider the advisor equals 1121 conditions in place of the advisor equals 2311 conditions . make sure no repetition in the results . [question] List the clubs that have at least a member with advisor " 1121 " . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose advisor equals 2311 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally use the information from the customers cards table besides the customers table . consider the card type code equals Credit and customer first name equals Blanche and customer last name equals Huels conditions in place of the customer first name equals Armani and customer last name equals Davis conditions . [question] How many credit cards does customer Blanche Huels have ? [system description] find the number of rows in customers table whose customer first name equals " Armani " and customer last name equals " Davis " . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name ( Blanche ) [C] customer last name ( Huels ) [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code ( Credit ) [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 2 , find for each value of address 's city id in place of city . [question] Which city has the most addresses ? List the city name , number of addresses , and city id . [system description] Step 1 : for each row in city table , find the corresponding rows in address table . Step 2 : find the number of rows of each value of city of the results of step 1 . Step 3 : find the city , address 's city id , number of rows of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 2 , additionally make sure that student capacity is equals maximum student capacity dorm . you should not find the largest of the results . show me all the results . [question] What is the average age of students who are living in the dorm with the largest capacity ? [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the average age of the results of step 1 with largest value of student capacity . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
additionally make sure that rank equals Instructor . [question] Show the first name and last name for all the instructors . [system description] find the first name and last name in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
additionally find gdp . [question] What is the city with the smallest GDP ? Return the city and its GDP . [system description] find the city and city in city table with smallest value of gdp . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
consider the highest elevation is equals maximum highest elevation highlow conditions in place of the state name equals dummy value conditions . find highest point in place of maximum highest point . [question] what is the highest point in the us [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the film table and schedule table . in step 2 , consider the capacity greater than 300 conditions in place of the capacity greater than 208 conditions . [question] In which locations are there more than one movie theater with capacity above 300 ? [system description] Step 1 : for each row in film table , find the corresponding rows in schedule table and in cinema table . Step 2 : only keep the results of step 1 whose capacity greater than 208 . Step 3 : find the number of rows of each value of location the results of step 2 . Step 4 : find the location the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
in step 1 , do not use the state table . in step 2 , consider the lowest elevation is equals minimum lowest elevation highlow conditions in place of the country name equals dummy value conditions . find lowest point in place of minimum lowest point . [question] what is the lowest point in usa [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the college table . in step 2 , consider the player name like D % conditions in place of the player name like Eddie conditions . [question] Which colleges do the tryout players whose name starts with letter D go to ? [system description] Step 1 : for each row in player table , find the corresponding rows in tryout table and in college table . Step 2 : find the college 's college name of the results of step 1 whose player name like " Eddie " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
consider the state name equals california conditions in place of the area equals dummy value conditions . find population in place of summation of population . [question] how many citizens live in california [system description] find the summation of population in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the year less than 2009 conditions in place of the year less than 2008 conditions . additionally find minimum ticket price . [question] What are the average , minimum , and maximum ticket prices for exhibitions that happened prior to 2009 ? [system description] find the average ticket price , maximum ticket price , maximum ticket price , maximum ticket price in exhibition table whose year less than 2008 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 1 , consider the headquarter equals Austin conditions in place of the founder equals Mary conditions . find minimum revenue in place of founder . in step 2 , make sure the revenue is greater than the results of step 1 the founder is equals the results of step 1 . remove the founder equals Andy conditions . [question] What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin ? [system description] Step 1 : find the founder in manufacturers table whose founder equals " Mary " . Step 2 : find the summation of revenue in manufacturers table whose founder equals the results of step 1 and founder equals " Andy " . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
use class table in place of course table . [question] How many sections does each course has ? [system description] find each value of course code in course table along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the name equals Boston Red Stockings and postseason 's year equals 2009 conditions in place of the team 's year equals 2006 and postseason 's year equals 1989 conditions . find number of rows in place of number of wins . [question] How many times did Boston Red Stockings lose in 2009 postseason ? [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table . Step 2 : find the number of wins of the results of step 1 whose postseason 's year equals 1989 and team 's year equals 2006 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
use documents table in place of projects table . [question] How many documents correspond with each project id ? [system description] find each value of project id in projects table along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 2 , find state 's state name in place of capital . you should not find the largest of the results . show me all the results . [question] what states have a capital that is the highest point in the state [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the density is equals maximum density state conditions in place of the country name equals dummy value conditions . find state name in place of density . you should not find the largest of the results . show me all the results . [question] what is the most dense state in the usa [system description] find the density in state table whose country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally find card type code . [question] What are card ids , customer ids , card types , and card numbers for each customer card ? [system description] find the card id , customer id , card number , card number in customers cards table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , do not use the film text table . in step 3 , find film 's title and film 's film id in place of film text 's title and film text 's film id . order the results by number of rows in place of summation of rating . [question] What is the title and id of the film that has the greatest number of copies in inventory ? [system description] Step 1 : for each row in inventory table , find the corresponding rows in film text table and in film table . Step 2 : find the summation of rating of each value of inventory 's film id of the results of step 1 . Step 3 : find the film text 's title and film text 's film id of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
find number of different bike id in place of number of id . [question] From the trip record , find the number of unique bikes . [system description] find the number of id in trip table . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , use movie table in place of copyright table in step 2 , consider the actor 's name equals Kate Winslet conditions in place of the actor 's name equals dummy value conditions . [question] Find the producers of all movies in which " Kate Winslet " is an actor [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in made by table and in producer table . Step 2 : find the producer 's name of the results of step 1 whose actor 's name equals " dummy value " and actor 's name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , consider the product description like % t % conditions in place of the product name like flax conditions . [question] What are the descriptions of the categories that products with product descriptions that contain the letter t are in ? [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description of the results of step 1 whose product name like " flax " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , use journal table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . [question] return me the papers on PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find for each value of name . find minimum price in place of price . you should not find the smallest of the results . show me all the results . [question] What are the codes and names of the cheapest products in each category ? [system description] find the code , name , price in products table with smallest value of price . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
use city table in place of mountain table . consider the city name equals boulder conditions in place of the mountain name equals dummy value conditions . find population in place of number of rows . [question] how many inhabitants does boulder have [system description] find the number of rows in mountain table whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the document type code equals BK conditions in place of the document type code equals FM conditions . in step 2 , find for each value of project id in place of document id . additionally find project id . [question] Count the number of documents with the type code BK that correspond to each product id . [system description] Step 1 : find rows in documents table whose document type code equals " FM " . Step 2 : find each value of document id the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code ( BK ) [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( BK ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the team table and player table . in step 2 , consider the country name equals Indonesia conditions in place of the official native language equals Persian ( Arabic script ) conditions . find match season 's player in place of player 's player . [question] Which players are from Indonesia ? [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose official native language equals " Persian ( Arabic script ) " . [schema] [T] country [C] country id [C] country name ( Indonesia ) [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
find number of different school code in place of number of rows . [question] How many schools are there in the department ? [system description] find the number of rows in department table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , use savings table in place of checking table . find average savings 's balance in place of average checking 's balance . in step 3 , make sure the savings 's balance is greater than the results of step 2 the checking 's balance is greater than the results of step 2 . find checking 's balance plus savings 's balance in place of checking 's balance and savings 's balance . [question] What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance ? [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the average checking 's balance in checking table . Step 3 : find the name , savings 's balance , checking 's balance of the results of step 1 whose checking 's balance greater than the results of step 2 . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
use journal table , domain table , and domain journal table in place of organization table . consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . find domain 's name in place of oid . [question] return me the area of PVLDB . [system description] find the oid in organization table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
order the results descending . [question] What are the first names of students , ordered by age from greatest to least ? [system description] find the first name in student table ordered ascending by age . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
consider the state name equals kentucky conditions in place of the border equals dummy value conditions . [question] what states border kentucky [system description] find the border in border info table whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally make sure that on scholarship equals Y . [question] What is the sport with the most scholarship students ? [system description] Step 1 : find the number of rows of each value of sport name in sports info table . Step 2 : find the sport name in sports info table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
consider the rank equals AsstProf conditions in place of the sex equals F and last name equals Meyer conditions . find for each value of sex . find sex in place of last name . [question] Show the number of male and female assistant professors . [system description] find the number of rows and last name in faculty table whose sex equals " F " and last name equals " Meyer " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , do not use the person friend table . in step 2 , consider the city equals Austin conditions in place of the city equals new york city conditions . in step 3 , use person friend table in place of person table . find number of different person friend 's name in place of number of rows . [question] What is the total number of people who has no friend living in the city of Austin . [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the person friend 's name of the results of step 1 whose city equals " new york city " . Step 3 : find the number of rows in person table whose person 's name not one of the results of step 2 . [schema] [T] person [C] name [C] age [C] city ( austin ) [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the border info table . in step 2 , remove the state 's state name equals dummy value conditions . in step 3 , make sure the density is equals the results of step 2 the population is equals the results of step 2 . [question] what is the state with the largest density in usa [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the maximum density in state table whose state 's state name equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose population equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
order the results by date payment made in place of amount payment . [question] What are the method , date and amount of each payment ? Sort the list in ascending order of date . [system description] find the payment method code , date payment made , amount payment in payments table ordered ascending by amount payment . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
consider the title like % Database % conditions in place of the title like An Equivalence-Preserving CPS Translation via Multi-Language Semantics conditions . find title in place of paper id . [question] Which papers have the substring " Database " in their titles ? Show the titles of the papers . [system description] find the paper id in papers table whose title like " An Equivalence-Preserving CPS Translation via Multi-Language Semantics " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
find number of different keyword in place of number of rows . [question] return me the number of keywords . [system description] find the number of rows in keyword table . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 3 , additionally find customer last name . [question] Give the full name and customer id of the customer with the fewest accounts . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find the number of rows of each value of accounts 's customer id of the results of step 1 . Step 3 : find the customer first name , customer first name , customers 's customer id of the results of step 1 with smallest value in the results of step 2 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
consider the city name equals springfield conditions in place of the city name equals dummy value conditions . find state name in place of city name . [question] where is springfield [system description] find the city name in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
remove the country name equals dummy value conditions . [question] what is the total length of all rivers in the usa [system description] find the summation of length in river table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , additionally make sure that length is equals maximum length river . you should not find the largest of the results . show me all the results . [question] which state has the longest river [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the player table . [question] How many players enter hall of fame each year ? [system description] Step 1 : for each row in hall of fame table , find the corresponding rows in player table . Step 2 : find each value of yearid of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last ( Hall ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , use products table in place of product suppliers table . find average product price in place of average total value purchased . in step 3 , additionally make sure that supplier id equals 2 . [question] What are the ids of products from the supplier with id 2 , which are more expensive than the average price across all products ? [system description] Step 1 : for each row in products table , find the corresponding rows in product suppliers table . Step 2 : find the average total value purchased in product suppliers table . Step 3 : find the product suppliers 's product id of the results of step 1 whose product price greater than the results of step 2 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , use status table in place of station table and weather table in step 2 , consider the station id is not one of id station whose city equals Palo Alto conditions in place of the city not equals Mountain View conditions . find average bikes available in place of average mean visibility miles . [question] What is the average bike availablility for stations not in Palo Alto ? [system description] Step 1 : for each row in station table , find the corresponding rows in weather table . Step 2 : find the average mean visibility miles of the results of step 1 whose city not equals " Mountain View " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
additionally use the information from the election table besides the party table . additionally find delegate . [question] For each delegate , find the names of the party they are part of . [system description] find the party in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
use class table in place of course table . consider the class 's course code equals ACCT-211 conditions in place of the course 's course code equals ACCT-211 conditions . find number of different class section in place of number of rows . [question] How many sections does course ACCT-211 has ? [system description] find the number of rows in course table whose course code equals " ACCT-211 " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the farm competition table besides the city table . find for each value of host city id in place of status . [question] Show the status of the city that has hosted the greatest number of competitions . [system description] Step 1 : find the number of rows of each value of status in city table . Step 2 : find the status in city table with largest value in the results of step 1 . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
consider the email address equals vbogisich @ example.org conditions in place of the email address equals rzulauf @ example.org and email address equals paige.hyatt @ example.com conditions . [question] Find the address line 1 and 2 of the customer with email " vbogisich @ example.org " . [system description] find the address line 1 and address line 2 in customers table whose email address equals " rzulauf @ example.org " and email address equals " paige.hyatt @ example.com " . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
consider the bed type equals King conditions in place of the room name equals Interim but salutary conditions . find summation of beds in place of number of rows . [question] How many king beds are there ? [system description] find the number of rows in rooms table whose room name equals " Interim but salutary " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the wedding table besides the church table . find for each value of church 's church id whose number of rows greater than or equals 2 . [question] Show all church names that have hosted least two weddings . [system description] Step 1 : find the number of rows of each value of name in church table . Step 2 : find the name in church table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
in step 1 , find average amount claimed in place of average amount settled . in step 2 , make sure the amount claimed is greater than the results of step 1 the amount settled is greater than the results of step 1 . [question] Among all the claims , which claims have a claimed amount larger than the average ? List the date the claim was made and the date it was settled . [system description] Step 1 : find the average amount settled in claims table . Step 2 : find the date claim made and date claim settled in claims table whose amount settled greater than the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
consider the population is equals maximum population city conditions in place of the country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the biggest city in the us [system description] find the city name in city table whose country name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find support rate in place of oppose rate . only show me the first 3 results . [question] what are the top 3 highest support rates ? [system description] find the oppose rate in candidate table with largest value of support rate . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
in step 1 , do not use the suppliers table . in step 2 , consider the product suppliers 's supplier id equals 3 conditions in place of the supplier name equals Tesco conditions . [question] Return the product type , name , and price for products supplied by supplier 3 . [system description] Step 1 : for each row in products table , find the corresponding rows in product suppliers table and in suppliers table . Step 2 : find the product type code , product name , product price of the results of step 1 whose supplier name equals " Tesco " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , remove the bikes available greater than 17 conditions . find for each value of station id whose maximum bikes available greater than 10 . [question] What is the average longitude of stations that never had bike availability more than 10 ? [system description] Step 1 : find the station id in status table whose bikes available greater than 17 . Step 2 : find the average longitude in station table whose id not one of the results of step 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 3 , do not return number of rows . [question] Retrieve the country that has published the most papers . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country and number of rows of the results of step 1 with largest value in the results of step 2 . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
remove the genre name equals pop conditions . order the results ascending by genre name . [question] List the names of all genres in alphabetical oder , together with its ratings . [system description] find the genre name and rating in genre table whose genre name equals " pop " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , use inventory table in place of film text table in step 3 , find film 's title in place of film text 's title . [question] Which film has the most copies in the inventory ? List both title and id . [system description] Step 1 : for each row in film text table , find the corresponding rows in film table . Step 2 : find the number of rows of each value of film 's film id of the results of step 1 . Step 3 : find the film text 's title and film 's film id of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
additionally use the information from the files table besides the song table . consider the duration like 3 : % conditions in place of the resolution less than 1080 conditions . [question] What is the maximum and minimum resolution of all songs that are approximately 3 minutes long ? [system description] find the maximum resolution and minimum resolution in song table whose resolution less than 1080 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally use the information from the airports table besides the routes table . consider the country equals Italy conditions in place of the destination airport equals GPT conditions . [question] Find the number of routes with destination airports in Italy . [system description] find the number of rows in routes table whose destination airport equals " GPT " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( Italy ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( Italy ) [C] active
consider the course code equals QM-261 conditions in place of the course code equals CIS-220 conditions . [question] Find the description and credit for the course QM-261 ? [system description] find the course description and course credit in course table whose course code equals " CIS-220 " . [schema] [T] class [C] class code [C] course code ( QM-261 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( QM-261 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , additionally make sure that gender equals female . [question] What are the names of all females who are friends with Zach ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Zach " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , additionally use the information from the visitors table and visits table besides the tourist attractions table . consider the tourist details equals Alison conditions in place of the name equals cafe conditions . in step 2 , additionally use the information from the visitors table and visits table besides the tourist attractions table . consider the tourist details equals Rosalind conditions in place of the name equals UK gallery conditions . [question] What are the names of tourist attraction that Alison visited but Rosalind did not visit ? [system description] Step 1 : find the name in tourist attractions table whose name equals " cafe " . Step 2 : find the name in tourist attractions table whose name equals " UK gallery " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Rosalind , Alison ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , do not use the enrolled in table . in step 2 , remove the grade equals C- conditions . find minimum grade point in place of grade . [question] What are the maximum and minumum grade points ? [system description] Step 1 : for each row in enrolled in table , find the corresponding rows in grade conversion table . Step 2 : find the maximum grade point and grade of the results of step 1 whose grade equals " C- " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 2 , consider the title equals Le Pop conditions in place of the title equals dummy value conditions . find number of different instrument in place of instrument . [question] How many instruments does the song " Le Pop " use ? [system description] Step 1 : for each row in songs table , find the corresponding rows in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , find minimum enrollment in place of maximum enrollment . in step 2 , make sure no repetition in the results . [question] What are the names of the colleges that are larger than at least one college in Florida ? [system description] Step 1 : find the maximum enrollment in college table whose state equals " FL " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , use written by table , producer table , writer table , and made by table in place of actor table in step 2 , consider the producer 's name equals Woody Allen and writer 's name equals Woody Allen conditions in place of the actor 's name equals dummy value conditions . [question] Find all movies written and produced by " Woody Allen " [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title and title of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
consider the payment method code equals Visa conditions in place of the payment id equals 886 conditions . additionally find amount payment . [question] Which Payments were processed with Visa ? List the payment Id , the date and the amount . [system description] find the payment id and date payment made in payments table whose payment id equals 886 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code ( Visa ) [C] date payment made [C] amount payment
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the state name equals dummy value conditions . [question] what are all the rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the email like % gmail.com % conditions in place of the email like robbrown @ shaw.ca conditions . find number of rows in place of number of customer id . [question] Count the number of customers that have an email containing " gmail.com " . [system description] find the number of customer id in customer table whose email like " robbrown @ shaw.ca " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers , Coma ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
consider the state name equals california conditions in place of the state name equals dummy value conditions . find population in place of number of rows . [question] how many people are in the state of california [system description] find the number of rows in state table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that product type code equals Hardware . [question] What is the name of the hardware product with the greatest price ? [system description] find the product name in products table with largest value of product price . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Hardware ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , use author table and writes table in place of cite table in step 2 , consider the name equals H. V. Jagadish conditions in place of the cited equals dummy value conditions . in step 4 , do not return number of rows . order the results by number of different title in place of number of rows . [question] return me the keyword , which have been contained by the most number of papers by " H. V. Jagadish " . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of rows of each value of keyword the results of step 2 . Step 4 : find the keyword and number of rows the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find average length feet in place of average length meters . [question] What is the average length in feet of the bridges ? [system description] find the average length meters in bridge table . [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
in step 1 , do not use the mountain table and state table . in step 2 , consider the highlow 's state name equals texas conditions in place of the mountain 's state name equals dummy value conditions . find highest point in place of mountain altitude . you should not find the largest of the results . show me all the results . [question] what is the highest mountain in texas [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose mountain 's state name equals " dummy value " with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 3 , use the smallest in place of largest . [question] What is the name of department where has the smallest number of professors ? [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the number of rows of each value of professor 's department code of the results of step 1 . Step 3 : find the department name of the results of step 1 with largest value in the results of step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
remove the omim equals 600923 conditions . [question] What is the maximum Online Mendelian Inheritance in Man ( OMIM ) value of the enzymes ? [system description] find the maximum omim in enzyme table whose omim equals 600923 . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
in step 1 , find for each value of major . find major in place of student id . order the results by number of rows in place of major . [question] What is the first and last name of the students who are not in the largest major ? [system description] Step 1 : find the student id in student table with largest value of major . Step 2 : find the first name and last name in student table whose major not equals the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
consider the distance greater than 2000 conditions in place of the distance greater than 2551 conditions . find flight number in place of number of rows . [question] What are the numbers of all flights that can cover a distance of more than 2000 ? [system description] find the number of rows in flight table whose distance greater than 2551 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , use employee table and class table in place of student table in step 2 , consider the department name equals Computer Info . Systems conditions in place of the professor 's department code equals ECON/FIN conditions . find employee first name in place of student first name . make sure no repetition in the results . [question] What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in professor table . Step 2 : find the student first name and professor high degree of the results of step 1 whose professor 's department code equals " ECON/FIN " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
find mean temperature f in place of max temperature f . order the results by max gust speed mph in place of max humidity . only show me the first 3 results . [question] What are the date , mean temperature and mean humidity for the top 3 days with the largest max gust speeds ? [system description] find the date , max temperature f , mean humidity in weather table with largest value of max humidity . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
consider the state name equals kentucky conditions in place of the border equals dummy value conditions . [question] what state borders kentucky [system description] find the border in border info table whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the origin equals Los Angeles conditions in place of the destination equals Honolulu conditions . [question] What is the average distance and price for all flights from LA ? [system description] find the average distance and average price in flight table whose destination equals " Honolulu " . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , consider the age greater than 30 conditions in place of the age greater than 25 conditions . [question] Show the church names for the weddings of all people older than 30 . [system description] Step 1 : for each row in church table , find the corresponding rows in wedding table and in people table . Step 2 : find the church 's name of the results of step 1 whose age greater than 25 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
find rank in place of number of rank . make sure no repetition in the results . [question] Find the list of distinct ranks for faculty . [system description] find the number of rank in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the song table . [question] How many songs were released for each format ? [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find each value of formats of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the customer name like % Alex % conditions in place of the customer name like Eunice Morar conditions . [question] Which customer 's name contains " Alex " ? Find the full name . [system description] find the customer name and customer name in customers table whose customer name like " Eunice Morar " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . [question] Give the hometowns from which two or more gymnasts are from . [system description] Step 1 : for each row in gymnast table , find the corresponding rows in people table . Step 2 : find the number of rows of each value of hometown of the results of step 1 . Step 3 : find the hometown of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
make sure no repetition in the results . [question] Find each student 's first name . [system description] find the first name in student table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
consider the grade equals 4 conditions in place of the grade equals 1 conditions . make sure no repetition in the results . [question] Find the classrooms in which grade 4 is studying . [system description] find the class room in list table whose grade equals 1 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
additionally use the information from the tryout table besides the college table . make sure no repetition in the results . [question] Find the states where have some college students in tryout . [system description] find the state in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , additionally use the information from the team table . in step 2 , consider the name equals Washington Nationals and salary 's year equals 2005 conditions in place of the salary 's year equals 1989 conditions . in step 3 , additionally use the information from the team table . in step 4 , consider the name equals Washington Nationals and salary 's year equals 2007 conditions in place of the salary 's year equals 2010 conditions . [question] What are the first name and last name of the players who were paid salary by team Washington Nationals in both 2005 and 2007 ? [system description] Step 1 : for each row in salary table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1989 . Step 3 : for each row in salary table , find the corresponding rows in player table . Step 4 : find the name first and name last of the results of step 3 whose year equals 2010 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( washington ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Washington ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Washington ) [C] name first ( Washington ) [C] name last ( Washington ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Washington ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( washington ) [C] name full [C] city ( Washington ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Washington Nationals ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Washington Nationals ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the college table . in step 2 , order the results by player name in place of enrollment . [question] Find the name of all students who were in the tryout sorted in alphabetic order . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name of the results of step 1 ordered ascending by enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
additionally use the information from the affected region table besides the region table . find for each value of region 's region id in place of region name . [question] Show the name for regions and the number of storms for each region . [system description] find each value of region name in region table along with the number of the corresponding rows to each value . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , additionally make sure that rank equals Professor . find last name in place of first name . in step 3 , consider the activity name equals Canoeing or activity name equals Kayaking conditions in place of the activity name equals Bungee Jumping conditions . find last name in place of first name . make sure no repetition in the results . [question] What are the first names of the professors who do not play Canoeing or Kayaking as activities ? [system description] Step 1 : find the first name in faculty table . Step 2 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 3 : find the first name of the results of step 2 whose activity name equals " Bungee Jumping " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
consider the player name like % a % conditions in place of the player name like Eddie conditions . make sure no repetition in the results . [question] Who are the players that have names containing the letter a ? [system description] find the player name in player table whose player name like " Eddie " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the genre table . in step 2 , consider the genre is equals modern conditions in place of the genre name equals blues conditions . [question] What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre ? [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the average resolution of the results of step 1 whose genre name equals " blues " . Step 3 : find the song id in song table whose resolution greater than the results of step 2 . [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the documents table . in step 2 , find documents with expenses 's document id in place of document description . [question] Show the budget type code and description and the corresponding document id . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the reference budget codes 's budget type code , budget type description , document description of the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
remove the country name equals dummy value conditions . find summation of population in place of number of rows . [question] how many people live in the united states [system description] find the number of rows in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the traverse equals idaho conditions in place of the state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers are there in idaho [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use journal table , publication table , and author table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . find number of different author 's name in place of number of writes 's pid . [question] return me the number of authors who have papers in PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in writes table . Step 2 : find the number of pid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , consider the rank equals AsstProf conditions in place of the sex equals M and last name equals James conditions . in step 2 , find for each value of sex in place of rank . in step 3 , find sex in place of last name . you should not order the results . [question] How many male and female assistant professors do we have ? [system description] Step 1 : find rows in faculty table whose sex equals " M " and last name equals " James " . Step 2 : find the number of rows of each value of rank the results of step 1 . Step 3 : find the number of rows and last name the results of step 1 ordered descending by the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , consider the languages equals english conditions in place of the languages equals bangla conditions . make sure no repetition in the results . in step 2 , consider the rating greater than 8 conditions in place of the rating greater than 7 conditions . make sure no repetition in the results . [question] What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8 ? [system description] Step 1 : find the artist name in song table whose languages equals " bangla " . Step 2 : find the artist name in song table whose rating greater than 7 . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
order the results by payment date in place of amount . [question] What was the date of the earliest payment ? [system description] find the payment date in payment table with smallest value of amount . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , do not use the highlow table and state table . in step 2 , additionally make sure that mountain altitude is equals maximum mountain altitude mountain . you should not find the largest of the results . show me all the results . [question] which state has the highest peak in the country [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain 's state name of the results of step 1 with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
make sure no repetition in the results . [question] What are all the instruments used ? [system description] find the instrument in instruments table . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , additionally make sure that max occupancy equals adults . do not find for each value of room name . in step 3 , do not return kids . you should not find the largest of the results . show me all the results . [question] How many times the number of adults and kids staying in a room reached the maximum capacity of the room ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of each value of room name of the results of step 1 . Step 3 : find the number of rows and kids of the results of step 1 with largest value in the results of step 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the papers table and authorship count table besides the authors table . find for each value of last name and first name in place of authors 's author id . [question] What is the last name of the author that has published the most papers ? [system description] Step 1 : find the number of rows of each value of author id in authors table . Step 2 : find the last name and last name in authors table with largest value in the results of step 1 . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , find for each value of manufacturers 's name . additionally find products 's name . find maximum price in place of price . you should not find the largest of the results . show me all the results . [question] Select the name of each manufacturer along with the name and price of its most expensive product . [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the manufacturers 's name , price , price of the results of step 1 with largest value of price . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
consider the state name equals massachusetts conditions in place of the state name equals dummy value conditions . find country name in place of area . [question] where is massachusetts [system description] find the area in state table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the student capacity greater than 300 or student capacity less than 100 conditions in place of the student capacity less than 355 or student capacity greater than 400 conditions . find gender in place of dorm id . [question] What are the names and types of the dorms that have a capacity greater than 300 or less than 100 ? [system description] find the dorm name and dorm id in dorm table whose student capacity greater than 400 or student capacity less than 355 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , additionally use the information from the author table and writes table . in step 2 , consider the conference 's name equals VLDB and year greater than 2000 and author 's name equals H. V. Jagadish conditions in place of the conference 's name equals dummy value and year greater than dummy value conditions . find number of different title in place of number of rows . [question] return me the number of papers by " H. V. Jagadish " on VLDB conference after 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally make sure that population is equals minimum population state . you should not find the smallest of the results . show me all the results . [question] what is the population density of the state with the smallest population [system description] find the density in state table with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the enroll table and class table besides the student table . consider the course code equals ACCT-211 and student last name like S % conditions in place of the student last name like Robertson and student init equals P conditions . [question] What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class ? [system description] find the student first name in student table whose student last name like " Robertson " and student init equals " P " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of the states through which the mississippi river run [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the airports table besides the routes table . consider the country equals Italy conditions in place of the destination airport equals GRR conditions . [question] What is the number of routes whose destinations are Italian airports ? [system description] find the number of rows in routes table whose destination airport equals " GRR " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] what state has the highest population [system description] find the state name in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the distance greater than 1000 conditions in place of the distance greater than 2605 conditions . find airline id in place of name . [question] Show ids for all aircrafts with more than 1000 distance . [system description] find the name in aircraft table whose distance greater than 2605 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
order the results ascending by latitude in place of ordering descending by longitude . [question] What is the name , latitude , and city of the station that is located the furthest South ? [system description] find the name , latitude , city in station table with largest value of longitude . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , additionally use the information from the has amenity table and dorm amenity table besides the dorm table . in step 2 , use the smallest in place of largest . [question] What is the name and capacity of the dorm with the fewest amount of amenities ? [system description] Step 1 : find the number of rows of each value of dorm id in dorm table . Step 2 : find the dorm name , student capacity , student capacity in dorm table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois and length greater than 750 conditions in place of the state name equals dummy value conditions . [question] what are major rivers in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the student table besides the voting record table . consider the sex equals M and election cycle equals Fall conditions in place of the class senator vote equals 1028 conditions . [question] Count the number of male students who had class senator votes in the fall election cycle . [system description] find the number of rows in voting record table whose class senator vote equals 1028 and class senator vote equals 1028 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Fall ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
additionally use the information from the tourist attractions table besides the shops table . additionally make sure that how to get there equals walk . [question] Find the details of the shops that can be reached by walk . [system description] find the shop details in shops table . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( walk ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , do not use the people table . in step 2 , find support rate and consider rate in place of name . [question] Please list support , consider , and oppose rates for each candidate in ascending order by unsure rate . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the name , oppose rate , oppose rate of the results of step 1 ordered ascending by unsure rate . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
additionally use the information from the tryout table besides the college table . additionally make sure that decision equals yes . make sure no repetition in the results . [question] What are the different states that had students successfully try out ? [system description] find the state in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , use rental table and customer table in place of film table , film actor table , inventory table , store table , and actor table in step 2 , consider the customer 's first name equals APRIL and customer 's last name equals BURNS conditions in place of the release year equals 2006 and staff 's first name equals dummy value conditions . find staff 's first name in place of actor 's first name . make sure no repetition in the results . [question] What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns ? [system description] Step 1 : for each row in staff table , find the corresponding rows in store table and in inventory table and in film table and in film actor table and in actor table . Step 2 : find the actor 's first name and staff 's last name of the results of step 1 whose staff 's first name equals " dummy value " and release year equals 2006 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name ( APRIL ) [C] last name ( BURNS ) [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
additionally make sure that density is equals maximum density state . make sure no repetition in the results . you should not find the largest of the results . show me all the results . [question] what is the capital of the state with the largest population density [system description] find the capital in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the member table besides the party table . find for each value of member 's party id in place of party name . [question] Show all party names and the number of members in each party . [system description] find each value of party name in party table along with the number of the corresponding rows to each value . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
additionally make sure that product type code equals Clothes . [question] Find the average price of all product clothes . [system description] find the average product price in products table . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code ( Clothes ) [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , consider the check in equals 2010-10-23 and last name equals SELBIG and first name equals CONRAD conditions in place of the first name equals JACKIE and last name equals MECHLING conditions . in step 2 , do not find for each value of check in . find adults in place of number of rows and check in . [question] Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23 , 2010 . [system description] Step 1 : find rows in reservations table whose first name equals " JACKIE " and last name equals " MECHLING " . Step 2 : find each value of check in the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
in step 1 , additionally make sure that job equals engineer . find maximum age in place of minimum age . [question] How many people are older than every engineer ? [system description] Step 1 : find the minimum age in person table . Step 2 : find the number of rows in person table whose age greater than the results of step 1 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 2 , consider the name equals University of Oxford conditions in place of the name equals Google conditions . make sure no repetition in the results . [question] Who belong to the institution " University of Oxford " ? Show the first names and last names . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " Google " . [schema] [T] institution [C] institution id [C] name ( University of Oxford ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
consider the year is equals maximum year person friend whose name equals Zach and name equals Zach conditions in place of the name equals Bob conditions . you should not find the largest of the results . show me all the results . [question] Which friend of Zach has the longest-lasting friendship ? [system description] find the friend in person friend table whose name equals " Bob " with largest value of year . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , additionally use the information from the order items table and customer orders table besides the customers table . find for each value of customer name in place of customers 's customer id . in step 2 , order the results by summation of order quantity in place of number of rows . [question] What is the name of the customer that has purchased the most items ? [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer name in customers table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the player table and tryout table besides the college table . consider the player name equals Charles conditions in place of the college 's college name equals ASU conditions . [question] In which state is the college that Charles attends ? [system description] find the state in college table whose college name equals " ASU " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name ( Charles ) [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
additionally find gdp . [question] Which city has the lowest GDP ? Please list the city name and its GDP . [system description] find the city and city in city table with smallest value of gdp . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
additionally use the information from the journal table , author table , writes table , and organization table besides the publication table . consider the journal 's name equals PVLDB and year greater than 2000 and organization 's name equals University of Michigan conditions in place of the year greater than dummy value conditions . find title in place of publication 's jid . [question] return me all the papers in PVLDB after 2000 in " University of Michigan " . [system description] find the jid in publication table whose year greater than " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , find governor in place of lieutenant governor . [question] Which people severed as governor most frequently ? [system description] Step 1 : find the number of rows of each value of governor in party table . Step 2 : find the lieutenant governor in party table with largest value in the results of step 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , find average amount settled in place of average amount claimed . in step 2 , make sure the amount settled is less than or equals the results of step 1 the amount claimed is less than the results of step 1 . [question] Return the claim start date for the claims whose claimed amount is no more than the average [system description] Step 1 : find the average amount claimed in claims table . Step 2 : find the date claim made in claims table whose amount claimed less than the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 1 , do not use the border info table , mountain table , and state table . in step 2 , consider the highest elevation is equals maximum highest elevation highlow conditions in place of the mountain 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the state with the highest elevation in the united states [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in mountain table and in highlow table . Step 2 : find the border info 's state name of the results of step 1 whose mountain 's country name equals " dummy value " with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that density is equals maximum density state . find population in place of number of rows . you should not find the largest of the results . show me all the results . [question] how many people live in the state with the largest population density [system description] find the number of rows in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals kentucky conditions in place of the border equals dummy value conditions . [question] which state borders kentucky [system description] find the state name in border info table whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find for each value of department code . additionally find department code . [question] Find the max , average , and minimum gpa of all students in each department . [system description] find the maximum student gpa , minimum student gpa , average student gpa , minimum student gpa in student table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the tryout table besides the college table . consider the player position equals goalie conditions in place of the enrollment equals 22000 conditions . in step 3 , consider the player position equals mid conditions in place of the player position equals striker conditions . [question] What are the names of the states that have some college students playing in the positions of goalie and mid-field ? [system description] Step 1 : find the state in college table whose enrollment equals 22000 . Step 2 : for each row in tryout table , find the corresponding rows in college table . Step 3 : find the state of the results of step 2 whose player position equals " striker " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
additionally use the information from the actor table besides the musical table . [question] Show names of musicals and the number of actors who have appeared in the musicals . [system description] find each value of musical id in musical table along with the number of the corresponding rows to each value . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
in step 2 , consider the name equals Google conditions in place of the name equals INRIA conditions . make sure no repetition in the results . [question] Which authors belong to the institution " Google " ? Show the first names and last names . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the first name and last name of the results of step 1 whose name equals " INRIA " . [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , order the results by theme in place of age . [question] Show the names and ages of editors and the theme of journals for which they serve on committees , in ascending alphabetical order of theme . [system description] Step 1 : for each row in editor table , find the corresponding rows in journal committee table and in journal table . Step 2 : find the name , age , theme of the results of step 1 ordered ascending by age . [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
in step 1 , remove the building equals Krieger conditions . in step 2 , consider the building equals NEB conditions in place of the division equals AS conditions . [question] Find the names of departments that are either in division AS or in division EN and in Building NEB . [system description] Step 1 : find the department name in department table whose division equals " AS " and building equals " Krieger " . Step 2 : find the department name in department table whose division equals " AS " and division equals " EN " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building ( NEB ) [T] department [C] department number [C] division [C] department name [C] room [C] building ( NEB ) [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 2 , consider the grade point greater than or equals 3.8 conditions in place of the grade point equals 1.7 conditions . make sure no repetition in the results . [question] What are the distinct first names for students with a grade point of 3.8 or above in at least one course ? [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table and in grade conversion table . Step 2 : find the first name of the results of step 1 whose grade point equals 1.7 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 2 , consider the customer name equals Rodrick Heaney conditions in place of the customer name equals Kitty Padberg III and customer name equals Prof. Ibrahim Bashirian conditions . [question] Tell me the total quantity of products bought by the customer called " Rodrick Heaney " . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of the results of step 1 whose customer name equals " Kitty Padberg III " and customer name equals " Prof. Ibrahim Bashirian " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Rodrick Heaney ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , do not use the lake table . in step 2 , consider the length greater than 750 conditions in place of the river name equals dummy value conditions . find number of traverse in place of number of state name . [question] how many states have major rivers [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the number of state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the election table besides the county table . find for each value of county id whose number of rows greater than or equals 2 . [question] Show the names of counties that have at least two delegates . [system description] Step 1 : find the number of rows of each value of county name in county table . Step 2 : find the county name in county table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the products table . in step 2 , find for each value of order items 's product id whose number of rows greater than 3 . in step 4 , use product suppliers table in place of order items table and products table in step 5 , remove the product price greater than 971.44 conditions . find for each value of product suppliers 's product id whose summation of total amount purchased greater than 80000 . [question] Return the ids of all products that were ordered more than three times or supplied more than 80000 . [system description] Step 1 : for each row in products table , find the corresponding rows in order items table . Step 2 : find the number of rows of each value of order item id of the results of step 1 . Step 3 : find the products 's product id of the results of step 1 whose corresponding value in step 2 is greater than 1 . Step 4 : for each row in products table , find the corresponding rows in order items table . Step 5 : find the order items 's product id and order items 's product id of the results of step 4 whose product price greater than 971.44 . Step 6 : show the rows that are in any of the results of step 3 and step 5 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
make sure no repetition in the results . [question] What are the distinct billing countries of the invoices ? [system description] find the billing country in invoice table . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , additionally use the information from the player award table besides the player table . consider the year equals 1960 conditions in place of the birth year equals 1904 conditions . in step 2 , additionally use the information from the player award table besides the player table . consider the year equals 1961 conditions in place of the birth year equals 1835 conditions . [question] Which players won awards in both 1960 and 1961 ? Return their first names and last names . [system description] Step 1 : find the name first and name last in player table whose birth year equals 1904 . Step 2 : find the name first and name last in player table whose birth year equals 1835 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally find maximum support rate . find minimum consider rate in place of maximum consider rate . [question] find the highest support percentage , lowest consider rate and oppose rate of all candidates . [system description] find the maximum consider rate and minimum oppose rate in candidate table . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
additionally make sure that rank equals Professor . [question] How many Professors are in building NEB ? [system description] find the number of rows in faculty table whose building equals " NEB " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building ( NEB )
in step 2 , consider the type equals lead conditions in place of the type equals dummy value conditions . find number of different title in place of number of rows . [question] How many songs have vocals of type lead ? [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the number of rows of the results of step 1 whose type equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , additionally use the information from the party events table besides the member table . find for each value of member in charge id in place of member name . [question] What is the name of member in charge of greatest number of events ? [system description] Step 1 : find the number of rows of each value of member name in member table . Step 2 : find the member name in member table with largest value in the results of step 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
consider the max speed greater than 1000 conditions in place of the max speed greater than 961 conditions . find average damage millions usd and maximum damage millions usd in place of maximum max speed and average max speed . [question] Show the average and maximum damage for all storms with max speed higher than 1000 . [system description] find the average max speed and maximum max speed in storm table whose max speed greater than 961 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the state name equals dummy value conditions . [question] what are the rivers in the state of illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the line 1 number building like % 6862 Kaitlyn Knolls % conditions in place of the line 1 number building equals 6862 Kaitlyn Knolls Suite 309 conditions . [question] Give the state corresponding to the line number building " 6862 Kaitlyn Knolls " . [system description] find the state province county in addresses table whose line 1 number building equals " 6862 Kaitlyn Knolls Suite 309 " . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , consider the name equals Billund Airport or country equals United States conditions in place of the country equals Denmark or country equals Iceland conditions . make sure no repetition in the results . [question] What are the different pilot names who had piloted a flight in the country 'United States ' or in the airport named 'Billund Airport ' ? [system description] Step 1 : for each row in airport table , find the corresponding rows in flight table . Step 2 : find the pilot of the results of step 1 whose country equals " Denmark " or country equals " Iceland " . [schema] [T] airport [C] id [C] city ( Billund ) [C] country ( United States ) [C] iata [C] icao [C] name ( Billund Airport ) [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
in step 1 , consider the founded greater than 1990 and enrollment greater than or equals 1000 conditions in place of the enrollment greater than 1200 conditions . in step 2 , do not find for each value of type . [question] Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment . [system description] Step 1 : find rows in institution table whose enrollment greater than 1200 . Step 2 : find the number of rows of each value of type the results of step 1 . Step 3 : find the type the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
in step 2 , consider the title equals Nameless , Painless conditions in place of the title equals Proving the Unique Fixed-Point Principle Correct : An Adventure with Category Theory conditions . do not return papers 's paper id . [question] What are the first and last name of the author who published the paper titled " Nameless , Painless " ? [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the first name , last name , papers 's paper id of the results of step 1 whose title equals " Proving the Unique Fixed-Point Principle Correct : An Adventure with Category Theory " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , additionally use the information from the artist table besides the song table . in step 2 , only show me the first 3 results . [question] What are the names of the three artists who have produced the most songs , and how many works did they produce ? [system description] Step 1 : find the number of rows of each value of artist name in song table . Step 2 : find the artist name and number of rows in song table with largest value in the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , use film table and inventory table in place of film text table in step 3 , find film 's title and inventory 's inventory id in place of film text 's title and film text 's film id . [question] What is the film title and inventory id of the item in the inventory which was rented most frequently ? [system description] Step 1 : for each row in film text table , find the corresponding rows in rental table . Step 2 : find the number of rows of each value of inventory id of the results of step 1 . Step 3 : find the title and film id of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 2 , consider the year less than 2005 and name equals VLDB conditions in place of the name equals dummy value and year less than dummy value conditions . find summation of citation num in place of summation of jid . [question] return me the total citations of papers in the VLDB conference before 2005 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the summation of jid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the routes table besides the airlines table . find for each value of routes 's airline id in place of name . in step 2 , additionally find routes 's airline id . only show me the first 10 results . [question] Find the names of the top 10 airlines that operate the most number of routes . [system description] Step 1 : find the number of rows of each value of name in airlines table . Step 2 : find the name in airlines table with largest value in the results of step 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Namest ) [C] country [C] x [C] y [C] elevation [C] iata ( TOP ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( TOP ) [C] call sign [C] country [C] active
in step 2 , use student table in place of faculty table . find advisor in place of faculty id . [question] What are the ids of the faculty members who do not advise any student . [system description] Step 1 : find the faculty id in faculty table . Step 2 : find the faculty id in faculty table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
consider the sex equals M conditions in place of the sex equals F conditions . find average weight in place of weight . [question] What are the average height and weight across males ( sex is M ) ? [system description] find the average height and weight in people table whose sex equals " F " . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
additionally use the information from the movie table and directed by table besides the director table . consider the name equals Steven Spielberg conditions in place of the name equals dummy value conditions . find number of different title in place of number of rows . [question] How many movies did " Steven Spielberg " direct ? [system description] find the number of rows in director table whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the course table . in step 2 , consider the class room equals KLR209 conditions in place of the class room equals BUS200 conditions . find class code in place of course 's course code . [question] What are the codes of all the courses that are located in room KLR209 ? [system description] Step 1 : for each row in class table , find the corresponding rows in course table . Step 2 : find the course 's course code of the results of step 1 whose class room equals " BUS200 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room ( KLR209 ) [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the age greater than 20 conditions in place of the age greater than 18 conditions . [question] Find the number of students who is older than 20 in each dorm . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : only keep the results of step 1 whose age greater than 18 . Step 3 : find each value of dorm name the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the category table , film category table , and film table . in step 2 , consider the store id equals 1 conditions in place of the name equals Drama conditions . [question] Count the number of items store 1 has in stock . [system description] Step 1 : for each row in category table , find the corresponding rows in film category table and in film table and in inventory table . Step 2 : find the number of rows of the results of step 1 whose name equals " Drama " . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what is the state with the largest area [system description] find the state name in state table with largest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the order details equals Second time conditions in place of the order status equals Delivered conditions . [question] Tell me the number of orders with " Second time " as order detail . [system description] find the number of rows in customer orders table whose order status equals " Delivered " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , additionally use the information from the tv series table . in step 2 , consider the role equals Olivia Pope and title equals Scandal conditions in place of the name equals dummy value conditions . find name in place of role . [question] Who acts " Olivia Pope " in the series Scandal ? [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table . Step 2 : find the role of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the mountain table and state table . in step 2 , remove the state 's country name equals dummy value conditions . find maximum highest elevation in place of mountain altitude . you should not find the largest of the results . show me all the results . [question] what is the elevation of the highest point in the usa [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the status table . in step 2 , consider the max wind speed mph greater than or equals 25 conditions in place of the max wind speed mph greater than 86 conditions . [question] For each zip code , return how many times max wind speed reached 25 ? [system description] Step 1 : for each row in weather table , find the corresponding rows in status table . Step 2 : only keep the results of step 1 whose max wind speed mph greater than 86 . Step 3 : find each value of zip code the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the bank table . in step 2 , find for each value of customer name . order the results by summation of amount in place of amount . [question] What is the name of the customer who has greatest total loan amount ? [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name of the results of step 1 with largest value of amount . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
consider the city equals San Jose conditions in place of the city equals San Francisco conditions . [question] What is the average latitude and longitude of stations located in San Jose city ? [system description] find the average longitude and average latitude in station table whose city equals " San Francisco " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Jose ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of states through which the mississippi run [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of different allergy name in place of number of rows . [question] How many allergies are there ? [system description] find the number of rows in allergy type table . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , additionally use the information from the storm table and affected region table besides the region table . do not find for each value of region name . in step 2 , additionally make sure that number deaths greater than or equals 10 . [question] Return the names of the regions affected by storms that had a death count of at least 10 . [system description] Step 1 : find the number of rows of each value of region name in region table . Step 2 : find the region name in region table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
order the results by student gpa in place of student num . only show me the first 5 results . [question] What is the first name , gpa and phone number of the top 5 students with highest gpa ? [system description] find the student first name , student gpa , student phone in student table with largest value of student num . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , consider the document type code equals CV conditions in place of the document type code equals PP conditions . in step 2 , do not use the documents table . in step 3 , remove the document type code equals FM conditions . [question] What are the ids of documents with the type code CV that do not have expenses . [system description] Step 1 : find the documents 's document id in documents table whose document type code equals " PP " . Step 2 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 3 : find the documents with expenses 's document id of the results of step 2 whose document type code equals " FM " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
order the results ascending . [question] Show the id and star rating of each hotel , ordered by its price from low to high . [system description] find the hotel id and star rating code in hotels table ordered descending by price range . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description ( star ) [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , additionally use the information from the cast table , directed by table , and actor table . in step 2 , consider the actor 's name equals Taraneh Alidoosti and director 's name equals Asghar Farhadi conditions in place of the director 's name equals dummy value conditions . [question] Find all movies directed by " Asghar Farhadi " and featuring " Taraneh Alidoosti " [system description] Step 1 : for each row in director table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally make sure that yes card equals yes . [question] What are the name of the players who received a card in descending order of the hours of training ? [system description] find the player name in player table ordered descending by training hours . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
additionally use the information from the routes table besides the airlines table . find for each value of country and name in place of airlines 's airline id . additionally find name . [question] What is the total number of routes for each country and airline in that country ? [system description] find each value of airline id in airlines table along with the number of the corresponding rows to each value . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( TOTAL ) [C] country [C] active
in step 1 , use documents with expenses table in place of reference document types table in step 2 , consider the budget type code equals GV conditions in place of the document type name equals Film conditions . in step 3 , use documents with expenses table in place of reference document types table in step 4 , consider the budget type code equals SF conditions in place of the document type name equals Paper conditions . [question] What are the dates for the documents with both 'GV ' type and 'SF ' type expenses ? [system description] Step 1 : for each row in documents table , find the corresponding rows in reference document types table . Step 2 : find the document date of the results of step 1 whose document type name equals " Film " . Step 3 : for each row in documents table , find the corresponding rows in reference document types table . Step 4 : find the document date of the results of step 3 whose document type name equals " Paper " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code ( SF , GV ) [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code ( SF , GV ) [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the documents with expenses table . in step 2 , consider the document type code equals CV conditions in place of the budget type code equals GV conditions . in step 3 , remove the budget type code equals SF conditions . [question] Show ids for all documents in type CV without expense budgets . [system description] Step 1 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 2 : find the documents 's document id of the results of step 1 whose budget type code equals " GV " . Step 3 : find the documents with expenses 's document id in documents with expenses table whose budget type code equals " SF " . Step 4 : show the rows that are in the results of step 2 but not in the results of step 3 . [schema] [T] reference document types [C] document type code ( CV ) [C] document type name ( CV ) [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code ( CV ) [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
additionally use the information from the organization contact individuals table besides the individuals table . make sure no repetition in the results . [question] Find the last name of the individuals that have been contact individuals of an organization . [system description] find the individual last name in individuals table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
additionally use the information from the customers table besides the customer orders table . find customer name in place of order status . [question] Who made the latest order ? [system description] find the order status in customer orders table with largest value of order date . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 2 , consider the decision equals yes conditions in place of the enrollment equals 19000 conditions . do not return decision . make sure no repetition in the results . [question] Find the states where have some college students in tryout and their decisions are yes . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the state and decision of the results of step 1 whose enrollment equals 19000 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
in step 2 , consider the color description equals yellow conditions in place of the color description like green conditions . [question] Return the names and typical buying and selling prices for products that have 'yellow ' as their color description . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name , typical buying price , typical selling price of the results of step 1 whose color description like " green " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( yellow ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name is one of border border info whose border info 's state name equals mississippi conditions in place of the area equals dummy value conditions . find highest point in place of maximum highest point . [question] what are the highest points of states surrounding mississippi [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the has amenity table . in step 2 , find amenity name in place of has amenity 's amenity id . [question] List in alphabetic order all different amenities . [system description] Step 1 : for each row in dorm amenity table , find the corresponding rows in has amenity table . Step 2 : find the has amenity 's amenity id of the results of step 1 ordered ascending by amenity name . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the allergy type table and student table . in step 2 , find for each value of has allergy 's allergy in place of allergy type . find has allergy 's allergy in place of allergy type . [question] How many students have each different allergy ? [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find each value of allergy type of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , use publication keyword table in place of domain table , domain keyword table , and domain author table in step 2 , consider the keyword equals User Study and author 's name equals H. V. Jagadish conditions in place of the keyword equals dummy value conditions . [question] return me the papers of " H. V. Jagadish " containing keyword " User Study " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the title of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , additionally use the information from the product characteristics table besides the characteristics table . additionally find characteristic data type . [question] Give the names , details , and data types of characteristics that are not found in any product . [system description] Step 1 : find the characteristic name , other characteristic details , characteristic data type in characteristics table . Step 2 : find the characteristic name and other characteristic details in characteristics table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , use branch table in place of member table . find city in place of hometown . in step 2 , use branch table in place of member table . consider the membership amount greater than 100 conditions in place of the member 's name equals David Jones conditions . find city in place of hometown . [question] What are the cities that do not have any branches with more than 100 members ? [system description] Step 1 : find the hometown in member table . Step 2 : find the hometown in member table whose name equals " David Jones " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the area equals dummy value conditions . [question] what river runs through illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the album table and track table . in step 2 , remove the title equals Gorecki : Symphony No . 3 conditions . [question] What are the names of different music genres ? [system description] Step 1 : for each row in album table , find the corresponding rows in track table and in genre table . Step 2 : find the genre 's name of the results of step 1 whose title equals " Górecki : Symphony No . 3 " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name ( Music ) [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
use border info table in place of state table . consider the border info 's state name equals kentucky conditions in place of the area like dummy value conditions . [question] which states adjoin kentucky [system description] find the state name in state table whose area like " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use songs table and performance table in place of vocals table in step 2 , find for each value of last name in place of vocals 's bandmate . [question] What is the last name of the artist who sang the most songs ? [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table . Step 2 : find the number of rows of each value of bandmate of the results of step 1 . Step 3 : find the last name of the results of step 1 with largest value in the results of step 2 . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
additionally use the information from the airports table besides the routes table . consider the name equals John F Kennedy International Airport conditions in place of the destination airport equals RGA conditions . [question] What is the number of routes that end at John F Kennedy International Airport ? [system description] find the number of rows in routes table whose destination airport equals " RGA " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name ( John F Kennedy International Airport ) [C] city ( Ende , Enid ) [C] country [C] x [C] y [C] elevation [C] iata ( END ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( END ) [C] call sign [C] country [C] active
in step 1 , additionally use the information from the reservations table besides the rooms table . additionally make sure that max occupancy equals adults . do not find for each value of max occupancy . in step 2 , do not return max occupancy . you should not find the largest of the results . show me all the results . [question] List how many times the number of people in the room reached the maximum occupancy of the room . The number of people include adults and kids . [system description] Step 1 : find the number of room id of each value of max occupancy in rooms table . Step 2 : find the number of rows and max occupancy in rooms table with largest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] what is the capital of the state with the most inhabitants [system description] find the capital in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use movie table and director table in place of copyright table in step 3 , order the results by number of different director 's name in place of number of rows . [question] Which producer has worked with the most number of directors ? [system description] Step 1 : for each row in producer table , find the corresponding rows in made by table and in copyright table and in directed by table . Step 2 : find the number of rows of each value of name of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , use city table in place of highlow table and state table in step 2 , use city table in place of highlow table and state table in step 3 , consider the city 's state name equals alaska conditions in place of the state 's state name equals dummy value conditions . find maximum city 's population in place of maximum highest elevation . in step 4 , make sure the city 's population is equals the results of step 3 the highest elevation is equals the results of step 3 . consider the city 's state name equals alaska conditions in place of the state 's state name equals dummy value conditions . find city 's population in place of number of rows . [question] how many people live in the biggest city in alaska state [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : for each row in state table , find the corresponding rows in highlow table . Step 3 : find the maximum highest elevation of the results of step 2 whose state 's state name equals " dummy value " . Step 4 : find the number of rows of the results of step 1 whose state 's state name equals " dummy value " and highest elevation equals the results of step 3 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the manufacturer equals 2 conditions in place of the code equals 11 conditions . [question] Compute the average price of all products with manufacturer code equal to 2 . [system description] find the average price in products table whose code equals 11 . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , use enroll table and class table in place of department table in step 2 , consider the student last name equals Smithson conditions in place of the student last name equals Brewer conditions . in step 3 , do not find for each value of course 's course code . find course credit in place of summation of course credit . [question] How many credits is the course that the student with the last name Smithson took , and what is its description ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : only keep the results of step 1 whose student last name equals " Brewer " . Step 3 : find each value of course code the results of step 2 along with the summation of course credit and course description of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Smithson ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name ( Smithson ) [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the addresses table . in step 2 , additionally find city . [question] Show the customer name , customer address city , date from , and date to for each customer address history . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer address history table . Step 2 : find the customer name , date from , date from , date to of the results of step 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] products [C] product id [C] product type code [C] product name [C] product price [T] customers [C] customer id [C] payment method code [C] customer number [C] customer name [C] customer address [C] customer phone [C] customer email [T] contacts [C] contact id [C] customer id [C] gender [C] first name [C] last name [C] contact phone [T] customer address history [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order date [C] order status code [T] order items [C] order item id [C] order id [C] product id [C] order quantity
in step 2 , use the smallest in place of largest . [question] Which state has the most customers ? [system description] Step 1 : find the number of rows of each value of state in customers table . Step 2 : find the state in customers table with largest value in the results of step 1 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name equals iowa conditions in place of the state 's state name equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the lowest point in iowa [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the lowest point of the results of step 1 whose state 's state name equals " dummy value " with smallest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use domain table and domain publication table in place of cite table in step 2 , consider the citation num greater than 200 and name equals Databases and year greater than 2000 conditions in place of the cited equals dummy value and year greater than dummy value conditions . find title in place of jid . [question] return me the paper after 2000 in Databases area with more than 200 citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the jid of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the first name equals Stephanie and last name equals Weirich conditions in place of the first name equals Amal conditions . find title in place of papers 's paper id . [question] Which papers have " Stephanie Weirich " as an author ? [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Amal " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Weirich ) [C] first name ( Stephanie ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the team table and player table . [question] How many players are from each country ? [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find each value of country name of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , do not use the film text table . in step 2 , find for each value of film 's film id in place of actor id . in step 3 , find film 's title and film 's film id in place of film text 's title and film text 's description . [question] What are the title , id , and description of the movie with the greatest number of actors ? [system description] Step 1 : for each row in film text table , find the corresponding rows in film table and in film actor table . Step 2 : find the number of rows of each value of actor id of the results of step 1 . Step 3 : find the film text 's title , film 's description , film text 's description of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
consider the class room equals 105 conditions in place of the class room equals 106 conditions . make sure no repetition in the results . [question] Find the grade studying in room 105 . [system description] find the grade in list table whose class room equals 106 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 2 , consider the year equals 1998 conditions in place of the death year equals 1922 and year equals 1994 conditions . [question] What are first and last names of players participating in all star game in 1998 ? [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1994 and death year equals 1922 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , additionally use the information from the party events table besides the member table . find for each value of member in charge id in place of member name . [question] Return the name of the member who is in charge of the most events . [system description] Step 1 : find the number of rows of each value of member name in member table . Step 2 : find the member name in member table with largest value in the results of step 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 2 , consider the name equals Boston Red Stockings and salary 's year equals 2010 conditions in place of the team 's year equals 1982 and salary 's team id equals TBA conditions . [question] What is the total salary expenses of team Boston Red Stockings in 2010 ? [system description] Step 1 : for each row in salary table , find the corresponding rows in team table . Step 2 : find the summation of salary of the results of step 1 whose salary 's team id equals " TBA " and team 's year equals 1982 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , consider the resolution less than 800 conditions in place of the resolution less than 320 conditions . make sure no repetition in the results . [question] What are the file sizes and formats for all songs with a resolution lower than 800 ? [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the file size and formats of the results of step 1 whose resolution less than 320 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
use tryout table in place of player table . find number of different player position in place of player name . [question] What are the different types of player positions ? [system description] find the player name in player table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , do not find for each value of name . in step 3 , order the results by number deaths in place of summation of number deaths . [question] Find the names of the regions which were affected by the storm that killed the greatest number of people . [system description] Step 1 : for each row in region table , find the corresponding rows in affected region table and in storm table . Step 2 : find the summation of number deaths of each value of name of the results of step 1 . Step 3 : find the region name of the results of step 1 with largest value in the results of step 2 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
use affected region table in place of region table . find number of different affected region 's region id in place of number of rows . [question] How many regions are affected ? [system description] find the number of rows in region table . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , do not use the list table . in step 2 , find teachers 's first name in place of list 's first name . make sure no repetition in the results . [question] What are the first name and last name of all the teachers ? [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , consider the join year less than 2000 conditions in place of the join year greater than 2010 conditions . in step 2 , consider the join year greater than 2005 conditions in place of the join year less than 2010 conditions . [question] Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000 . [system description] Step 1 : find the position in pilot table whose join year greater than 2010 . Step 2 : find the position in pilot table whose join year less than 2010 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] aircraft [C] aircraft id [C] order year [C] manufacturer [C] model [C] fleet series [C] powertrain [C] fuel propulsion [T] pilot [C] pilot id [C] pilot name [C] rank [C] age [C] nationality [C] position [C] join year [C] team [T] pilot record [C] record id [C] pilot id [C] aircraft id [C] date
in step 1 , do not use the reference product categories table . in step 2 , consider the product name equals flax conditions in place of the product name equals cumin conditions . [question] What is the code of the category that the product with the name 'flax ' belongs to ? [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the reference product categories 's product category code of the results of step 1 whose product name equals " cumin " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( flax ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
use river table in place of lake table . find traverse in place of state name . [question] what states have rivers running through them [system description] find the state name in lake table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the publisher equals Alyson conditions in place of the book title equals The Crystal Curtain conditions . [question] What are all the company names that have a book published by Alyson ? [system description] Step 1 : for each row in culture company table , find the corresponding rows in book club table . Step 2 : find the company name of the results of step 1 whose book title equals " The Crystal Curtain " . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher ( Alyson ) [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
consider the length is equals minimum length river conditions in place of the country name equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the shortest river in the us [system description] find the river name in river table whose country name equals " dummy value " with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use member of table in place of department table and course table in step 2 , consider the member of 's department number equals 520 conditions in place of the department name equals Biomedical Engineering conditions . [question] What are the full names of faculty members who are a part of department 520 ? [system description] Step 1 : for each row in faculty table , find the corresponding rows in course table and in department table . Step 2 : find the first name and last name of the results of step 1 whose department name equals " Biomedical Engineering " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , consider the year equals 1989 conditions in place of the year equals 1990 conditions . in step 2 , do not use the movie table and culture company table . in step 3 , consider the year equals 1990 conditions in place of the movie 's year equals 1999 conditions . [question] Show publishers with a book published in 1989 and a book in 1990 . [system description] Step 1 : find the publisher in book club table whose book club 's year equals 1990 . Step 2 : for each row in book club table , find the corresponding rows in culture company table and in movie table . Step 3 : find the publisher of the results of step 2 whose movie 's year equals 1999 . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 1 , do not use the enroll table , student table , and class table . in step 2 , find the number of different department name for each value of school code . in step 3 , make sure that the corresponding value in step 2 less than 5 . additionally find number of different department name . find school code in place of number of school code . [question] How many different departments are there in each school that has less than 5 apartments ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the number of rows of each value of school code of the results of step 1 . Step 3 : find the number of school code and number of school code of the results of step 1 whose corresponding value in step 2 is less than 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally use the information from the trip table besides the station table . consider the city not equals San Francisco conditions in place of the city equals Mountain View conditions . [question] Count the number of trips that did not end in San Francisco city . [system description] find the number of rows in station table whose city equals " Mountain View " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Francisco ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , additionally use the information from the reference colors table and product characteristics table besides the products table . in step 2 , make sure that the corresponding value in step 1 greater than or equals 2 . find color description in place of product description . [question] Find the id and color description of the products with at least 2 characteristics . [system description] Step 1 : find the number of rows of each value of product id in products table . Step 2 : find the product id and product description in products table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , remove the state name equals dummy value conditions . in step 2 , do not find for each value of state name . do not return state name . [question] what is the average population of the us by state [system description] Step 1 : find rows in state table whose state name equals " dummy value " . Step 2 : find each value of state name the results of step 1 along with the average population of the corresponding rows to each value . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , make sure that the corresponding value in step 1 greater than or equals 15 . [question] What is the name of every city that has at least 15 stations and how many stations does it have ? [system description] Step 1 : find the number of rows of each value of city in station table . Step 2 : find the city and number of rows in station table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , additionally make sure that amount piad is equals minimum amount piad claim headers . find customer details in place of customers 's customer id . you should not find the smallest of the results . show me all the results . [question] What is the name of the customer who has made the minimum amount of payment in one claim ? [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table and in claim headers table . Step 2 : find the customers 's customer id of the results of step 1 with smallest value of amount claimed . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , use highlow table in place of mountain table and state table in step 2 , use highlow table in place of mountain table . consider the highlow 's state name equals alabama conditions in place of the mountain 's state name equals dummy value conditions . find lowest elevation in place of minimum mountain altitude . in step 3 , make sure the lowest elevation is less than the results of step 2 the mountain altitude is less than the results of step 2 . find number of highlow 's state name in place of number of rows . [question] count the states which have elevations lower than what alabama has [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the minimum mountain altitude in mountain table whose mountain 's state name equals " dummy value " . Step 3 : find the number of rows of the results of step 1 whose mountain altitude less than the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the voting record table besides the student table . consider the sex equals F conditions in place of the sex equals M conditions . make sure no repetition in the results . [question] What are the first and last names of all the female students who have president votes ? [system description] find the first name and last name in student table whose sex equals " M " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
find for each value of city . find maximum latitude in place of latitude . you should not find the largest of the results . show me all the results . [question] For each city , return the highest latitude among its stations . [system description] find the city and latitude in station table with largest value of latitude . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
additionally use the information from the airports table and routes table besides the airlines table . consider the airports 's country equals Italy and airlines 's name equals American Airlines conditions in place of the airlines 's name equals Adygeya Airlines and airlines 's country equals Oman conditions . [question] What is the number of routes operated by the airline American Airlines whose destinations are in Italy ? [system description] find the number of rows in airlines table whose country equals " Oman " and name equals " Adygeya Airlines " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country ( Italy ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country ( Italy ) [C] active
in step 1 , additionally use the information from the movie table . in step 2 , consider the title equals The Imitation Game and role equals Alan Turing conditions in place of the role equals dummy value conditions . [question] Who is the actor playing " Alan Turing " in " The Imitation Game " ? [system description] Step 1 : for each row in cast table , find the corresponding rows in actor table . Step 2 : find the name of the results of step 1 whose role equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , consider the zip code equals 94103 conditions in place of the zip code equals 53051 conditions . in step 2 , make sure the duration is greater than or equals the results of step 1 the duration is greater than the results of step 1 . [question] What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103 ? [system description] Step 1 : find the average duration in trip table whose zip code equals 53051 . Step 2 : find the id in trip table whose duration greater than the results of step 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the border info table and state table . in step 2 , consider the highlow 's state name is one of border border info whose border info 's state name equals colorado conditions in place of the border equals dummy value conditions . find highest point in place of maximum highest point . find the result with the largest highest elevation . [question] what is the highest point in the states bordering colorado [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the documents with expenses table . [question] Count the number of documents that do not have expenses . [system description] Step 1 : for each row in documents with expenses table , find the corresponding rows in documents table . Step 2 : find the documents with expenses 's document id in documents with expenses table . Step 3 : find the number of rows of the results of step 1 whose documents 's document id not one of the results of step 2 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , do not use the state table . in step 2 , consider the mountain name equals whitney conditions in place of the mountain name equals dummy value conditions . [question] in what state is mount whitney [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table . in step 2 , consider the lake 's state name is one of border border info whose border info 's state name equals texas conditions in place of the border equals dummy value conditions . [question] what are the lakes in states bordering texas [system description] Step 1 : for each row in border info table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find for each value of pets allowed yn in place of price range . find pets allowed yn in place of price range . [question] Show the average price of hotels for different pet policy . [system description] find each value of price range in hotels table along with the average price range of the corresponding rows to each value . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] what is the state with the smallest area [system description] find the state name in state table with smallest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the reservations table besides the rooms table . [question] What is the least popular kind of decor ? [system description] Step 1 : find the number of decor of each value of decor in rooms table . Step 2 : find the decor in rooms table with smallest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , additionally use the information from the basketball match table besides the university table . find team name in place of school . [question] Find the team names of the universities whose enrollments are smaller than the average enrollment size . [system description] Step 1 : find the average enrollment in university table . Step 2 : find the school in university table whose enrollment less than the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , consider the releasedate like % Mar % conditions in place of the song name equals Aj ei akash conditions . [question] What are the names and genders of all artists who released songs in the month of March ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and gender of the results of step 1 whose song name equals " Aj ei akash " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the player name like % a % conditions in place of the player name like David conditions . make sure no repetition in the results . [question] Find the players whose names contain letter ' a ' . [system description] find the player name in player table whose player name like " David " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of the states through which the mississippi runs [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the routes table besides the airlines table . find for each value of country and name in place of airlines 's airline id . additionally find name . [question] For each country and airline name , how many routes are there ? [system description] find each value of airline id in airlines table along with the number of the corresponding rows to each value . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
in step 1 , consider the open year greater than 2000 conditions in place of the open year greater than 2007 conditions . [question] What is the name of the manager with the most gas stations that opened after 2000 ? [system description] Step 1 : find rows in gas station table whose open year greater than 2007 . Step 2 : find the number of rows of each value of manager name the results of step 1 . Step 3 : find the manager name the results of step 1 with largest value in the results of step 2 . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 1 , do not use the border info table and state table . in step 2 , consider the city 's state name equals wyoming and city 's population is equals maximum city 's population city whose city 's state name equals wyoming conditions in place of the border info 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what cities in wyoming have the highest number of citizens [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the city name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of city 's population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the name equals VLDB conditions in place of the name equals dummy value conditions . in step 3 , do not find for each value of jid . in step 4 , find title in place of jid and number of jid . find the result with the largest citation num . [question] return me the paper in VLDB conference with the most citations . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find the number of jid of each value of jid the results of step 2 . Step 4 : find the jid and number of jid the results of step 2 ordered descending by the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the musical table besides the actor table . find musical 's name in place of actor 's musical id . [question] How many actors have appeared in each musical ? [system description] find each value of musical id in actor table along with the number of the corresponding rows to each value . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
in step 1 , additionally use the information from the farm competition table besides the city table . find for value of host city id in place of official name . [question] What are the official names of cities that have hosted more than one competition ? [system description] Step 1 : find the number of rows of each value of official name in city table . Step 2 : find the official name in city table whose corresponding value in step 1 is greater than 1 . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
in step 1 , additionally use the information from the player award table besides the player table . find for each value of player 's player id in place of name first . in step 2 , additionally find player 's player id . only show me the first 3 results . [question] Find the first name , last name and id for the top three players won the most player awards . [system description] Step 1 : find the number of rows of each value of name first in player table . Step 2 : find the name first , name last , name last in player table with largest value in the results of step 1 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally find damage millions usd . [question] List name and damage for all storms in a descending order of max speed . [system description] find the name and name in storm table ordered descending by max speed . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , use files table in place of genre table in step 2 , find for each value of genre is . find minimum song 's rating and minimum duration in place of song name . order the results by genre is in place of genre 's rating . show me all the results . [question] What is the shortest and most poorly rated song for each genre , ordered alphabetically by genre ? [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the song name and genre is of the results of step 1 with smallest value of genre 's rating . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , additionally use the information from the member of table besides the department table . find for each value of member of 's department number in place of department name . [question] What is the name of the department with the fewest members ? [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name in department table with smallest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , additionally use the information from the has amenity table besides the dorm table . consider the student capacity greater than 100 conditions in place of the student capacity greater than 256 conditions . in step 2 , find for each value of dorm 's dorm id in place of dorm name . find dorm 's dorm id in place of dorm name . [question] Find the number of amenities for each of the dorms that can accommodate more than 100 students . [system description] Step 1 : find rows in dorm table whose student capacity greater than 256 . Step 2 : find each value of dorm name the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
use dorm amenity table in place of dorm table . [question] How many diffrent dorm amenities are there ? [system description] find the number of rows in dorm table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , additionally use the information from the department table , course table , enroll table , and class table besides the student table . consider the department name equals Accounting conditions in place of the student 's department code equals EDU conditions . in step 2 , additionally use the information from the course table , enroll table , and class table . in step 3 , consider the department name equals Computer Info . Systems conditions in place of the department name equals English conditions . [question] Find the first name of student who is taking classes from accounting and Computer Info . Systems departments [system description] Step 1 : find the student first name in student table whose student 's department code equals " EDU " . Step 2 : for each row in student table , find the corresponding rows in department table . Step 3 : find the student first name of the results of step 2 whose department name equals " English " . Step 4 : show the rows that are in both the results of step 1 and step 3 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally find customer id and customer last name . [question] What are the ids , full names , and phones of each customer ? [system description] find the customer first name , customer first name , customer phone , customer phone in customers table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , do not use the college table . in step 3 , do not use the college table . in step 4 , consider the player position equals mid conditions in place of the player position equals goalie conditions . [question] Find the names of schools that have some students playing in goalie and mid positions . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " goalie " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " goalie " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie , mid ) [C] decision
consider the registration date equals 08/30/2015 conditions in place of the election cycle equals Fall conditions . make sure no repetition in the results . [question] Show all the distinct president votes made on 08/30/2015 . [system description] find the president vote in voting record table whose election cycle equals " Fall " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date ( 08/30/2015 , 08/30/2012 ) [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 2 , consider the list 's first name equals CHRISSY and list 's last name equals NABOZNY conditions in place of the list 's first name equals STORMY and teachers 's last name equals URSERY conditions . [question] How many teachers does the student named CHRISSY NABOZNY have ? [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the number of rows of the results of step 1 whose list 's first name equals " STORMY " and teachers 's last name equals " URSERY " . [schema] [T] list [C] last name ( NABOZNY ) [C] first name (  CHRISSY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , do not use the documents table . in step 2 , find documents with expenses 's document id in place of document description . [question] Return the budget type codes , budget type descriptions and document ids for documents with expenses . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the reference budget codes 's budget type code , budget type description , document description of the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , use publication keyword table in place of domain table , domain author table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Natural Language conditions in place of the keyword like dummy value conditions . [question] return me all the papers , which contain the keyword " Natural Language " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the title of the results of step 1 whose keyword like " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
order the results by name in place of assets billion . [question] What are the name and assets of each company , sorted in ascending order of company name ? [system description] find the name and assets billion in companies table ordered ascending by assets billion . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
in step 2 , consider the name equals Tokohu University conditions in place of the name equals Northeastern University conditions . find number of different title in place of number of rows . [question] How many papers are published by the institution " Tokohu University " ? [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose name equals " Northeastern University " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] what state has the largest population density [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of different transaction type in place of number of rows . [question] Show the number of transaction types . [system description] find the number of rows in financial transactions table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , use addresses table in place of customers table in step 2 , consider the customer addresses 's customer id equals 10 conditions in place of the customer addresses 's address id equals 10 conditions . find address details in place of customer address . [question] What is the address for the customer with id 10 ? [system description] Step 1 : for each row in customers table , find the corresponding rows in customer addresses table . Step 2 : find the customer address of the results of step 1 whose address id equals 10 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the professor table . in step 2 , consider the department name equals History conditions in place of the professor office equals KLR 203E conditions . [question] Where is the history department ? [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the department address of the results of step 1 whose professor office equals " KLR 203E " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
remove the class room equals 106 conditions . find for each value of class room . additionally find class room . [question] How many students does one classroom have ? [system description] find the number of rows in list table whose class room equals 106 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
consider the city equals New York conditions in place of the elevation equals 12400 conditions . additionally find country . [question] Find the name , city , country , and altitude ( or elevation ) of the airports in the city of New York . [system description] find the name , city , elevation in airports table whose elevation equals 12400 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( New York , York ) [C] country [C] x [C] y [C] elevation [C] iata ( NEW ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( NEW YORK , CITY ) [C] country [C] active
in step 1 , do not use the state table . in step 2 , consider the mountain name equals whitney conditions in place of the mountain name equals dummy value conditions . [question] which state is mount whitney in [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the student table besides the faculty table . consider the student 's last name equals Smith and student 's first name equals Linda conditions in place of the faculty 's first name equals Brian and faculty 's last name equals Davidson conditions . [question] Who is the advisor of Linda Smith ? Give me the first name and last name . [system description] find the first name and last name in faculty table whose first name equals " Brian " and last name equals " Davidson " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the cast table , copyright table , and actor table . in step 2 , consider the writer 's name equals Matt Damon conditions in place of the writer 's name equals dummy value and actor 's name equals dummy value conditions . [question] Find all movies written by " Matt Damon " [system description] Step 1 : for each row in writer table , find the corresponding rows in written by table and in copyright table and in cast table and in actor table and in movie table . Step 2 : find the title of the results of step 1 whose actor 's name equals " dummy value " and writer 's name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , additionally make sure that country equals United States . make sure that the corresponding value in step 1 greater than 3 . [question] Return the cities with more than 3 airports in the United States . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table whose corresponding value in step 1 is greater than 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( STATES , UNITED ) [C] country ( United States ) [C] active
consider the first name like % a % conditions in place of the first name like Linda conditions . make sure no repetition in the results . [question] What are the first names for students who have an " a " in their first name ? [system description] find the first name in student table whose first name like " Linda " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , use team table in place of team franchise table in step 2 , consider the home game 's year between 1990 and 2000 and name equals Boston Red Stockings conditions in place of the home game 's year equals 1901 and franchise name equals Troy Trojans conditions . find summation of games in place of number of rows . [question] How many home games did the team Boston Red Stockings play from 1990 to 2000 in total ? [system description] Step 1 : for each row in home game table , find the corresponding rows in team franchise table . Step 2 : find the number of rows of the results of step 1 whose franchise name equals " Troy Trojans " and year equals 1901 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston , Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston , Homer ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 2 , consider the languages equals bangla conditions in place of the languages equals english conditions . in step 4 , only show me the first 3 results . [question] Find the top 3 artists who have the largest number of songs works whose language is Bangla . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : only keep the results of step 1 whose languages equals " english " . Step 3 : find the number of rows of each value of song 's artist name the results of step 2 . Step 4 : find the artist 's artist name the results of step 2 with largest value in the results of step 3 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
consider the origin equals Los Angeles and destination equals Honolulu conditions in place of the destination equals Washington D.C. and destination equals Dallas conditions . [question] What are the departure and arrival dates of all flights from LA to Honolulu ? [system description] find the departure date and arrival date in flight table whose destination equals " Dallas " and destination equals " Washington D.C . " . [schema] [T] flight [C] flight number [C] origin [C] destination ( Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
additionally make sure that number deaths greater than 0 . find number of rows in place of number of name . [question] How many storms had death records ? [system description] find the number of name in storm table . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , use publication keyword table in place of domain author table , domain table , author table , writes table , and domain keyword table in step 2 , consider the conference 's name equals VLDB conditions in place of the conference 's name equals dummy value conditions . in step 4 , order the results by number of different title in place of number of conference 's name . [question] return me the keyword , which have been contained by the most number of papers in VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose conference 's name equals " dummy value " . Step 3 : find the number of conference 's name of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the sports info table besides the student table . [question] What is the first name and last name of the student who have most number of sports ? [system description] Step 1 : find the number of rows of each value of student id in student table . Step 2 : find the first name and last name in student table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , use faculty table and faculty participates in table in place of participates in table and student table in step 2 , consider the faculty 's last name equals Giuliano and faculty 's first name equals Mark conditions in place of the student 's last name equals Davis and student 's first name equals Linda conditions . [question] Show the names of all the activities Mark Giuliano participates in . [system description] Step 1 : for each row in activity table , find the corresponding rows in participates in table and in student table . Step 2 : find the activity name of the results of step 1 whose first name equals " Linda " and last name equals " Davis " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Mark ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Giuliano ) [C] first name ( Mark ) [C] rank [C] sex [C] phone [C] room [C] building
in step 3 , make sure that the corresponding value in step 2 greater than or equals 10 . find customer 's first name in place of employee 's first name . [question] What are the first names and support rep ids for employees serving 10 or more customers ? [system description] Step 1 : for each row in customer table , find the corresponding rows in employee table . Step 2 : find the number of rows of each value of support representative id of the results of step 1 . Step 3 : find the employee 's first name and employee id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the state table . in step 2 , consider the border info 's state name is one of border border info whose border info 's state name equals colorado conditions in place of the border equals dummy value conditions . [question] what states border states that border colorado [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find for each value of state . additionally find minimum enrollment and college name . you should not find the largest of the results . show me all the results . [question] What is the name of school that has the smallest enrollment in each state ? [system description] find the state and state in college table with largest value of enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
additionally use the information from the enroll table and class table besides the student table . consider the course code equals ACCT-211 conditions in place of the student class hours took equals 15 conditions . [question] What is the average GPA of students taking ACCT-211 ? [system description] find the average student gpa in student table whose student class hours took equals 15 . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] what state has the smallest population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the employee table besides the customer table . consider the customer 's postal code equals 70174 conditions in place of the customer 's postal code equals B3S 1C5 conditions . find employee 's city in place of customer 's city . [question] Find the cities corresponding to employees who help customers with the postal code 70174 . [system description] find the city in customer table whose postal code equals " B3S 1C5 " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
consider the city equals Atlanta conditions in place of the city equals Milwaukee conditions . [question] How many parks are there in Atlanta city ? [system description] find the number of rows in park table whose city equals " Milwaukee " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Atlanta ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Atlanta , Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Atlanta ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Atlanta ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , use author table and writes table in place of organization table and keyword table in step 2 , consider the author 's name equals Divesh Srivastava and author 's name equals H. V. Jagadish and year less than 2000 conditions in place of the organization 's name equals dummy value and year less than dummy value conditions . find title in place of kid . [question] return me the papers written by " H. V. Jagadish " and " Divesh Srivastava " before 2000 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table and in keyword table . Step 2 : find the kid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the area is equals minimum area state conditions in place of the country name equals dummy value conditions . find state name in place of minimum density . [question] what is the smallest state in the usa [system description] find the minimum density in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use staff department assignments table in place of departments table . [question] What is the id of the department with the least number of staff ? [system description] Step 1 : find the number of rows of each value of department id in departments table . Step 2 : find the department id in departments table with smallest value in the results of step 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not use the allergy type table and student table . in step 2 , consider the has allergy 's allergy equals Cat conditions in place of the allergy type equals food conditions . [question] How many students have cat allergies ? [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the number of rows of the results of step 1 whose allergy type equals " food " . [schema] [T] allergy type [C] allergy ( Cat ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Cat ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , do not use the student table . in step 2 , additionally make sure that allergy type equals animal . in step 3 , make sure the stuid is not one of the results of step 2 the stuid is one of the results of step 2 . consider the age greater than 18 conditions in place of the allergy type not equals food and allergy type equals food conditions . in step 4 , do not find for each value of allergy type . [question] How many students are over 18 and do not have allergy to food type or animal type ? [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table and in student table . Step 2 : find the has allergy 's stuid of the results of step 1 whose allergy type equals " food " . Step 3 : find rows in student table whose student 's stuid one of the results of step 2 and allergy type not equals " food " and allergy type equals " food " . Step 4 : find the number of rows of each value of allergy type the results of step 3 . Step 5 : find the number of rows the results of step 3 whose corresponding value in step 4 is greater than or equals 1 . [schema] [T] allergy type [C] allergy [C] allergy type ( animal , food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , consider the crossing greater than 90 conditions in place of the crossing greater than 59 conditions . make sure no repetition in the results . [question] List the names of all players who have a crossing score higher than 90 and prefer their right foot . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name of the results of step 1 whose crossing greater than 59 and preferred foot equals " right " . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
consider the document type code equals Paper and document status code equals done conditions in place of the document status code equals overdue conditions . do not return document type code . [question] List the document ids for any documents with the status code done and the type code paper . [system description] find the document id and document type code in documents table whose document status code equals " overdue " . [schema] [T] reference document types [C] document type code ( Paper ) [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code ( done ) [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code ( done ) [C] document type code ( Paper ) [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
in step 1 , consider the languages equals english conditions in place of the rating equals 7 conditions . [question] What are the song names for every song whose rating is less than the minimum rating for English songs ? [system description] Step 1 : find the minimum rating in song table whose rating equals 7 . Step 2 : find the song name in song table whose rating less than the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 2 , find title in place of papers 's paper id . make sure no repetition in the results . [question] Find all the papers published by the institution " Google " . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose name equals " Google " . [schema] [T] institution [C] institution id [C] name ( Google ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , use journal table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . in step 3 , find summation of citation num in place of publication 's jid . [question] return me the total citations of papers in PVLDB in each year . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the jid of the corresponding rows to each value . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 3 , find the number of different title for each value of name . in step 4 , make sure that the corresponding value in step 3 greater than 10 . [question] return me the authors who have more than 10 papers containing keyword " Relational Database " . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of name the results of step 2 . Step 4 : find the name the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the has amenity table and dorm amenity table . in step 2 , consider the last name equals Smith conditions in place of the last name equals Lee conditions . find amenity name in place of dorm name . [question] Find the name of amenities of the dorm where the student with last name Smith is living in . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the dorm name of the results of step 1 whose last name equals " Lee " . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the border info table and state table . in step 2 , additionally make sure that length is equals maximum length river . you should not find the largest of the results . show me all the results . [question] which states does the longest river run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the mountain table and state table . in step 2 , remove the state 's country name equals dummy value conditions . find maximum highest elevation in place of mountain altitude . you should not find the largest of the results . show me all the results . [question] what is the height of the highest point in the usa [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , make sure no repetition in the results . [question] How many rooms have not had any reservation yet ? [system description] Step 1 : find the room in reservations table . Step 2 : find the number of rows in rooms table whose room id not one of the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the customers cards table besides the financial transactions table . find for each value of card type code in place of transaction type . find card type code in place of transaction type . [question] What are the different card types , and how many transactions have been made with each ? [system description] find each value of transaction type in financial transactions table along with the number of the corresponding rows to each value . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
use documents with expenses table and reference budget codes table in place of documents table . consider the budget type description equals Government conditions in place of the document description equals None conditions . [question] Give the ids for documents that have the budget description 'Government ' . [system description] find the document id in documents table whose document description equals " None " . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description ( Government ) [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details ( government ) [T] accounts [C] account id [C] statement id [C] account details
in step 1 , use cast table in place of actor table in step 2 , consider the role equals Daffy Duck conditions in place of the name equals dummy value conditions . [question] Which movie had the character " Daffy Duck " [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the customers table . in step 3 , make sure that the corresponding value in step 2 greater than 2 . [question] Which types of policy are chosen by more than 2 customers ? Give me the policy type codes . [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the number of rows of each value of policy type code of the results of step 1 . Step 3 : find the policy type code of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
make sure no repetition in the results . [question] Find the distinct unit prices for tracks . [system description] find the unit price in track table . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] which states does the ohio river pass through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use tags table and keyword table in place of genre table in step 2 , consider the keyword equals nuclear weapons conditions in place of the genre equals dummy value conditions . [question] What are the movies related to nuclear weapons [system description] Step 1 : for each row in genre table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose genre equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , additionally make sure that rank equals Professor . make sure that the corresponding value in step 1 greater than or equals 10 . [question] In which buildings are there at least ten professors ? [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , use domain table , domain publication table , and organization table in place of cite table in step 2 , consider the domain 's name equals Databases and organization 's name equals University of Michigan conditions in place of the cited equals dummy value conditions . in step 4 , order the results by summation of citation num in place of number of rows . [question] return me the author in the " University of Michigan " whose papers in Databases area have the most total citations . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of rows of each value of name the results of step 2 . Step 4 : find the name the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally make sure that grade equals 4 . find for each value of class room in place of grade . find class room in place of grade . [question] For each fourth-grade classroom , show the classroom number and the total number of students using it . [system description] find each value of grade in list table along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
additionally use the information from the domain author table , domain table , and author table besides the organization table . consider the domain 's name equals Databases conditions in place of the organization 's oid equals dummy value conditions . find number of different organization 's name in place of number of rows . [question] return me the number of organizations in Databases area . [system description] find the number of rows in organization table whose oid equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the list table besides the teachers table . consider the list 's first name equals CHRISSY and list 's last name equals NABOZNY conditions in place of the teachers 's first name equals OTHA and teachers 's last name equals KAWA conditions . [question] Find the number of teachers who teach the student called CHRISSY NABOZNY . [system description] find the number of rows in teachers table whose first name equals " OTHA " and last name equals " KAWA " . [schema] [T] list [C] last name ( NABOZNY ) [C] first name (  CHRISSY ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , consider the languages equals english conditions in place of the resolution greater than 512 conditions . in step 2 , make sure no repetition in the results . [question] What are the different names for all songs that have a higher resolution than English songs ? [system description] Step 1 : find the minimum resolution in song table whose resolution greater than 512 . Step 2 : find the song name in song table whose resolution greater than the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
additionally make sure that customer id is one of loan 's customer id loan . [question] Find the average credit score of the customers who have some loan . [system description] find the average credit score in customer table . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally use the information from the exhibition record table besides the exhibition table . consider the ticket price less than 10 or attendance greater than 100 conditions in place of the number of rows greater than 1 or ticket price greater than 29.95 conditions . [question] Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10 . [system description] find the number of rows in exhibition table whose ticket price greater than 29.95 or number of rows greater than 1 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 1 , do not use the workshop table . in step 2 , find author and number of different acceptance 's workshop id in place of name and number of rows . [question] How many workshops did each author submit to ? Return the author name and the number of workshops . [system description] Step 1 : for each row in submission table , find the corresponding rows in acceptance table and in workshop table . Step 2 : find each value of author of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] workshop [C] workshop id [C] date [C] venue [C] name [T] submission [C] submission id [C] scores [C] author [C] college [T] acceptance [C] submission id [C] workshop id [C] result
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name equals iowa conditions in place of the lowest elevation not equals dummy value conditions . find lowest point in place of area . you should not find the smallest of the results . show me all the results . [question] where is the lowest point in iowa [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose lowest elevation not equals " dummy value " with smallest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find summation of enrollment in place of number of enrollment . [question] How many students are enrolled in college ? [system description] find the number of enrollment in college table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , additionally use the information from the complaints table besides the staff table . find for each value of complaints 's staff id in place of first name . in step 2 , order the results ascending . only show me the first 5 results . [question] Return the first names of the 5 staff members who have handled the most complaints . [system description] Step 1 : find the number of rows of each value of first name in staff table . Step 2 : find the first name in staff table with largest value in the results of step 1 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 1 , additionally use the information from the savings table . in step 2 , order the results by checking 's balance plus savings 's balance in place of checking 's balance . [question] Find the name of account that has the lowest total checking and saving balance . [system description] Step 1 : for each row in checking table , find the corresponding rows in accounts table . Step 2 : find the name and name of the results of step 1 with smallest value of balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , do not use the keyword table , domain table , domain author table , author table , writes table , and domain keyword table . in step 2 , consider the title equals Making database systems usable conditions in place of the keyword equals dummy value conditions . [question] return me the year of " Making database systems usable " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the year of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the main industry equals Banking conditions in place of the main industry equals Oil and gas conditions . additionally order the results by profits billion . [question] What is the rank , company , and market value of every comapny in the banking industry ordered by sales and profits ? [system description] find the rank , company , market value , market value in company table whose main industry equals " Oil and gas " ordered ascending by sales billion . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry ( Banking ) [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 1 , additionally make sure that start date like 8/ % . find for each value of start station name in place of start station id . [question] Which start station had the most trips starting from August ? Give me the name and id of the station . [system description] Step 1 : find the number of rows of each value of start station id in trip table . Step 2 : find the start station name and start station id in trip table with largest value in the results of step 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the border info table and state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the border info 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the longest river flowing through texas [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , make sure no repetition in the results . [question] Find the states where have the colleges whose enrollments are less than the largest size . [system description] Step 1 : find the maximum enrollment in college table . Step 2 : find the state in college table whose enrollment less than the results of step 1 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , find for each value of bname in place of bank 's branch id . [question] Find the name of bank branch that provided the greatest total amount of loans . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table . Step 2 : find the summation of amount of each value of bank 's branch id of the results of step 1 . Step 3 : find the bname of the results of step 1 with largest value in the results of step 2 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 2 , remove the affirmative equals 2 conditions . [question] Show the names of people , and dates and venues of debates they are on the affirmative side . [system description] Step 1 : for each row in debate table , find the corresponding rows in debate people table and in people table . Step 2 : find the name , date , venue of the results of step 1 whose affirmative equals 2 . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
additionally use the information from the person friend table besides the person table . find number of friend in place of number of rows . [question] How many friends does Dan have ? [system description] find the number of rows in person table whose name equals " Dan " . [schema] [T] person [C] name ( Dan ) [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend ( Dan ) [C] year
consider the manufacturer equals 2 conditions in place of the code equals 2 conditions . [question] What is the average price of products with manufacturer codes equal to 2 ? [system description] find the average price in products table whose code equals 2 . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , consider the city equals Palo Alto conditions in place of the city equals Redwood City conditions . in step 2 , use trip table in place of station table . remove the city equals San Jose conditions . find for each value of end station name whose number of rows greater than 100 . find end station name in place of name . [question] What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times ? [system description] Step 1 : find the name in station table whose city equals " Redwood City " . Step 2 : find the name in station table whose city equals " San Jose " . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the state table . in step 2 , additionally make sure that length is equals maximum different length river . make sure no repetition in the results . you should not find the largest of the results . show me all the results . [question] what state has the longest river [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the check in equals 2010-10-23 and last name equals SELBIG and first name equals CONRAD conditions in place of the first name equals SHERILYN and last name equals SINGERMAN and last name equals MCNEELEY conditions . find adults in place of number of rows . [question] How many adults stay in the room CONRAD SELBIG checked in on Oct 23 , 2010 ? [system description] find the number of rows in reservations table whose first name equals " SHERILYN " and last name equals " MCNEELEY " and last name equals " SINGERMAN " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( CONRAD , SELBIG ) [C] first name ( CONRAD ) [C] adults [C] kids
in step 3 , additionally find name . only show me the first 10 results . [question] For the airline ids with the top 10 most routes operated , what are their names ? [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of rows of each value of routes 's airline id of the results of step 1 . Step 3 : find the airlines 's airline id of the results of step 1 with largest value in the results of step 2 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Namest ) [C] country [C] x [C] y [C] elevation [C] iata ( TOP ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( TOP , IDS ) [C] call sign [C] country [C] active
in step 2 , consider the year greater than 2000 and name equals VLDB conditions in place of the name equals dummy value and year greater than dummy value conditions . find title in place of homepage . [question] return me the papers on VLDB conference after 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the homepage of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the border info table and state table . in step 2 , consider the highlow 's state name equals colorado conditions in place of the highlow 's state name equals dummy value conditions . find highest elevation in place of maximum highest point . in step 3 , make sure the highest elevation is greater than the results of step 2 the highest point is greater than the results of step 2 . [question] what states high point are higher than that of colorado [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest point in highlow table whose highlow 's state name equals " dummy value " . Step 3 : find the border info 's state name of the results of step 1 whose highest point greater than the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , do not return savings 's balance . order the results by checking 's balance plus savings 's balance in place of checking 's balance . [question] What is the name corresponding to the accoung with the lowest sum of checking and savings balances ? [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name and savings 's balance of the results of step 1 with smallest value of checking 's balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , additionally use the information from the home game table besides the team table . additionally make sure that home game 's year equals 2014 . find for each value of home game 's team id in place of div id . in step 2 , order the results by average home game 's attendance in place of average team 's attendance . [question] Find the id and rank of the team that has the highest average attendance rate in 2014 . [system description] Step 1 : find the average attendance of each value of div id in team table . Step 2 : find the team id and rank in team table with largest value in the results of step 1 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
consider the state name equals texas and population greater than 150000 conditions in place of the state name equals dummy value conditions . find number of city name in place of number of rows . [question] how many major cities are there in texas [system description] find the number of rows in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally make sure that competition type equals Tournament . [question] which country did participated in the most number of Tournament competitions ? [system description] Step 1 : find the number of rows of each value of country in competition table . Step 2 : find the country in competition table with largest value in the results of step 1 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type ( Tournament ) [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
in step 2 , consider the product name equals chervil conditions in place of the product name equals cinnam conditions . [question] Return the color code and description for the product with the name 'chervil ' . [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the reference colors 's color code and color description of the results of step 1 whose product name equals " cinnam " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( chervil ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , use movie table , cast table , and actor table in place of written by table , copyright table , and writer table in step 2 , consider the actor 's name equals Kate Winslet conditions in place of the writer 's name equals dummy value conditions . [question] Find the directors of all movies featuring " Kate Winslet " [system description] Step 1 : for each row in writer table , find the corresponding rows in written by table and in copyright table and in directed by table and in director table . Step 2 : find the director 's name of the results of step 1 whose writer 's name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , consider the state province county equals Texas and city equals East Julianaside conditions in place of the state province county equals RhodeIsland and city equals Lucasville conditions . find address content in place of rows . in step 2 , consider the state province county equals Arizona and city equals Gleasonmouth conditions in place of the state province county equals RhodeIsland and city equals Reingertown conditions . find address content in place of rows . [question] Find all the addresses in East Julianaside , Texas or in Gleasonmouth , Arizona . [system description] Step 1 : find the rows in addresses table whose city equals " Lucasville " and state province county equals " RhodeIsland " . Step 2 : find the rows in addresses table whose city equals " Reingertown " and state province county equals " RhodeIsland " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] addresses [C] address id [C] address content [C] city ( East Julianaside , Gleasonmouth ) [C] zip postcode [C] state province county ( Arizona , Texas ) [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , additionally use the information from the course table besides the faculty table . find for each value of instructor in place of building . [question] Which building does the instructor who teaches the most number of courses live in ? [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
remove the country name equals dummy value conditions . [question] what is the total area of the usa [system description] find the summation of area in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of different school id in place of number of rows . [question] How many schools are in the basketball match ? [system description] find the number of rows in basketball match table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally make sure that affiliation equals Public . [question] List all public schools and their locations . [system description] find the school and location in university table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
additionally order the results by sales billion . [question] find the rank , company names , market values of the companies in the banking industry order by their sales and profits in billion . [system description] find the rank , company , market value in company table whose main industry equals " Banking " ordered ascending by profits billion . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry ( Banking ) [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 2 , consider the club name equals Bootup Baltimore and position equals President conditions in place of the club name equals Tennis Club conditions . [question] What are the first and last name of the president of the club " Bootup Baltimore " ? [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Tennis Club " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( President )
in step 1 , additionally use the information from the customer table besides the employee table . in step 2 , make sure that the corresponding value in step 1 greater than or equals 10 . find customer 's first name in place of employee 's first name . [question] Please show the employee first names and ids of employees who serve at least 10 customers . [system description] Step 1 : find the number of rows of each value of employee id in employee table . Step 2 : find the first name and employee id in employee table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Please ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the border info table and state table . in step 2 , additionally make sure that length is equals minimum length river . you should not find the smallest of the results . show me all the results . [question] what states does the shortest river run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use course table in place of department table , enroll table , and student table in step 2 , find for each value of course 's department code in place of department name . find course 's department code in place of department name . [question] How many classes are held in each department ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of department name of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the year less than 2000 and name equals VLDB conditions in place of the name equals dummy value and year less than dummy value conditions . find number of different title in place of number of pid . [question] return me the number of papers published in the VLDB conference before 2000 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the number of pid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , find for each value of country 's country id whose number of rows greater than or equals 3 . [question] What are the countries that contain 3 or more cities ? [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , do not use the person table . in step 2 , consider the year is equals minimum year person friend whose friend equals Alice and friend equals Alice conditions in place of the friend equals Dan conditions . you should not find the smallest of the results . show me all the results . [question] Find the name of persons who are friends with Alice for the shortest years . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Dan " with smallest value of year . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 2 , consider the color description equals white conditions in place of the color description like green conditions . [question] What are the names of products with 'white ' as their color description ? [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the product name of the results of step 1 whose color description like " green " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( white ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . do not return maximum population . [question] what is the largest city in wyoming by population [system description] find the city name and maximum population in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , additionally find average years working . [question] Find the average age and experience working length of journalists working on different role type . [system description] Step 1 : for each row in news report table , find the corresponding rows in journalist table . Step 2 : find each value of work type of the results of step 1 along with the average age of the corresponding rows to each value . [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
in step 2 , consider the mar less than jul conditions in place of the mar less than 19.4 conditions . in step 3 , use hosting city table in place of temperature table in step 4 , remove the mar equals 19.4 conditions . [question] Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities ? [system description] Step 1 : for each row in temperature table , find the corresponding rows in city table . Step 2 : find the city of the results of step 1 whose mar less than 19.4 . Step 3 : for each row in temperature table , find the corresponding rows in city table . Step 4 : find the city of the results of step 3 whose mar equals 19.4 . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
consider the hometown like % Kentucky % conditions in place of the hometown equals Columbia , South Carolina conditions . [question] What are the card numbers of members from Kentucky ? [system description] find the card number in member table whose hometown equals " Columbia , South Carolina " . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 2 , make sure that the corresponding value in step 1 greater than or equals 4500000 . [question] Which studios have an average gross of over 4500000 ? [system description] Step 1 : find the average gross in dollar of each value of studio in film table . Step 2 : find the studio in film table whose corresponding value in step 1 is greater than 1 . [schema] [T] film [C] film id [C] title [C] studio [C] director [C] gross in dollar [T] market [C] market id [C] country [C] number cities [T] film market estimation [C] estimation id [C] low estimate [C] high estimate [C] film id [C] type [C] market id [C] year
in step 1 , use enroll table and class table in place of department table and course table in step 2 , consider the student last name equals Smithson conditions in place of the student last name equals Oblonski conditions . [question] What is the code of the course which the student whose last name is Smithson took ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the course code of the results of step 1 whose student last name equals " Oblonski " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Smithson ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name ( Smithson ) [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the organization table . in step 2 , consider the conference 's name equals VLDB and organization 's name equals University of Michigan conditions in place of the author 's name equals dummy value and conference 's name equals dummy value conditions . find title in place of jid . [question] return me all the papers in VLDB conference in " University of Michigan " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the jid of the results of step 1 whose conference 's name equals " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the course table besides the faculty table . find for each value of instructor . in step 2 , only show me the first 3 results . [question] What are the first and last names of the instructors who teach the top 3 number of courses ? [system description] Step 1 : find the number of rows of each value of faculty id and last name in faculty table . Step 2 : find the first name and last name in faculty table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , use salary table in place of batting postseason table and player table in step 2 , consider the name equals Boston Red Stockings and salary 's year equals 2000 conditions in place of the team 's year equals 1883 and team 's year equals 1875 conditions . find number of rows in place of number of player 's player id . [question] How many players did Boston Red Stockings have in 2000 ? [system description] Step 1 : for each row in team table , find the corresponding rows in batting postseason table and in player table . Step 2 : find the number of player 's player id of the results of step 1 whose team 's year equals 1875 and team 's year equals 1883 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally find airline id . [question] What is the id and name of the aircraft that can cover the maximum distance ? [system description] find the name and name in aircraft table with largest value of distance . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , additionally use the information from the product characteristics table besides the characteristics table . additionally find characteristic data type . [question] What are the names , details and data types of the characteristics which are never used by any product ? [system description] Step 1 : find the characteristic name , other characteristic details , characteristic data type in characteristics table . Step 2 : find the characteristic name and other characteristic details in characteristics table . Step 3 : show the rows that are in the results of step 1 but not in the results of step 2 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , additionally use the information from the settlements table besides the claims table . in step 2 , additionally find claims 's claim id . [question] Which claims had exactly one settlement ? For each , tell me the the date the claim was made , the date it was settled and the amount settled . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the date claim made and date claim settled in claims table whose corresponding value in step 1 is equals 1 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
consider the bed type equals Queen or bed type equals King conditions in place of the beds equals 2 conditions . [question] List the name of rooms with king or queen bed . [system description] find the room name in rooms table whose beds equals 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King , Queen ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name ( QUEEN ) [C] adults [C] kids
in step 1 , do not use the state table . in step 2 , consider the river name equals missouri conditions in place of the river name equals dummy value conditions . find number of traverse in place of number of rows . [question] how many states does the missouri river flow through [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the savings table . in step 2 , additionally use the information from the accounts table besides the savings table . additionally make sure that savings 's balance is greater than average savings 's balance savings . find name in place of average savings 's balance . in step 3 , make sure the name is one of the results of step 2 the savings 's balance is greater than the results of step 2 . find savings 's balance in place of checking 's balance . [question] What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance ? [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the average savings 's balance in savings table . Step 3 : find the checking 's balance of the results of step 1 whose savings 's balance greater than the results of step 2 . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what is the largest state [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the river table and state table . in step 2 , consider the highlow 's state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . find lowest point in place of minimum lowest point . find the result with the smallest lowest elevation . [question] which is the lowest point of the states that the mississippi runs through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the team table and player table . in step 2 , consider the college equals Maryland or college equals Duke conditions in place of the college equals Connecticut or player 's player equals Jeong Suk-Young ( 793 ) conditions . [question] Return the official native languages of countries who have players from Maryland or Duke colleges . [system description] Step 1 : for each row in match season table , find the corresponding rows in country table and in team table and in player table . Step 2 : find the official native language of the results of step 1 whose college equals " Connecticut " or player 's player equals " Jeong Suk-Young ( 793 ) " . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college ( Maryland , Duke ) [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , do not use the song table . in step 2 , consider the artist 's country equals UK conditions in place of the languages equals bangla conditions . [question] What are the names of artists who are Male and are from UK ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name of the results of step 1 whose gender equals " Male " and languages equals " bangla " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country ( UK ) [C] gender ( Male ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country ( UK ) [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the affiliation equals Public or founded greater than 1850 conditions in place of the founded less than 1743 or founded equals 1957 conditions . [question] What are the schools that were either founded before 1850 or are public ? [system description] find the school in university table whose founded less than 1743 or founded equals 1957 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
in step 1 , remove the state equals AZ conditions . [question] What are the names of all colleges with a larger enrollment than the largest college in Florida ? [system description] Step 1 : find the maximum enrollment in college table whose state equals " AZ " and state equals " FL " . Step 2 : find the college name in college table whose enrollment greater than the results of step 1 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
consider the how to get there equals bus conditions in place of the name equals film festival conditions . [question] What are the names of the tourist attractions that can be accessed by bus ? [system description] find the name in tourist attractions table whose name equals " film festival " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there ( bus ) [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , make sure no repetition in the results . [question] Who served as an advisor for students who have treasurer votes in the spring election cycle ? [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the advisor of the results of step 1 whose election cycle equals " Spring " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , do not use the has allergy table . in step 2 , consider the allergy type equals food conditions in place of the allergy type equals animal conditions . make sure no repetition in the results . [question] Show all allergies with type food . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table . Step 2 : find the has allergy 's allergy of the results of step 1 whose allergy type equals " animal " . [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , consider the sex equals M and club name equals Hopkins Student Enterprises conditions in place of the club name equals Bootup Baltimore and last name equals Woods conditions . [question] What are the first name and last name of each male member in club " Hopkins Student Enterprises " ? [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Bootup Baltimore " and last name equals " Woods " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally find minimum age and major . [question] Show the average , minimum , and maximum age for different majors . [system description] find each value of major in student table along with the maximum age and average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
additionally use the information from the student table besides the faculty table . consider the student 's last name equals Smith and student 's first name equals Linda conditions in place of the faculty 's last name equals Iglesias and faculty 's first name equals Rao conditions . [question] What are the first name and last name of Linda Smith 's advisor ? [system description] find the first name and last name in faculty table whose first name equals " Rao " and last name equals " Iglesias " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Smith ) [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 3 , order the results by summation of hours played in place of number of rows . [question] What is the name of the game that has been played the most ? [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the number of rows of each value of plays games 's game id of the results of step 1 . Step 3 : find the game name of the results of step 1 with largest value in the results of step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
make sure no repetition in the results . [question] Retrieve the list of all cities . [system description] find the city in addresses table . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the faculty participates in table besides the faculty table . additionally find faculty 's faculty id . [question] Show the first and last name of all the faculty members who participated in some activity , together with the number of activities they participated in . [system description] find each value of faculty id in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the border info table . in step 2 , consider the state 's state name is one of border border info whose border info 's state name equals oklahoma conditions in place of the border equals dummy value conditions . [question] what state bordering oklahoma has the largest population [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the border info 's state name of the results of step 1 whose border equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the year is equals maximum year person friend whose friend equals Alice and friend equals Alice conditions in place of the friend equals Bob conditions . you should not find the largest of the results . show me all the results . [question] What are the names , ages , and jobs of all people who are friends with Alice for the longest amount of time ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name , age , job of the results of step 1 whose friend equals " Bob " with largest value of year . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally use the information from the salary table besides the player table . consider the name last equals Barker and name first equals Len and year between 1985 and 1990 conditions in place of the name first equals Cam and death year less than or equals 1923 conditions . find summation of salary in place of summation of death year . [question] How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total ? [system description] find the summation of death year in player table whose name first equals " Cam " and death year less than or equals 1923 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Leon ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Leon ) [C] name first ( Len ) [C] name last ( Barker ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] which state has the highest population density [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
order the results by team in place of player . [question] What are the teams of the players , sorted in ascending alphabetical order ? [system description] find the team in player table ordered ascending by player . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 2 , consider the distance greater than 5000 conditions in place of the aircraft 's name greater than SAAB 340 conditions . [question] What is the salaray and name of the employee with the most certificates to fly planes more than 5000 ? [system description] Step 1 : for each row in employee table , find the corresponding rows in certificate table and in aircraft table . Step 2 : only keep the results of step 1 whose aircraft 's name greater than " SAAB 340 " . Step 3 : find the number of rows of each value of employee 's employee id the results of step 2 . Step 4 : find the employee 's name and employee 's name the results of step 2 with largest value in the results of step 3 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , additionally make sure that population is equals minimum population state . find state 's state name in place of minimum population . in step 3 , make sure the state 's state name is one of the results of step 2 the population is equals the results of step 2 . find highest point in place of maximum highest point . you should not find the smallest of the results . show me all the results . [question] what is the highest point in the state with the smallest population [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the minimum population in state table . Step 3 : find the maximum highest point of the results of step 1 whose population equals the results of step 2 with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of different director in place of number of rows . [question] How many movie directors are there ? [system description] find the number of rows in movie table . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 1 , additionally use the information from the cast table . in step 2 , consider the nationality equals China conditions in place of the nationality equals dummy value conditions . in step 4 , order the results by number of different name in place of number of rows . [question] which movie has the most number of actors from China ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : only keep the results of step 1 whose nationality equals " dummy value " . Step 3 : find the number of rows of each value of title the results of step 2 . Step 4 : find the title the results of step 2 with largest value in the results of step 3 . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , use customers cards table in place of accounts table in step 2 , find for each value of customers cards 's customer id in place of accounts 's customer id . in step 3 , find customers cards 's customer id in place of accounts 's customer id . [question] Return the id and full name of the customer who has the fewest accounts . [system description] Step 1 : for each row in accounts table , find the corresponding rows in customers table . Step 2 : find the number of rows of each value of accounts 's customer id of the results of step 1 . Step 3 : find the accounts 's customer id , customer first name , customer last name of the results of step 1 with smallest value in the results of step 2 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , do not use the student table . [question] Show all allergies with number of students affected . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in student table . Step 2 : find each value of allergy of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
additionally make sure that document status code equals done . [question] How many documents have the status code done ? [system description] find the number of rows in documents table . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code ( done ) [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code ( done ) [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
in step 1 , do not use the genre table and artist table . in step 2 , consider the languages equals english conditions in place of the genre 's rating equals 8 conditions . additionally find song 's artist name . [question] What is the id , genre , and name of the artist for every English song ordered by ascending rating ? [system description] Step 1 : for each row in song table , find the corresponding rows in genre table and in artist table . Step 2 : find the song id , preferred genre , genre name of the results of step 1 whose genre 's rating equals 8 ordered ascending by song 's rating . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 2 , consider the grade equals 5 conditions in place of the grade equals 3 conditions . make sure no repetition in the results . [question] what are the last names of the teachers who teach grade 5 ? [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find the teachers 's last name of the results of step 1 whose grade equals 3 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
additionally make sure that population greater than 150000 . find number of city name in place of number of rows . [question] how many major cities are there [system description] find the number of rows in city table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use tryout table in place of college table . consider the decision equals yes conditions in place of the enrollment greater than 18000 conditions . [question] How many students got accepted after the tryout ? [system description] find the number of rows in college table whose enrollment greater than 18000 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
find number of different party name in place of number of rows . [question] How many parties do we have ? [system description] find the number of rows in party table . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 2 , consider the name equals University of Pennsylvania conditions in place of the name equals INRIA conditions . find number of different title in place of number of rows . [question] How many papers are written by authors from the institution " University of Pennsylvania " ? [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose name equals " INRIA " . [schema] [T] institution [C] institution id [C] name ( University of Pennsylvania ) [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , consider the type equals Studio conditions in place of the albums 's title equals dummy value conditions . find number of different songs 's title in place of number of rows . [question] How many songs appear in studio albums ? [system description] Step 1 : for each row in albums table , find the corresponding rows in track lists table and in songs table . Step 2 : find the number of rows of the results of step 1 whose albums 's title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , additionally make sure that population is equals maximum population city . do not find for each value of city name . in step 2 , you should not find the largest of the results . show me all the results . [question] what is the most populous city [system description] Step 1 : find the number of rows of each value of city name in city table . Step 2 : find the city name in city table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find for each value of claims 's claim id . find number of rows in place of settlements 's date claim settled . [question] Find the claim id and the number of settlements made for the claim with the most recent settlement date . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the claims 's claim id and settlements 's date claim settled of the results of step 1 with largest value of claims 's date claim settled . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 2 , do not use the ship table . in step 3 , consider the class equals Third-rate ship of the line conditions in place of the type equals Panamax conditions . [question] Find the captain rank that has no captain in Third-rate ship of the line class . [system description] Step 1 : find the rank in captain table . Step 2 : for each row in ship table , find the corresponding rows in captain table . Step 3 : find the rank of the results of step 2 whose type equals " Panamax " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class ( Third-rate ship of the line ) [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
in step 1 , do not use the team table and player table . in step 2 , find match season 's player in place of player 's player . [question] Return all players sorted by college in ascending alphabetical order . [system description] Step 1 : for each row in match season table , find the corresponding rows in team table and in player table . Step 2 : find the player 's player of the results of step 1 ordered ascending by college . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 2 , find for each value of artist 's artist id whose average attendance greater than 200 . [question] Show all artist names with an average exhibition attendance over 200 . [system description] Step 1 : for each row in exhibition record table , find the corresponding rows in exhibition table and in artist table . Step 2 : find the average attendance of each value of name of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] artist [C] artist id [C] name [C] country [C] year join [C] age [T] exhibition [C] exhibition id [C] year [C] theme [C] artist id [C] ticket price [T] exhibition record [C] exhibition id [C] date [C] attendance
in step 1 , use movie table , tags table , and keyword table in place of classification table , copyright table , and genre table in step 2 , consider the keyword equals nuclear weapons conditions in place of the genre equals dummy value conditions . [question] List all the directors of movies about nuclear weapons [system description] Step 1 : for each row in genre table , find the corresponding rows in classification table and in copyright table and in directed by table and in director table . Step 2 : find the name of the results of step 1 whose genre equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 3 , find name first and name last in place of name given . only show me the first 3 results . [question] Which 3 players won the most player awards ? List their full name and id . [system description] Step 1 : for each row in player award table , find the corresponding rows in player table . Step 2 : find the number of rows of each value of player 's player id of the results of step 1 . Step 3 : find the name given and player award 's player id of the results of step 1 with largest value in the results of step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
use the smallest in place of largest . [question] What is the name of the youngest captain ? [system description] find the name in captain table with largest value of age . [schema] [T] captain [C] captain id [C] name [C] ship id [C] age [C] class [C] rank [T] ship [C] ship id [C] name [C] type [C] built year [C] class [C] flag
in step 1 , do not use the border info table and highlow table . in step 2 , consider the state 's state name equals new mexico conditions in place of the border info 's state name equals dummy value and highest elevation equals dummy value conditions . find area in place of number of rows . [question] how large is new mexico [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the number of rows of the results of step 1 whose border info 's state name equals " dummy value " and highest elevation equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the city table and hosting city table . in step 2 , remove the year equals 2011 conditions . find match 's match id in place of city . [question] Find the match ids of the cities that hosted competition " 1994 FIFA World Cup qualification " ? [system description] Step 1 : for each row in hosting city table , find the corresponding rows in city table and in match table . Step 2 : find the city of the results of step 1 whose competition equals " 1994 FIFA World Cup qualification " and year equals 2011 . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
consider the headquarter equals Beijing conditions in place of the headquarter equals Paris conditions . [question] Find the number of manufactures that are based in Tokyo or Beijing . [system description] find the number of rows in manufacturers table whose headquarter equals " Tokyo " or headquarter equals " Paris " . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Beijing , Tokyo ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 2 , consider the position equals CTO conditions in place of the last name equals Jones conditions . [question] Who is the " CTO " of club " Hopkins Student Enterprises " ? Show the first name and last name . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Hopkins Student Enterprises " and last name equals " Jones " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position ( CTO )
additionally use the information from the department table besides the professor table . consider the department name equals Accounting conditions in place of the professor 's department code equals MATH conditions . [question] How many professors are in the accounting dept ? [system description] find the number of rows in professor table whose department code equals " MATH " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the city table . in step 2 , consider the area is equals maximum area state conditions in place of the city 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the capital city of the largest state in the us [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the player award table besides the player table . consider the year equals 1960 conditions in place of the birth year equals 1982 conditions . in step 2 , additionally use the information from the player award table besides the player table . consider the year equals 1961 conditions in place of the birth year equals 1831 conditions . [question] Find the players ' first name and last name who won award both in 1960 and in 1961 . [system description] Step 1 : find the name first and name last in player table whose birth year equals 1982 . Step 2 : find the name first and name last in player table whose birth year equals 1831 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the movie table and culture company table . in step 2 , find book club 's year and publisher in place of title . order the results by book club 's year in place of publisher . [question] What are the years , titles , and publishers for all books , ordered by year descending ? [system description] Step 1 : for each row in book club table , find the corresponding rows in culture company table and in movie table . Step 2 : find the book title , title , title of the results of step 1 ordered descending by publisher . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 2 , consider the title like % Monadic % conditions in place of the title like Binders Unbound conditions . [question] Which authors have written a paper with title containing the word " Monadic " ? Return their last names . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the last name of the results of step 1 whose title like " Binders Unbound " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
consider the job equals student and age is equals maximum age person whose job equals student conditions in place of the job equals doctor conditions . you should not find the largest of the results . show me all the results . [question] Who is the oldest person whose job is student ? [system description] find the name in person table whose job equals " doctor " with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( student ) [T] person friend [C] name [C] friend [C] year
additionally use the information from the election table besides the county table . find for each value of county id in place of county name . [question] Show the name of each county along with the corresponding number of delegates from that county . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
additionally make sure that area is equals minimum area state . find state name in place of minimum area . [question] what is the smallest state by area [system description] find the minimum area in state table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the person friend table . in step 2 , additionally make sure that job equals engineer . find minimum age in place of maximum age . in step 3 , order the results by age in place of person friend 's name . [question] Find the name of people whose age is greater than any engineer sorted by their age . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the maximum age of the results of step 1 . Step 3 : find the person 's name in person table whose age greater than the results of step 2 ordered ascending by name . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , additionally use the information from the has amenity table and dorm amenity table besides the dorm table . [question] Find the name and capacity of the dorm with least number of amenities . [system description] Step 1 : find the number of rows of each value of dorm id in dorm table . Step 2 : find the dorm name and student capacity in dorm table with smallest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the department store chain table . in step 3 , only show me the first 2 results . [question] What are the ids of the two department store chains with the largest number of department stores ? [system description] Step 1 : for each row in department store chain table , find the corresponding rows in department stores table . Step 2 : find the number of rows of each value of department stores 's department store chain id of the results of step 1 . Step 3 : find the department stores 's department store chain id of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
use allergy type table in place of has allergy table . find number of different allergy type in place of number of has allergy 's allergy . [question] How many distinct allergies are there ? [system description] find the number of allergy in has allergy table . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
additionally make sure that year equals 2001 . only show me the first 3 results . [question] How much salary did the top 3 well-paid players get in 2001 ? [system description] find the salary in salary table with largest value of salary . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the biggest city in wyoming [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the song name like % love % conditions in place of the song name like Aj ei akash conditions . find artist 's country in place of releasedate . [question] What are the names of the artists who released a song that has the word love in its title , and where are the artists from ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and releasedate of the results of step 1 whose song name like " Aj ei akash " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the list table . in step 2 , find teachers 's first name in place of list 's first name . make sure no repetition in the results . [question] Report the first name and last name of all the teachers . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 2 , consider the name equals Boston Red Stockings conditions in place of the team id winner equals PRO and name equals Newark Pepper conditions . [question] List the maximum scores of the team Boston Red Stockings when the team won in postseason ? [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table . Step 2 : find the maximum wins of the results of step 1 whose name equals " Newark Pepper " and team id winner equals " PRO " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the highlow table . in step 2 , consider the state 's state name equals new mexico conditions in place of the highlow 's state name equals dummy value conditions . find area in place of density . [question] what is the size of new mexico [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the density of the results of step 1 whose highlow 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the order items table , customer orders table , product suppliers table , and products table . in step 2 , find minimum customer code in place of minimum date supplied to . [question] Return the maximum and minimum customer codes . [system description] Step 1 : for each row in customers table , find the corresponding rows in customer orders table and in order items table and in products table and in product suppliers table . Step 2 : find the maximum customer code and minimum date supplied to of the results of step 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 2 , consider the title equals Binders Unbound conditions in place of the title equals Nameless , Painless conditions . [question] Who is the author of the paper titled " Binders Unbound " ? Give me the last name . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the last name of the results of step 1 whose title equals " Nameless , Painless " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title ( Binders Unbound ) [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
consider the product name equals cumin conditions in place of the product name equals lotus conditions . find product category code in place of product name . [question] What is the category and typical buying price of the product with name " cumin " ? [system description] find the product name and typical buying price in products table whose product name equals " lotus " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( cumin ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 2 , order the results by number of advisor in place of number of rows . [question] Which Advisor has most of students ? List advisor and the number of students . [system description] Step 1 : find the number of rows of each value of advisor in student table . Step 2 : find the advisor and number of rows in student table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
find for each value of name . additionally find minimum price . you should not find the smallest of the results . show me all the results . [question] Select the code of the product that is cheapest in each product category . [system description] find the code and name in products table with smallest value of price . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
make sure no repetition in the results . [question] What ranks do we have for faculty ? [system description] find the rank in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the customers table and customer orders table . in step 2 , find for each value of order items 's product id . find product details in place of customer name . order the results ascending by summation of order quantity in place of ordering descending by order quantity . [question] Find the name and ID of the product whose total order quantity is the largest . [system description] Step 1 : for each row in order items table , find the corresponding rows in products table and in customer orders table and in customers table . Step 2 : find the customer name and products 's product id of the results of step 1 with largest value of order quantity . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , additionally use the information from the order items table and customer orders table besides the products table . find for each value of products 's product id whose number of different customer id greater than or equals 2 . in step 2 , make sure no repetition in the results . [question] What are the distinct names of products purchased by at least two different customers ? [system description] Step 1 : find the number of rows of each value of product name in products table . Step 2 : find the product name in products table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , do not find for each value of room id . in step 2 , order the results by max occupancy in place of number of rows . [question] What is the name of the room that can accommodate the most people ? [system description] Step 1 : find the number of rows of each value of room id in rooms table . Step 2 : find the room name in rooms table with largest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 2 , remove the employee first name equals Gerald conditions . order the results by employee first name in place of professor office . [question] What are the first names and office locations for all professors sorted alphabetically by first name ? [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose employee first name equals " Gerald " ordered ascending by professor office . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the city equals Mountain View conditions in place of the city equals San Francisco conditions . [question] How many stations does Mountain View city has ? [system description] find the number of rows in station table whose city equals " San Francisco " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , consider the characteristic name equals hot or color description equals white conditions in place of the color description equals purple or characteristic name equals slow conditions . [question] How many products have their color described as 'white ' or have a characteristic with the name 'hot ' ? [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference colors table . Step 2 : find the number of rows of the results of step 1 whose color description equals " purple " or characteristic name equals " slow " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description ( white ) [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( hot ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the reference product categories table , characteristics table , and product characteristics table . in step 2 , consider the products 's product category code equals Herbs conditions in place of the characteristic name equals error conditions . find product description in place of product category description . [question] List the names , color descriptions and product descriptions of products with category " Herbs " . [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table and in reference product categories table and in reference colors table . Step 2 : find the product name , color description , product category description of the results of step 1 whose characteristic name equals " error " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] which state has the smallest population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use city table in place of state table . find for each value of city 's state name . order the results by summation of city 's population in place of state 's population . [question] what state has the smallest urban population [system description] find the state name in state table with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the author table . in step 2 , consider the conference 's name equals VLDB and year greater than 1995 and year less than 2002 conditions in place of the year less than dummy value and conference 's name equals dummy value conditions . find author 's name in place of writes 's pid . [question] return me the authors who have papers in VLDB conference before 2002 after 1995 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table . Step 2 : find the writes 's pid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] which is the longest river in usa [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the artist table besides the song table . consider the resolution greater than 900 conditions in place of the resolution greater than 720 conditions . find for each value of song 's artist name whose number of rows greater than or equals 1 . find artist 's country in place of song 's country . [question] What is the name and country of origin for each artist who has released a song with a resolution higher than 900 ? [system description] find the artist name and country in song table whose resolution greater than 720 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , use organization table in place of cite table in step 2 , consider the organization 's name equals University of Michigan conditions in place of the cited equals dummy value conditions . in step 4 , order the results by summation of citation num in place of number of jid . [question] return me the author in the " University of Michigan " whose papers have the most total citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in cite table . Step 2 : only keep the results of step 1 whose cited equals " dummy value " . Step 3 : find the number of jid of each value of name the results of step 2 . Step 4 : find the name the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the enroll table , student table , and class table . in step 2 , find the number of different department name for each value of school code . in step 3 , make sure that the corresponding value in step 2 less than 5 . find number of different department name in place of number of department address . find school code in place of number of school code . [question] Find the number of different departments in each school whose number of different departments is less than 5 . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the number of rows of each value of school code of the results of step 1 . Step 3 : find the number of department address and number of school code of the results of step 1 whose corresponding value in step 2 is less than 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , consider the open year less than 2010 conditions in place of the open year less than 2015 conditions . [question] For each city , how many branches opened before 2010 ? [system description] Step 1 : find rows in branch table whose open year less than 2015 . Step 2 : find each value of city the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
find number of different card type code in place of number of rows . [question] Show the number of card types . [system description] find the number of rows in customers cards table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 2 , consider the player position equals mid conditions in place of the player position equals striker conditions . in step 4 , consider the player position equals goalie conditions in place of the player position equals striker conditions . return the rows in the results of step 2 but not the results of step 4 . [question] Find the names of states that have some college students playing in the mid position but not in the goalie position . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the state of the results of step 1 whose player position equals " striker " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the state of the results of step 3 whose player position equals " striker " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie , mid ) [C] decision
additionally use the information from the files table besides the song table . order the results by duration in place of song name . [question] What is the name of the artist who produced the shortest song ? [system description] find the artist name in song table with smallest value of song name . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the name equals actor_name0 conditions in place of the name equals dummy value and birth year equals dummy value conditions . [question] When was " Kevin Spacey " born ? [system description] find the birth year in actor table whose name equals " dummy value " and birth year equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , find artist 's country in place of song 's country . only show me the first 3 results . [question] What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name and song 's country of the results of step 1 with largest value of rating . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally find sex . [question] How many faculty members do we have for each rank and gender ? [system description] find each value of rank and sex in faculty table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the mountain table and state table . in step 2 , consider the city name equals boulder conditions in place of the mountain name equals dummy value conditions . find city 's population in place of city name . [question] people in boulder [system description] Step 1 : for each row in city table , find the corresponding rows in state table and in mountain table . Step 2 : find the city name of the results of step 1 whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the songs table . in step 2 , consider the last name equals Heilo and title equals Der Kapitan conditions in place of the last name equals dummy value conditions . [question] What are the types of vocals that the musician with the last name " Heilo " played in " Der Kapitan " ? [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table . Step 2 : find the type of the results of step 1 whose last name equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , consider the product name equals chervil conditions in place of the product name equals cumin conditions . [question] What are the unit of measure and category code for the 'chervil ' product ? [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the unit of measure and products 's product category code of the results of step 1 whose product name equals " cumin " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( chervil ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
additionally use the information from the furniture manufacte table besides the manufacturer table . find for each value of manufacturer 's manufacturer id in place of name . [question] Find the number of funiture types produced by each manufacturer as well as the company names . [system description] find each value of name in manufacturer table along with the number of the corresponding rows to each value . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
in step 2 , consider the team name equals Clemson conditions in place of the team name equals Virginia Tech conditions . [question] Find the location and all games score of the school that has Clemson as its team name . [system description] Step 1 : for each row in university table , find the corresponding rows in basketball match table . Step 2 : find the location and all games of the results of step 1 whose team name equals " Virginia Tech " . [schema] [T] basketball match [C] team id [C] school id [C] team name ( Clemson ) [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
use claims processing stages table in place of claims processing table . find number of rows in place of number of claims processing 's claim stage id . [question] Find the number of distinct stages in claim processing . [system description] find the number of claim stage id in claims processing table . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , additionally use the information from the professor table and class table . in step 2 , remove the course description equals Intro . to Statistics conditions . find department name , professor office , and course description in place of department address . [question] What are the first names , office locations , and departments of all instructors , and also what are the descriptions of the courses they teach ? [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name , department address , department address of the results of step 1 whose course description equals " Intro . to Statistics " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] what states does the ohio river go through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the settlements table besides the claims table . [question] Find the number of settlements each claim corresponds to . Show the number together with the claim id . [system description] find each value of claim id in claims table along with the number of the corresponding rows to each value . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] what are the states that the ohio run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals texas conditions in place of the state name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities are in texas [system description] find the number of rows in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the city table besides the temperature table . consider the city equals Shanghai conditions in place of the aug equals 21.7 and dec equals 26.1 conditions . find jan in place of sep . [question] Give me the temperature of Shanghai in January . [system description] find the sep in temperature table whose dec equals 26.1 and aug equals 21.7 . [schema] [T] city [C] city id [C] city ( Shanghai ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
use sports info table in place of student table . additionally make sure that on scholarship equals Y . [question] What are the ids for all sporty students who are on scholarship ? [system description] find the student id in student table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 2 , consider the dorm name equals Smith Hall conditions in place of the dorm name equals Anonymous Donor Hall conditions . [question] What amenities does Smith Hall have in alphabetical order ? [system description] Step 1 : for each row in dorm table , find the corresponding rows in has amenity table and in dorm amenity table . Step 2 : find the amenity name of the results of step 1 whose dorm name equals " Anonymous Donor Hall " ordered ascending by amenity name . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name ( Smith Hall ) [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
additionally use the information from the member table besides the party table . find for each value of member 's party id in place of party name . [question] How many members are in each party ? [system description] find each value of party name in party table along with the number of the corresponding rows to each value . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , additionally use the information from the office locations table and companies table besides the buildings table . find for value of building id in place of buildings 's name . [question] Show the names of the buildings that have more than one company offices . [system description] Step 1 : find the number of rows of each value of name in buildings table . Step 2 : find the name in buildings table whose corresponding value in step 1 is greater than 1 . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
additionally use the information from the organization contact individuals table besides the individuals table . make sure no repetition in the results . [question] What are the last names of individuals who have been contact individuals for an organization ? [system description] find the individual last name in individuals table . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , consider the last name equals Smith and first name equals Linda conditions in place of the last name equals Woods and first name equals William conditions . [question] Show all game names played by Linda Smith [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table and in video games table . Step 2 : find the game name of the results of step 1 whose first name equals " William " and last name equals " Woods " . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , use movie table in place of copyright table , made by table , and producer table in step 2 , consider the release year less than 2010 and director 's name equals Quentin Tarantino conditions in place of the producer 's birth year less than dummy value and director 's name equals dummy value conditions . find number of different title in place of number of rows . [question] How many movies did " Quentin Tarantino " direct before 2010 ? [system description] Step 1 : for each row in producer table , find the corresponding rows in made by table and in copyright table and in directed by table and in director table . Step 2 : find the number of rows of the results of step 1 whose director 's name equals " dummy value " and producer 's birth year less than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , use enroll table in place of department table and course table in step 2 , consider the enroll grade equals A or enroll grade equals C conditions in place of the course code equals CIS-220 or course code equals QM-362 conditions . [question] Find names of all students who took some course and got A or C . [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name and student last name of the results of step 1 whose course code equals " QM-362 " or course code equals " CIS-220 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the year greater than 2000 and name equals VLDB conditions in place of the name equals dummy value and year greater than dummy value conditions . in step 3 , do not find for each value of jid . in step 4 , find title in place of jid and number of rows . find the result with the largest citation num . [question] return me the paper after 2000 in VLDB conference with the most citations . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . Step 3 : find the number of rows of each value of jid the results of step 2 . Step 4 : find the jid and number of rows the results of step 2 ordered descending by the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , consider the sex equals M conditions in place of the sex equals F conditions . in step 2 , use sports info table in place of plays games table and student table in step 3 , consider the sport name equals Football conditions in place of the sex equals F conditions . [question] Show all male student ids who do n't play football . [system description] Step 1 : find the student 's student id in student table whose sex equals " F " . Step 2 : for each row in student table , find the corresponding rows in plays games table . Step 3 : find the plays games 's student id of the results of step 2 whose sex equals " F " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Football ) [C] hours per week [C] games played [C] on scholarship
additionally use the information from the tryout table besides the college table . additionally make sure that decision equals yes . do not find for each value of state . find enrollment in place of number of rows . make sure no repetition in the results . [question] How many students are enrolled in colleges that have student accepted during tryouts , and in which states are those colleges ? [system description] find each value of state in college table along with the number of the corresponding rows to each value . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , consider the principal activities equals Cargo conditions in place of the principal activities equals Travel agency conditions . in step 4 , consider the principal activities equals Catering services conditions in place of the type equals Corporate conditions . [question] List the name of the pilots who have flied for both a company that mainly provide 'Cargo ' services and a company that runs 'Catering services ' activities . [system description] Step 1 : for each row in operate company table , find the corresponding rows in flight table . Step 2 : find the pilot of the results of step 1 whose principal activities equals " Travel agency " . Step 3 : for each row in operate company table , find the corresponding rows in flight table . Step 4 : find the pilot of the results of step 3 whose type equals " Corporate " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities ( Catering services , Cargo ) [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot [C] velocity [C] altitude [C] airport id [C] company id
in step 1 , additionally use the information from the enroll table besides the student table . find for value of enroll 's student number in place of student first name . [question] Find the first names of students who took exactly one class . [system description] Step 1 : find the number of rows of each value of student first name in student table . Step 2 : find the student first name in student table whose corresponding value in step 1 is equals 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
order the results by student gpa in place of student num . only show me the first 5 results . [question] What is the first name , GPA , and phone number of the students with the top 5 GPAs ? [system description] find the student first name , student gpa , student phone in student table with largest value of student num . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the state table . in step 2 , consider the mountain 's state name equals alaska conditions in place of the state 's country name equals dummy value conditions . [question] what mountains are in alaska [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table . Step 2 : find the mountain name of the results of step 1 whose state 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
order the results ascending . [question] List the names of companies by ascending number of sales . [system description] find the name in company table ordered descending by sales in billion . [schema] [T] people [C] people id [C] age [C] name [C] nationality [C] graduation college [T] company [C] company id [C] name [C] headquarters [C] industry [C] sales in billion [C] profits in billion [C] assets in billion [C] market value in billion [T] employment [C] company id [C] people id [C] year working
in step 1 , do not use the store table . in step 2 , consider the inventory 's store id equals 1 conditions in place of the inventory 's store id equals 2 conditions . [question] How many items in inventory does store 1 have ? [system description] Step 1 : for each row in store table , find the corresponding rows in inventory table . Step 2 : find the number of rows of the results of step 1 whose inventory 's store id equals 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , consider the openning year greater than or equals 2010 conditions in place of the openning year less than or equals 2012 conditions . [question] What is the location with the most cinemas opened in year 2010 or later ? [system description] Step 1 : find rows in cinema table whose openning year less than or equals 2012 . Step 2 : find the number of rows of each value of location the results of step 1 . Step 3 : find the location the results of step 1 with largest value in the results of step 2 . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
find acc percent in place of maximum acc percent . find the result with the largest acc percent . [question] What is the highest acc percent score in the competition ? [system description] find the maximum acc percent in basketball match table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , do not use the projects table . in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . [question] What are project ids of projects that have 2 or more corresponding documents ? [system description] Step 1 : for each row in documents table , find the corresponding rows in projects table . Step 2 : find the number of rows of each value of documents 's project id of the results of step 1 . Step 3 : find the projects 's project id of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
use city table in place of state table . consider the city 's population is equals maximum city 's population city conditions in place of the state 's country name equals dummy value conditions . find city 's population in place of number of rows . [question] how many citizens does the biggest city have in the usa [system description] find the number of rows in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the city 's population is equals minimum city 's population city conditions in place of the city 's country name equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the smallest city in the usa [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose city 's country name equals " dummy value " with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , additionally make sure that uk vat number is equals maximum uk vat number organizations . order the results ascending by date contact to in place of ordering descending by uk vat number . [question] Find the last name of the first ever contact person of the organization with the highest UK Vat number . [system description] Step 1 : for each row in individuals table , find the corresponding rows in organization contact individuals table and in organizations table . Step 2 : find the individual last name of the results of step 1 with largest value of uk vat number . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 2 , consider the city equals Mountain View and city equals Palo Alto conditions in place of the city equals Redwood City and end station name equals Powell at Post ( Union Square ) conditions . [question] How many trips stated from a station in Mountain View and ended at one in Palo Alto ? [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find the number of rows of the results of step 1 whose city equals " Redwood City " and end station name equals " Powell at Post ( Union Square ) " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View , Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
find number of rows in place of number of editor id . [question] What are the different ages of editors ? Show each age along with the number of editors of that age . [system description] find each value of age in editor table along with the number of editor id of the corresponding rows to each value . [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of states through which the mississippi river runs [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that relationship equals Spouse . [question] find all dependent names who have a spouse relation with some employee . [system description] find the dependent name in dependent table . [schema] [T] works on [C] employee ssn [C] project number [C] hours [T] employee [C] first name [C] minit [C] last name [C] ssn [C] birth date [C] address [C] sex [C] salary [C] super ssn [C] department no [T] department [C] department name [C] department number [C] manager ssn [C] manager start date [T] project [C] dependent name [C] dependent number [C] dependent location [C] department number [T] dependent [C] employee ssn [C] dependent name [C] sex [C] birth date [C] relationship ( Spouse ) [T] department locations [C] department number [C] department location
in step 1 , additionally use the information from the player table besides the school table . find for value of player 's school id in place of location . [question] Which schools have more than 1 player ? Give me the school locations . [system description] Step 1 : find the number of rows of each value of location in school table . Step 2 : find the location in school table whose corresponding value in step 1 is greater than 1 . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
use affected region table in place of region table . find number of different affected region 's region id in place of number of region name . [question] Count the number of different affected regions . [system description] find the number of region name in region table . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 2 , consider the year equals 1998 conditions in place of the year equals 1950 and death year equals 1950 conditions . [question] List the first and last name for players who participated in all star game in 1998 . [system description] Step 1 : for each row in all star table , find the corresponding rows in player table . Step 2 : find the name first and name last of the results of step 1 whose year equals 1950 and death year equals 1950 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally make sure that division equals AS . find number of rows in place of number of department name . [question] How many departments are in the division AS ? [system description] find the number of department name in department table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
use university table in place of basketball match table . find number of different affiliation in place of number of all neutral . [question] Find how many different affiliation types there are . [system description] find the number of all neutral in basketball match table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , additionally use the information from the artist table besides the song table . in step 2 , only show me the first 3 results . [question] Find the names and number of works of the three artists who have produced the most songs . [system description] Step 1 : find the number of rows of each value of artist name in song table . Step 2 : find the artist name and number of rows in song table with largest value in the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally make sure that active to date minus active from date is equals active to date minus active from date customer contact channels with largest active to date minus active from date . you should not find the largest of the results . show me all the results . [question] What is the channel code and contact number of the customer contact channel that was active for the longest time ? [system description] find the channel code and contact number in customer contact channels table with largest value of active to date . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally make sure that student gpa greater than 3 . additionally find student gpa . order the results by student date of birth in place of student gpa . [question] What is the first and last name of the youngest student with a GPA above 3 , and what is their GPA ? [system description] find the student first name and student last name in student table with largest value of student gpa . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally make sure that population is equals maximum population state . you should not find the largest of the results . show me all the results . [question] which state has the biggest population [system description] find the state name in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the class table . in step 2 , consider the course code equals ACCT-211 and enroll grade equals C conditions in place of the enroll grade equals A and enroll 's class code equals 10018 conditions . [question] What is the first name of students enrolled in class ACCT-211 and got grade C ? [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the student first name of the results of step 1 whose enroll grade equals " A " and class code equals 10018 . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use journal table , author table , and writes table in place of cite table in step 2 , consider the journal 's name equals PVLDB and citation num greater than 200 and author 's name equals H. V. Jagadish conditions in place of the citation num equals dummy value and cited greater than dummy value conditions . [question] return me the papers by " H. V. Jagadish " on PVLDB with more than 200 citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the title of the results of step 1 whose cited greater than " dummy value " and citation num equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . additionally find id . [question] For every medicine id , what are the names of the medicines that can interact with more than one enzyme ? [system description] Step 1 : for each row in medicine enzyme interaction table , find the corresponding rows in medicine table . Step 2 : find the number of rows of each value of medicine id of the results of step 1 . Step 3 : find the name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
in step 2 , consider the name full equals Yale University conditions in place of the college 's college id equals carioho conditions . [question] Find the average height of the players who belong to the college called 'Yale University ' . [system description] Step 1 : for each row in college table , find the corresponding rows in player college table and in player table . Step 2 : find the average height of the results of step 1 whose college 's college id equals " carioho " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id ( yale ) [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first ( Yale ) [C] name last ( Yale ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id ( yale ) [C] name full ( Yale University ) [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , additionally use the information from the participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] What is the name of the activity with the most students ? [system description] Step 1 : find the number of rows of each value of activity name in activity table . Step 2 : find the activity name in activity table with largest value in the results of step 1 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , consider the account name equals 162 conditions in place of the account name equals 866 conditions . [question] Give the full name and phone of the customer who has the account name 162 . [system description] Step 1 : for each row in customers table , find the corresponding rows in accounts table . Step 2 : find the customer first name , customer phone , customer last name of the results of step 1 whose account name equals 866 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
do not find for each value of college name . do not return college name . [question] How many students , on average , does each college have enrolled ? [system description] find each value of college name in college table along with the average enrollment of the corresponding rows to each value . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the teachers table . in step 2 , find for each value of list 's class room in place of grade . find list 's class room in place of number of rows . find number of different grade in place of grade . [question] For each classroom , report the classroom number and the number of grades using it . [system description] Step 1 : for each row in list table , find the corresponding rows in teachers table . Step 2 : find each value of grade of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
additionally make sure that rank equals Instructor . [question] What are the first name and last name of all the instructors ? [system description] find the first name and last name in faculty table . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Instructor ) [C] sex [C] phone [C] room [C] building
consider the city equals San Jose conditions in place of the city equals Redwood City conditions . additionally find average latitude . [question] What is the average latitude and longitude in San Jose ? [system description] find the average longitude and average longitude in station table whose city equals " Redwood City " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( San Jose ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , additionally use the information from the customer orders table besides the customers table . find for each value of customer orders 's customer id in place of customer name . [question] Return the name , phone number and email address for the customer with the most orders . [system description] Step 1 : find the number of rows of each value of customer name in customers table . Step 2 : find the customer name , customer phone , customer email in customers table with largest value in the results of step 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
additionally use the information from the lives in table and student table besides the dorm table . find average age in place of average dorm name . [question] What is the average age for each dorm and what are the names of each dorm ? [system description] find each value of dorm name in dorm table along with the average dorm name of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
order the results by length in place of height . [question] What are the speeds of the longest roller coaster ? [system description] find the speed in roller coaster table with largest value of height . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
in step 1 , additionally use the information from the class table . in step 2 , find for each value of course 's department code . order the results by summation of course credit in place of course credit . [question] Find the name of the department that offers the largest number of credits of all classes . [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find the department name of the results of step 1 with largest value of course credit . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the authorship count table besides the papers table . additionally make sure that author count is equals maximum author count authorship count . do not find for each value of papers 's paper id . in step 2 , you should not find the largest of the results . show me all the results . [question] Which paper has the most authors ? Give me the paper title . [system description] Step 1 : find the number of rows of each value of paper id in papers table . Step 2 : find the title and title in papers table with largest value in the results of step 1 . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
additionally use the information from the university table besides the basketball match table . order the results ascending by founded in place of ordering descending by acc regular season . [question] What is the team name and acc regular season score of the school that was founded for the longest time ? [system description] find the team name and acc regular season in basketball match table with largest value of acc regular season . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the age is equals minimum age person whose gender equals male and gender equals male conditions in place of the age not equals 45 conditions . you should not find the largest of the results . show me all the results . [question] What is the name of the youngest male ? [system description] find the name in person table whose age not equals 45 with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
find headquarter in place of founder . make sure no repetition in the results . [question] What are the different cities listed ? [system description] find the founder in manufacturers table . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , additionally use the information from the order items table and customer orders table besides the customers table . find for each value of customers 's customer id whose number of different product id greater than or equals 3 . in step 2 , make sure no repetition in the results . [question] Find the names of customers who have bought by at least three distinct products . [system description] Step 1 : find the number of rows of each value of customer name in customers table . Step 2 : find the customer name in customers table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
consider the city equals New York conditions in place of the elevation equals 3396 conditions . additionally find country . [question] What is the name , city , country , and elevation for every airport in the city of New York ? [system description] find the name , city , elevation in airports table whose elevation equals 3396 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( New York , York ) [C] country [C] x [C] y [C] elevation [C] iata ( NEW ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( NEW YORK , CITY ) [C] country [C] active
in step 2 , consider the tourist details equals Vincent conditions in place of the visitors 's tourist id equals 545 conditions . in step 3 , additionally use the information from the visitors table and visits table besides the tourist attractions table . consider the tourist details equals Marcelle conditions in place of the name equals fun shops conditions . [question] Which tourist attractions do the tourists Vincent and Marcelle visit ? Tell me the names of the attractions . [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table and in tourist attractions table . Step 2 : find the name of the results of step 1 whose visitors 's tourist id equals 545 . Step 3 : find the name in tourist attractions table whose name equals " fun shops " . Step 4 : show the rows that are in both the results of step 2 and step 3 . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Marcelle , Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , find maximum enrollment in place of minimum enrollment . in step 2 , make sure no repetition in the results . [question] What are the states with colleges that have enrollments less than the some other college ? [system description] Step 1 : find the minimum enrollment in college table . Step 2 : find the state in college table whose enrollment less than the results of step 1 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
use highlow table in place of mountain table . consider the highest point equals guadalupe peak conditions in place of the mountain name equals dummy value conditions . find highest elevation in place of number of rows . [question] how high is guadalupe peak [system description] find the number of rows in mountain table whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , order the results ascending . [question] Show the names of phones and the districts of markets they are on , in ascending order of the ranking of the market . [system description] Step 1 : for each row in phone table , find the corresponding rows in phone market table and in market table . Step 2 : find the name and district of the results of step 1 ordered descending by ranking . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
in step 2 , additionally make sure that uk vat number is equals maximum uk vat number organizations . order the results ascending by date contact to in place of ordering descending by uk vat number . [question] What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations ? [system description] Step 1 : for each row in individuals table , find the corresponding rows in organization contact individuals table and in organizations table . Step 2 : find the individual last name of the results of step 1 with largest value of uk vat number . [schema] [T] addresses [C] address id [C] line 1 number building [C] town city [C] zip postcode [C] state province county [C] country [T] services [C] service id [C] service type code [C] service name [C] service descriptio [T] forms [C] form id [C] form type code [C] service id [C] form number [C] form name [C] form description [T] individuals [C] individual id [C] individual first name [C] individual middle name [C] inidividual phone [C] individual email [C] individual address [C] individual last name [T] organizations [C] organization id [C] date formed [C] organization name [C] uk vat number [T] parties [C] party id [C] payment method code [C] party phone [C] party email [T] organization contact individuals [C] individual id [C] organization id [C] date contact from [C] date contact to [T] party addresses [C] party id [C] address id [C] date address from [C] address type code [C] date address to [T] party forms [C] party id [C] form id [C] date completion started [C] form status code [C] date fully completed [T] party services [C] booking id [C] customer id [C] service id [C] service datetime [C] booking made date
in step 1 , do not use the activity table , participates in table , and faculty participates in table . [question] Show all the faculty ranks and the number of students advised by each rank . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find each value of rank of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the college table . [question] Find the name and college of students whose decisions are yes in the tryout . [system description] Step 1 : for each row in college table , find the corresponding rows in tryout table and in player table . Step 2 : find the player name and college 's college name of the results of step 1 whose decision equals " yes " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
in step 1 , additionally use the information from the department table . in step 2 , consider the department name equals History conditions in place of the professor high degree equals DBA conditions . [question] What are the first names and offices of history professors who do n't have Ph.D.s ? [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose professor high degree equals " DBA " and professor high degree not equals " Ph.D . " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree ( Ph.D. ) [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the author count equals 1 and last name equals Ohori and country equals Japan conditions in place of the last name equals Turon and country equals UK conditions . [question] Find the titles of papers whose first author is affiliated with an institution in the country " Japan " and has last name " Ohori " ? [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table and in papers table . Step 2 : find the title of the results of step 1 whose country equals " UK " and last name equals " Turon " . [schema] [T] institution [C] institution id [C] name [C] country ( Japan ) [T] authors [C] author id [C] last name ( Ohori ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , consider the name equals VLDB conditions in place of the name equals dummy value conditions . find citation num in place of jid . [question] return me the citations of each paper in the VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the traverse equals idaho conditions in place of the state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers are found in idaho [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use publication keyword table in place of domain author table , domain table , author table , writes table , and domain keyword table in step 2 , consider the conference 's name equals VLDB conditions in place of the conference 's name equals dummy value conditions . in step 3 , find the number of different title for each value of keyword . in step 4 , make sure that the corresponding value in step 3 greater than 100 . [question] return me the keywords , which have been contained by more than 100 papers in VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose conference 's name equals " dummy value " . Step 3 : find the number of conference 's name of each value of keyword the results of step 2 . Step 4 : find the keyword the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
use university table in place of basketball match table . consider the university 's school id is not one of basketball match 's school id basketball match conditions in place of the all games not equals 35-2 conditions . [question] Count the number of universities that do not participate in the baketball match . [system description] find the number of rows in basketball match table whose all games not equals " 35–2 " . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , consider the border info 's state name equals texas conditions in place of the border equals dummy value conditions . [question] what are the populations of states which border texas [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the last name equals Smith and first name equals Linda conditions in place of the last name equals Brody and first name equals Bruce conditions . [question] What are the names of all games played by Linda Smith ? [system description] Step 1 : for each row in student table , find the corresponding rows in plays games table and in video games table . Step 2 : find the game name of the results of step 1 whose first name equals " Bruce " and last name equals " Brody " . [schema] [T] student [C] student id [C] last name ( Smith ) [C] first name ( Linda ) [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , additionally use the information from the list table besides the teachers table . additionally find for each value of teachers 's last name . [question] Which teacher teaches the most students ? Give me the first name and last name of the teacher . [system description] Step 1 : find the number of rows of each value of first name in teachers table . Step 2 : find the first name and last name in teachers table with largest value in the results of step 1 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
use the smallest in place of largest . [question] What is the joined year of the pilot of the highest rank ? [system description] find the join year in pilot table with largest value of rank . [schema] [T] aircraft [C] aircraft id [C] order year [C] manufacturer [C] model [C] fleet series [C] powertrain [C] fuel propulsion [T] pilot [C] pilot id [C] pilot name [C] rank [C] age [C] nationality [C] position [C] join year [C] team [T] pilot record [C] record id [C] pilot id [C] aircraft id [C] date
in step 1 , do not use the state table . in step 2 , consider the city name equals austin conditions in place of the city 's country name equals dummy value and state 's country name equals dummy value conditions . find number of city name in place of number of rows . [question] how many cities named austin are there in the usa [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state 's country name equals " dummy value " and city 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the journal table . in step 2 , consider the journal 's name equals PVLDB and year greater than 2010 conditions in place of the year greater than dummy value conditions . [question] return me the authors who have papers in PVLDB after 2010 . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the name of the results of step 1 whose year greater than " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not find for each value of area . in step 2 , find summation of area in place of area . [question] what is the combined area of all 50 states [system description] Step 1 : find the number of rows of each value of area in state table . Step 2 : find the area in state table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the member of club table and student table besides the club table . consider the first name equals Davis and last name equals Steven conditions in place of the club name equals Tennis Club conditions . make sure no repetition in the results . [question] List the clubs having " Davis Steven " as a member . [system description] find the club name in club table whose club name equals " Tennis Club " . [schema] [T] student [C] student id [C] last name ( Davis ) [C] first name ( Steven ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
consider the enrollment greater than 10000 conditions in place of the state greater than LA conditions . [question] What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana ? [system description] find the college name and enrollment in college table whose state greater than " LA " and state equals " LA " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , additionally make sure that name equals Zach . in step 2 , additionally make sure that name equals Zach . [question] Who is the friend of Zach with longest year relationship ? [system description] Step 1 : find the maximum year in person friend table . Step 2 : find the friend in person friend table whose year equals the results of step 1 . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
consider the population is equals minimum population city conditions in place of the state name equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the smallest city in the us [system description] find the city name in city table whose state name equals " dummy value " with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , make sure the customer id is not one of the results of step 1 the email address is not one of the results of step 1 . [question] Find the email and phone number of the customers who have never filed a complaint before . [system description] Step 1 : find the complaints 's customer id in complaints table . Step 2 : find the email address and phone number in customers table whose email address not one of the results of step 1 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 1 , do not use the membership register branch table . in step 2 , do not find for each value of membership register branch 's branch id . in step 3 , order the results by membership amount in place of number of rows . only show me the first 3 results . [question] What are the names for the 3 branches that have the most memberships ? [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : find the number of rows of each value of membership register branch 's branch id of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 2 , consider the date assigned from like 2016 % conditions in place of the date assigned from equals 2016-06-24 17:31:24 conditions . [question] What are the names and genders of staff who were assigned in 2016 ? [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff name and staff gender of the results of step 1 whose date assigned from equals " 2016-06-24 17:31:24 " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 3 , make sure that the corresponding value in step 2 greater than or equals 2 . additionally find customers cards 's customer id . [question] Show id , first and last names for all customers with at least two cards . [system description] Step 1 : for each row in customers table , find the corresponding rows in customers cards table . Step 2 : find the number of rows of each value of customers cards 's customer id of the results of step 1 . Step 3 : find the customer first name , customer first name , customer last name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 1 , use player table in place of college table in step 2 , consider the decision equals no conditions in place of the decision equals yes conditions . find average training hours in place of average enrollment . [question] Find the average hours for the students whose tryout decision is no . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the average enrollment of the results of step 1 whose decision equals " yes " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( no ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( no )
in step 2 , make sure no repetition in the results . [question] What is the first name of students who got grade C in any class ? [system description] Step 1 : for each row in student table , find the corresponding rows in enroll table . Step 2 : find the student first name of the results of step 1 whose enroll grade equals " C " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the rooms table besides the reservations table . in step 2 , find room name in place of room . [question] Which room has the largest number of reservations ? [system description] Step 1 : find the number of rows of each value of room in reservations table . Step 2 : find the room in reservations table with largest value in the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , additionally use the information from the party events table besides the party table . find for each value of party events 's party id whose number of rows greater than or equals 2 . [question] What are the names of parties with at least 2 events ? [system description] Step 1 : find the number of rows of each value of party name in party table . Step 2 : find the party name in party table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
consider the city name equals boulder conditions in place of the city name equals dummy value conditions . find population in place of summation of population . [question] how many people lived in boulder [system description] find the summation of population in city table whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the publication keyword table and publication table besides the keyword table . consider the title equals Making database systems usable conditions in place of the keyword equals dummy value conditions . find number of different keyword in place of number of rows . [question] return me the number of the keywords of " Making database systems usable " . [system description] find the number of rows in keyword table whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , consider the zip code equals 94103 conditions in place of the zip code equals 94565 conditions . in step 2 , make sure the duration is greater than or equals the results of step 1 the duration is greater than the results of step 1 . [question] Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103 . [system description] Step 1 : find the average duration in trip table whose zip code equals 94565 . Step 2 : find the id in trip table whose duration greater than the results of step 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
use bank table in place of customer table . find summation of no of customers in place of number of rows . [question] How many customers are there ? [system description] find the number of rows in customer table . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 2 , consider the first name equals Aaron and last name equals Turon conditions in place of the first name equals Amal conditions . find title in place of papers 's paper id . [question] Find all the papers published by " Aaron Turon " . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Amal " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Turon ) [C] first name ( Aaron ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
consider the mountain name equals whitney conditions in place of the mountain name equals dummy value conditions . find state name in place of number of rows . [question] where is mount whitney [system description] find the number of rows in mountain table whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] what states border the ohio river [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that customer address like % TN % . [question] Return the names and ids of customers who have TN in their address . [system description] find the customer name and customer id in customers table . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
make sure no repetition in the results . [question] What are the first names of all the students ? [system description] find the first name in student table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally use the information from the trip table besides the station table . additionally find average longitude . [question] What is the average latitude and longitude of all starting stations for the trips ? [system description] find the average latitude and average latitude in station table . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
consider the age greater than 20 conditions in place of the age greater than 26 conditions . find stuid in place of last name . [question] Show all student ids who are older than 20 . [system description] find the last name in student table whose age greater than 26 . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , do not use the artist table . in step 2 , consider the languages equals english conditions in place of the rating equals 7 conditions . make sure no repetition in the results . in step 3 , consider the rating greater than 8 conditions in place of the rating greater than 7 conditions . make sure no repetition in the results . [question] Find the names of the artists who have produced English songs but have never received rating higher than 8 . [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the artist 's artist name of the results of step 1 whose rating equals 7 . Step 3 : find the song 's artist name in song table whose rating greater than 7 . Step 4 : show the rows that are in the results of step 2 but not in the results of step 3 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 1 , use river table in place of lake table . find traverse in place of lake 's state name . in step 2 , find number of different state name in place of number of rows . [question] how many states do not have rivers [system description] Step 1 : find the lake 's state name in lake table . Step 2 : find the number of rows in state table whose state 's state name not one of the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , remove the employee 's name equals Lawrence Sperry conditions . [question] What are the names of all aircrafts that John Williams have certificates to be able to fly ? [system description] Step 1 : for each row in employee table , find the corresponding rows in certificate table and in aircraft table . Step 2 : find the aircraft 's name of the results of step 1 whose employee 's name equals " Lawrence Sperry " and employee 's name equals " John Williams " . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name ( John Williams ) [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , find for each value of room . additionally find check out . order the results by rate in place of beds . [question] Return the name , rate , check in and check out date for the room with the highest rate . [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the room name , check in , rate of the results of step 1 with largest value of beds . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals california conditions in place of the city 's state name equals dummy value conditions . find state 's population in place of summation of state 's population . [question] how much population does california have [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the summation of state 's population of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the movie table , cast table , directed by table , and director table besides the actor table . consider the actor 's nationality equals Iran and director 's name equals Jim Jarmusch conditions in place of the actor 's nationality equals dummy value conditions . find number of different actor 's name in place of number of rows . [question] find the number of actors from Iran who played in " Jim Jarmusch " movies [system description] find the number of rows in actor table whose nationality equals " dummy value " and nationality equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the person table . in step 2 , additionally make sure that year is equals minimum year person friend whose friend equals Alice . you should not find the largest of the results . show me all the results . [question] What are the names of all people who are friends with Alice for the shortest amount of time ? [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name of the results of step 1 whose friend equals " Alice " with largest value of year . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
in step 1 , use actor table in place of copyright table in step 2 , consider the actor 's name equals Taraneh Alidoosti and director 's name equals Asghar Farhadi conditions in place of the director 's name equals dummy value and role equals dummy value conditions . [question] List all the movies directed by " Asghar Farhadi " in which " Taraneh Alidoosti " played [system description] Step 1 : for each row in director table , find the corresponding rows in directed by table and in copyright table and in cast table and in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " and role equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river whose traverse equals texas and traverse equals texas conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the biggest river in texas [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , additionally make sure that length is equals minimum different length river . make sure no repetition in the results . you should not find the smallest of the results . show me all the results . [question] what state has the shortest river [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the largest city in wyoming [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , order the results by number of different traverse in place of number of rows . [question] which river traverses most states [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] give me the longest river that passes through the us [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , additionally make sure that rank equals Professor . make sure that the corresponding value in step 1 greater than or equals 10 . [question] Show all the buildings that have at least 10 professors . [system description] Step 1 : find the number of rows of each value of building in faculty table . Step 2 : find the building in faculty table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank ( Professor ) [C] sex [C] phone [C] room [C] building
in step 1 , do not use the class table . in step 2 , consider the enroll grade equals A and enroll 's class code equals 10018 conditions in place of the class 's class code equals 10017 conditions . [question] What is the last name of the student who got a grade A in the class with code 10018 . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table . Step 2 : find the student last name of the results of step 1 whose class 's class code equals 10017 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the sex equals M and club name equals Hopkins Student Enterprises conditions in place of the club name equals Tennis Club and last name equals Adams conditions . [question] Find all the male members of club " Hopkins Student Enterprises " . Show the first name and last name . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Tennis Club " and last name equals " Adams " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Hopkins Student Enterprises ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
find summation of num of component in place of number of rows . [question] How many furniture components are there in total ? [system description] find the number of rows in furniture table . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
in step 1 , do not use the allergy type table and has allergy table . in step 2 , consider the student 's stuid is not one of has allergy 's stuid has allergy whose has allergy 's allergy equals Soy conditions in place of the allergy type equals environmental conditions . [question] What are the first name and major of the students who are able to consume soy ? [system description] Step 1 : for each row in allergy type table , find the corresponding rows in has allergy table and in student table . Step 2 : find the first name and major of the results of step 1 whose allergy type equals " environmental " . [schema] [T] allergy type [C] allergy ( Soy ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Soy ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , use publication table and writes table in place of cite table in step 2 , consider the organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value and cited greater than dummy value conditions . find for each value of author 's name whose summation of citation num greater than 5000 . [question] return me the author in the " University of Michigan " whose papers have more than 5000 total citations . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table and in cite table . Step 2 : find the author 's name of the results of step 1 whose organization 's name equals " dummy value " and cited greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
order the results ascending . [question] Show the name , street address , and number of floors for all buildings ordered by the number of floors . [system description] find the name , street address , floors in building table ordered descending by floors . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
in step 1 , use employee table in place of professor table , student table , department table , and enroll table in step 2 , find for value of class 's professor employee number in place of class 's class code . in step 3 , find employee first name in place of professor extension and number of rows . [question] What are the first names of all professors who teach more than one class ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find the number of rows of each value of class 's class code of the results of step 1 . Step 3 : find the professor extension and number of rows of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the product characteristics table and products table besides the characteristics table . find for each value of characteristic name whose number of rows greater than or equals 2 . [question] What are characteristic names used at least twice across all products ? [system description] Step 1 : find the number of rows of each value of characteristic id in characteristics table . Step 2 : find the characteristic name in characteristics table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the state table . in step 3 , order the results by average city 's population in place of average state 's population . [question] which state has the smallest average urban population [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the average state 's population of each value of city 's state name of the results of step 1 . Step 3 : find the state 's state name of the results of step 1 with smallest value in the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use city table in place of border info table and state table in step 2 , consider the city 's state name equals wyoming and city 's population is equals maximum city 's population city whose city 's state name equals wyoming conditions in place of the border info 's state name equals dummy value conditions . find city name in place of area . you should not find the largest of the results . show me all the results . [question] where is the most populated area of wyoming [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose border info 's state name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the station table . in step 2 , consider the station id is not one of id station whose city equals Palo Alto conditions in place of the city not equals San Francisco conditions . [question] What is the average bike availability in stations that are not located in Palo Alto ? [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the average bikes available of the results of step 1 whose city not equals " San Francisco " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Palo Alto ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , use performance table in place of vocals table [question] What is the last name of the musician that have produced the most number of songs ? [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the number of rows of each value of last name of the results of step 1 . Step 3 : find the last name of the results of step 1 with largest value in the results of step 2 . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
consider the age greater than 20 conditions in place of the age greater than 27 conditions . find stuid in place of rows . [question] What are the student ids for students over 20 years old ? [system description] find the rows in student table whose age greater than 27 . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , consider the home game 's year equals 1980 conditions in place of the home game 's year equals 1995 conditions . in step 3 , do not find for each value of home game 's team id . in step 4 , order the results by home game 's attendance in place of number of rows . [question] Find the team that attended the least number of home games in 1980 . [system description] Step 1 : for each row in home game table , find the corresponding rows in team table . Step 2 : only keep the results of step 1 whose home game 's year equals 1995 . Step 3 : find the number of rows of each value of home game 's team id the results of step 2 . Step 4 : find the name the results of step 2 with smallest value in the results of step 3 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Homer ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Homer ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally use the information from the person friend table besides the person table . consider the gender equals female and friend equals Zach conditions in place of the gender equals male conditions . [question] Find the names of females who are friends with Zach [system description] find the name in person table whose gender equals " male " . [schema] [T] person [C] name ( Zach ) [C] age [C] city [C] gender ( female ) [C] job [T] person friend [C] name ( Zach ) [C] friend ( Zach ) [C] year
in step 1 , do not use the state table . in step 2 , consider the city name equals springfield conditions in place of the city 's state name equals dummy value conditions . find city 's state name in place of capital . [question] springfield is in what state [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the resolution less than 800 conditions in place of the resolution less than 320 conditions . make sure no repetition in the results . [question] List the file size and format for all songs that have resolution lower than 800 . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the file size and formats of the results of step 1 whose resolution less than 320 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what is the population density of the largest state [system description] find the density in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the claims table . in step 2 , find settlements 's date claim made in place of claims 's date claim made . [question] What are the claim dates and settlement dates of all the settlements ? [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the claims 's date claim made and settlements 's date claim settled of the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
additionally use the information from the has allergy table besides the allergy type table . [question] Show all allergy type with number of students affected . [system description] find each value of allergy type in allergy type table along with the number of the corresponding rows to each value . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , consider the customer details equals Dayana Robel conditions in place of the customer details equals Mrs. Lilly Graham III conditions . [question] Find all the policy type codes associated with the customer " Dayana Robel " [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table . Step 2 : find the policy type code of the results of step 1 whose customer details equals " Mrs. Lilly Graham III " . [schema] [T] customers [C] customer id [C] customer details ( Dayana Robel ) [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , use journal table , publication keyword table , and publication table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . [question] return me the keywords in PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in keyword table . Step 2 : find the keyword of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find team in place of player . order the results by team in place of player . [question] Find the team of each player and sort them in ascending alphabetical order . [system description] find the player in player table ordered ascending by player . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 2 , find training hours in place of college name . [question] Find the name and hours of the students whose tryout decision is yes . [system description] Step 1 : for each row in tryout table , find the corresponding rows in player table . Step 2 : find the college name and player name of the results of step 1 whose decision equals " yes " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( yes ) [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision ( yes )
consider the sex equals M conditions in place of the sex equals F conditions . find stuid in place of rows . [question] What are the student ids for all male students ? [system description] find the rows in student table whose sex equals " F " . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
find party name in place of took office . [question] Show all ministers and parties they belong to in descending order of the time they took office . [system description] find the minister and took office in party table ordered descending by took office . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , additionally use the information from the student table besides the department table . find for each value of student 's department code in place of department name . [question] Find the name and address of the department that has the highest number of students . [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name and department address in department table with largest value in the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] which city in wyoming has the largest population [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the institution table . in step 2 , consider the author count equals 2 and country equals USA conditions in place of the first name equals Jeremy conditions . find title in place of papers 's paper id . [question] Find papers whose second author has last name " Turon " and is affiliated with an institution in the country " USA " . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose first name equals " Jeremy " and last name equals " Turon " . [schema] [T] institution [C] institution id [C] name [C] country ( USA ) [T] authors [C] author id [C] last name ( Turon ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
find stuid in place of rows . [question] Show student ids for all male students . [system description] find the rows in student table whose sex equals " M " . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
consider the year less than or equals 2000 conditions in place of the gross worldwide less than 18720175 conditions . [question] Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross . [system description] find the title and director in movie table whose gross worldwide less than 18720175 with largest value of gross worldwide . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 1 , do not use the trip table . in step 2 , consider the zip code equals 94107 conditions in place of the zip code equals 94063 conditions . find minimum min dew point f in place of minimum trip 's zip code . in step 3 , make sure the min dew point f is less than the results of step 2 the zip code is less than the results of step 2 . [question] On which day and in which zip code was the min dew point lower than any day in zip code 94107 ? [system description] Step 1 : for each row in trip table , find the corresponding rows in weather table . Step 2 : find the minimum trip 's zip code of the results of step 1 whose weather 's zip code equals 94063 . Step 3 : find the date and weather 's zip code in weather table whose weather 's zip code less than the results of step 2 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
make sure no repetition in the results . [question] Show all main industry for all companies . [system description] find the main industry in company table . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
consider the last name equals SWEAZY and first name equals ROY conditions in place of the last name equals DIEUDONNE and first name equals KEELY conditions . find kids in place of number of rows . [question] How many kids stay in the rooms reserved by ROY SWEAZY ? [system description] find the number of rows in reservations table whose first name equals " KEELY " and last name equals " DIEUDONNE " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
additionally use the information from the department table besides the course table . consider the department name equals Computer Info . Systems conditions in place of the course 's department code equals CIS conditions . [question] How many courses does the department of Computer Information Systmes offer ? [system description] find the number of rows in course table whose department code equals " CIS " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use journal table , publication table , and writes table in place of organization table in step 2 , consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . [question] return me the authors who have papers in PVLDB . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the author 's name of the results of step 1 whose organization 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally make sure that job equals engineer . find minimum age in place of maximum age . in step 2 , order the results by age in place of name . [question] What is the name of all the people who are older than at least one engineer ? Order them by age . [system description] Step 1 : find the maximum age in person table . Step 2 : find the name in person table whose age greater than the results of step 1 ordered ascending by name . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the longest river in america [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what is the population of the state with the largest area [system description] find the population in state table with largest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , additionally find checking 's balance . order the results by checking 's balance plus savings 's balance in place of checking 's balance . [question] Find the name , checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order . [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name , savings 's balance , savings 's balance of the results of step 1 ordered descending by checking 's balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
additionally use the information from the election table besides the county table . find for each value of county id in place of county name . [question] For each county , find the name of the county and the number of delegates from that county . [system description] find each value of county name in county table along with the number of the corresponding rows to each value . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 1 , do not use the has allergy table . [question] Show all allergies and their types . [system description] Step 1 : for each row in has allergy table , find the corresponding rows in allergy type table . Step 2 : find the has allergy 's allergy and allergy type of the results of step 1 . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , additionally use the information from the cast table . in step 2 , consider the name equals Shahab Hosseini conditions in place of the name equals dummy value conditions . find number of different title in place of number of rows . [question] How many movies did " Shahab Hosseini " act in [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the state table . in step 2 , consider the traverse equals idaho conditions in place of the state name equals dummy value conditions . find number of river name in place of number of rows . [question] how many rivers run through idaho [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the genre 's name equals Rock conditions in place of the genre 's name equals Science Fiction conditions . [question] Count the number of tracks that are part of the rock genre . [system description] Step 1 : for each row in genre table , find the corresponding rows in track table . Step 2 : find the number of rows of the results of step 1 whose genre 's name equals " Science Fiction " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name ( Rock ) [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the people table . in step 2 , do not find for each value of poll source . in step 3 , order the results by oppose rate in place of number of rows . [question] which poll source does the highest oppose rate come from ? [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the number of rows of each value of poll source of the results of step 1 . Step 3 : find the poll source of the results of step 1 with largest value in the results of step 2 . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
additionally find venue . [question] Show the dates , places , and names of events in descending order of the attendance . [system description] find the date , name , name in event table ordered descending by event attendance . [schema] [T] event [C] event id [C] date [C] venue [C] name [C] event attendance [T] journalist [C] journalist id [C] name [C] nationality [C] age [C] years working [T] news report [C] journalist id [C] event id [C] work type
in step 2 , consider the name equals Tokohu University conditions in place of the name equals INRIA conditions . find number of different title in place of number of rows . [question] Find the number of papers published by authors from the institution " Tokohu University " . [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the number of rows of the results of step 1 whose name equals " INRIA " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the team table and appearances table . in step 2 , consider the home game 's year equals 2008 conditions in place of the appearances 's year equals 1876 conditions . in step 3 , do not find for each value of park name . in step 4 , order the results by home game 's attendance in place of number of rows . [question] Which park did the most people attend in 2008 ? [system description] Step 1 : for each row in appearances table , find the corresponding rows in team table and in home game table and in park table . Step 2 : only keep the results of step 1 whose appearances 's year equals 1876 . Step 3 : find the number of rows of each value of park name the results of step 2 . Step 4 : find the park name the results of step 2 with largest value in the results of step 3 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 3 , make sure that the corresponding value in step 2 greater than 30 . [question] Which film actors ( actresses ) played a role in more than 30 films ? List his or her first name and last name . [system description] Step 1 : for each row in film actor table , find the corresponding rows in actor table . Step 2 : find the number of rows of each value of film actor 's actor id of the results of step 1 . Step 3 : find the first name and last name of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
find maximum age in place of age . you should not find the largest of the results . show me all the results . [question] What is the oldest age among the students ? [system description] find the age in student table with largest value of age . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , additionally use the information from the authorship count table besides the papers table . additionally make sure that author count is equals maximum author count authorship count . do not find for each value of papers 's paper id . in step 2 , do not return papers 's paper id . you should not find the largest of the results . show me all the results . [question] Retrieve the title of the paper that has the largest number of authors . [system description] Step 1 : find the number of rows of each value of paper id in papers table . Step 2 : find the title and paper id in papers table with largest value in the results of step 1 . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
additionally make sure that population is equals minimum population city . find state name in place of city name . you should not find the smallest of the results . show me all the results . [question] where is the smallest city [system description] find the city name in city table with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the song table . [question] Find the id of the song that lasts the longest . [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the song 's song id of the results of step 1 with largest value of duration . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the state table . in step 2 , consider the highest elevation is equals maximum highest elevation highlow conditions in place of the country name equals dummy value conditions . find highest point in place of maximum highest point . [question] what is the highest point of the usa [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the track table besides the race table . additionally find track 's name . [question] Show the name and date for each race and its track name . [system description] find the name , date , date in race table . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
additionally use the information from the author table besides the organization table . consider the organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value conditions . find number of different author 's name in place of number of organization 's oid . [question] return me the number of researchers in " University of Michigan " . [system description] find the number of oid in organization table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , use inventory table in place of store table . [question] Which store owns most items ? [system description] Step 1 : find the number of rows of each value of store id in store table . Step 2 : find the store id in store table with largest value in the results of step 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 2 , consider the border info 's state name equals texas conditions in place of the border equals dummy value conditions . [question] what are the capital cities of the states which border texas [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find number of rows in place of number of amenity name . [question] Find the number of distinct amenities . [system description] find the number of amenity name in dorm amenity table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 2 , consider the year greater than 2000 and name equals H. V. Jagadish conditions in place of the name equals dummy value and year greater than dummy value conditions . find number of different title in place of number of rows . [question] return me the number of papers by " H. V. Jagadish " after 2000 . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the bank table and loan table besides the customer table . consider the credit score less than 100 conditions in place of the credit score less than 210 conditions . find bname in place of customer name . [question] What are the names of banks that have loaned money to customers with credit scores below 100 ? [system description] find the customer name in customer table whose credit score less than 210 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , additionally use the information from the teachers table besides the list table . additionally make sure that grade equals 1 . make sure no repetition in the results . in step 3 , consider the teachers 's first name equals OTHA and teachers 's last name equals MOYER conditions in place of the teachers 's first name equals KIRK conditions . find list 's last name in place of teachers 's last name . [question] What are the first and last names of the first-grade students who are NOT taught by teacher OTHA MOYER ? [system description] Step 1 : find the list 's first name and list 's last name in list table . Step 2 : for each row in teachers table , find the corresponding rows in list table . Step 3 : find the list 's first name and teachers 's last name of the results of step 2 whose teachers 's first name equals " KIRK " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
additionally use the information from the medicine enzyme interaction table besides the medicine table . find for each value of id . order the results descending by number of rows in place of ordering ascending by fda approved . [question] What are the ids , names , and FDA approval status for medicines ordered by descending number of possible enzyme interactions ? [system description] find the id , name , fda approved in medicine table ordered ascending by fda approved and fda approved . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type
additionally use the information from the has allergy table besides the student table . you shoud consider either of the conditions rather than both of them . consider the allergy equals Eggs or allergy equals Milk conditions in place of the sex equals M conditions . [question] How many students who are female are allergic to milk or eggs ? [system description] find the number of rows in student table whose sex equals " M " and sex equals " F " . [schema] [T] allergy type [C] allergy ( Milk , Eggs ) [C] allergy type [T] has allergy [C] stuid [C] allergy ( Milk , Eggs ) [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 1 , do not use the college table . in step 2 , consider the player position equals goalie conditions in place of the player position equals mid conditions . find number of rows in place of number of enrollment . [question] How many students whose are playing the role of goalie ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the number of enrollment of the results of step 1 whose player position equals " mid " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
in step 1 , do not use the mountain table and state table . in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . you should not find the largest of the results . show me all the results . [question] what is the state that contains the highest point [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain 's state name of the results of step 1 with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , order the results by number of different traverse in place of number of rows . [question] which river goes through the most states [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the state name equals dummy value conditions . [question] what are the rivers of illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] which state is the smallest [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] what state has the lowest population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally find minimum low temperature . [question] show the lowest low temperature and highest wind speed in miles per hour . [system description] find the maximum wind speed mph and maximum wind speed mph in weekly weather table . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
in step 1 , do not find for each value of mean dew point f . in step 2 , additionally find mean temperature f . find mean humidity in place of average mean humidity . order the results by max gust speed mph in place of mean humidity . only show me the first 3 results . [question] What is the date , average temperature and mean humidity for the days with the 3 largest maximum gust speeds ? [system description] Step 1 : find the mean humidity of each value of mean dew point f in weather table . Step 2 : find the date , average mean humidity , average mean humidity in weather table with largest value in the results of step 1 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , do not use the college table . in step 2 , make sure no repetition in the results . [question] Find the name of different colleges involved in the tryout in alphabetical order . [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 ordered ascending by tryout 's college name . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , consider the activity name equals Canoeing conditions in place of the activity name equals Accordion Ensemble conditions . find last name in place of first name . in step 4 , find last name in place of first name . [question] What are the first names of the faculty members playing both Canoeing and Kayaking ? [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Accordion Ensemble " . Step 3 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 4 : find the first name of the results of step 3 whose activity name equals " Kayaking " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . you should not find the largest of the results . show me all the results . [question] what is the capital of the state with the highest elevation [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the capital of the results of step 1 with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the list table besides the teachers table . consider the list 's first name equals GELL and list 's last name equals TAMI conditions in place of the teachers 's first name equals OTHA conditions . [question] What are the last names of the teachers who teach the student called GELL TAMI ? [system description] find the last name in teachers table whose first name equals " OTHA " . [schema] [T] list [C] last name ( GELL ) [C] first name (  TAMI ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
use bank table and loan table in place of customer table . find bname in place of customer name . make sure no repetition in the results . [question] What are the names of the different banks that have provided loans ? [system description] find the customer name in customer table . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 2 , consider the name equals VLDB conditions in place of the name equals dummy value conditions . in step 3 , find number of different title in place of number of rows . [question] return me the number of papers published in the VLDB conference in each year . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not find for each value of farm id . in step 2 , do not return farm id . find total horses in place of summation of total horses . order the results by total horses in place of number of rows . [question] What is the total horses record for each farm , sorted ascending ? [system description] Step 1 : find the number of rows of each value of farm id in farm table . Step 2 : find the summation of total horses and farm id in farm table ordered ascending by the results of step 1 . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
in step 2 , consider the characteristic name equals hot conditions in place of the characteristic name equals cool conditions . [question] How many products have the characteristic named " hot " ? [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " cool " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name ( hot ) [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , use enroll table and class table in place of department table and course table in step 2 , consider the class 's course code equals ACCT-211 and enroll grade equals C conditions in place of the course 's department code equals CIS and student class hours took equals 66 conditions . [question] What are the first names of all students who took ACCT-211 and received a C ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name of the results of step 1 whose student class hours took equals 66 and course 's department code equals " CIS " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , use membership register branch table in place of purchase table in step 2 , consider the hometown equals Louisville , Kentucky conditions in place of the hometown equals Simpsonville , South Carolina and city equals Oxford conditions . in step 3 , use membership register branch table in place of purchase table in step 4 , consider the hometown equals Hiram , Georgia conditions in place of the hometown equals Louisville , Kentucky conditions . [question] What are the names of the branches that have some members with a hometown in Louisville , Kentucky and also those from Hiram , Goergia ? [system description] Step 1 : for each row in branch table , find the corresponding rows in purchase table and in member table . Step 2 : find the branch 's name of the results of step 1 whose city equals " Oxford " and hometown equals " Simpsonville , South Carolina " . Step 3 : for each row in branch table , find the corresponding rows in purchase table and in member table . Step 4 : find the branch 's name of the results of step 3 whose hometown equals " Louisville , Kentucky " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
use class table in place of course table . find number of different class 's course code in place of number of rows . [question] How many courses are offered ? [system description] find the number of rows in course table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the customer name equals Tillman Ernser conditions in place of the customer name equals Dr. Julia Wuckert MD conditions . find maximum active to date in place of active to date . you should not find the largest of the results . show me all the results . [question] Return the the " active to date " of the latest contact channel used by the customer named " Tillman Ernser " . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the active to date of the results of step 1 whose customer name equals " Dr. Julia Wuckert MD " with largest value of active to date . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , do not use the mountain table and state table . in step 2 , consider the highlow 's state name equals texas conditions in place of the mountain 's state name equals dummy value conditions . find maximum different highest elevation in place of mountain altitude . you should not find the largest of the results . show me all the results . [question] what is the height of the highest mountain in texas [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain altitude of the results of step 1 whose mountain 's state name equals " dummy value " with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , find for each value of major . find major in place of student id . order the results by number of rows in place of major . [question] Find the first and last name of students who are not in the largest major . [system description] Step 1 : find the student id in student table with largest value of major . Step 2 : find the first name and last name in student table whose major not equals the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
use the smallest in place of largest . [question] Show the enrollment and primary_conference of the oldest college . [system description] find the enrollment and primary conference in university table with largest value of founded . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 2 , find for each value of manufacturers 's name . additionally find products 's name . find maximum price in place of price . you should not find the largest of the results . show me all the results . [question] For each manufacturer name , what are the names and prices of their most expensive product ? [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find the manufacturers 's name and price of the results of step 1 with largest value of price . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois and length greater than 750 conditions in place of the area equals dummy value conditions . [question] what major rivers run through illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find for each value of founder . additionally find founder . [question] What is the total revenue of companies started by founder ? [system description] find the summation of revenue in manufacturers table . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
find for each value of headquarter . find maximum revenue in place of revenue . you should not find the largest of the results . show me all the results . [question] What are the names and revenues of the companies with the highest revenues in each headquarter city ? [system description] find the name , headquarter , revenue in manufacturers table with largest value of headquarter . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 2 , consider the population greater than 1000 conditions in place of the population greater than 351 conditions . [question] What are the themes of competitions that have corresponding host cities with more than 1000 residents ? [system description] Step 1 : for each row in farm competition table , find the corresponding rows in city table . Step 2 : find the theme of the results of step 1 whose population greater than 351 . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
order the results by region code in place of region name . [question] What are the codes and names for all regions , sorted by codes ? [system description] find the region code and region name in region table ordered ascending by region name . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
additionally use the information from the faculty participates in table besides the activity table . find for each value of activity 's activity id in place of activity name . [question] How many faculty members participate in each activity ? Return the activity names and the number of faculty members . [system description] find each value of activity name in activity table along with the number of the corresponding rows to each value . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the artist table . in step 2 , consider the resolution greater than 500 conditions in place of the resolution greater than 320 conditions . in step 4 , do not return languages . [question] What is the name of the artist , for each language , that has the most songs with a higher resolution than 500 ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : only keep the results of step 1 whose resolution greater than 320 . Step 3 : find the number of rows of each value of languages the results of step 2 . Step 4 : find the artist 's artist name and languages the results of step 2 with largest value in the results of step 3 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , additionally make sure that population is equals maximum population state . find state name in place of maximum population . in step 3 , make sure the state name is equals the results of step 2 the population is equals the results of step 2 . find number of river name in place of number of rows . [question] how many rivers are in the state with the largest population [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the maximum population in state table . Step 3 : find the number of rows of the results of step 1 whose population equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use files table in place of genre table in step 3 , find minimum duration in place of maximum song 's rating . order the results by genre is in place of genre 's rating . [question] What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre ? [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the genre 's rating of each value of genre name of the results of step 1 . Step 3 : find the maximum song 's rating , minimum song 's rating , genre name of the results of step 1 ordered ascending by the results of step 2 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , use sports info table in place of plays games table . [question] What are the ids of all students who played video games and sports ? [system description] Step 1 : find the student id in plays games table . Step 2 : find the student id in plays games table . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , do not use the lives in table . in step 2 , do not find for each value of major . find number of different city code in place of number of rows . find number of different major in place of major . [question] Find the numbers of different majors and cities . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table . Step 2 : find each value of major of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 2 , order the results by number of different traverse in place of number of rows . [question] which river runs through the most states [system description] Step 1 : find the number of rows of each value of river name in river table . Step 2 : find the river name in river table with largest value in the results of step 1 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the department table . in step 2 , consider the department name equals Biology conditions in place of the professor office equals DRE 156 conditions . find employee first name in place of professor 's department code . [question] What are the first and last name of all biology professors ? [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the department code and employee last name of the results of step 1 whose professor office equals " DRE 156 " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( Biology ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally make sure that card type code equals Debit . [question] How many debit cards do we have ? [system description] find the number of rows in customers cards table . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code ( Debit ) [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
additionally make sure that active equals 1 . [question] Count the number of customers who are active . [system description] find the number of rows in customer table . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , consider the zip code equals 94002 conditions in place of the zip code equals 94158 conditions . [question] Which bike traveled the most often in zip code 94002 ? [system description] Step 1 : find rows in trip table whose zip code equals 94158 . Step 2 : find the number of rows of each value of bike id the results of step 1 . Step 3 : find the bike id the results of step 1 with largest value in the results of step 2 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , consider the city code equals NYC and election cycle equals Spring conditions in place of the class senator vote equals 1018 and city code equals BOS conditions . [question] Which students live in the city with code " NYC " and have class senator votes in the spring election cycle ? Count the numbers . [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the number of rows of the results of step 1 whose city code equals " BOS " and class senator vote equals 1018 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( NYC ) [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , do not use the membership register branch table . [question] How many branches where have more than average number of memberships are there ? [system description] Step 1 : for each row in membership register branch table , find the corresponding rows in branch table . Step 2 : find the average membership amount in branch table . Step 3 : find the number of rows of the results of step 1 whose membership amount greater than the results of step 2 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
remove the country name equals dummy value conditions . find density in place of population and state name . [question] what are the population densities of each us state [system description] find the population and state name in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the manufacturers table besides the products table . find rows in place of products 's name and manufacturer . [question] Select all the data from the products and each product 's manufacturer . [system description] find the name and manufacturer in products table . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
consider the area is equals maximum area state conditions in place of the country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the largest state in usa [system description] find the state name in state table whose country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the affected region table besides the storm table . [question] How many regions were affected by each storm ? [system description] find each value of storm id in storm table along with the number of the corresponding rows to each value . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , consider the rating less than 8 conditions in place of the rating less than 7 conditions . find maximum resolution in place of minimum resolution . [question] What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8 ? [system description] Step 1 : find the minimum resolution in song table whose rating less than 7 . Step 2 : find the song id in song table whose resolution greater than the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the member table . in step 2 , find took office and left office in place of in office . order the results by left office in place of took office . [question] Who are the ministers , when did they take office , and when did they leave office , ordered by when they left office ? [system description] Step 1 : for each row in party table , find the corresponding rows in member table . Step 2 : find the minister and in office of the results of step 1 ordered ascending by took office . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 1 , do not use the state table . in step 2 , consider the traverse equals illinois conditions in place of the area equals dummy value conditions . [question] which rivers are in illinois [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the name equals Boston Red Stockings and salary 's year equals 2010 conditions in place of the salary 's team id equals OAK and team 's year equals 1897 conditions . [question] What is the total salary paid by team Boston Red Stockings in 2010 ? [system description] Step 1 : for each row in salary table , find the corresponding rows in team table . Step 2 : find the summation of salary of the results of step 1 whose salary 's team id equals " OAK " and team 's year equals 1897 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the person friend table . [question] list the name , job title of all people ordered by their names . [system description] Step 1 : for each row in person friend table , find the corresponding rows in person table . Step 2 : find the person 's name and job of the results of step 1 ordered ascending by person friend 's name . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
additionally make sure that population is equals maximum population city . you should not find the largest of the results . show me all the results . [question] what state has the city with the largest population [system description] find the state name in city table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use class table in place of department table and course table in step 2 , remove the employee job code equals CLRK conditions . [question] What are the first names of all teachers who have taught a course and the corresponding course codes ? [system description] Step 1 : for each row in employee table , find the corresponding rows in department table and in course table . Step 2 : find the employee first name and course code of the results of step 1 whose employee job code equals " CLRK " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
do not find for each value of rank . do not return rank . [question] What is the minimum , maximum , and average market value for every company ? [system description] find each value of rank in company table along with the maximum market value , minimum market value , and average market value of the corresponding rows to each value . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
additionally use the information from the vocals table besides the songs table . additionally make sure that type equals shared . find number of different title in place of number of rows . [question] How many songs have a shared vocal ? [system description] find the number of rows in songs table . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the theme parks table and tourist attractions table . in step 2 , consider the location name equals UK Gallery conditions in place of the location name equals American Adventure conditions . find locations 's other details in place of theme park details . [question] Return the detail of the location named " UK Gallery " . [system description] Step 1 : for each row in locations table , find the corresponding rows in tourist attractions table and in theme parks table . Step 2 : find the theme park details of the results of step 1 whose location name equals " American Adventure " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name ( UK Gallery ) [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description ( gallery ) [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name ( UK gallery ) [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the title equals Le Pop conditions in place of the title equals dummy value conditions . [question] Find the number of vocal types used in song " Le Pop " [system description] Step 1 : for each row in vocals table , find the corresponding rows in songs table . Step 2 : find the number of rows of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , remove the num of stock greater than 874 conditions . find for each value of name whose summation of num of stock greater than or equals 2000 . [question] Show the names of phones that have total number of stocks bigger than 2000 , in descending order of the total number of stocks . [system description] Step 1 : for each row in phone market table , find the corresponding rows in phone table . Step 2 : find the name of the results of step 1 whose num of stock greater than 874 ordered descending by summation of num of stock . [schema] [T] phone [C] name [C] phone id [C] memory in g [C] carrier [C] price [T] market [C] market id [C] district [C] num of employees [C] num of shops [C] ranking [T] phone market [C] market id [C] phone id [C] num of stock
make sure no repetition in the results . [question] Show each student 's first name and last name . [system description] find the first name and last name in list table . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
find for each value of state . additionally find state and minimum enrollment . you should not find the smallest of the results . show me all the results . [question] What is the name of the school with smallest enrollment size per state ? [system description] find the college name in college table with smallest value of enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the cinema table and schedule table . [question] List all directors along with the number of films directed by each director . [system description] Step 1 : for each row in film table , find the corresponding rows in schedule table and in cinema table . Step 2 : find each value of directed by of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
in step 2 , consider the country equals Canada conditions in place of the city equals Pembroke conditions . [question] How many routes end in a Canadian airport ? [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table . Step 2 : find the number of rows of the results of step 1 whose city equals " Pembroke " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Ende , Enid ) [C] country [C] x [C] y [C] elevation [C] iata ( END ) [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao ( END ) [C] call sign ( CANADIAN , Canadian ) [C] country [C] active
in step 1 , do not use the documents table . in step 2 , consider the budget type description equals Government conditions in place of the budget type description equals Organisation conditions . [question] Show ids for all documents with budget types described as 'Government ' . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find the documents 's document id of the results of step 1 whose budget type description equals " Organisation " . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description ( Government ) [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details ( government ) [T] accounts [C] account id [C] statement id [C] account details
in step 2 , do not return duration . [question] For each end station id , what is its name , latitude , and minimum duration for trips ended there ? [system description] Step 1 : for each row in station table , find the corresponding rows in trip table . Step 2 : find each value of end station id of the results of step 1 along with the name , minimum duration , latitude , and duration of the corresponding rows to each value . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
do not find for each value of gender . find number of different gender in place of gender . find number of different gender in place of number of gender . [question] Find the number of distinct gender for dorms . [system description] find each value of gender in dorm table along with the number of gender of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
consider the state name equals kansas and population greater than 150000 conditions in place of the state name equals dummy value conditions . [question] what is the major cities in kansas [system description] find the city name in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the customer details like % Diana % conditions in place of the customer id like 520 conditions . find customer details in place of customer id . [question] Find the names of customers whose name contains " Diana " . [system description] find the customer id in customers table whose customer id like 520 . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 2 , find for each value of country 's name in place of country 's country id . [question] Show the names of countries and the average speed of roller coasters from each country . [system description] Step 1 : for each row in country table , find the corresponding rows in roller coaster table . Step 2 : find each value of country 's country id of the results of step 1 along with the country 's name and average speed of the corresponding rows to each value . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
in step 1 , use performance table in place of vocals table in step 2 , consider the title equals Le Pop and last name equals Heilo conditions in place of the last name equals dummy value and title equals dummy value conditions . [question] What instruments did the musician with the last name " Heilo " play in the song " Le Pop " ? [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table and in instruments table . Step 2 : find the instrument of the results of step 1 whose title equals " dummy value " and last name equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , consider the name equals VLDB and year equals 2005 conditions in place of the name equals dummy value and year equals dummy value conditions . find summation of citation num in place of summation of jid . [question] return me the total citations of papers in the VLDB conference in 2005 . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : find the summation of jid of the results of step 1 whose name equals " dummy value " and year equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
order the results ascending . only show me the first 3 results . [question] Show the name of aircrafts with top three lowest distances . [system description] find the name in aircraft table with largest value of distance . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not find for each value of num of component . in step 2 , order the results by market rate in place of number of rows . [question] Find the name and component amount of the least popular furniture . [system description] Step 1 : find the number of rows of each value of num of component in furniture table . Step 2 : find the name and num of component in furniture table with smallest value in the results of step 1 . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
additionally use the information from the roles table besides the employees table . find role description in place of employees 's role code . [question] What is the role of the employee named Koby ? [system description] find the role code in employees table whose employee name equals " Koby " . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name ( Koby ) [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
in step 2 , consider the network name equals Amersham conditions in place of the network name equals Chesham conditions . find maximum low temperature in place of maximum precipitation . [question] Give me the maximum low temperature and average precipitation at the Amersham station . [system description] Step 1 : for each row in station table , find the corresponding rows in weekly weather table . Step 2 : find the maximum precipitation and average precipitation of the results of step 1 whose network name equals " Chesham " . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name ( Amersham ) [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
in step 1 , consider the year equals 2010 conditions in place of the year equals 1994 conditions . in step 2 , consider the year equals 2001 conditions in place of the year equals 1988 conditions . return the rows in any of the results of step 1 and the results of step 2 . [question] List all the salary values players received in 2010 and 2001 . [system description] Step 1 : find the salary in salary table whose year equals 1994 . Step 2 : find the salary in salary table whose year equals 1988 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , additionally use the information from the cast table . in step 2 , consider the title equals The Imitation Game and role equals Alan Turing conditions in place of the title equals dummy value conditions . [question] Who acted " Alan Turing " in the movie " The Imitation Game " ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
consider the bats equals R and birth country equals USA conditions in place of the birth country equals Bahamas conditions . find number of rows in place of number of player id . [question] How many players born in USA are right-handed batters ? That is , have the batter value ' R ' . [system description] find the number of player id in player table whose birth country equals " Bahamas " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country ( USA ) [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country ( USA ) [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country ( USA ) [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
additionally use the information from the department table , employee table , and class table besides the professor table . consider the department name equals Accounting conditions in place of the professor office equals KLR 229D conditions . find class room and employee first name in place of professor office . [question] What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach ? [system description] find the professor office and professor office in professor table whose professor office equals " KLR 229D " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , find for each value of student 's department code in place of department name . [question] What is the name and the average gpa of department whose students have the highest average gpa ? [system description] Step 1 : for each row in department table , find the corresponding rows in student table . Step 2 : find the average student gpa of each value of department name of the results of step 1 . Step 3 : find the department name and average student gpa of the results of step 1 with largest value in the results of step 2 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the band table . in step 2 , consider the title equals Le Pop conditions in place of the title equals dummy value conditions . find first name and last name in place of bandmate . [question] Who performed the song named " Le Pop " ? [system description] Step 1 : for each row in performance table , find the corresponding rows in songs table . Step 2 : find the bandmate of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , you shoud consider either of the conditions rather than both of them . consider the genre 's name equals Latin or genre 's name equals Pop conditions in place of the genre 's name equals Drama and track 's name equals Stone Crazy conditions . [question] Find the average millisecond length of Latin and Pop tracks . [system description] Step 1 : for each row in genre table , find the corresponding rows in track table . Step 2 : find the average milliseconds of the results of step 1 whose genre 's name equals " Drama " and track 's name equals " Stone Crazy " . [schema] [T] album [C] album id [C] title ( Pop ) [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name ( Latin , Pop ) [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the mountain table and state table . in step 2 , remove the mountain 's state name equals dummy value conditions . [question] what is the highest elevation in the united states [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest elevation of the results of step 1 whose mountain 's state name equals " dummy value " and mountain 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the highlow table and state table . in step 2 , use state table in place of highlow table . additionally make sure that area is equals maximum area state . find state 's state name in place of maximum highest elevation . in step 3 , make sure the city 's state name is equals the results of step 2 the highest elevation is equals the results of step 2 . additionally make sure that city 's population greater than 150000 . [question] what are the major cities in the largest state [system description] Step 1 : for each row in city table , find the corresponding rows in state table and in highlow table . Step 2 : find the maximum highest elevation in highlow table . Step 3 : find the city name of the results of step 1 whose highest elevation equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the list table besides the teachers table . additionally find for each value of teachers 's first name . in step 2 , additionally find teachers 's last name . [question] Find the name of the teacher who teaches the largest number of students . [system description] Step 1 : find the number of rows of each value of last name in teachers table . Step 2 : find the first name in teachers table with largest value in the results of step 1 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
additionally use the information from the airlines table and airports table besides the routes table . consider the airports 's country equals Italy and airlines 's name equals American Airlines conditions in place of the destination airport equals GQ and airline equals 3P conditions . [question] Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines ' . [system description] find the number of rows in routes table whose destination airport equals " GQ " and airline equals " 3P " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Americana ) [C] country ( Italy ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name ( American Airlines ) [C] iata [C] icao [C] call sign ( AMERICAN ) [C] country ( Italy ) [C] active
in step 2 , remove the bikes available greater than 7 conditions . find for each value of station id whose average bikes available greater than 14 . in step 3 , do not use the status table . in step 4 , consider the installation date like 12/ % conditions in place of the bikes available less than 5 conditions . [question] What are the names and ids of stations that had more than 14 bikes available on average or were installed in December ? [system description] Step 1 : for each row in station table , find the corresponding rows in status table . Step 2 : find the name and id of the results of step 1 whose bikes available greater than 7 . Step 3 : for each row in station table , find the corresponding rows in status table . Step 4 : find the name and id of the results of step 3 whose bikes available less than 5 . Step 5 : show the rows that are in any of the results of step 2 and step 4 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , use university table in place of basketball match table . make sure the university 's school id is not one of the results of step 1 the all neutral is not one of the results of step 1 . [question] How many schools do not participate in the basketball match ? [system description] Step 1 : find the school id in basketball match table . Step 2 : find the number of rows in basketball match table whose all neutral not one of the results of step 1 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
additionally use the information from the publication table , organization table , and writes table besides the author table . consider the organization 's name equals University of Michigan conditions in place of the author 's name equals dummy value conditions . find title in place of author 's name . [question] return me all the papers in " University of Michigan " . [system description] find the name in author table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the traverse equals idaho conditions in place of the state name equals dummy value conditions . find number of river name in place of number of rows . [question] give me the number of rivers in idaho [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , make sure no repetition in the results . only show me the first 5 results . [question] List the names and birthdays of the top five players in terms of potential . [system description] Step 1 : for each row in player table , find the corresponding rows in player attributes table . Step 2 : find the player name and birthday of the results of step 1 with largest value of potential . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
additionally use the information from the list table besides the teachers table . consider the list 's first name equals GELL and list 's last name equals TAMI conditions in place of the teachers 's first name equals ALFREDA conditions . [question] Find the last names of all the teachers that teach GELL TAMI . [system description] find the last name in teachers table whose first name equals " ALFREDA " . [schema] [T] list [C] last name ( GELL ) [C] first name (  TAMI ) [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 2 , find for each value of name in place of airline . [question] Find the name of airline which runs the most number of routes . [system description] Step 1 : for each row in routes table , find the corresponding rows in airlines table . Step 2 : find the number of rows of each value of airline of the results of step 1 . Step 3 : find the name of the results of step 1 with largest value in the results of step 2 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
in step 1 , do not use the lake table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . find traverse in place of state name . [question] what states have rivers named ohio [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the state name equals delaware conditions in place of the state name equals dummy value conditions . find highest elevation in place of maximum highest point . [question] how high is the highest point of delaware [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the genre table . in step 2 , consider the languages equals english conditions in place of the languages equals bangla conditions . find artist name in place of genre 's rating . [question] List the id , genre and artist name of English songs ordered by rating . [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the song id , genre name , genre 's rating of the results of step 1 whose languages equals " bangla " ordered ascending by song 's rating . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 2 , consider the club name equals Bootup Baltimore and sex equals F conditions in place of the club name equals Tennis Club and club name equals Pen and Paper Gaming conditions . [question] Find all the female members of club " Bootup Baltimore " . Show the first name and last name . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the first name and last name of the results of step 1 whose club name equals " Pen and Paper Gaming " and club name equals " Tennis Club " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name ( Bootup Baltimore ) [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally make sure that highest elevation is equals maximum highest elevation highlow . find highest point in place of maximum highest point . [question] what is the highest point in the country [system description] find the maximum highest point in highlow table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use employee table and class table in place of student table . consider the employee last name equals Graztevski conditions in place of the student last name equals Robertson conditions . [question] How many classes does the professor whose last name is Graztevski teach ? [system description] find the number of rows in student table whose student last name equals " Robertson " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Graztevski ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the team franchise table . in step 2 , consider the name equals Boston Red Stockings conditions in place of the team 's year equals 2015 and franchise name equals Boston Red Sox conditions . find for each value of postseason 's year . find postseason 's year and number of rows in place of wins . [question] What is the number of wins the team Boston Red Stockings got in the postseasons each year in history ? [system description] Step 1 : for each row in team table , find the corresponding rows in postseason table and in team franchise table . Step 2 : find the wins of the results of step 1 whose franchise name equals " Boston Red Sox " and team 's year equals 2015 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , additionally use the information from the papers table and authorship count table besides the institution table . find for each value of name in place of institution 's institution id . [question] Find the name of the organization that has published the largest number of papers . [system description] Step 1 : find the number of rows of each value of institution id in institution table . Step 2 : find the name and name in institution table with largest value in the results of step 1 . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
find summation of no of customers in place of number of rows . [question] Find the number of customers in the banks at New York City . [system description] find the number of rows in bank table whose city equals " New York City " . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city ( New York City ) [C] state ( New York ) [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state ( New York ) [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , additionally use the information from the employee table . in step 2 , consider the department name equals History conditions in place of the department name equals Psychology conditions . find employee last name in place of professor 's department code . [question] What is the last name and office of the professor from the history department ? [system description] Step 1 : for each row in department table , find the corresponding rows in professor table . Step 2 : find the professor 's department code and professor office of the results of step 1 whose department name equals " Psychology " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name ( History ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the genre table . in step 2 , consider the genre is equals blues conditions in place of the genre 's rating equals 9 conditions . [question] What are the names of the songs that have a lower rating than at least one blues song ? [system description] Step 1 : for each row in song table , find the corresponding rows in genre table . Step 2 : find the maximum song 's rating of the results of step 1 whose genre 's rating equals 9 . Step 3 : find the song name in song table whose song 's rating less than the results of step 2 . [schema] [T] genre [C] genre name ( blues ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( blues ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( blues ) [C] rating [C] languages [C] releasedate [C] resolution
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] what state has the least population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the river table and state table . in step 2 , consider the border info 's state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what states border states that the mississippi runs through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use author table and writes table in place of cite table in step 2 , consider the conference 's name equals VLDB and author 's name equals H. V. Jagadish conditions in place of the cited equals dummy value and conference 's name equals dummy value conditions . find number of different title in place of number of conference 's homepage . [question] return me the number of papers by " H. V. Jagadish " on VLDB conference . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in cite table . Step 2 : find the number of homepage of the results of step 1 whose name equals " dummy value " and cited equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , consider the bed type equals King conditions in place of the beds equals 2 conditions . in step 2 , find for each value of decor in place of bed type . find decor in place of bed type . [question] How many rooms have king beds ? Report the number for each decor type . [system description] Step 1 : find rows in rooms table whose beds equals 2 . Step 2 : find each value of bed type the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type ( King ) [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the documents mailed table . in step 2 , consider the documents 's document id equals 3 conditions in place of the documents mailed 's document id equals 14 conditions . [question] What is the receipt date of the document with id 3 ? [system description] Step 1 : for each row in documents table , find the corresponding rows in documents mailed table . Step 2 : find the receipt date of the results of step 1 whose documents mailed 's document id equals 14 . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
additionally make sure that population is equals minimum population state . you should not find the smallest of the results . show me all the results . [question] what is the state with the lowest population [system description] find the state name in state table with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the card number equals 4560596484842 conditions in place of the card number equals 5122249720639438 conditions . find customer last name in place of card number . [question] Return the full name and phone of the customer who has card number 4560596484842 . [system description] Step 1 : for each row in customers table , find the corresponding rows in customers cards table . Step 2 : find the customer first name , customer phone , card number of the results of step 1 whose card number equals 5122249720639438 . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
in step 2 , consider the unit price greater than 1 conditions in place of the unit price greater than 0.99 conditions . find for each value of track 's album id . [question] Show the album names and ids for albums that contain tracks with unit price bigger than 1 . [system description] Step 1 : for each row in album table , find the corresponding rows in track table . Step 2 : find the title and album 's album id of the results of step 1 whose unit price greater than 0.99 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
consider the state name equals delaware conditions in place of the state name equals dummy value conditions . find highest elevation in place of maximum highest point . [question] how tall is the highest point in delaware [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table . in step 2 , consider the state 's state name equals new mexico conditions in place of the border info 's state name equals dummy value conditions . [question] what is the area of new mexico [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the area of the results of step 1 whose border info 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , do not use the customer table , invoice table , track table , and invoice line table . in step 3 , remove the last name equals Hamalainen conditions . [question] What are the names of artists who have not released any albums ? [system description] Step 1 : find the artist 's name in artist table . Step 2 : for each row in artist table , find the corresponding rows in album table and in track table and in invoice line table and in invoice table and in customer table . Step 3 : find the artist 's name of the results of step 2 whose last name equals " Hämäläinen " . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Release ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , additionally use the information from the domain author table and domain table . in step 2 , consider the domain 's name equals Databases and organization 's name equals University of Michigan conditions in place of the author 's name equals dummy value and organization 's name equals dummy value conditions . find author 's name in place of organization 's oid . [question] return me all the researchers in Databases area in " University of Michigan " . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the organization 's oid of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the border info table and state table . in step 2 , additionally make sure that length is equals maximum length river . you should not find the largest of the results . show me all the results . [question] which states does the longest river cross [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the cite table . in step 2 , consider the name equals H. V. Jagadish and name equals Divesh Srivastava conditions in place of the name equals dummy value and cited equals dummy value conditions . find number of different title in place of number of writes 's pid . [question] return me the number of papers written by " H. V. Jagadish " and " Divesh Srivastava " . [system description] Step 1 : for each row in writes table , find the corresponding rows in author table and in publication table and in cite table . Step 2 : find the number of writes 's pid of the results of step 1 whose cited equals " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the party table besides the election table . find party 's party in place of election 's party . [question] Show the delegates and the names of the party they belong to . [system description] find the delegate and party in election table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 4 , do not return number of rows . order the results by number of different title in place of number of rows . [question] return me the author who has the most number of papers containing keyword " Relational Database " . [system description] Step 1 : for each row in keyword table , find the corresponding rows in publication keyword table and in publication table and in writes table and in author table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of name the results of step 2 . Step 4 : find the number of rows and name the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , find for each value of publisher in place of author or editor . [question] Return the publisher that has published the most books . [system description] Step 1 : find the number of rows of each value of author or editor in book club table . Step 2 : find the publisher in book club table with largest value in the results of step 1 . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in [C] group equity shareholding [C] book club id [C] movie id
in step 2 , consider the country equals China conditions in place of the country equals Guatemala conditions . in step 3 , find for each value of name in place of destination airport . in step 4 , find name in place of destination airport . [question] Find the busiest destination airport that runs most number of routes in China . [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table . Step 2 : only keep the results of step 1 whose country equals " Guatemala " . Step 3 : find the number of rows of each value of destination airport the results of step 2 . Step 4 : find the destination airport the results of step 2 with largest value in the results of step 3 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( China ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country ( China ) [C] active
in step 1 , do not use the state table . in step 2 , consider the lowest elevation is equals minimum lowest elevation highlow conditions in place of the country name equals dummy value conditions . find lowest point in place of area . you should not find the smallest of the results . show me all the results . [question] where is the lowest point in the us [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose country name equals " dummy value " with smallest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use department stores table in place of addresses table in step 2 , consider the department store chain name equals South conditions in place of the department store chain name equals West conditions . [question] Count the number of stores the chain South has . [system description] Step 1 : for each row in department store chain table , find the corresponding rows in addresses table . Step 2 : find the number of rows of the results of step 1 whose department store chain name equals " West " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name ( South ) [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , find the number of address id for each value of country . in step 2 , make sure that the corresponding value in step 1 greater than 4 . [question] List the countries having more than 4 addresses listed . [system description] Step 1 : find the number of rows of each value of country in addresses table . Step 2 : find the country in addresses table whose corresponding value in step 1 is greater than 1 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
consider the last name equals SWEAZY and first name equals ROY conditions in place of the last name equals TUPPEN and first name equals CAPRICE conditions . [question] Find the number of times ROY SWEAZY has reserved a room . [system description] find the number of rows in reservations table whose first name equals " CAPRICE " and last name equals " TUPPEN " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( SWEAZY ) [C] first name ( ROY ) [C] adults [C] kids
in step 1 , consider the zip code equals 94107 conditions in place of the zip code equals 94301 conditions . in step 3 , only show me the first 3 results . [question] What are the 3 most common cloud covers in the zip code of 94107 ? [system description] Step 1 : find rows in weather table whose zip code equals 94301 . Step 2 : find the number of rows of each value of cloud cover the results of step 1 . Step 3 : find the cloud cover the results of step 1 with largest value in the results of step 2 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 1 , use employee table in place of student table in step 2 , consider the employee last name equals Heffington conditions in place of the student last name equals Smith conditions . [question] What is the name of the department and office location for the professor with the last name of Heffington ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in professor table . Step 2 : find the department name and professor office of the results of step 1 whose student last name equals " Smith " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name ( Heffington ) [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , do not return year . order the results by year in place of award . [question] What are the names of actors ordered descending by the year in which their musical was awarded ? [system description] Step 1 : for each row in musical table , find the corresponding rows in actor table . Step 2 : find the actor 's name and year of the results of step 1 ordered descending by award . [schema] [T] musical [C] musical id [C] name [C] year [C] award [C] category [C] nominee [C] result [T] actor [C] actor id [C] name [C] musical id [C] character [C] duration [C] age
in step 1 , additionally use the information from the cast table . in step 2 , consider the name equals Gabriele Ferzetti conditions in place of the name equals dummy value conditions . find name in place of title . order the results by release year in place of birth year . [question] Find the latest movie which " Gabriele Ferzetti " acted in [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the title of the results of step 1 whose name equals " dummy value " with largest value of birth year . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the state table . in step 2 , consider the length is equals maximum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the longest river in the us [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the savings table besides the checking table . find checking 's balance plus savings 's balance in place of summation of checking 's balance . order the results by checking 's balance plus savings 's balance in place of checking 's balance . [question] What is the sum of checking and savings balances for all customers , ordered by the total balance ? [system description] find the summation of balance and summation of balance in checking table ordered ascending by balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , do not use the college table . in step 2 , make sure no repetition in the results . [question] What are the different names of the colleges involved in the tryout in alphabetical order ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the tryout 's college name of the results of step 1 ordered ascending by college 's college name . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
consider the origin equals Chennai and destination equals Guruvayur conditions in place of the destination equals Chennai conditions . [question] Find the number and time of the train that goes from Chennai to Guruvayur . [system description] find the train number and time in train table whose destination equals " Chennai " . [schema] [T] train [C] id [C] train number [C] name [C] origin ( Chennai , Guruvayur ) [C] destination ( Chennai , Guruvayur ) [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
consider the state name equals wyoming and population is equals maximum population city whose state name equals wyoming conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what wyoming city has the largest population [system description] find the city name in city table whose state name equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the resolution greater than 500 conditions in place of the resolution greater than 512 conditions . in step 3 , find artist name in place of languages . [question] What is the language that was used most often in songs with resolution above 500 ? [system description] Step 1 : find rows in song table whose resolution greater than 512 . Step 2 : find the number of rows of each value of languages the results of step 1 . Step 3 : find the languages the results of step 1 with largest value in the results of step 2 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] which is the smallest state [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the characteristics table and product characteristics table . in step 2 , consider the product category code equals Spices and typical buying price greater than 1000 conditions in place of the typical selling price greater than 0.1859512 and characteristic name equals slow conditions . [question] How many products are in the 'Spices ' category and have a typical price of over 1000 ? [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the number of rows of the results of step 1 whose characteristic name equals " slow " and typical selling price greater than " 0.1859512 " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Spices ) [C] product category description ( Spices ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Spices ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 1 , do not use the activity table , participates in table , and faculty participates in table . in step 2 , consider the faculty 's first name equals Michael and faculty 's last name equals Goodrich conditions in place of the faculty 's last name equals Iglesias and advisor equals 8772 conditions . [question] Show first name and last name for all the students advised by Michael Goodrich . [system description] Step 1 : for each row in student table , find the corresponding rows in participates in table and in activity table and in faculty participates in table and in faculty table . Step 2 : find the student 's first name and student 's last name of the results of step 1 whose advisor equals 8772 and faculty 's last name equals " Iglesias " . [schema] [T] activity [C] activity id [C] activity name [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name ( Michael ) [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name ( Goodrich ) [C] first name ( Michael ) [C] rank [C] sex [C] phone [C] room [C] building
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name equals iowa conditions in place of the state 's state name equals dummy value conditions . find lowest point in place of minimum lowest point . [question] what is the lowest point in the state of iowa [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the minimum lowest point of the results of step 1 whose state 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the team table and player table . in step 2 , consider the capital equals Dublin conditions in place of the capital equals Tehran conditions . find position in place of player 's player . make sure no repetition in the results . [question] What are the distinct positions of the players from a country whose capital is Dublin ? [system description] Step 1 : for each row in player table , find the corresponding rows in team table and in match season table and in country table . Step 2 : find the player 's player of the results of step 1 whose capital equals " Tehran " . [schema] [T] country [C] country id [C] country name [C] capital ( Dublin ) [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
consider the competition equals 1994 FIFA World Cup qualification conditions in place of the date equals 4 April 1993 conditions . [question] What is the match id of the competition called " 1994 FIFA World Cup qualification " ? [system description] find the match id in match table whose date equals " 4 April 1993 " and date equals " 4 April 1993 " . [schema] [T] city [C] city id [C] city [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
use airport table in place of flight table . consider the airport 's id is not one of airport id flight whose pilot equals Thompson conditions in place of the pilot not equals Peterson conditions . [question] How many airports have n't the pilot 'Thompson ' driven an aircraft ? [system description] find the number of rows in flight table whose pilot not equals " Peterson " . [schema] [T] airport [C] id [C] city [C] country [C] iata [C] icao [C] name [T] operate company [C] id [C] name [C] type [C] principal activities [C] incorporated in [C] group equity shareholding [T] flight [C] id [C] vehicle flight number [C] date [C] pilot ( Thompson ) [C] velocity [C] altitude [C] airport id [C] company id
in step 1 , do not use the state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] through which states does the ohio run [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the plays games table . in step 2 , consider the age less than 20 conditions in place of the age less than 18 conditions . in step 3 , do not find for each value of hours per week . find summation of games played and summation of hours per week in place of summation of hours played . [question] What is the total number of hours per week and number of games played by students under 20 ? [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table and in plays games table . Step 2 : only keep the results of step 1 whose age less than 18 . Step 3 : find each value of hours per week the results of step 2 along with the summation of hours played of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 1 , do not use the manufacturers table . in step 2 , find for each value of manufacturer in place of products 's code . [question] What are the average prices of products , grouped by manufacturer code ? [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find each value of products 's code of the results of step 1 along with the manufacturers 's code and average price of the corresponding rows to each value . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , do not use the products table . in step 2 , consider the reference product categories 's product category code equals Herbs conditions in place of the product name equals laurel conditions . [question] Return the unit of measure for 'Herb ' products . [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the unit of measure of the results of step 1 whose product name equals " laurel " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Herbs ) [C] product category description ( Herbs ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Herbs ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 2 , remove the precipitation greater than 90 conditions . find for each value of station id whose maximum precipitation greater than 50 . you should not find the largest of the results . show me all the results . [question] Find the id and local authority of the station whose maximum precipitation is higher than 50 . [system description] Step 1 : for each row in station table , find the corresponding rows in weekly weather table . Step 2 : find the id and local authority of the results of step 1 whose precipitation greater than 90 with largest value of local authority . [schema] [T] train [C] id [C] train number [C] name [C] origin [C] destination [C] time [C] interval [T] station [C] id [C] network name [C] services [C] local authority [T] route [C] train id [C] station id [T] weekly weather [C] station id [C] day of week [C] high temperature [C] low temperature [C] precipitation [C] wind speed mph
in step 2 , use the smallest in place of largest . [question] Give the state that has the most customers . [system description] Step 1 : find the number of rows of each value of state in customers table . Step 2 : find the state in customers table with largest value in the results of step 1 . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 1 , do not use the border info table and state table . in step 2 , consider the length is equals maximum length river conditions in place of the border info 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the longest river in the united states [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the river name of the results of step 1 whose border info 's state name equals " dummy value " with largest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the track table besides the media type table . consider the media type 's name equals AAC audio file conditions in place of the media type 's name equals Protected AAC audio file conditions . [question] Count the number of tracks that are of the media type " AAC audio file " . [system description] find the number of rows in media type table whose name equals " Protected AAC audio file " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name ( AAC audio file ) [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name ( Numbers ) [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
additionally find number of rows . [question] How many students live in each city and what are their average ages ? [system description] find each value of city code in student table along with the average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the flight table . in step 2 , use aircraft table in place of flight table . find average aircraft 's distance in place of average flight 's distance . in step 3 , make sure the aircraft 's distance is greater than the results of step 2 the flight 's distance is greater than the results of step 2 . [question] What are the names of all aircrafts that can cover more distances than average ? [system description] Step 1 : for each row in flight table , find the corresponding rows in aircraft table . Step 2 : find the average flight 's distance in flight table . Step 3 : find the name of the results of step 1 whose flight 's distance greater than the results of step 2 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , additionally use the information from the product characteristics table and products table besides the characteristics table . find for each value of characteristic name in place of characteristics 's characteristic id . [question] Return the name of the characteristic that is most common across all products . [system description] Step 1 : find the number of rows of each value of characteristic id in characteristics table . Step 2 : find the characteristic name in characteristics table with largest value in the results of step 1 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
find flight number in place of number of rows . only show me the first 3 results . [question] What are the numbers of the shortest flights ? [system description] find the number of rows in flight table with smallest value of distance . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , additionally use the information from the cast table . in step 2 , consider the name equals Brad Pitt conditions in place of the name equals dummy value conditions . in step 3 , find for each value of release year in place of birth year . find release year and number of different title in place of name and number of rows . [question] What is the number of movies that " Brad Pitt " acts in per year ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of birth year the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , additionally find summation of damage millions usd . [question] What is the total number of deaths and damage for all storms with a max speed greater than the average ? [system description] Step 1 : find the average max speed in storm table . Step 2 : find the summation of number deaths and summation of number deaths in storm table whose max speed greater than the results of step 1 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
additionally find maximum age . [question] Find the average and oldest age for students with different sex . [system description] find each value of sex in student table along with the average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
additionally use the information from the journal table besides the publication table . consider the citation num greater than 200 and year greater than 2000 and name equals PVLDB conditions in place of the year greater than dummy value conditions . find title in place of pid . [question] return me the paper after 2000 in PVLDB with more than 200 citations . [system description] find the pid in publication table whose year greater than " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , use publication keyword table in place of domain table , domain author table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Natural Language conditions in place of the keyword equals dummy value conditions . find summation of citation num in place of jid . [question] return me the total citations of the papers containing keyword " Natural Language " [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the jid of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the member of club table and student table besides the club table . consider the last name equals Kim and first name equals Tracy conditions in place of the club name equals Bootup Baltimore conditions . [question] Find the number of clubs where " Tracy Kim " is a member . [system description] find the number of rows in club table whose club name equals " Bootup Baltimore " . [schema] [T] student [C] student id [C] last name ( Kim ) [C] first name ( Tracy ) [C] age [C] sex [C] major [C] advisor [C] city code [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally find how to get there . [question] List all the possible ways to get to attractions , together with the number of attractions accessible by these methods . [system description] find each value of how to get there in tourist attractions table along with the number of the corresponding rows to each value . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , use performance table in place of vocals table in step 2 , consider the title equals Der Kapitan and stage position equals back conditions in place of the title equals dummy value conditions . [question] What is the first and last name of the artist who performed back stage for the song " Der Kapitan " ? [system description] Step 1 : for each row in band table , find the corresponding rows in vocals table and in songs table . Step 2 : find the first name and last name of the results of step 1 whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , find for each value of color description in place of products 's color code . [question] What is the description of the color for most products ? [system description] Step 1 : for each row in products table , find the corresponding rows in reference colors table . Step 2 : find the number of rows of each value of products 's color code of the results of step 1 . Step 3 : find the color description of the results of step 1 with largest value in the results of step 2 . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
consider the height greater than 100 or length greater than 3300 conditions in place of the height greater than 120 or height greater than 136 conditions . [question] Show the statuses of roller coasters longer than 3300 or higher than 100 . [system description] find the status in roller coaster table whose height greater than 120 or height greater than 136 . [schema] [T] roller coaster [C] roller coaster id [C] name [C] park [C] country id [C] length [C] height [C] speed [C] opened [C] status [T] country [C] country id [C] name [C] population [C] area [C] languages
in step 1 , make sure no repetition in the results . [question] Find the number of rooms that do not have any reservation . [system description] Step 1 : find the room in reservations table . Step 2 : find the number of rows in rooms table whose room id not one of the results of step 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the characteristics table and product characteristics table . in step 2 , consider the product category code equals Spices conditions in place of the characteristic name equals warm conditions . [question] What are the names of products with category " Spices " ? [system description] Step 1 : for each row in characteristics table , find the corresponding rows in product characteristics table and in products table . Step 2 : find the product name of the results of step 1 whose characteristic name equals " warm " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code ( Spices ) [C] product category description ( Spices ) [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code ( Spices ) [C] product name [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
in step 2 , additionally find date . [question] Show cinema name , film title , date , and price for each record in schedule . [system description] Step 1 : for each row in schedule table , find the corresponding rows in film table and in cinema table . Step 2 : find the name , title , price , price of the results of step 1 . [schema] [T] film [C] film id [C] rank in series [C] number in season [C] title [C] directed by [C] original air date [C] production code [T] cinema [C] cinema id [C] name [C] openning year [C] capacity [C] location [T] schedule [C] cinema id [C] film id [C] date [C] show times per day [C] price
in step 1 , additionally use the information from the book club table . in step 2 , consider the incorporated in equals China conditions in place of the company name equals Culture China conditions . additionally find book title . [question] Show the movie titles and book titles for all companies in China . [system description] Step 1 : for each row in culture company table , find the corresponding rows in movie table . Step 2 : find the title and title of the results of step 1 whose company name equals " Culture China " . [schema] [T] book club [C] book club id [C] year [C] author or editor [C] book title [C] publisher [C] category [C] result [T] movie [C] movie id [C] title [C] year [C] director [C] budget million [C] gross worldwide [T] culture company [C] company name [C] type [C] incorporated in ( China ) [C] group equity shareholding [C] book club id [C] movie id
in step 1 , additionally use the information from the reservations table besides the rooms table . in step 2 , make sure that the corresponding value in step 1 greater than 60 . [question] Find the names of rooms that have been reserved for more than 60 times . [system description] Step 1 : find the number of rows of each value of room id in rooms table . Step 2 : find the room name in rooms table whose corresponding value in step 1 is greater than 1 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
in step 1 , do not use the school performance table . in step 2 , order the results by founded in place of school year . [question] What is the list of school locations sorted in descending order of school foundation year ? [system description] Step 1 : for each row in school performance table , find the corresponding rows in school table . Step 2 : find the location of the results of step 1 ordered descending by school year . [schema] [T] school [C] school id [C] school [C] location [C] enrollment [C] founded [C] denomination [C] boys or girls [C] day or boarding [C] year entered competition [C] school colors [T] school details [C] school id [C] nickname [C] colors [C] league [C] class [C] division [T] school performance [C] school id [C] school year [C] class a [C] class aa [T] player [C] player id [C] player [C] team [C] age [C] position [C] school id
in step 1 , use author table and writes table in place of cite table in step 2 , consider the conference 's name equals VLDB and citation num greater than 200 and author 's name equals H. V. Jagadish conditions in place of the conference 's name equals dummy value and cited greater than dummy value conditions . find title in place of jid . [question] return me the papers by " H. V. Jagadish " on VLDB conference with more than 200 citations . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in cite table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " and cited greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the journal table besides the publication table . consider the year greater than 2000 and name equals PVLDB conditions in place of the year less than dummy value and year greater than dummy value conditions . in step 2 , do not find for each value of title . in step 3 , find title in place of number of publication 's jid and publication 's jid . find the result with the largest citation num . [question] return me the paper after 2000 in PVLDB with the most citations . [system description] Step 1 : find rows in publication table whose year greater than " dummy value " and year less than " dummy value " . Step 2 : find the number of jid of each value of title the results of step 1 . Step 3 : find the number of jid and jid the results of step 1 ordered descending by the results of step 2 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the advisor equals 1121 conditions in place of the advisor equals 1148 conditions . find number of rows in place of advisor . [question] Advisor 1121 has how many students ? [system description] find the advisor in student table whose advisor equals 1148 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
additionally make sure that population is equals maximum population city . you should not find the largest of the results . show me all the results . [question] what city has the most people [system description] find the city name in city table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the supplier addresses table and addresses table besides the suppliers table . order the results by address details in place of supplier name . [question] What are the names and phone numbers for all suppliers , sorted in alphabetical order of their addressed ? [system description] find the supplier name and supplier phone in suppliers table ordered ascending by supplier name . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
additionally use the information from the supplier addresses table and addresses table besides the suppliers table . order the results by address details in place of supplier name . [question] List the name and phone number of all suppliers in the alphabetical order of their addresses . [system description] find the supplier name and supplier phone in suppliers table ordered ascending by supplier name . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 1 , use journal table , author table , and writes table in place of cite table in step 2 , consider the journal 's name equals PVLDB and year greater than 2000 and author 's name equals H. V. Jagadish conditions in place of the cited equals dummy value and year greater than dummy value conditions . [question] return me the papers by " H. V. Jagadish " on PVLDB after 2000 . [system description] Step 1 : for each row in publication table , find the corresponding rows in cite table . Step 2 : find the title of the results of step 1 whose cited equals " dummy value " and year greater than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the state table . in step 2 , consider the city 's state name equals wyoming and city 's population is equals maximum city 's population city whose city 's state name equals wyoming conditions in place of the city 's state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what cities in wyoming have the highest populations [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the city name of the results of step 1 whose city 's state name equals " dummy value " with largest value of state 's population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the sports info table besides the student table . additionally make sure that on scholarship equals Y . [question] Show last names for all student who are on scholarship . [system description] find the last name in student table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
do not return age . [question] Find the name and age of all males in order of their age . [system description] find the name and age in person table whose gender equals " male " ordered ascending by age . [schema] [T] person [C] name [C] age [C] city [C] gender ( male ) [C] job [T] person friend [C] name [C] friend [C] year
additionally use the information from the staff department assignments table besides the staff table . consider the job title code equals Department Manager conditions in place of the staff name like Vanessa conditions . [question] Return the staff ids and genders for any staff with the title Department Manager . [system description] find the staff id and staff gender in staff table whose staff name like " Vanessa " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code ( Department Manager ) [C] date assigned to
find minimum age in place of maximum age . [question] How old is the youngest person for each job ? [system description] find each value of job in person table along with the maximum age of the corresponding rows to each value . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] which states does the ohio run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the office locations table and companies table besides the buildings table . find for each value of building id in place of buildings 's name . [question] Show the name of the building that has the most company offices . [system description] Step 1 : find the number of rows of each value of name in buildings table . Step 2 : find the name in buildings table with largest value in the results of step 1 . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
additionally use the information from the complaints table besides the staff table . order the results by date complaint raised in place of first name . [question] What is the last name of the staff who has handled the first ever complaint ? [system description] find the last name in staff table with smallest value of first name . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 2 , find for each value of country 's country id whose number of rows greater than or equals 3 . [question] Which countries have at least 3 cities ? [system description] Step 1 : for each row in city table , find the corresponding rows in country table . Step 2 : find the number of rows of each value of country of the results of step 1 . Step 3 : find the country of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , additionally use the information from the has amenity table besides the dorm amenity table . find for each value of has amenity 's amenity id in place of amenity name . [question] What is the most common amenity in the dorms ? [system description] Step 1 : find the number of rows of each value of amenity name in dorm amenity table . Step 2 : find the amenity name in dorm amenity table with largest value in the results of step 1 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
consider the source airport id is one of airport id airports whose country equals United States and destination airport id is one of airport id airports whose country equals Canada conditions in place of the destination airport equals YXC and destination airport equals KSQ conditions . [question] Find the number of routes from the United States to Canada . [system description] find the number of rows in routes table whose destination airport equals " YXC " and destination airport equals " KSQ " . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country ( United States , Canada ) [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( STATES , UNITED ) [C] country ( United States , Canada ) [C] active
in step 1 , do not use the border info table and state table . in step 2 , consider the city 's population greater than 150000 and city 's state name is one of border border info whose border info 's state name equals nebraska conditions in place of the border equals dummy value conditions . find number of city name in place of number of rows . [question] how many major cities are in states bordering nebraska [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in city table . Step 2 : find the number of rows of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
find maximum weight and minimum weight in place of maximum height and minimum height . [question] What is the maximum and minimum height of all players ? [system description] find the maximum height and minimum height in player table . [schema] [T] player attributes [C] id [C] player fifa api id [C] player api id [C] date [C] overall rating [C] potential [C] preferred foot [C] attacking work rate [C] defensive work rate [C] crossing [C] finishing [C] heading accuracy [C] short passing [C] volleys [C] dribbling [C] curve [C] free kick accuracy [C] long passing [C] ball control [C] acceleration [C] sprint speed [C] agility [C] reactions [C] balance [C] shot power [C] jumping [C] stamina [C] strength [C] long shots [C] aggression [C] interceptions [C] positioning [C] vision [C] penalties [C] marking [C] standing tackle [C] sliding tackle [C] gk diving [C] gk handling [C] gk kicking [C] gk positioning [C] gk reflexes [T] sqlite sequence [C] name [C] seq [T] player [C] id [C] player api id [C] player name [C] player fifa api id [C] birthday [C] height [C] weight [T] league [C] id [C] country id [C] name [T] country [C] id [C] name [T] team [C] id [C] team api id [C] team fifa api id [C] team long name [C] team short name [T] team attributes [C] id [C] team fifa api id [C] team api id [C] date [C] buildup play speed [C] buildup play speed class [C] buildup play dribbling [C] buildup play dribbling class [C] buildup play passing [C] buildup play passing class [C] buildup play positioning class [C] chance creation passing [C] chance creation passing class [C] chance creation crossing [C] chance creation crossing class [C] chance creation shooting [C] chance creation shooting class [C] chance creation positioning class [C] defence pressure [C] defence pressure class [C] defence aggression [C] defence aggression class [C] defence team width [C] defence team width class [C] defence defender line class
in step 2 , additionally find checking 's balance . order the results by checking 's balance plus savings 's balance in place of checking 's balance . [question] What are the names , checking balances , and savings balances of customers , ordered by the total of checking and savings balances descending ? [system description] Step 1 : for each row in savings table , find the corresponding rows in accounts table and in checking table . Step 2 : find the name , savings 's balance , savings 's balance of the results of step 1 ordered descending by checking 's balance . [schema] [T] accounts [C] customer id [C] name [T] savings [C] customer id [C] balance [T] checking [C] customer id [C] balance
in step 1 , do not use the aircraft table . in step 2 , consider the origin equals Los Angeles and destination equals Honolulu conditions in place of the destination equals Tokyo and name equals British Aerospace Jetstream 41 conditions . [question] What is the average price for flights from LA to Honolulu ? [system description] Step 1 : for each row in aircraft table , find the corresponding rows in flight table . Step 2 : find the average price of the results of step 1 whose destination equals " Tokyo " and name equals " British Aerospace Jetstream 41 " . [schema] [T] flight [C] flight number [C] origin [C] destination ( Honolulu ) [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
additionally make sure that population is equals minimum population state . you should not find the smallest of the results . show me all the results . [question] what state has the smallest population [system description] find the state name in state table with smallest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the highest elevation is equals maximum highest elevation highlow conditions in place of the country name equals dummy value conditions . find highest point in place of maximum highest point . [question] what is the highest point in the usa [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the seating between 4000 and 5000 conditions in place of the seating greater than or equals 81687 conditions . [question] Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened . [system description] find the year opened in track table whose seating greater than or equals 81687 and seating greater than or equals 81687 . [schema] [T] race [C] race id [C] name [C] class [C] date [C] track id [T] track [C] track id [C] name [C] location [C] seating [C] year opened
in step 1 , additionally use the information from the settlements table besides the claims table . in step 2 , find claims 's date claim made in place of claims 's date claim settled . [question] Which claim incurred the most number of settlements ? List the claim id , the date the claim was made , and the number . [system description] Step 1 : find the number of rows of each value of claim id in claims table . Step 2 : find the claim id , date claim settled , number of rows in claims table with largest value in the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
remove the country name equals dummy value conditions . find number of state name in place of number of rows . [question] how many states are in the usa [system description] find the number of rows in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the bank table besides the loan table . remove the loan type equals Mortgages conditions . in step 2 , find for each value of bname in place of loan 's branch id . find bname in place of loan 's branch id . [question] What are the names of the different bank branches , and what are their total loan amounts ? [system description] Step 1 : find rows in loan table whose loan type equals " Mortgages " . Step 2 : find each value of branch id the results of step 1 along with the summation of amount of the corresponding rows to each value . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally make sure that age is equals minimum age student . you should not find the smallest of the results . show me all the results . [question] Provide the last name of the youngest student . [system description] find the last name in student table with smallest value of age . [schema] [T] allergy type [C] allergy [C] allergy type [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
in step 2 , make sure that the corresponding value in step 1 greater than or equals 2 . [question] Show the name of the party that has at least two records . [system description] Step 1 : find the number of rows of each value of party in party table . Step 2 : find the party in party table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , do not find for each value of bridge 's name . in step 3 , find architect 's name in place of bridge 's name . you should not order the results . [question] What is the maximum length in meters for the bridges and what are the architects ' names ? [system description] Step 1 : for each row in architect table , find the corresponding rows in bridge table . Step 2 : find the architect 's name of each value of bridge 's name of the results of step 1 . Step 3 : find the maximum length meters and bridge 's name of the results of step 1 ordered ascending by the results of step 2 . [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
additionally use the information from the vocals table besides the songs table . consider the type equals lead conditions in place of the songs 's song id equals dummy value conditions . find number of different title in place of number of rows . [question] How many songs have a lead vocal ? [system description] find the number of rows in songs table whose song id equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
find maximum area in place of area . you should not find the largest of the results . show me all the results . [question] what is the area of the largest state [system description] find the area in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the first name equals Matthias and last name equals Blume conditions in place of the first name equals Katsuhiro conditions . make sure no repetition in the results . [question] What is the name of the institution that " Matthias Blume " belongs to ? [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the name of the results of step 1 whose first name equals " Katsuhiro " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Blume ) [C] first name ( Matthias ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 2 , consider the channel code equals Email conditions in place of the channel code equals Fax conditions . find active from date in place of active to date . [question] What are the name and active date of the customers whose contact channel code is email ? [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the customer name and active to date of the results of step 1 whose channel code equals " Fax " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code ( Email ) [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , use city table in place of state table . consider the city 's population greater than 150000 and city 's state name equals wisconsin conditions in place of the state 's state name equals dummy value conditions . in step 2 , do not find for each value of capital . in step 3 , find city 's population in place of state 's population . you should not find the largest of the results . show me all the results . [question] what is the population of the major cities in wisconsin [system description] Step 1 : find rows in state table whose state name equals " dummy value " . Step 2 : find the number of rows of each value of capital the results of step 1 . Step 3 : find the population the results of step 1 with largest value in the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use movie table in place of copyright table , made by table , and producer table in step 2 , consider the release year greater than 2010 and director 's name equals Quentin Tarantino conditions in place of the producer 's birth year greater than dummy value and director 's name equals dummy value conditions . find number of different title in place of number of rows . [question] How many movies did " Quentin Tarantino " direct after 2010 ? [system description] Step 1 : for each row in producer table , find the corresponding rows in made by table and in copyright table and in directed by table and in director table . Step 2 : find the number of rows of the results of step 1 whose director 's name equals " dummy value " and producer 's birth year greater than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally use the information from the papers table and authorship count table besides the authors table . consider the last name equals Ohori and first name equals Atsushi conditions in place of the first name equals Brent conditions . [question] How many papers are " Atsushi Ohori " the author of ? [system description] find the number of rows in authors table whose first name equals " Brent " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Ohori ) [C] first name ( Atsushi ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the documents table and document drafts table . [question] Which documents have more than 1 draft copies ? List document id and number of draft copies . [system description] Step 1 : for each row in documents table , find the corresponding rows in document drafts table and in draft copies table . Step 2 : find the number of rows of each value of draft copies 's document id of the results of step 1 . Step 3 : find the documents 's document id and number of rows of the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
additionally make sure that area is equals minimum area state . you should not find the smallest of the results . show me all the results . [question] what is the population of the smallest state [system description] find the population in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the city code equals NYC and election cycle equals Spring conditions in place of the secretary vote equals 1030 and city code equals ATL conditions . [question] What is the average age of students who have city code " NYC " and have secretary votes for the spring election cycle ? [system description] Step 1 : for each row in voting record table , find the corresponding rows in student table . Step 2 : find the average age of the results of step 1 whose city code equals " ATL " and secretary vote equals 1030 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( NYC ) [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 2 , make sure that the corresponding value in step 1 between 2 and 4 . [question] Find all the cities that have 2 to 4 parks . [system description] Step 1 : find the number of rows of each value of city in park table . Step 2 : find the city in park table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Park ) [C] name first [C] name last ( Parks ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the rooms table . in step 2 , consider the first name equals DAMIEN and check in equals 2010-09-21 and last name equals TRACHSEL conditions in place of the last name equals TOAN and last name equals PORTO and room name equals Immutable before decorum conditions . find kids in place of number of rows . [question] How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21 , 2010 ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of the results of step 1 whose room name equals " Immutable before decorum " and last name equals " PORTO " and last name equals " TOAN " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name ( TRACHSEL ) [C] first name ( DAMIEN ) [C] adults [C] kids
in step 1 , do not use the airlines table . in step 2 , find for each value of source airport id in place of airports 's name . in step 3 , find airports 's name and source airport id in place of airlines 's name . [question] What is the name and city of the airport from most of the routes start ? [system description] Step 1 : for each row in airports table , find the corresponding rows in routes table and in airlines table . Step 2 : find the number of rows of each value of airports 's name of the results of step 1 . Step 3 : find the airlines 's name and city of the results of step 1 with largest value in the results of step 2 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( CITY ) [C] country [C] active
additionally use the information from the journal table , publication keyword table , and publication table besides the keyword table . consider the name equals PVLDB conditions in place of the number of rows equals 1 conditions . find for each value of keyword . find the result with the largest number of different title . [question] return me the keyword , which have been contained by the most number of papers in PVLDB . [system description] find the keyword in keyword table whose number of rows equals 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the major equals 600 conditions in place of the major equals 100 conditions . find minimum age in place of age . find maximum age in place of age . you should not find the largest of the results . show me all the results . [question] Tell me the ages of the oldest and youngest students studying major 600 . [system description] find the age and age in student table whose major equals 100 with largest value of age . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , do not use the state table . in step 2 , consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] what states have towns named springfield [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the domain author table , domain table , and author table besides the organization table . consider the domain 's name equals Databases conditions in place of the organization 's oid equals dummy value conditions . [question] return me all the organizations in Databases area . [system description] find the name in organization table whose oid equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the cast table . in step 2 , consider the title equals The Imitation Game and role equals Alan Turing conditions in place of the title equals dummy value conditions . [question] Find the actor who played " Alan Turing " in the movie " The Imitation Game " [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , additionally use the information from the journal table , publication table , and writes table . in step 2 , consider the journal 's name equals PVLDB and organization 's name equals University of Michigan conditions in place of the author 's name equals dummy value and organization 's name equals dummy value conditions . find title in place of organization 's oid . [question] return me all the papers in PVLDB in " University of Michigan " . [system description] Step 1 : for each row in organization table , find the corresponding rows in author table . Step 2 : find the organization 's oid of the results of step 1 whose organization 's name equals " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , additionally use the information from the movie table , made by table , and producer table . in step 2 , consider the release year less than 2010 and director 's name equals Quentin Tarantino and release year greater than 2002 conditions in place of the director 's name equals dummy value and directed by 's did less than dummy value conditions . find number of different title in place of number of rows . [question] How many movies did " Quentin Tarantino " direct before 2002 and after 2010 ? [system description] Step 1 : for each row in director table , find the corresponding rows in directed by table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " and directed by 's did less than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally use the information from the city table and hosting city table besides the match table . consider the city equals Nanjing ( Jiangsu ) conditions in place of the competition equals Friendly match conditions . [question] Find the venue of the competition " 1994 FIFA World Cup qualification " which was hosted by " Nanjing ( Jiangsu ) " . [system description] find the venue in match table whose competition equals " 1994 FIFA World Cup qualification " and competition equals " Friendly match " . [schema] [T] city [C] city id [C] city ( Nanjing ( Jiangsu ) ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
in step 1 , consider the state province county equals Texas and city equals East Julianaside conditions in place of the state province county equals NewMexico and city equals Reingertown conditions . find address content in place of rows . in step 2 , consider the state province county equals Arizona and city equals Gleasonmouth conditions in place of the state province county equals Texas and city equals Stantonville conditions . find address content in place of rows . [question] What are all the addresses in East Julianaside , Texas or in Gleasonmouth , Arizona . [system description] Step 1 : find the rows in addresses table whose city equals " Reingertown " and state province county equals " NewMexico " . Step 2 : find the rows in addresses table whose city equals " Stantonville " and state province county equals " Texas " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] addresses [C] address id [C] address content [C] city ( East Julianaside , Gleasonmouth ) [C] zip postcode [C] state province county ( Arizona , Texas ) [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , additionally use the information from the tryout table besides the college table . consider the player position equals mid conditions in place of the enrollment equals 19000 conditions . in step 2 , additionally use the information from the tryout table besides the college table . consider the player position equals goalie conditions in place of the enrollment equals 18000 conditions . return the rows in the results of step 1 but not the results of step 2 . [question] What are the names of all the states with college students playing in the mid position but no goalies ? [system description] Step 1 : find the state in college table whose enrollment equals 19000 . Step 2 : find the state in college table whose enrollment equals 18000 . Step 3 : show the rows that are in both the results of step 1 and step 2 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( no ) [C] training hours [T] tryout [C] player id [C] college name [C] player position ( mid , goalie ) [C] decision ( no )
in step 2 , consider the first name equals Matthias and last name equals Blume conditions in place of the first name equals Aaron conditions . make sure no repetition in the results . [question] Which institution is the author " Matthias Blume " belong to ? Give me the name of the institution . [system description] Step 1 : for each row in authors table , find the corresponding rows in authorship count table and in institution table . Step 2 : find the name of the results of step 1 whose first name equals " Aaron " . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name ( Blume ) [C] first name ( Matthias ) [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
find headquarter in place of founder . make sure no repetition in the results . [question] Give the distinct headquarters of manufacturers . [system description] find the founder in manufacturers table . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , use documents table in place of reference document types table . [question] Return the code of the document type that is most common . [system description] Step 1 : find the number of rows of each value of document type code in reference document types table . Step 2 : find the document type code in reference document types table with largest value in the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , additionally use the information from the cast table . in step 2 , consider the title equals The Imitation Game and role equals Alan Turing conditions in place of the title equals dummy value conditions . [question] Who acts as " Alan Turing " in the movie " The Imitation Game " ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the name of the results of step 1 whose title equals " dummy value " and title equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
consider the mountain altitude is equals maximum mountain altitude mountain conditions in place of the state name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the tallest mountain in the united states [system description] find the mountain name in mountain table whose state name equals " dummy value " with largest value of mountain altitude . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the affiliation equals Public or founded greater than 1850 conditions in place of the founded equals 1766 or founded greater than 1766 conditions . [question] Find the schools that were either founded after 1850 or public . [system description] find the school in university table whose founded greater than 1766 or founded equals 1766 . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation ( Public ) [C] enrollment [C] nickname [C] primary conference
in step 1 , do not use the settlements table . in step 2 , find claims 's amount claimed in place of settlements 's amount claimed . order the results by claims 's amount claimed in place of settlements 's amount settled . [question] Find the settlement amount of the claim with the largest claim amount . Show both the settlement amount and claim amount . [system description] Step 1 : for each row in claims table , find the corresponding rows in settlements table . Step 2 : find the claims 's amount settled and settlements 's amount claimed of the results of step 1 with largest value of settlements 's amount settled . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 1 , consider the date like 8/ % conditions in place of the date like 2/24/2015 conditions . in step 2 , find average mean temperature f in place of average mean humidity . [question] For each zip code , what is the average mean temperature for all dates that start with ' 8 ' ? [system description] Step 1 : find rows in weather table whose date like " 2/24/2015 " . Step 2 : find each value of zip code the results of step 1 along with the average mean humidity of the corresponding rows to each value . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
in step 2 , find governor in place of party 's party . [question] Find the parties associated with the delegates from district 1. Who served as governors of the parties ? [system description] Step 1 : for each row in election table , find the corresponding rows in party table . Step 2 : find the party 's party of the results of step 1 whose district equals 1 . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
consider the course code equals ACCT-211 conditions in place of the course code equals ACCT-212 conditions . find number of different professor employee number in place of number of class code . [question] How many professors teach a class with the code ACCT-211 ? [system description] find the number of class code in class table whose course code equals " ACCT-212 " . [schema] [T] class [C] class code [C] course code ( ACCT-211 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( ACCT-211 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , consider the credit score less than 50 conditions in place of the credit score less than 210 conditions . [question] What is the average account balance of customers with credit score below 50 for the different account types ? [system description] Step 1 : find rows in customer table whose credit score less than 210 . Step 2 : find each value of account type the results of step 1 along with the average account balance of the corresponding rows to each value . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally use the information from the party events table besides the party table . find for each value of party events 's party id in place of party name . [question] Show party names and the number of events for each party . [system description] find each value of party name in party table along with the number of the corresponding rows to each value . [schema] [T] region [C] region id [C] region name [C] date [C] label [C] format [C] catalogue [T] party [C] party id [C] minister [C] took office [C] left office [C] region id [C] party name [T] member [C] member id [C] member name [C] party id [C] in office [T] party events [C] event id [C] event name [C] party id [C] member in charge id
in step 2 , additionally make sure that area is equals maximum area state . find state 's state name in place of maximum area . in step 3 , make sure the state 's state name is one of the results of step 2 the area is equals the results of step 2 . find lowest point in place of minimum lowest point . [question] what is the lowest point of the state with the largest area [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum area in state table . Step 3 : find the minimum lowest point of the results of step 1 whose area equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the authors table . in step 2 , consider the author count equals 2 and country equals USA and last name equals Turon conditions in place of the title equals Functional Pearl : Modular Rollback through Control Logging and country equals France conditions . find title in place of papers 's paper id . [question] Which paper is published in an institution in " USA " and have " Turon " as its second author ? [system description] Step 1 : for each row in institution table , find the corresponding rows in authorship count table and in papers table . Step 2 : find the papers 's paper id of the results of step 1 whose country equals " France " and title equals " Functional Pearl : Modular Rollback through Control Logging " . [schema] [T] institution [C] institution id [C] name [C] country ( USA ) [T] authors [C] author id [C] last name ( Turon ) [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
consider the age equals 24 or age equals 25 conditions in place of the age equals 35 conditions . [question] Show the names of editors of age either 24 or 25 . [system description] find the name in editor table whose age equals 35 . [schema] [T] journal [C] journal id [C] date [C] theme [C] sales [T] editor [C] editor id [C] name [C] age [T] journal committee [C] editor id [C] journal id [C] work type
find for each value of advisor whose number of rows greater than or equals 2 . [question] What are the advisors [system description] find the advisor in student table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
use city table in place of state table . consider the city 's population greater than 150000 and city 's state name equals wisconsin conditions in place of the state 's state name equals dummy value conditions . find city 's population in place of state 's population . [question] what are the populations of the major cities of wisconsin [system description] find the population in state table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the documents table and reference budget codes table . in step 2 , find for each value of documents with expenses 's budget type code in place of document type code . [question] Show budget type codes and the number of documents in each budget type . [system description] Step 1 : for each row in reference budget codes table , find the corresponding rows in documents with expenses table and in documents table . Step 2 : find each value of document type code of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
additionally use the information from the voting record table besides the student table . consider the election cycle equals Spring conditions in place of the age equals 16 conditions . [question] Find the average age of female ( sex is F ) students who have secretary votes in the spring election cycle . [system description] find the average age in student table whose sex equals " F " and age equals 16 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle ( Spring ) [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , do not use the city table . in step 2 , consider the state 's state name equals texas conditions in place of the city 's state name equals dummy value conditions . [question] what is the capital of the state texas [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
remove the email address equals lavonne.frami @ example.com conditions . [question] What are lines 1 and 2 of the addressed of the customer with the email " vbogisich @ example.org " ? [system description] find the address line 1 and address line 2 in customers table whose email address equals " lavonne.frami @ example.com " and email address equals " vbogisich @ example.org " . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
in step 1 , do not use the college table . in step 2 , consider the decision equals yes and player position equals goalie conditions in place of the player position equals striker conditions . [question] What college has a student who successfully made the team in the role of a goalie ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " striker " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position ( goalie ) [C] decision
additionally use the information from the invoice table besides the customer table . consider the country equals Germany conditions in place of the country equals Belgium conditions . make sure no repetition in the results . [question] What are the addresses of customers living in Germany who have had an invoice ? [system description] find the address in customer table whose country equals " Belgium " . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country ( Germany ) [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country ( Germany ) [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , additionally use the information from the songs table . in step 2 , consider the title equals Badlands and stage position equals back conditions in place of the stage position equals dummy value conditions . [question] What are the first and last names of the performer who was in the back stage position for the song " Badlands " ? [system description] Step 1 : for each row in band table , find the corresponding rows in performance table . Step 2 : find the first name and last name of the results of step 1 whose stage position equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
do not find for each value of player . find years played in place of summation of years played . [question] Who are the different players and how many years has each played ? [system description] find each value of player in player table along with the summation of years played of the corresponding rows to each value . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , additionally use the information from the publication keyword table , publication table , author table , and writes table . in step 2 , consider the organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value conditions . find number of different keyword in place of number of rows . [question] return me the number of keywords in the papers of " University of Michigan " . [system description] Step 1 : for each row in organization table , find the corresponding rows in keyword table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] what is the state with the largest population density [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the salary greater than 100000 conditions in place of the salary greater than or equals 23980 conditions . [question] Show ids for all employees with at least 100000 salary . [system description] find the employee id in employee table whose salary greater than or equals 23980 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
make sure no repetition in the results . [question] Return the the details of all products . [system description] find the product details in products table . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
consider the grade equals 5 conditions in place of the grade equals 2 conditions . make sure no repetition in the results . [question] Show me the classrooms grade 5 is using . [system description] find the class room in list table whose grade equals 2 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
find summation of area in place of area . [question] what is the area of all the states combined [system description] find the area in state table . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the latitude greater than 37.4 conditions in place of the latitude greater than 37.335885 conditions . in step 2 , do not use the station table . in step 3 , remove the bikes available less than 9 conditions . find for each value of station id whose minimum bikes available less than 7 . [question] What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available ? [system description] Step 1 : find the id in station table whose latitude greater than 37.335885 . Step 2 : for each row in station table , find the corresponding rows in status table . Step 3 : find the id of the results of step 2 whose bikes available less than 9 . Step 4 : show the rows that are in the results of step 1 but not in the results of step 3 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
additionally use the information from the allergy type table besides the has allergy table . additionally make sure that allergy type equals food . find number of rows in place of number of stuid . [question] How many students have a food allergy ? [system description] find the number of stuid in has allergy table . [schema] [T] allergy type [C] allergy [C] allergy type ( food ) [T] has allergy [C] stuid [C] allergy [T] student [C] stuid [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code
additionally find amount claimed . [question] Among all the claims , what is the settlement amount of the claim with the largest claim amount ? List both the settlement amount and claim amount . [system description] find the amount settled and amount settled in claims table with largest value of amount claimed . [schema] [T] customers [C] customer id [C] customer details [T] customer policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claims [C] claim id [C] policy id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [T] settlements [C] settlement id [C] claim id [C] date claim made [C] date claim settled [C] amount claimed [C] amount settled [C] customer policy id [T] payments [C] payment id [C] settlement id [C] payment method code [C] date payment made [C] amount payment
in step 2 , consider the teachers 's first name equals OTHA conditions in place of the teachers 's first name equals LEIA conditions . find list 's last name in place of teachers 's last name . [question] Find all students taught by OTHA MOYER . Output the first and last names of the students . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find the list 's first name and teachers 's last name of the results of step 1 whose teachers 's first name equals " LEIA " and teachers 's last name equals " MOYER " . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name ( MOYER ) [C] first name (  OTHA ) [C] class room
use city table in place of state table . consider the city name equals boulder conditions in place of the area equals dummy value conditions . find city 's population in place of number of rows . [question] number of people in boulder [system description] find the number of rows in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the organization table . in step 2 , consider the conference 's name equals VLDB and organization 's name equals University of Michigan conditions in place of the author 's name equals dummy value and conference 's name equals dummy value conditions . find number of different title in place of number of conference 's homepage . [question] return me the number of papers in VLDB conference in " University of Michigan " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the number of conference 's homepage of the results of step 1 whose conference 's name equals " dummy value " and author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find number of different level in place of level . [question] What are the different membership levels ? [system description] find the level in member table . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 1 , do not use the customer table . in step 2 , find for each value of bank 's state in place of customer 's state . in step 3 , find bank 's state in place of customer 's state . [question] Which state has the greatest total number of bank customers ? [system description] Step 1 : for each row in customer table , find the corresponding rows in bank table . Step 2 : find the summation of no of customers of each value of customer 's state of the results of step 1 . Step 3 : find the customer 's state of the results of step 1 with largest value in the results of step 2 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
additionally use the information from the track table besides the album table . [question] What are the names and ids of the different albums , and how many tracks are on each ? [system description] find each value of album id in album table along with the number of the corresponding rows to each value . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the wrestler table . in step 2 , consider the eliminated by equals Orton conditions in place of the name equals Fishman conditions . [question] What are the times of elimination for any instances in which the elimination was done by Punk or Orton ? [system description] Step 1 : for each row in elimination table , find the corresponding rows in wrestler table . Step 2 : find the time of the results of step 1 whose name equals " Fishman " or eliminated by equals " Punk " . [schema] [T] wrestler [C] wrestler id [C] name [C] reign [C] days held [C] location [C] event [T] elimination [C] elimination id [C] wrestler id [C] team [C] eliminated by ( Punk , Orton ) [C] elimination move [C] time
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name equals texas conditions in place of the state 's state name equals dummy value conditions . find highest point in place of maximum highest point . [question] could you tell me what is the highest point in the state of texas [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose state 's state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the last name equals Heilo conditions in place of the last name equals dummy value conditions . do not return number of rows . find number of different instrument in place of instrument . [question] How many instrument does the musician with last name " Heilo " use ? [system description] Step 1 : for each row in band table , find the corresponding rows in instruments table . Step 2 : find the instrument and number of rows of the results of step 1 whose last name equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the customer table . in step 2 , consider the loan type equals Business conditions in place of the loan type equals Auto conditions . find bname in place of customer name . [question] What are the names and cities of bank branches that offer loans for business ? [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name and city of the results of step 1 whose loan type equals " Auto " . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type ( Business ) [C] customer id [C] branch id [C] amount
in step 1 , do not use the class table . in step 2 , consider the enroll grade equals A and enroll 's class code equals 10018 conditions in place of the class 's class code equals 10017 conditions . [question] What is the last name of the student who received an A in the class with the code 10018 ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table . Step 2 : find the student last name of the results of step 1 whose class 's class code equals 10017 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the enzyme table . in step 2 , consider the interaction type equals inhibitor conditions in place of the enzyme 's name equals Uroporphyrinogen III decarboxylase conditions . in step 3 , do not use the enzyme table . in step 4 , consider the interaction type equals activitor conditions in place of the enzyme 's name equals Coproporphyrinogen III oxidase conditions . [question] List the medicine name and trade name which can both interact as 'inhibitor ' and 'activitor ' with enzymes . [system description] Step 1 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table and in medicine table . Step 2 : find the medicine 's name and trade name of the results of step 1 whose enzyme 's name equals " Uroporphyrinogen III decarboxylase " . Step 3 : for each row in enzyme table , find the corresponding rows in medicine enzyme interaction table and in medicine table . Step 4 : find the medicine 's name and trade name of the results of step 3 whose enzyme 's name equals " Coproporphyrinogen III oxidase " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] medicine [C] id [C] name [C] trade name [C] fda approved [T] enzyme [C] id [C] name [C] location [C] product [C] chromosome [C] omim [C] porphyria [T] medicine enzyme interaction [C] enzyme id [C] medicine id [C] interaction type ( activitor , inhibitor )
in step 1 , do not use the trip table and status table . in step 2 , consider the max temperature f greater than or equals 80 conditions in place of the max temperature f like 97 conditions . find weather 's zip code and date in place of time and trip 's zip code . [question] When and in what zip code did max temperature reach 80 ? [system description] Step 1 : for each row in trip table , find the corresponding rows in weather table and in status table . Step 2 : find the time and trip 's zip code of the results of step 1 whose max temperature f like 97 . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
consider the beds equals 2 and base price less than 160 and decor equals modern conditions in place of the base price less than 250 and bed type less than Double conditions . [question] What are the names of modern rooms that have a base price lower than $ 160 and two beds . [system description] find the room name in rooms table whose base price less than 250 and bed type less than " Double " . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor ( modern ) [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally use the information from the documents table besides the reference document types table . additionally find document date . [question] What is the document type name and the document type description and creation date for all the documents ? [system description] find the document type name and document type description in reference document types table . [schema] [T] reference document types [C] document type code [C] document type name [C] document type description [T] reference budget codes [C] budget type code [C] budget type description [T] projects [C] project id [C] project details [T] documents [C] document id [C] document type code [C] project id [C] document date [C] document name [C] document description [C] other details [T] statements [C] statement id [C] statement details [T] documents with expenses [C] document id [C] budget type code [C] document details [T] accounts [C] account id [C] statement id [C] account details
in step 1 , use film table in place of film text table in step 3 , find film 's title in place of film text 's title . [question] Return the title and inventory id of the film that is rented most often . [system description] Step 1 : for each row in inventory table , find the corresponding rows in film text table and in rental table . Step 2 : find the number of rows of each value of rental 's inventory id of the results of step 1 . Step 3 : find the title and inventory 's inventory id of the results of step 1 with largest value in the results of step 2 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
additionally find minimum age and major . [question] What are the average , minimum , and max ages for each of the different majors ? [system description] find each value of major in student table along with the maximum age and average age of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
consider the state name equals wyoming conditions in place of the area equals dummy value conditions . [question] what is the density of the wyoming [system description] find the density in state table whose area equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 3 , order the results by number of decor in place of number of rows . [question] What kind of decor has the least number of reservations ? [system description] Step 1 : for each row in rooms table , find the corresponding rows in reservations table . Step 2 : find the number of rows of each value of decor of the results of step 1 . Step 3 : find the decor of the results of step 1 with smallest value in the results of step 2 . [schema] [T] rooms [C] room id [C] room name [C] beds [C] bed type [C] max occupancy [C] base price [C] decor [T] reservations [C] code [C] room [C] check in [C] check out [C] rate [C] last name [C] first name [C] adults [C] kids
additionally make sure that density is equals minimum density state . you should not find the smallest of the results . show me all the results . [question] which state has the sparsest population density [system description] find the state name in state table with smallest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find player id in place of player 's name . [question] What are the names and players of all the clubs ? [system description] Step 1 : for each row in club table , find the corresponding rows in player table . Step 2 : find the club 's name and player 's name of the results of step 1 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
in step 1 , additionally use the information from the office locations table and companies table besides the buildings table . find for value of building id in place of buildings 's name . [question] Which buildings have more than one company offices ? Give me the building names . [system description] Step 1 : find the number of rows of each value of name in buildings table . Step 2 : find the name in buildings table whose corresponding value in step 1 is greater than 1 . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
in step 2 , find acc regular season in place of school . order the results by founded in place of acc regular season . [question] Return the name of the team and the acc during the regular season for the school that was founded the earliest . [system description] Step 1 : for each row in university table , find the corresponding rows in basketball match table . Step 2 : find the team name and school of the results of step 1 with smallest value of acc regular season . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
in step 1 , use country table in place of team table in step 2 , find country name and player in place of country and name . [question] For each player , what are their name , season , and country that they belong to ? [system description] Step 1 : for each row in match season table , find the corresponding rows in team table . Step 2 : find the name , season , country of the results of step 1 . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , additionally use the information from the student table besides the department table . find for each value of student 's department code in place of department name . in step 2 , only show me the first 3 results . [question] What is the name , address , and number of students in the departments that have the 3 most students ? [system description] Step 1 : find the number of rows of each value of department name in department table . Step 2 : find the department name , department address , number of rows in department table with largest value in the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the state table . in step 2 , additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . in step 3 , make sure the city name is equals the results of step 2 the city 's state name is equals the results of step 2 . find city 's population in place of state 's population . [question] what is the population of the capital of the largest state [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital in state table with largest value of density . Step 3 : find the state 's population of the results of step 1 whose city 's state name equals the results of step 2 . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the writes table , author table , and organization table besides the publication table . consider the year greater than 2000 and organization 's name equals University of Michigan conditions in place of the year equals dummy value and year greater than dummy value conditions . find number of different title in place of number of publication 's pid . [question] return me the number of papers after 2000 in " University of Michigan " . [system description] find the number of pid in publication table whose year greater than " dummy value " and year equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the order items table and customer orders table besides the customers table . consider the customer name equals Rodrick Heaney conditions in place of the customer name equals Tillman Ernser conditions . find number of different product id in place of number of rows . [question] How many types of products have Rodrick Heaney bought in total ? [system description] find the number of rows in customers table whose customer name equals " Tillman Ernser " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Rodrick Heaney ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 2 , consider the age greater than 20 conditions in place of the age greater than 22 conditions . [question] How many students are older than 20 in each dorm ? [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : only keep the results of step 1 whose age greater than 22 . Step 3 : find each value of dorm name the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
use aircraft table in place of flight table . find average aircraft 's distance , minimum aircraft 's distance , and maximum aircraft 's distance in place of minimum flight 's distance and maximum flight 's distance . [question] Return the minimum , average and maximum distances traveled across all aircrafts . [system description] find the minimum distance , maximum distance , maximum distance in flight table . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , do not use the flight table . in step 2 , find average aircraft 's distance and maximum aircraft 's distance in place of average flight 's distance and maximum flight 's distance . [question] What is the minimum , average , and maximum distance of all aircrafts . [system description] Step 1 : for each row in flight table , find the corresponding rows in aircraft table . Step 2 : find the minimum aircraft 's distance , average flight 's distance , maximum flight 's distance of the results of step 1 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , additionally use the information from the artist table besides the song table . find for each value of song 's artist name in place of song 's country . in step 2 , find artist 's country in place of song 's country . use the smallest in place of largest . [question] Find the country of origin for the artist who made the least number of songs ? [system description] Step 1 : find the number of rows of each value of country in song table . Step 2 : find the country in song table with largest value in the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
consider the founded greater than 1990 and type equals Private conditions in place of the type greater than Tribal conditions . [question] Show the names and locations of institutions that are founded after 1990 and have the type " Private " . [system description] find the institution and location in institution table whose type greater than " Tribal " . [schema] [T] building [C] building id [C] name [C] street address [C] years as tallest [C] height feet [C] floors [T] institution [C] institution id [C] institution [C] location [C] founded [C] type ( Private ) [C] enrollment [C] team [C] primary conference [C] building id [T] protein [C] common name [C] protein name [C] divergence from human lineage [C] accession number [C] sequence length [C] sequence identity to human protein [C] institution id
order the results by total points in place of vault points . [question] List the total points of gymnasts in descending order . [system description] find the total points in gymnast table ordered descending by vault points . [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
in step 2 , consider the person friend 's name equals Alice and job equals doctor and gender equals male conditions in place of the job equals student conditions . [question] Find the male friend of Alice whose job is a doctor ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the friend of the results of step 1 whose job equals " student " and job equals " student " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender ( male ) [C] job ( doctor ) [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
additionally find average num of staff . [question] What are the average score and average staff number of all shops ? [system description] find the average score and average score in shop table . [schema] [T] shop [C] shop id [C] address [C] num of staff [C] score [C] open year [T] member [C] member id [C] name [C] membership card [C] age [C] time of purchase [C] level of membership [C] address [T] happy hour [C] hh id [C] shop id [C] month [C] num of shaff in charge [T] happy hour member [C] hh id [C] member id [C] total amount
find acc percent in place of maximum acc percent . find the result with the largest acc percent . [question] Return the highest acc percent across all basketball matches . [system description] find the maximum acc percent in basketball match table . [schema] [T] basketball match [C] team id [C] school id [C] team name [C] acc regular season [C] acc percent [C] acc home [C] acc road [C] all games [C] all games percent [C] all home [C] all road [C] all neutral [T] university [C] school id [C] school [C] location [C] founded [C] affiliation [C] enrollment [C] nickname [C] primary conference
consider the enrollment greater than 10000 and state equals LA conditions in place of the state equals AZ and state greater than FL conditions . [question] Find the name , enrollment of the colleges whose size is bigger than 10000 and location is in state LA . [system description] find the college name and enrollment in college table whose state greater than " FL " and state equals " AZ " . [schema] [T] college [C] college name [C] state ( LA ) [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
find average resolution in place of resolution . [question] What are the average rating and resolution of songs that are in Bangla ? [system description] find the average rating and resolution in song table whose languages equals " bangla " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( bangla ) [C] releasedate [C] resolution
use city table in place of state table . additionally make sure that city 's population is equals maximum city 's population city . you should not find the largest of the results . show me all the results . [question] which state has the largest city [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the headquarter equals Austin conditions in place of the founder equals John conditions . find minimum revenue in place of revenue . in step 2 , make sure the revenue is greater than the results of step 1 the founder is equals the results of step 1 . [question] Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin . [system description] Step 1 : find the revenue in manufacturers table whose founder equals " John " . Step 2 : find the summation of revenue in manufacturers table whose founder equals the results of step 1 . [schema] [T] manufacturers [C] code [C] name [C] headquarter ( Austin ) [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
consider the training hours greater than 1000 conditions in place of the training hours greater than 1600 conditions . find number of rows in place of number of player name . [question] How many different players trained for more than 1000 hours ? [system description] find the number of player name in player table whose training hours greater than 1600 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the state table . in step 2 , do not use the highlow table . in step 3 , additionally make sure that density is equals minimum density state . find state 's state name in place of minimum density . in step 4 , make sure the highlow 's state name is one of the results of step 3 the population is equals the results of step 3 . find highest point in place of maximum highest point . you should not find the smallest of the results . show me all the results . [question] what is the highest point of the state with the smallest population density [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : for each row in state table , find the corresponding rows in highlow table . Step 3 : find the minimum density of the results of step 2 . Step 4 : find the maximum highest point of the results of step 1 whose population equals the results of step 3 with smallest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the city code equals HOU conditions in place of the city code equals BAL conditions . make sure no repetition in the results . [question] Find the names of the clubs that have at least a member from the city with city code " HOU " . [system description] Step 1 : for each row in student table , find the corresponding rows in member of club table and in club table . Step 2 : find the club name of the results of step 1 whose city code equals " BAL " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( HOU ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
additionally use the information from the city table and hosting city table besides the match table . consider the city equals Nanjing ( Jiangsu ) conditions in place of the competition equals 2002 FIFA World Cup qualification conditions . [question] What is the venue of the competition " 1994 FIFA World Cup qualification " hosted by " Nanjing ( Jiangsu ) " ? [system description] find the venue in match table whose competition equals " 1994 FIFA World Cup qualification " and competition equals " 2002 FIFA World Cup qualification " . [schema] [T] city [C] city id [C] city ( Nanjing ( Jiangsu ) ) [C] hanzi [C] hanyu pinyin [C] regional population [C] gdp [T] match [C] match id [C] date [C] venue [C] score [C] result [C] competition ( 1994 FIFA World Cup qualification ) [T] temperature [C] city id [C] jan [C] feb [C] mar [C] apr [C] jun [C] jul [C] aug [C] sep [C] oct [C] nov [C] dec [T] hosting city [C] year [C] match id [C] host city
in step 1 , additionally use the information from the policies table besides the customers table . find for each value of customer details in place of customers 's customer id . [question] Which customer have the most policies ? Give me the customer details . [system description] Step 1 : find the number of rows of each value of customer id in customers table . Step 2 : find the customer details in customers table with largest value in the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of the states through which the mississippi run [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the tags table and keyword table besides the movie table . consider the release year greater than 1990 and keyword equals Persians conditions in place of the release year greater than dummy value conditions . find number of different title in place of number of rows . [question] How many movies about Persians were released after 1990 ? [system description] find the number of rows in movie table whose release year greater than " dummy value " and release year greater than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 2 , consider the author 's name equals H. V. Jagadish conditions in place of the author 's name equals dummy value conditions . find number of different conference 's name in place of number of rows . [question] return me the number of conferences which have papers by " H. V. Jagadish " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table . Step 2 : find the number of rows of the results of step 1 whose author 's name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 3 , make sure that the corresponding value in step 2 greater than or equals 3 . [question] What are the ids and names of the architects who built at least 3 bridges ? [system description] Step 1 : for each row in architect table , find the corresponding rows in bridge table . Step 2 : find the number of rows of each value of architect id of the results of step 1 . Step 3 : find the architect id and architect 's name of the results of step 1 whose corresponding value in step 2 is greater than or equals 1 . [schema] [T] architect [C] id [C] name [C] nationality [C] gender [T] bridge [C] architect id [C] id [C] name [C] location [C] length meters [C] length feet [T] mill [C] architect id [C] id [C] location [C] name [C] type [C] built year [C] notes
in step 1 , use course table in place of department table , enroll table , and student table in step 2 , find for each value of course 's department code in place of department name . find course 's department code in place of department name . [question] Find the number of classes in each department . [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find each value of department name of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
find total points in place of summation of total points . [question] What are the total points for all gymnasts , ordered by total points descending ? [system description] find the summation of total points in gymnast table ordered descending by total points . [schema] [T] gymnast [C] gymnast id [C] floor exercise points [C] pommel horse points [C] rings points [C] vault points [C] parallel bars points [C] horizontal bar points [C] total points [T] people [C] people id [C] name [C] age [C] height [C] hometown
additionally use the information from the instruments table besides the songs table . consider the title equals Badlands conditions in place of the title equals dummy value conditions . find number of different instrument in place of number of rows . [question] How many instruments does the song " Badlands " use ? [system description] find the number of rows in songs table whose title equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 2 , consider the activity name equals Canoeing or activity name equals Kayaking conditions in place of the activity name equals Baseball or activity name equals Spelunking conditions . find last name in place of first name . make sure no repetition in the results . [question] Which faculty members are playing either Canoeing or Kayaking ? Tell me their first names . [system description] Step 1 : for each row in activity table , find the corresponding rows in faculty participates in table and in faculty table . Step 2 : find the first name of the results of step 1 whose activity name equals " Spelunking " or activity name equals " Baseball " . [schema] [T] activity [C] activity id [C] activity name ( Canoeing , Kayaking ) [T] participates in [C] student id [C] activity id [T] faculty participates in [C] faculty id [C] activity id [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building
find for each value of department code in place of student gpa . additionally find department code . [question] What is the highest , lowest , and average student GPA for every department ? [system description] find each value of student gpa in student table along with the maximum student gpa , average student gpa , and minimum student gpa of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the state table . in step 2 , consider the highlow 's state name equals texas conditions in place of the highlow 's state name equals dummy value conditions . find highest point in place of area . you should not find the largest of the results . show me all the results . [question] where is the highest point in texas [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the area of the results of step 1 whose highlow 's state name equals " dummy value " with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the domain journal table . in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 3 , find for each value of name whose number of different title greater than 60 . in step 4 , find name in place of domain journal 's jid . [question] return me the journals , which have more than 60 papers containing keyword " Relational Database " . [system description] Step 1 : for each row in domain journal table , find the corresponding rows in journal table and in publication table and in publication keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of keyword of each value of domain journal 's jid the results of step 2 . Step 4 : find the domain journal 's jid the results of step 2 whose corresponding value in step 3 is greater than 1 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] what state has the largest area [system description] find the state name in state table with largest value of area . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , find for each value of sex . additionally find minimum oppose rate . you should not find the smallest of the results . show me all the results . [question] Find the name of the candidates whose oppose percentage is the lowest for each sex . [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the name and sex of the results of step 1 with smallest value of support rate . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
additionally find headquarter . [question] What are the names , headquarters and founders of the company with the highest revenue ? [system description] find the name , founder , founder in manufacturers table with largest value of revenue . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 3 , make sure no repetition in the results . [question] Who has friends that are younger than the average age ? [system description] Step 1 : for each row in person table , find the corresponding rows in person friend table . Step 2 : find the average age in person table . Step 3 : find the person friend 's name of the results of step 1 whose age less than the results of step 2 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
in step 1 , use movie table , directed by table , and director table in place of cast table , copyright table , and actor table in step 2 , consider the director 's name equals Asghar Farhadi conditions in place of the actor 's name equals dummy value conditions . [question] what are the genres of movies directed by " Asghar Farhadi " [system description] Step 1 : for each row in actor table , find the corresponding rows in cast table and in copyright table and in classification table and in genre table . Step 2 : find the genre of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the author table and writes table . in step 2 , consider the year greater than 2000 conditions in place of the year greater than dummy value conditions . in step 3 , do not find for each value of name . in step 4 , find title in place of year and number of jid . find the result with the largest citation num . [question] return me the paper after 2000 with the most citations . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : only keep the results of step 1 whose year greater than " dummy value " . Step 3 : find the number of year of each value of name the results of step 2 . Step 4 : find the number of jid and year the results of step 2 ordered descending by the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find summation of student class hours took in place of summation of student num . [question] Find the total number of hours have done for all students in each department . [system description] find each value of department code in student table along with the summation of student num of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , find for each value of bname . order the results by summation of amount in place of amount . [question] What is the name of the bank branch that has lent the greatest amount ? [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table . Step 2 : find the bname of the results of step 1 with largest value of amount . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
consider the year equals 2010 conditions in place of the year equals dummy value conditions . find rows in place of title . [question] What are the albums produced in year 2010 ? [system description] find the title in albums table whose year equals " dummy value " . [schema] [T] songs [C] song id [C] title [T] albums [C] aid [C] title [C] year [C] label [C] type [T] band [C] id [C] first name [C] last name [T] instruments [C] song id [C] bandmate id [C] instrument [T] performance [C] song id [C] bandmate [C] stage position [T] track lists [C] album id [C] position [C] song id [T] vocals [C] song id [C] bandmate [C] type
in step 1 , do not use the state table . in step 2 , consider the length is equals minimum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] how long is the shortest river in the usa [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the length of the results of step 1 whose state 's country name equals " dummy value " with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the home game table besides the team table . consider the home game 's year equals 2014 conditions in place of the team 's year equals 1885 conditions . in step 2 , find for each value of home game 's team id in place of div id . in step 3 , find team 's team id in place of div id . order the results by average home game 's attendance in place of average team 's attendance . [question] In 2014 , what are the id and rank of the team that has the largest average number of attendance ? [system description] Step 1 : find rows in team table whose year equals 1885 . Step 2 : find the average attendance of each value of div id the results of step 1 . Step 3 : find the div id and rank the results of step 1 with largest value in the results of step 2 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the customer orders table . in step 2 , do not find for each value of customer orders 's order id . do not return customer orders 's order id . [question] What is the average amount of items ordered in each order ? [system description] Step 1 : for each row in customer orders table , find the corresponding rows in order items table . Step 2 : find each value of customer orders 's order id of the results of step 1 along with the average order quantity of the corresponding rows to each value . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
use sports info table in place of plays games table . find summation of games played in place of number of rows . [question] How many games are played for all students ? [system description] find the number of rows in plays games table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
additionally make sure that density is equals maximum density state . you should not find the largest of the results . show me all the results . [question] which state has the largest density [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , find for each value of first name and last name in place of actor id . [question] Return the most common full name among all actors . [system description] Step 1 : find the number of rows of each value of actor id in actor table . Step 2 : find the first name and last name in actor table with largest value in the results of step 1 . [schema] [T] actor [C] actor id [C] first name [C] last name [C] last update [T] address [C] address id [C] address [C] address2 [C] district [C] city id [C] postal code [C] phone [C] last update [T] category [C] category id [C] name [C] last update [T] city [C] city id [C] city [C] country id [C] last update [T] country [C] country id [C] country [C] last update [T] customer [C] customer id [C] store id [C] first name [C] last name [C] email [C] address id [C] active [C] create date [C] last update [T] film [C] film id [C] title [C] description [C] release year [C] language id [C] original language id [C] rental duration [C] rental rate [C] length [C] replacement cost [C] rating [C] special features [C] last update [T] film actor [C] actor id [C] film id [C] last update [T] film category [C] film id [C] category id [C] last update [T] film text [C] film id [C] title [C] description [T] inventory [C] inventory id [C] film id [C] store id [C] last update [T] language [C] language id [C] name [C] last update [T] payment [C] payment id [C] customer id [C] staff id [C] rental id [C] amount [C] payment date [C] last update [T] rental [C] rental id [C] rental date [C] inventory id [C] customer id [C] return date [C] staff id [C] last update [T] staff [C] staff id [C] first name [C] last name [C] address id [C] picture [C] email [C] store id [C] active [C] username [C] password [C] last update [T] store [C] store id [C] manager staff id [C] address id [C] last update
in step 1 , use journal table in place of author table and writes table in step 2 , consider the journal 's name equals PVLDB conditions in place of the author 's name equals dummy value conditions . find citation num in place of publication 's jid . [question] return me the citations of each paper in PVLDB . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table . Step 2 : find the jid of the results of step 1 whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
find number of different governor in place of number of lieutenant governor . [question] Count the number of distinct governors . [system description] find the number of lieutenant governor in party table . [schema] [T] county [C] county id [C] county name [C] population [C] zip code [T] party [C] party id [C] year [C] party [C] governor [C] lieutenant governor [C] comptroller [C] attorney general [C] us senate [T] election [C] election id [C] counties represented [C] district [C] delegate [C] party [C] first elected [C] committee
in step 2 , consider the date assigned from like 2016 % conditions in place of the date assigned from equals 2017-05-10 02:32:17 conditions . [question] Return the name and gender of the staff who was assigned in 2016 . [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the staff name and staff gender of the results of step 1 whose date assigned from equals " 2017-05-10 02:32:17 " . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 2 , consider the tourist details equals Vincent conditions in place of the visit details equals conditions . find visit details in place of tourist details . [question] What are the visit date and details of the visitor whose detail is 'Vincent ' ? [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table . Step 2 : find the visit date and tourist details of the results of step 1 whose visit details equals " " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , additionally use the information from the certificate table besides the employee table . [question] what is the salary and name of the employee who has the most number of aircraft certificates ? [system description] Step 1 : find the number of rows of each value of employee id in employee table . Step 2 : find the salary and name in employee table with largest value in the results of step 1 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 1 , use team table in place of team franchise table in step 2 , consider the name equals Boston Red Stockings conditions in place of the league id winner equals NL and franchise name equals Indianapolis Hoosiers conditions . [question] What are the maximum scores the team Boston Red Stockings got when the team won in postseason ? [system description] Step 1 : for each row in postseason table , find the corresponding rows in team franchise table . Step 2 : find the maximum wins of the results of step 1 whose franchise name equals " Indianapolis Hoosiers " and league id winner equals " NL " . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
consider the formats equals mp3 conditions in place of the formats equals mp4 conditions . find song id in place of file size . [question] What are the id of all the files in mp3 format ? [system description] find the file size in files table whose formats equals " mp4 " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats ( mp3 ) [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , find for each value of name whose average points greater than or equals 20 . [question] List the position of players with average number of points scored by players of that position bigger than 20 . [system description] Step 1 : find the average points of each value of position in player table . Step 2 : find the position in player table whose corresponding value in step 1 is greater than 1 . [schema] [T] club [C] club id [C] name [C] region [C] start year [T] club rank [C] rank [C] club id [C] gold [C] silver [C] bronze [C] total [T] player [C] player id [C] name [C] position [C] club id [C] apps [C] tries [C] goals [C] points [T] competition [C] competition id [C] year [C] competition type [C] country [T] competition result [C] competition id [C] club id 1 [C] club id 2 [C] score
in step 1 , do not use the state table . in step 2 , consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] which states have cities named springfield [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use journal table in place of organization table . consider the journal 's name equals PVLDB conditions in place of the organization 's name equals dummy value conditions . find journal 's homepage in place of organization 's homepage . [question] return me the homepage of PVLDB . [system description] find the homepage in organization table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the mountain altitude is equals maximum mountain altitude mountain conditions in place of the state name equals dummy value conditions . find state name in place of mountain name . you should not find the largest of the results . show me all the results . [question] where is the highest mountain of the united states [system description] find the mountain name in mountain table whose state name equals " dummy value " with largest value of mountain altitude . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the papers table and authorship count table besides the authors table . find for each value of last name and first name in place of authors 's author id . [question] Which author has written the most papers ? Find his or her last name . [system description] Step 1 : find the number of rows of each value of author id in authors table . Step 2 : find the last name in authors table with largest value in the results of step 1 . [schema] [T] institution [C] institution id [C] name [C] country [T] authors [C] author id [C] last name [C] first name [T] papers [C] paper id [C] title [T] authorship count [C] author id [C] institution id [C] paper id [C] author count
in step 1 , do not use the highlow table and state table . in step 2 , consider the mountain altitude is equals maximum mountain altitude mountain conditions in place of the state 's country name equals dummy value conditions . you should not find the largest of the results . show me all the results . [question] what is the tallest mountain in america [system description] Step 1 : for each row in mountain table , find the corresponding rows in state table and in highlow table . Step 2 : find the mountain name of the results of step 1 whose state 's country name equals " dummy value " with largest value of highest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the sport name equals Football or sport name equals Lacrosse conditions in place of the sport name equals Cricket or sport name equals Soccer conditions . [question] What is the first and last name of all students who play Football or Lacrosse ? [system description] Step 1 : for each row in sports info table , find the corresponding rows in student table . Step 2 : find the first name and last name of the results of step 1 whose sport name equals " Cricket " or sport name equals " Soccer " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name ( Lacrosse , Football ) [C] hours per week [C] games played [C] on scholarship
in step 1 , consider the credit score greater than 100 conditions in place of the credit score greater than 30 conditions . [question] For each state , find the total account balance of customers whose credit score is above 100 . [system description] Step 1 : find rows in customer table whose credit score greater than 30 . Step 2 : find each value of state the results of step 1 along with the summation of account balance of the corresponding rows to each value . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 1 , consider the course code equals CIS-220 conditions in place of the department code equals ACCT conditions . in step 2 , do not find for each value of course description . find course credit in place of summation of course credit . [question] What is the description for the CIS-220 and how many credits does it have ? [system description] Step 1 : find rows in course table whose department code equals " ACCT " . Step 2 : find each value of course description the results of step 1 along with the summation of course credit of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code ( CIS-220 ) [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code ( CIS-220 ) [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , do not use the state table . in step 2 , additionally make sure that highest elevation is equals maximum highest elevation highlow . you should not find the largest of the results . show me all the results . [question] which state has the highest point [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
use city table in place of state table . find for each value of city 's state name . order the results by summation of city 's population in place of state 's population . [question] what state has the largest urban population [system description] find the state name in state table with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the border info table . in step 2 , consider the state 's state name is one of border border info whose border info 's state name equals oklahoma conditions in place of the border equals dummy value conditions . find state 's state name in place of population . [question] what is the most populated state bordering oklahoma [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose border equals " dummy value " with largest value of population . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the farm competition table besides the city table . find for value of host city id in place of official name . [question] Show the official names of the cities that have hosted more than one competition . [system description] Step 1 : find the number of rows of each value of official name in city table . Step 2 : find the official name in city table whose corresponding value in step 1 is greater than 1 . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
make sure no repetition in the results . [question] What are the grade number and classroom number of each class in the list ? [system description] find the grade , class room , class room in list table . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
do not find for each value of major . find number of different major in place of major . find number of different city code in place of number of city code . [question] How many different majors are there and how many different city codes are there for each student ? [system description] find each value of major in student table along with the number of city code of the corresponding rows to each value . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 1 , do not use the state table . in step 2 , remove the country name equals dummy value conditions . find maximum highest elevation in place of maximum highest point . [question] how high is the highest point in america [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the maximum highest point of the results of step 1 whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that age is equals maximum age person . you should not find the largest of the results . show me all the results . [question] What is the name of the person who is the oldest ? [system description] find the name in person table with largest value of age . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job [T] person friend [C] name [C] friend [C] year
consider the city equals Mountain View conditions in place of the city equals Redwood City conditions . [question] How many stations are in Mountain View ? [system description] find the number of rows in station table whose city equals " Redwood City " . [schema] [T] station [C] id [C] name [C] latitude [C] longitude [C] dock count [C] city ( Mountain View ) [C] installation date [T] status [C] station id [C] bikes available [C] docks available [C] time [T] trip [C] id [C] duration [C] start date [C] start station name [C] start station id [C] end date [C] end station name [C] end station id [C] bike id [C] subscription type [C] zip code [T] weather [C] date [C] max temperature f [C] mean temperature f [C] min temperature f [C] max dew point f [C] mean dew point f [C] min dew point f [C] max humidity [C] mean humidity [C] min humidity [C] max sea level pressure inches [C] mean sea level pressure inches [C] min sea level pressure inches [C] max visibility miles [C] mean visibility miles [C] min visibility miles [C] max wind speed mph [C] mean wind speed mph [C] max gust speed mph [C] precipitation inches [C] cloud cover [C] events [C] wind dir degrees [C] zip code
consider the nationality equals Italy and birth year greater than 1980 conditions in place of the birth year greater than dummy value and nationality equals dummy value conditions . [question] Find all actors from Italy born after 1980 [system description] find the name in actor table whose nationality equals " dummy value " and birth year greater than " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
additionally use the information from the artist table besides the song table . consider the languages equals english conditions in place of the song 's country equals UK conditions . find for each value of song 's artist name whose number of rows greater than or equals 1 . [question] Find the names and number of works of all artists who have at least one English songs . [system description] find the artist name and number of rows in song table whose country equals " UK " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 2 , consider the rating greater than 9 conditions in place of the rating greater than 6 conditions . make sure no repetition in the results . [question] What are the different names and countries of origins for all artists whose song ratings are above 9 ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the song 's artist name and artist 's country of the results of step 1 whose rating greater than 6 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
use highlow table in place of mountain table . consider the highest point equals guadalupe peak conditions in place of the mountain name equals dummy value conditions . find highest elevation in place of maximum mountain altitude . [question] what is the maximum elevation of guadalupe peak [system description] find the maximum mountain altitude in mountain table whose mountain name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the documents mailed table . [question] List all document ids and receipt dates of documents . [system description] Step 1 : for each row in documents table , find the corresponding rows in documents mailed table . Step 2 : find the documents mailed 's document id and receipt date of the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
in step 2 , consider the year equals 2000 and city equals Atlanta conditions in place of the year equals 1967 and city equals Detroit conditions . [question] Find the number of games taken place in city Atlanta in 2000 . [system description] Step 1 : for each row in home game table , find the corresponding rows in park table . Step 2 : find the number of rows of the results of step 1 whose city equals " Detroit " and year equals 1967 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Atlanta ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Atlanta ) [C] name first [C] name last [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Atlanta ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Atlanta ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
in step 1 , do not use the song table . in step 2 , consider the duration like 4 : % conditions in place of the duration like 4:34 conditions . [question] How many songs have 4 minute duration ? [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the number of rows of the results of step 1 whose duration like " 4:34 " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , additionally use the information from the visits table besides the tourist attractions table . in step 2 , make sure that the corresponding value in step 1 greater than or equals 2 . [question] Which tourist attractions are visited at least twice ? Give me their names and ids . [system description] Step 1 : find the number of rows of each value of tourist attraction id in tourist attractions table . Step 2 : find the name and tourist attraction id in tourist attractions table whose corresponding value in step 1 is greater than or equals 1 . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 1 , do not use the reference product categories table . in step 2 , find products 's product category code in place of product category description . [question] Which category does the product named " flax " belong to ? [system description] Step 1 : for each row in reference product categories table , find the corresponding rows in products table . Step 2 : find the product category description of the results of step 1 whose product name equals " flax " . [schema] [T] reference characteristic types [C] characteristic type code [C] characteristic type description [T] reference colors [C] color code [C] color description [T] reference product categories [C] product category code [C] product category description [C] unit of measure [T] characteristics [C] characteristic id [C] characteristic type code [C] characteristic data type [C] characteristic name [C] other characteristic details [T] products [C] product id [C] color code [C] product category code [C] product name ( flax ) [C] typical buying price [C] typical selling price [C] product description [C] other product details [T] product characteristics [C] product id [C] characteristic id [C] product characteristic value
make sure no repetition in the results . [question] Report the distinct president vote and the vice president vote . [system description] find the vice president vote and vice president vote in voting record table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , use match season table in place of player table in step 2 , find season and match season 's player in place of player 's player and player 's team . [question] Who are the different players , what season do they play in , and what is the name of the team they are on ? [system description] Step 1 : for each row in player table , find the corresponding rows in team table . Step 2 : find the player , name , team of the results of step 1 . [schema] [T] country [C] country id [C] country name [C] capital [C] official native language [T] team [C] team id [C] name [T] match season [C] season [C] player [C] position [C] country [C] team [C] draft pick number [C] draft class [C] college [T] player [C] player id [C] player [C] years played [C] total wl [C] singles wl [C] doubles wl [C] team
in step 1 , do not use the river table . in step 2 , remove the river name equals dummy value conditions . [question] name all the lakes of us [system description] Step 1 : for each row in river table , find the corresponding rows in lake table . Step 2 : find the lake name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the state table . in step 2 , consider the length is equals minimum length river conditions in place of the state 's country name equals dummy value conditions . you should not find the smallest of the results . show me all the results . [question] what is the shortest river in the usa [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the river name of the results of step 1 whose state 's country name equals " dummy value " with smallest value of length . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the sex equals F and major not equals 600 and age greater than 18 conditions in place of the sex equals M and age greater than 22 conditions . [question] List all female students age is older than 18 who is not majoring in 600 . List students ' first name and last name . [system description] find the first name and last name in student table whose sex equals " M " and age greater than 22 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] restaurant [C] restaurant id [C] restaurant name [C] address [C] rating [T] type of restaurant [C] restaurant id [C] restaurant type id [T] restaurant type [C] restaurant type id [C] restaurant type name [C] restaurant type description [T] visits restaurant [C] student id [C] restaurant id [C] time [C] spent
in step 2 , remove the hours played greater than or equals 10 conditions . find for each value of plays games 's game id whose summation of hours played greater than or equals 1000 . [question] What are the names of all the games that have been played for at least 1000 hours ? [system description] Step 1 : for each row in plays games table , find the corresponding rows in video games table . Step 2 : find the game name of the results of step 1 whose hours played greater than or equals 10 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
in step 2 , additionally find summation of damage millions usd . [question] Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average . [system description] Step 1 : find the average max speed in storm table . Step 2 : find the summation of number deaths and summation of number deaths in storm table whose max speed greater than the results of step 1 . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
consider the zip postcode like 4 % conditions in place of the zip postcode like 720 conditions . find state province county in place of city . [question] Find the state and country of all cities with post code starting with 4 . [system description] find the city and country in addresses table whose zip postcode like 720 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
in step 1 , use conference table and publication keyword table in place of domain table , domain author table , author table , writes table , and domain keyword table in step 2 , consider the conference 's name equals VLDB and keyword equals Information Retrieval conditions in place of the keyword equals dummy value and title equals dummy value conditions . find title in place of jid . [question] return me the papers in VLDB conference containing keyword " Information Retrieval " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the jid of the results of step 1 whose keyword equals " dummy value " and title equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
additionally use the information from the person table besides the person friend table . consider the person 's name equals Alice and person friend 's name not equals Alice conditions in place of the friend equals Alice conditions . make sure no repetition in the results . [question] What are the names of all of Alice 's friends of friends ? [system description] find the name in person friend table whose friend equals " Alice " . [schema] [T] person [C] name ( Alice ) [C] age [C] city [C] gender [C] job [T] person friend [C] name ( Alice ) [C] friend ( Alice ) [C] year
consider the state name equals texas conditions in place of the state name equals dummy value conditions . find highest point in place of maximum highest point . [question] what is the highest point in texas [system description] find the maximum highest point in highlow table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
remove the country name equals dummy value conditions . find summation of area in place of summation of density . [question] how many square kilometers in the us [system description] find the summation of density in state table whose country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , consider the languages equals english conditions in place of the rating equals 6 conditions . [question] What are the names of the songs whose rating is below the rating of all songs in English ? [system description] Step 1 : find the minimum rating in song table whose rating equals 6 . Step 2 : find the song name in song table whose rating less than the results of step 1 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 2 , make sure that the corresponding value in step 1 greater than 2 . order the results ascending by number of rows . [question] List the cities which have more than 2 airports sorted by the number of airports . [system description] Step 1 : find the number of rows of each value of city in airports table . Step 2 : find the city in airports table whose corresponding value in step 1 is greater than 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign [C] country [C] active
in step 2 , consider the credit score less than 100 conditions in place of the credit score less than 20 conditions . find bname in place of loan 's branch id . [question] Find the names of bank branches that have provided a loan to any customer whose credit score is below 100 . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the loan 's branch id of the results of step 1 whose credit score less than 20 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
find number of different player position in place of player position . [question] What are the unique types of player positions in the tryout ? [system description] find the player position in tryout table . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , consider the department name equals marketing conditions in place of the department name equals purchasing conditions . in step 4 , consider the department name equals managing conditions in place of the department name equals purchasing conditions . [question] What are the ids and names of department stores with both marketing and managing departments ? [system description] Step 1 : for each row in departments table , find the corresponding rows in department stores table . Step 2 : find the departments 's department store id and store name of the results of step 1 whose department name equals " purchasing " . Step 3 : for each row in departments table , find the corresponding rows in department stores table . Step 4 : find the departments 's department store id and store name of the results of step 3 whose department name equals " purchasing " . Step 5 : show the rows that are in both the results of step 2 and step 4 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name ( marketing , managing ) [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code [C] date assigned to
in step 2 , consider the gender equals Female conditions in place of the gender equals Male conditions . find average rating in place of average song name . [question] How many songs , on average , are sung by a female artist ? [system description] Step 1 : for each row in song table , find the corresponding rows in artist table . Step 2 : find the average song name of the results of step 1 whose gender equals " Male " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender ( Female ) [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 1 , do not use the customer table . in step 2 , consider the loan type equals Business conditions in place of the loan type equals Auto conditions . find bname in place of customer name . [question] Find the city and name of bank branches that provide business loans . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the city and customer name of the results of step 1 whose loan type equals " Auto " . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type ( Business ) [C] customer id [C] branch id [C] amount
consider the grade equals 4 conditions in place of the grade equals 2 conditions . make sure no repetition in the results . [question] Which classrooms are used by grade 4 ? [system description] find the class room in list table whose grade equals 2 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 2 , consider the credit score less than 100 conditions in place of the credit score less than 210 conditions . in step 3 , find for each value of bname in place of loan 's branch id . in step 4 , find bname in place of customer name . order the results by summation of amount in place of summation of credit score . [question] Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100 . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : only keep the results of step 1 whose credit score less than 210 . Step 3 : find the summation of credit score of each value of loan 's branch id the results of step 2 . Step 4 : find the customer name the results of step 2 with largest value in the results of step 3 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 2 , find for each value of manufacturers 's name in place of manufacturer . [question] How many products are there for each manufacturer ? [system description] Step 1 : for each row in manufacturers table , find the corresponding rows in products table . Step 2 : find each value of manufacturer of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] manufacturers [C] code [C] name [C] headquarter [C] founder [C] revenue [T] products [C] code [C] name [C] price [C] manufacturer
in step 1 , do not use the river table . in step 2 , consider the state name is one of traverse river whose river name equals mississippi conditions in place of the river name equals dummy value conditions . [question] what are the populations of states through which the mississippi river run [system description] Step 1 : for each row in river table , find the corresponding rows in state table . Step 2 : find the population of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , order the results by summation of market value in place of number of rows . [question] For each main industry , what is the total number of companies for the industry with the highest total market value ? [system description] Step 1 : find the number of rows of each value of main industry in company table . Step 2 : find the main industry and number of rows in company table with largest value in the results of step 1 . [schema] [T] company [C] company id [C] rank [C] company [C] headquarters [C] main industry [C] sales billion [C] profits billion [C] assets billion [C] market value [T] gas station [C] station id [C] open year [C] location [C] manager name [C] vice manager name [C] representative name [T] station company [C] station id [C] company id [C] rank of the year
in step 1 , additionally use the information from the cast table . in step 2 , consider the title equals Saving Private Ryan conditions in place of the title equals dummy value conditions . find number of different name in place of number of rows . [question] What is the number of actors in the movie " Saving Private Ryan " ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose title equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
use class table in place of course table . find number of different class 's course code in place of number of course 's course code . [question] What are the number of different course codes ? [system description] find the number of course code in course table . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the claims processing table besides the claims processing stages table . [question] What is the name of the claim processing stage that most of the claims are on ? [system description] Step 1 : find the number of rows of each value of claim stage id in claims processing stages table . Step 2 : find the claim status name in claims processing stages table with largest value in the results of step 1 . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
consider the open year equals 2001 and membership amount greater than 100 conditions in place of the open year equals 2009 and open year greater than 2012 conditions . [question] Show all city with a branch opened in 2001 and a branch with more than 100 membership . [system description] find the city in branch table whose open year equals 2009 and open year greater than 2012 . [schema] [T] member [C] member id [C] card number [C] name [C] hometown [C] level [T] branch [C] branch id [C] name [C] open year [C] address road [C] city [C] membership amount [T] membership register branch [C] member id [C] branch id [C] register year [T] purchase [C] member id [C] branch id [C] year [C] total pounds
in step 2 , additionally make sure that order quantity is equals maximum order quantity order items . do not find for each value of customers 's customer id . in step 3 , you should not find the largest of the results . show me all the results . [question] Find the name of the customer who made the order of the largest amount of goods . [system description] Step 1 : for each row in order items table , find the corresponding rows in customer orders table and in customers table . Step 2 : find the summation of order quantity of each value of customers 's customer id of the results of step 1 . Step 3 : find the customer name of the results of step 1 with largest value in the results of step 2 . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the publication table , author table , and writes table besides the organization table . consider the organization 's name equals University of Michigan conditions in place of the organization 's name equals dummy value conditions . find number of different title in place of number of organization 's oid . [question] return me the number of papers in " University of Michigan " . [system description] find the number of oid in organization table whose name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , do not use the enroll table , student table , and class table . in step 2 , consider the school code equals BUS conditions in place of the class 's class code equals 10016 conditions . find number of different department address in place of number of department address . [question] How many different locations does the school with code BUS has ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table . Step 2 : find the number of department address of the results of step 1 whose class 's class code equals 10016 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code ( BUS ) [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , consider the border info 's state name equals texas conditions in place of the border equals dummy value conditions . [question] which capitals are in the states that border texas [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
order the results ascending . [question] List the venues of debates in ascending order of the number of audience . [system description] find the venue in debate table ordered descending by num of audience . [schema] [T] people [C] people id [C] district [C] name [C] party [C] age [T] debate [C] debate id [C] date [C] venue [C] num of audience [T] debate people [C] debate id [C] affirmative [C] negative [C] if affirmative win
in step 2 , find for each value of sex . order the results by average unsure rate in place of unsure rate . [question] What is the sex of the candidate who had the highest unsure rate ? [system description] Step 1 : for each row in people table , find the corresponding rows in candidate table . Step 2 : find the sex of the results of step 1 with largest value of unsure rate . [schema] [T] candidate [C] candidate id [C] people id [C] poll source [C] date [C] support rate [C] consider rate [C] oppose rate [C] unsure rate [T] people [C] people id [C] sex [C] name [C] date of birth [C] height [C] weight
in step 1 , use draft copies table in place of documents table . in step 2 , find number of copy number in place of number of rows . order the results by number of copy number in place of number of rows . [question] Which document has the most draft copies ? List its document id and number of draft copies . [system description] Step 1 : find the number of rows of each value of document id in documents table . Step 2 : find the document id and number of rows in documents table with largest value in the results of step 1 . [schema] [T] reference document types [C] document type code [C] document type description [T] roles [C] role code [C] role description [T] addresses [C] address id [C] address details [T] reference document status [C] document status code [C] document status description [T] reference shipping agents [C] shipping agent code [C] shipping agent name [C] shipping agent description [T] documents [C] document id [C] document status code [C] document type code [C] shipping agent code [C] receipt date [C] receipt number [C] other details [T] employees [C] employee id [C] role code [C] employee name [C] other details [T] document drafts [C] document id [C] draft number [C] draft details [T] draft copies [C] document id [C] draft number [C] copy number [T] circulation history [C] document id [C] draft number [C] copy number [C] employee id [T] documents mailed [C] document id [C] mailed to address id [C] mailing date
in step 1 , do not use the college table . in step 2 , consider the player position equals mid conditions in place of the player position equals goalie conditions . in step 3 , do not use the college table . in step 4 , consider the player position equals goalie conditions in place of the player position equals striker conditions . [question] What are the names of the schools with some players in the mid position but no goalies ? [system description] Step 1 : for each row in tryout table , find the corresponding rows in college table . Step 2 : find the college 's college name of the results of step 1 whose player position equals " goalie " . Step 3 : for each row in tryout table , find the corresponding rows in college table . Step 4 : find the college 's college name of the results of step 3 whose player position equals " striker " . Step 5 : show the rows that are in the results of step 2 but not in the results of step 4 . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card ( no ) [C] training hours [T] tryout [C] player id [C] college name [C] player position ( mid , goalie ) [C] decision ( no )
remove the country name equals dummy value conditions . find maximum area in place of density . you should not find the largest of the results . show me all the results . [question] what is the size of the largest state in the usa [system description] find the density in state table whose country name equals " dummy value " with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use cite table in place of organization table in step 2 , consider the year less than 2010 and title equals Making database systems usable conditions in place of the name equals dummy value and year less than dummy value conditions . find number of different title in place of number of jid . [question] return me the number of citations of " Making database systems usable " before 2010 . [system description] Step 1 : for each row in organization table , find the corresponding rows in publication table . Step 2 : find the number of jid of the results of step 1 whose name equals " dummy value " and year less than " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , use publication keyword table in place of domain author table , domain table , author table , writes table , and domain keyword table in step 2 , consider the keyword equals Relational Database conditions in place of the keyword equals dummy value conditions . in step 4 , order the results by number of different title in place of number of rows . [question] return me the conference that has the most number of papers containing keyword " Relational Database " . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table and in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : only keep the results of step 1 whose keyword equals " dummy value " . Step 3 : find the number of rows of each value of conference 's name the results of step 2 . Step 4 : find the conference 's name and conference 's name the results of step 2 with largest value in the results of step 3 . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 2 , consider the border info 's state name equals texas conditions in place of the border equals dummy value conditions . [question] what are the capitals of states that border texas [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 2 , consider the lowest elevation is equals minimum lowest elevation highlow conditions in place of the lowest point not equals dummy value conditions . order the results by area in place of lowest point . [question] what is the largest state that borders the state with the lowest point in the usa [system description] Step 1 : for each row in border info table , find the corresponding rows in state table and in highlow table . Step 2 : find the border of the results of step 1 whose lowest point not equals " dummy value " with largest value of lowest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the river table besides the highlow table . additionally make sure that highest elevation is equals maximum highest elevation highlow . find number of river name in place of number of rows . you should not find the largest of the results . show me all the results . [question] how many rivers are in the state with the highest point . [system description] find the number of rows in highlow table with largest value of highest point . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally make sure that area is equals maximum area state . you should not find the largest of the results . show me all the results . [question] give me the largest state [system description] find the state name in state table with largest value of density . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , do not use the college table . in step 2 , consider the player name like D % conditions in place of the player name like Charles conditions . [question] Which colleges does each player with a name that starts with the letter D who tried out go to ? [system description] Step 1 : for each row in player table , find the corresponding rows in tryout table and in college table . Step 2 : find the college 's college name of the results of step 1 whose player name like " Charles " . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 1 , do not use the border info table and state table . in step 2 , consider the river name equals ohio conditions in place of the river name equals dummy value conditions . [question] which states does the ohio river run through [system description] Step 1 : for each row in river table , find the corresponding rows in state table and in border info table . Step 2 : find the border info 's state name of the results of step 1 whose river name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the voting record table besides the student table . make sure no repetition in the results . [question] Find the first and last names of all the female ( sex is F ) students who have president votes . [system description] find the first name and last name in student table whose sex equals " F " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
in step 1 , do not use the people table . in step 2 , remove the is male equals F conditions . in step 3 , additionally make sure that is male equals T . [question] Show the name and age for all male people who do n't have a wedding . [system description] Step 1 : for each row in people table , find the corresponding rows in wedding table . Step 2 : find the male id of the results of step 1 whose is male equals " F " . Step 3 : find the name and age in people table whose people id not one of the results of step 2 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
in step 2 , consider the grade point greater than or equals 3.8 conditions in place of the grade point equals 2.7 conditions . make sure no repetition in the results . [question] Find the distinct student first names of all students that have grade point at least 3.8 in one course . [system description] Step 1 : for each row in student table , find the corresponding rows in enrolled in table and in grade conversion table . Step 2 : find the first name of the results of step 1 whose grade point equals 2.7 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
additionally order the results by phone number . [question] What are the emails and phone numbers of all customers , sorted by email address and phone number ? [system description] find the email address and phone number in customers table ordered ascending by email address . [schema] [T] staff [C] staff id [C] gender [C] first name [C] last name [C] email address [C] phone number [T] customers [C] customer id [C] customer type code [C] address line 1 [C] address line 2 [C] town city [C] state [C] email address [C] phone number [T] products [C] product id [C] parent product id [C] product category code [C] date product first available [C] date product discontinued [C] product name [C] product description [C] product price [T] complaints [C] complaint id [C] product id [C] customer id [C] complaint outcome code [C] complaint status code [C] complaint type code [C] date complaint raised [C] date complaint closed [C] staff id
consider the status equals on-hold conditions in place of the status equals proposed conditions . [question] Find the names of the buildings in " on-hold " status , and sort them in ascending order of building stories . [system description] find the name in buildings table whose status equals " proposed " ordered ascending by stories . [schema] [T] buildings [C] id [C] name [C] city [C] height [C] stories [C] status ( on-hold ) [T] companies [C] id [C] name [C] headquarters [C] industry [C] sales billion [C] profits billion [C] assets billion [C] market value billion [T] office locations [C] building id [C] company id [C] move in year
in step 1 , do not use the state table . in step 2 , consider the city 's population greater than 150000 conditions in place of the city 's country name equals dummy value conditions . find city name in place of capital . [question] what are the major cities in the usa [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the capital of the results of step 1 whose city 's country name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use publication keyword table in place of domain table , domain keyword table , and domain author table in step 2 , consider the keyword equals User Study and author 's name equals H. V. Jagadish conditions in place of the keyword equals dummy value conditions . find number of different title in place of number of publication 's pid . [question] return me the number of the papers of " H. V. Jagadish " containing keyword " User Study " . [system description] Step 1 : for each row in publication table , find the corresponding rows in writes table and in author table and in domain author table and in domain table and in domain keyword table and in keyword table . Step 2 : find the number of publication 's pid of the results of step 1 whose keyword equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
consider the state name equals kansas and population greater than 150000 conditions in place of the state name equals dummy value conditions . [question] what major cities are located in kansas [system description] find the city name in city table whose state name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use furniture manufacte table in place of furniture table . find maximum price in dollar in place of maximum market rate . in step 2 , additionally use the information from the furniture manufacte table besides the furniture table . make sure the price in dollar is less than the results of step 1 the market rate is less than the results of step 1 . [question] Find the names of furnitures whose prices are lower than the highest price . [system description] Step 1 : find the maximum market rate in furniture table . Step 2 : find the name in furniture table whose market rate less than the results of step 1 . [schema] [T] manufacturer [C] manufacturer id [C] open year [C] name [C] num of factories [C] num of shops [T] furniture [C] furniture id [C] name [C] num of component [C] market rate [T] furniture manufacte [C] manufacturer id [C] furniture id [C] price in dollar
additionally use the information from the voting record table besides the student table . consider the age equals 18 conditions in place of the age equals 22 conditions . make sure no repetition in the results . [question] Find the first and last name of all the students of age 18 who have vice president votes . [system description] find the first name and last name in student table whose age equals 22 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] voting record [C] student id [C] registration date [C] election cycle [C] president vote [C] vice president vote [C] secretary vote [C] treasurer vote [C] class president vote [C] class senator vote
additionally use the information from the claim headers table and policies table besides the customers table . additionally make sure that amount piad is equals minimum amount piad claim headers . you should not find the smallest of the results . show me all the results . [question] Which customer made the smallest amount of claim in one claim ? Return the customer details . [system description] find the customer details in customers table with smallest value of customer details . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 2 , consider the tourist details equals Vincent or tourist details equals Vivian conditions in place of the visit date equals 2010-10-04 01:34:12 or visitors 's tourist id equals 439 conditions . additionally find visit date . [question] For each tourist attraction , return its name and the date when the tourists named Vincent or Vivian visited there . [system description] Step 1 : for each row in visitors table , find the corresponding rows in visits table and in tourist attractions table . Step 2 : find the name and name of the results of step 1 whose visitors 's tourist id equals 439 or visit date equals " 2010-10-04 01:34:12 " . [schema] [T] ref hotel star ratings [C] star rating code [C] star rating description [T] locations [C] location id [C] location name [C] address [C] other details [T] ref attraction types [C] attraction type code [C] attraction type description [T] visitors [C] tourist id [C] tourist details ( Vincent , Vivian ) [T] features [C] feature id [C] feature details [T] hotels [C] hotel id [C] star rating code [C] pets allowed yn [C] price range [C] other hotel details [T] tourist attractions [C] tourist attraction id [C] attraction type code [C] location id [C] how to get there [C] name [C] description [C] opening hours [C] other details [T] street markets [C] market id [C] market details [T] shops [C] shop id [C] shop details [T] museums [C] museum id [C] museum details [T] royal family [C] royal family id [C] royal family details [T] theme parks [C] theme park id [C] theme park details [T] visits [C] visit id [C] tourist attraction id [C] tourist id [C] visit date [C] visit details [T] photos [C] photo id [C] tourist attraction id [C] name [C] description [C] filename [C] other details [T] staff [C] staff id [C] tourist attraction id [C] name [C] other details [T] tourist attraction features [C] tourist attraction id [C] feature id
in step 2 , consider the name equals VLDB conditions in place of the name equals dummy value conditions . in step 3 , find summation of citation num in place of number of rows . [question] return me the total citations of papers in the VLDB conference in each year . [system description] Step 1 : for each row in conference table , find the corresponding rows in publication table . Step 2 : only keep the results of step 1 whose name equals " dummy value " . Step 3 : find each value of year the results of step 2 along with the number of the corresponding rows to each value . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
in step 1 , remove the building equals NEB conditions . in step 2 , consider the building equals NEB conditions in place of the division equals AS conditions . [question] What are the names of departments either in division AS , or in division EN and in building NEB ? [system description] Step 1 : find the department name in department table whose division equals " AS " and building equals " NEB " . Step 2 : find the department name in department table whose division equals " EN " and division equals " AS " . Step 3 : show the rows that are in any of the results of step 1 and step 2 . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building ( NEB ) [T] department [C] department number [C] division [C] department name [C] room [C] building ( NEB ) [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 2 , do not return number of rows . order the results ascending . [question] Please show the different statuses , ordered by the number of cities that have each . [system description] Step 1 : find the number of rows of each value of status in city table . Step 2 : find the status and number of rows in city table ordered descending by the results of step 1 . [schema] [T] city [C] city id [C] official name [C] status [C] area km 2 [C] population [C] census ranking [T] farm [C] farm id [C] year [C] total horses [C] working horses [C] total cattle [C] oxen [C] bulls [C] cows [C] pigs [C] sheep and goats [T] farm competition [C] competition id [C] year [C] theme [C] host city id [C] hosts [T] competition record [C] competition id [C] farm id [C] rank
additionally use the information from the member of club table and student table besides the club table . consider the city code equals BAL conditions in place of the club location equals AKW conditions . make sure no repetition in the results . [question] Which clubs have one or more members from the city with code " BAL " ? Give me the names of the clubs . [system description] find the club name in club table whose club location equals " AKW " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code ( BAL ) [T] club [C] club id [C] club name [C] club description [C] club location [T] member of club [C] student id [C] club id [C] position
in step 1 , do not use the state table . in step 2 , consider the city name equals springfield conditions in place of the city name equals dummy value conditions . [question] what state has the city springfield [system description] Step 1 : for each row in city table , find the corresponding rows in state table . Step 2 : find the state 's state name of the results of step 1 whose city name equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , additionally use the information from the customer orders table besides the customers table . in step 2 , find for each value of customers 's customer id whose number of rows greater than 2 . [question] Show the names of customers who use Credit Card payment method and have more than 2 orders . [system description] Step 1 : find rows in customers table whose payment method code equals " Credit Card " . Step 2 : find the number of rows of each value of customer name the results of step 1 . Step 3 : find the customer name the results of step 1 whose corresponding value in step 2 is greater than 1 . [schema] [T] addresses [C] address id [C] line 1 number building [C] city [C] zip postcode [C] state province county [C] country [T] products [C] product id [C] product type code [C] product name [C] product price [T] customers [C] customer id [C] payment method code ( Credit Card ) [C] customer number [C] customer name [C] customer address [C] customer phone [C] customer email [T] contacts [C] contact id [C] customer id [C] gender [C] first name [C] last name [C] contact phone [T] customer address history [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order date [C] order status code [T] order items [C] order item id [C] order id [C] product id [C] order quantity
additionally make sure that genre is equals modern . [question] What are the names of the songs that are modern or sung in English ? [system description] find the song name in song table whose languages equals " english " or languages equals " english " . [schema] [T] genre [C] genre name ( modern ) [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre ( modern ) [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is ( modern ) [C] rating [C] languages ( english ) [C] releasedate [C] resolution
in step 1 , do not use the bank table . in step 2 , remove the amount greater than 5000 conditions . find for each value of customer name whose summation of amount greater than 5000 . find account type in place of account balance . [question] Find the name and account balance of the customers who have loans with a total amount of more than 5000 . [system description] Step 1 : for each row in loan table , find the corresponding rows in bank table and in customer table . Step 2 : find the customer name and account balance of the results of step 1 whose amount greater than 5000 . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
in step 2 , consider the card number equals 4560596484842 conditions in place of the card type code equals Debit conditions . [question] What is the first name , last name , and phone of the customer with card 4560596484842 . [system description] Step 1 : for each row in customers table , find the corresponding rows in customers cards table . Step 2 : find the customer first name , customer last name , customer phone of the results of step 1 whose card type code equals " Debit " . [schema] [T] accounts [C] account id [C] customer id [C] account name [C] other account details [T] customers [C] customer id [C] customer first name [C] customer last name [C] customer address [C] customer phone [C] customer email [C] other customer details [T] customers cards [C] card id [C] customer id [C] card type code [C] card number [C] date valid from [C] date valid to [C] other card details [T] financial transactions [C] transaction id [C] previous transaction id [C] account id [C] card id [C] transaction type [C] transaction date [C] transaction amount [C] transaction comment [C] other transaction details
additionally use the information from the artist table besides the song table . consider the rating greater than 9 conditions in place of the rating greater than 10 conditions . find artist 's country in place of song 's country . make sure no repetition in the results . [question] List the name and country of origin for all singers who have produced songs with rating above 9 . [system description] find the artist name and country in song table whose rating greater than 10 . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
use river table in place of state table . consider the length greater than 750 conditions in place of the area greater than dummy value conditions . find number of different traverse in place of number of rows . [question] how many states are next to major rivers [system description] find the number of rows in state table whose area greater than " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
consider the job equals engineer and age greater than 30 conditions in place of the age greater than 26 conditions . [question] HOw many engineers are older than 30 ? [system description] find the number of rows in person table whose age greater than 26 . [schema] [T] person [C] name [C] age [C] city [C] gender [C] job ( engineer ) [T] person friend [C] name [C] friend [C] year
in step 1 , do not use the song table . in step 2 , consider the duration like 4 : % conditions in place of the duration greater than 2:56 conditions . [question] What is the count of the songs that last approximately 4 minutes ? [system description] Step 1 : for each row in song table , find the corresponding rows in files table . Step 2 : find the number of rows of the results of step 1 whose duration greater than " 2:56 " . [schema] [T] genre [C] genre name [C] rating [C] most popular in [T] artist [C] artist name [C] country [C] gender [C] preferred genre [T] files [C] song id [C] artist name [C] file size [C] duration [C] formats [T] song [C] song name [C] artist name [C] country [C] song id [C] genre is [C] rating [C] languages [C] releasedate [C] resolution
in step 2 , additionally make sure that amount claimed is equals maximum amount claimed claim headers . you should not find the largest of the results . show me all the results . [question] What is the name of the customer who has made the largest amount of claim in a single claim ? [system description] Step 1 : for each row in customers table , find the corresponding rows in policies table and in claim headers table . Step 2 : find the customer details of the results of step 1 with largest value of amount claimed . [schema] [T] customers [C] customer id [C] customer details [T] staff [C] staff id [C] staff details [T] policies [C] policy id [C] customer id [C] policy type code [C] start date [C] end date [T] claim headers [C] claim header id [C] claim status code [C] claim type code [C] policy id [C] date of claim [C] date of settlement [C] amount claimed [C] amount piad [T] claims documents [C] claim id [C] document type code [C] created by staff id [C] created date [T] claims processing stages [C] claim stage id [C] next claim stage id [C] claim status name [C] claim status description [T] claims processing [C] claim processing id [C] claim id [C] claim outcome code [C] claim stage id [C] staff id
in step 2 , consider the customer name equals Tillman Ernser conditions in place of the customer name equals Dr. Julia Wuckert MD conditions . make sure no repetition in the results . [question] Find the contact channel code that was used by the customer named " Tillman Ernser " . [system description] Step 1 : for each row in customer contact channels table , find the corresponding rows in customers table . Step 2 : find the channel code of the results of step 1 whose customer name equals " Dr. Julia Wuckert MD " . [schema] [T] addresses [C] address id [C] address content [C] city [C] zip postcode [C] state province county [C] country [C] other address details [T] products [C] product id [C] product details [T] customers [C] customer id [C] payment method [C] customer name ( Tillman Ernser ) [C] date became customer [C] other customer details [T] customer addresses [C] customer id [C] address id [C] date address from [C] address type [C] date address to [T] customer contact channels [C] customer id [C] channel code [C] active from date [C] active to date [C] contact number [T] customer orders [C] order id [C] customer id [C] order status [C] order date [C] order details [T] order items [C] order id [C] product id [C] order quantity
additionally use the information from the bank table besides the loan table . find for each value of bname in place of loan 's branch id . find bname in place of loan 's branch id . [question] Find the total amount of loans offered by each bank branch . [system description] find each value of branch id in loan table along with the summation of amount of the corresponding rows to each value . [schema] [T] bank [C] branch id [C] bname [C] no of customers [C] city [C] state [T] customer [C] customer id [C] customer name [C] account type [C] account balance [C] number of loans [C] credit score [C] branch id [C] state [T] loan [C] loan id [C] loan type [C] customer id [C] branch id [C] amount
order the results by region code in place of region name . [question] Show all region code and region name sorted by the codes . [system description] find the region code and region name in region table ordered ascending by region name . [schema] [T] storm [C] storm id [C] name [C] dates active [C] max speed [C] damage millions usd [C] number deaths [T] region [C] region id [C] region code [C] region name [T] affected region [C] region id [C] storm id [C] number city affected
in step 1 , do not use the staff table . in step 2 , additionally make sure that job title code equals Clerical Staff . find maximum date assigned to in place of minimum date assigned to . in step 3 , make sure the date assigned to is less than the results of step 2 the date assigned from is less than the results of step 2 . [question] What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff ? [system description] Step 1 : for each row in staff department assignments table , find the corresponding rows in staff table . Step 2 : find the minimum date assigned to in staff department assignments table . Step 3 : find the staff 's staff id of the results of step 1 whose date assigned from less than the results of step 2 . [schema] [T] addresses [C] address id [C] address details [T] staff [C] staff id [C] staff gender [C] staff name [T] suppliers [C] supplier id [C] supplier name [C] supplier phone [T] department store chain [C] department store chain id [C] department store chain name [T] customers [C] customer id [C] payment method code [C] customer code [C] customer name [C] customer address [C] customer phone [C] customer email [T] products [C] product id [C] product type code [C] product name [C] product price [T] supplier addresses [C] supplier id [C] address id [C] date from [C] date to [T] customer addresses [C] customer id [C] address id [C] date from [C] date to [T] customer orders [C] order id [C] customer id [C] order status code [C] order date [T] department stores [C] department store id [C] department store chain id [C] store name [C] store address [C] store phone [C] store email [T] departments [C] department id [C] department store id [C] department name [T] order items [C] order item id [C] order id [C] product id [T] product suppliers [C] product id [C] supplier id [C] date supplied from [C] date supplied to [C] total amount purchased [C] total value purchased [T] staff department assignments [C] staff id [C] department id [C] date assigned from [C] job title code ( Clerical Staff ) [C] date assigned to
in step 1 , do not use the student table , enroll table , and class table . in step 2 , find for each value of school code in place of professor office . find school code in place of professor office . [question] What is the number of professors for different school ? [system description] Step 1 : for each row in class table , find the corresponding rows in enroll table and in student table and in department table and in professor table . Step 2 : find each value of professor office of the results of step 1 along with the number of the corresponding rows to each value . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 2 , additionally make sure that student capacity is equals maximum student capacity dorm . you should not find the largest of the results . show me all the results . [question] Find the average age of students who are living in the dorm with the largest capacity . [system description] Step 1 : for each row in student table , find the corresponding rows in lives in table and in dorm table . Step 2 : find the average age of the results of step 1 with largest value of student capacity . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] dorm [C] dorm id [C] dorm name [C] student capacity [C] gender [T] dorm amenity [C] amenity id [C] amenity name [T] has amenity [C] dorm id [C] amenity id [T] lives in [C] student id [C] dorm id [C] room number
in step 2 , find for each value of support representative id whose number of rows less than or equals 20 . in step 3 , find customer 's last name in place of employee 's last name . [question] What are the last names of employees who serve at most 20 customers ? [system description] Step 1 : for each row in customer table , find the corresponding rows in employee table . Step 2 : find the number of rows of each value of customer 's last name of the results of step 1 . Step 3 : find the employee 's last name of the results of step 1 whose corresponding value in step 2 is less than or equals 1 . [schema] [T] album [C] album id [C] title [C] artist id [T] artist [C] artist id [C] name [T] customer [C] customer id [C] first name [C] last name [C] company [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [C] support representative id [T] employee [C] employee id [C] last name [C] first name [C] title [C] reports to [C] birth date [C] hire date [C] address [C] city [C] state [C] country [C] postal code [C] phone [C] fax [C] email [T] genre [C] genre id [C] name [T] invoice [C] invoice id [C] customer id [C] invoice date [C] billing address [C] billing city [C] billing state [C] billing country [C] billing postal code [C] total [T] invoice line [C] invoice line id [C] invoice id [C] track id [C] unit price [C] quantity [T] media type [C] media type id [C] name [T] playlist [C] play list id [C] name [T] playlist track [C] play list id [C] track id [T] track [C] track id [C] name [C] album id [C] media type id [C] genre id [C] composer [C] milliseconds [C] bytes [C] unit price
in step 1 , do not use the state table . in step 2 , additionally make sure that lowest elevation is equals minimum lowest elevation highlow . you should not find the smallest of the results . show me all the results . [question] which state has the lowest elevation [system description] Step 1 : for each row in state table , find the corresponding rows in highlow table . Step 2 : find the state 's state name of the results of step 1 with smallest value of lowest elevation . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
additionally use the information from the mountain table besides the climber table . consider the mountain 's country equals Uganda conditions in place of the climber 's country equals Switzerland conditions . [question] What are the times used by climbers who climbed mountains in the country of Uganda ? [system description] find the time in climber table whose country equals " Switzerland " . [schema] [T] mountain [C] mountain id [C] name [C] height [C] prominence [C] range [C] country ( Uganda ) [T] climber [C] climber id [C] name [C] country [C] time [C] points [C] mountain id
additionally use the information from the certificate table besides the aircraft table . consider the distance greater than 5000 conditions in place of the distance greater than 30 and distance greater than or equals 7120 conditions . find for each value of certificate 's airline id . do not return distance . order the results ascending by number of rows . [question] What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly ? [system description] find the name and distance in aircraft table whose distance greater than 30 and distance greater than or equals 7120 . [schema] [T] flight [C] flight number [C] origin [C] destination [C] distance [C] departure date [C] arrival date [C] price [C] airline id [T] aircraft [C] airline id [C] name [C] distance [T] employee [C] employee id [C] name [C] salary [T] certificate [C] employee id [C] airline id
in step 2 , consider the department name equals Computer Info . Systems conditions in place of the department name equals Biology conditions . [question] How many courses are offered by the Computer Info . Systems department ? [system description] Step 1 : for each row in department table , find the corresponding rows in course table . Step 2 : find the number of rows of the results of step 1 whose department name equals " Biology " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
consider the class room equals 103 conditions in place of the class room equals 107 conditions . make sure no repetition in the results . [question] Which grade is studying in classroom 103 ? [system description] find the grade in list table whose class room equals 107 . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
consider the state name equals colorado and border is one of border border info whose state name equals new mexico conditions in place of the border equals dummy value conditions . find number of border in place of number of rows . [question] how many states border colorado and border new mexico [system description] find the number of rows in border info table whose border equals " dummy value " and border equals " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use salary table in place of batting postseason table , player table , and team franchise table in step 2 , consider the name equals Boston Red Stockings and salary 's year equals 2000 conditions in place of the team 's year equals 2010 and franchise name equals Cleveland Infants conditions . find number of rows in place of number of player 's player id . [question] How many players were in the team Boston Red Stockings in 2000 ? [system description] Step 1 : for each row in team table , find the corresponding rows in batting postseason table and in player table and in team franchise table . Step 2 : find the number of player 's player id of the results of step 1 whose franchise name equals " Cleveland Infants " and team 's year equals 2010 . [schema] [T] all star [C] player id [C] year [C] game num [C] game id [C] team id [C] league id [C] gp [C] starting pos [T] appearances [C] year [C] team id [C] league id [C] player id [C] g all [C] gs [C] g batting [C] g defense [C] g p [C] g c [C] g 1b [C] g 2b [C] g 3b [C] g ss [C] g lf [C] g cf [C] g rf [C] g of [C] g dh [C] g ph [C] g pr [T] manager award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] player award [C] player id [C] award id [C] year [C] league id [C] tie [C] notes [T] manager award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] player award vote [C] award id [C] year [C] league id [C] player id [C] points won [C] points max [C] votes first [T] batting [C] player id [C] year [C] stint [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] batting postseason [C] year [C] round [C] player id [C] team id [C] league id [C] g [C] ab [C] r [C] h [C] double [C] triple [C] hr [C] rbi [C] sb [C] cs [C] bb [C] so [C] ibb [C] hbp [C] sh [C] sf [C] g idp [T] player college [C] player id [C] college id [C] year [T] fielding [C] player id [C] year [C] stint [C] team id [C] league id [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] pb [C] wp [C] sb [C] cs [C] zr [T] fielding outfield [C] player id [C] year [C] stint [C] glf [C] gcf [C] grf [T] fielding postseason [C] player id [C] year [C] team id [C] league id [C] round [C] pos [C] g [C] gs [C] inn outs [C] po [C] a [C] e [C] dp [C] tp [C] pb [C] sb [C] cs [T] hall of fame [C] player id [C] yearid [C] votedby [C] ballots [C] needed [C] votes [C] inducted [C] category ( Player ) [C] needed note [T] home game [C] year [C] league id [C] team id [C] park id [C] span first [C] span last [C] games [C] openings [C] attendance [T] manager [C] player id [C] year [C] team id [C] league id [C] inseason [C] g [C] w [C] l [C] rank [C] plyr mgr [T] manager half [C] player id [C] year [C] team id [C] league id [C] inseason [C] half [C] g [C] w [C] l [C] rank [T] player [C] player id [C] birth year [C] birth month [C] birth day [C] birth country [C] birth state [C] birth city ( Boston ) [C] death year [C] death month [C] death day [C] death country [C] death state [C] death city ( Boston ) [C] name first ( Red ) [C] name last ( Boston ) [C] name given [C] weight [C] height [C] bats [C] throws [C] debut [C] final game [C] retro id [C] bbref id [T] park [C] park id [C] park name [C] park alias [C] city ( Boston ) [C] state [C] country [T] pitching [C] player id [C] year [C] stint [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] pitching postseason [C] player id [C] year [C] round [C] team id [C] league id [C] w [C] l [C] g [C] gs [C] cg [C] sho [C] sv [C] ipouts [C] h [C] er [C] hr [C] bb [C] so [C] baopp [C] era [C] ibb [C] wp [C] hbp [C] bk [C] bfp [C] gf [C] r [C] sh [C] sf [C] g idp [T] salary [C] year [C] team id [C] league id [C] player id [C] salary [T] college [C] college id [C] name full [C] city ( Boston ) [C] state [C] country [T] postseason [C] year [C] round [C] team id winner [C] league id winner [C] team id loser [C] league id loser [C] wins [C] losses [C] ties [T] team [C] year [C] league id [C] team id [C] franchise id [C] div id [C] rank [C] g [C] ghome [C] w [C] l [C] div win [C] wc win [C] lg win [C] ws win [C] r [C] ab [C] h [C] double [C] triple [C] hr [C] bb [C] so [C] sb [C] cs [C] hbp [C] sf [C] ra [C] er [C] era [C] cg [C] sho [C] sv [C] ipouts [C] ha [C] hra [C] bba [C] soa [C] e [C] dp [C] fp [C] name ( Boston Red Stockings ) [C] park [C] attendance [C] bpf [C] ppf [C] team id br [C] team id lahman45 [C] team id retro [T] team franchise [C] franchise id [C] franchise name ( Boston Red Stockings ) [C] active [C] na assoc [T] team half [C] year [C] league id [C] team id [C] half [C] div id [C] div win [C] rank [C] g [C] w [C] l
find number of different game type in place of number of rows . [question] What is the count of different game types ? [system description] find the number of rows in video games table . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] video games [C] game id [C] game name [C] game type [T] plays games [C] student id [C] game id [C] hours played [T] sports info [C] student id [C] sport name [C] hours per week [C] games played [C] on scholarship
consider the first name like % a % conditions in place of the first name like William conditions . make sure no repetition in the results . [question] Find the first names of students whose first names contain letter " a " . [system description] find the first name in student table whose first name like " William " . [schema] [T] student [C] student id [C] last name [C] first name [C] age [C] sex [C] major [C] advisor [C] city code [T] faculty [C] faculty id [C] last name [C] first name [C] rank [C] sex [C] phone [C] room [C] building [T] department [C] department number [C] division [C] department name [C] room [C] building [C] department phone [T] member of [C] faculty id [C] department number [C] appt type [T] course [C] course id [C] course name [C] credits [C] instructor [C] days [C] hours [C] department number [T] minor in [C] student id [C] department number [T] enrolled in [C] student id [C] course id [C] grade [T] grade conversion [C] letter grade [C] grade point
in step 1 , do not use the teachers table . in step 2 , find for each value of list 's class room in place of teachers 's class room . find list 's class room in place of teachers 's class room . find number of different grade in place of number of grade . [question] For each classroom , show the classroom number and count the number of distinct grades that use the room . [system description] Step 1 : for each row in teachers table , find the corresponding rows in list table . Step 2 : find each value of teachers 's class room of the results of step 1 along with the number of grade of the corresponding rows to each value . [schema] [T] list [C] last name [C] first name [C] grade [C] class room [T] teachers [C] last name [C] first name [C] class room
in step 1 , do not use the state table . in step 2 , remove the border greater than dummy value conditions . find number of different border info 's state name in place of number of rows . [question] how many states border at least one other state [system description] Step 1 : for each row in border info table , find the corresponding rows in state table . Step 2 : find the number of rows of the results of step 1 whose border greater than " dummy value " . [schema] [T] state [C] state name [C] population [C] area [C] country name [C] capital [C] density [T] city [C] city name [C] population [C] country name [C] state name [T] border info [C] state name [C] border [T] highlow [C] state name [C] highest elevation [C] lowest point [C] highest point [C] lowest elevation [T] lake [C] lake name [C] area [C] country name [C] state name [T] mountain [C] mountain name [C] mountain altitude [C] country name [C] state name [T] river [C] river name [C] length [C] country name [C] traverse
in step 1 , use enroll table and class table in place of department table in step 2 , additionally find student last name . [question] What are the names of all students who took a class and the corresponding course descriptions ? [system description] Step 1 : for each row in student table , find the corresponding rows in department table and in course table . Step 2 : find the student first name and course description of the results of step 1 . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
in step 1 , additionally use the information from the cast table . in step 2 , consider the name equals Shahab Hosseini conditions in place of the name equals dummy value conditions . find number of different title in place of number of rows . [question] How many movies did " Shahab Hosseini " act in ? [system description] Step 1 : for each row in actor table , find the corresponding rows in movie table . Step 2 : find the number of rows of the results of step 1 whose name equals " dummy value " . [schema] [T] actor [C] aid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] copyright [C] id [C] msid [C] cid [T] cast [C] id [C] msid [C] aid [C] role [T] genre [C] gid [C] genre [T] classification [C] id [C] msid [C] gid [T] company [C] id [C] name [C] country code [T] director [C] did [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] producer [C] pid [C] gender [C] name [C] nationality [C] birth city [C] birth year [T] directed by [C] id [C] msid [C] did [T] keyword [C] id [C] keyword [T] made by [C] id [C] msid [C] pid [T] movie [C] mid [C] title [C] release year [C] title aka [C] budget [T] tags [C] id [C] msid [C] kid [T] tv series [C] sid [C] title [C] release year [C] num of seasons [C] num of episodes [C] title aka [C] budget [T] writer [C] wid [C] gender [C] name [C] nationality [C] num of episodes [C] birth city [C] birth year [T] written by [C] id [C] msid [C] wid
in step 1 , do not use the publication keyword table and keyword table . in step 2 , consider the name equals Cong Yu and name equals H. V. Jagadish and name equals Yunyao Li conditions in place of the name equals dummy value conditions . find number of different title in place of number of keyword . [question] return me the number of papers written by " H. V. Jagadish " , " Yunyao Li " , and " Cong Yu " . [system description] Step 1 : for each row in author table , find the corresponding rows in writes table and in publication table and in publication keyword table and in keyword table . Step 2 : find the number of keyword of the results of step 1 whose name equals " dummy value " and name equals " dummy value " . [schema] [T] author [C] aid [C] homepage [C] name [C] oid [T] conference [C] cid [C] homepage [C] name [T] domain [C] did [C] name [T] domain author [C] aid [C] did [T] domain conference [C] cid [C] did [T] journal [C] homepage [C] jid [C] name [T] domain journal [C] did [C] jid [T] keyword [C] keyword [C] kid [T] domain keyword [C] did [C] kid [T] publication [C] abstract [C] cid [C] citation num [C] jid [C] pid [C] reference num [C] title [C] year [T] domain publication [C] did [C] pid [T] organization [C] continent [C] homepage [C] name [C] oid [T] publication keyword [C] pid [C] kid [T] writes [C] aid [C] pid [T] cite [C] cited [C] citing
order the results ascending . [question] What information do you have on colleges sorted by increasing enrollment numbers ? [system description] find the rows in college table ordered descending by enrollment . [schema] [T] college [C] college name [C] state [C] enrollment [T] player [C] player id [C] player name [C] yes card [C] training hours [T] tryout [C] player id [C] college name [C] player position [C] decision
in step 2 , consider the year greater than 2014 conditions in place of the year greater than or equals 2014 and year greater than 2015 conditions . [question] Show the pair of male and female names in all weddings after year 2014 [system description] Step 1 : for each row in people table , find the corresponding rows in wedding table . Step 2 : find the name of the results of step 1 whose year greater than 2015 and year greater than or equals 2014 . [schema] [T] people [C] people id [C] name [C] country [C] is male [C] age [T] church [C] church id [C] name [C] organized by [C] open date [C] continuation of [T] wedding [C] church id [C] male id [C] female id [C] year
in step 1 , additionally use the information from the routes table besides the airports table . in step 2 , additionally find source airport id . [question] Find the name and city of the airport which is the source for the most number of flight routes . [system description] Step 1 : find the number of rows of each value of airport id in airports table . Step 2 : find the name and city in airports table with largest value in the results of step 1 . [schema] [T] routes [C] route id [C] destination airport id [C] destination airport [C] source airport id [C] source airport [C] airline id [C] airline [C] code share [T] airports [C] airport id [C] name [C] city ( Soure ) [C] country [C] x [C] y [C] elevation [C] iata [C] icao [T] airlines [C] airline id [C] name [C] iata [C] icao [C] call sign ( CITY ) [C] country [C] active
in step 2 , remove the employee first name equals Carlos conditions . order the results by employee first name in place of professor office . [question] Find the first names and offices of all professors sorted by alphabetical order of their first name . [system description] Step 1 : for each row in employee table , find the corresponding rows in professor table . Step 2 : find the employee first name and professor office of the results of step 1 whose employee first name equals " Carlos " ordered ascending by professor office . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description [C] course credit [T] department [C] department code [C] department name [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
additionally use the information from the department table , enroll table , and class table besides the course table . consider the department name equals Accounting conditions in place of the course 's department code equals ACCT conditions . [question] How many students are enrolled in the class taught by some professor from the accounting department ? [system description] find the number of rows in course table whose department code equals " ACCT " . [schema] [T] class [C] class code [C] course code [C] class section [C] class time [C] class room [C] professor number [T] course [C] course code [C] department code [C] course description ( Accounting I ) [C] course credit [T] department [C] department code [C] department name ( Accounting ) [C] school code [C] employee number [C] department address [C] department extension [T] employee [C] employee number [C] employee last name [C] employee first name [C] employee initial [C] employee job code [C] employee hire date [C] employee date of birth [T] enroll [C] class code [C] student num [C] enroll grade [T] professor [C] employee number [C] department code [C] professor office [C] professor extension [C] professor high degree [T] student [C] student num [C] student last name [C] student first name [C] student init [C] student date of birth [C] student class hours took [C] student class [C] student gpa [C] student transfer [C] department code [C] student phone [C] professor number
